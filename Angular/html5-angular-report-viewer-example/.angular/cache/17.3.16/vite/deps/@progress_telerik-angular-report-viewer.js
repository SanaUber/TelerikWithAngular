import {
  CommonModule,
  NgStyle
} from "./chunk-F3PKWHCS.js";
import {
  Component,
  Input,
  NgModule,
  ViewChild,
  ViewEncapsulation$1,
  __commonJS,
  __toESM,
  setClassMetadata,
  ɵɵattribute,
  ɵɵdefineComponent,
  ɵɵdefineInjector,
  ɵɵdefineNgModule,
  ɵɵelementEnd,
  ɵɵelementStart,
  ɵɵloadQuery,
  ɵɵproperty,
  ɵɵqueryRefresh,
  ɵɵsetNgModuleScope,
  ɵɵtext,
  ɵɵviewQuery
} from "./chunk-PC4VRE4F.js";

// node_modules/jquery/dist/jquery.js
var require_jquery = __commonJS({
  "node_modules/jquery/dist/jquery.js"(exports, module) {
    (function(global, factory) {
      "use strict";
      if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = global.document ? factory(global, true) : function(w) {
          if (!w.document) {
            throw new Error("jQuery requires a window with a document");
          }
          return factory(w);
        };
      } else {
        factory(global);
      }
    })(typeof window !== "undefined" ? window : exports, function(window2, noGlobal) {
      "use strict";
      var arr = [];
      var getProto = Object.getPrototypeOf;
      var slice = arr.slice;
      var flat = arr.flat ? function(array) {
        return arr.flat.call(array);
      } : function(array) {
        return arr.concat.apply([], array);
      };
      var push = arr.push;
      var indexOf = arr.indexOf;
      var class2type = {};
      var toString = class2type.toString;
      var hasOwn = class2type.hasOwnProperty;
      var fnToString = hasOwn.toString;
      var ObjectFunctionString = fnToString.call(Object);
      var support = {};
      var isFunction = function isFunction2(obj) {
        return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
      };
      var isWindow = function isWindow2(obj) {
        return obj != null && obj === obj.window;
      };
      var document2 = window2.document;
      var preservedScriptAttributes = {
        type: true,
        src: true,
        nonce: true,
        noModule: true
      };
      function DOMEval(code, node, doc) {
        doc = doc || document2;
        var i, val, script = doc.createElement("script");
        script.text = code;
        if (node) {
          for (i in preservedScriptAttributes) {
            val = node[i] || node.getAttribute && node.getAttribute(i);
            if (val) {
              script.setAttribute(i, val);
            }
          }
        }
        doc.head.appendChild(script).parentNode.removeChild(script);
      }
      function toType(obj) {
        if (obj == null) {
          return obj + "";
        }
        return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
      }
      var version = "3.7.1", rhtmlSuffix = /HTML$/i, jQuery2 = function(selector, context) {
        return new jQuery2.fn.init(selector, context);
      };
      jQuery2.fn = jQuery2.prototype = {
        // The current version of jQuery being used
        jquery: version,
        constructor: jQuery2,
        // The default length of a jQuery object is 0
        length: 0,
        toArray: function() {
          return slice.call(this);
        },
        // Get the Nth element in the matched element set OR
        // Get the whole matched element set as a clean array
        get: function(num) {
          if (num == null) {
            return slice.call(this);
          }
          return num < 0 ? this[num + this.length] : this[num];
        },
        // Take an array of elements and push it onto the stack
        // (returning the new matched element set)
        pushStack: function(elems) {
          var ret = jQuery2.merge(this.constructor(), elems);
          ret.prevObject = this;
          return ret;
        },
        // Execute a callback for every element in the matched set.
        each: function(callback) {
          return jQuery2.each(this, callback);
        },
        map: function(callback) {
          return this.pushStack(jQuery2.map(this, function(elem, i) {
            return callback.call(elem, i, elem);
          }));
        },
        slice: function() {
          return this.pushStack(slice.apply(this, arguments));
        },
        first: function() {
          return this.eq(0);
        },
        last: function() {
          return this.eq(-1);
        },
        even: function() {
          return this.pushStack(jQuery2.grep(this, function(_elem, i) {
            return (i + 1) % 2;
          }));
        },
        odd: function() {
          return this.pushStack(jQuery2.grep(this, function(_elem, i) {
            return i % 2;
          }));
        },
        eq: function(i) {
          var len = this.length, j = +i + (i < 0 ? len : 0);
          return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
        },
        end: function() {
          return this.prevObject || this.constructor();
        },
        // For internal use only.
        // Behaves like an Array's method, not like a jQuery method.
        push,
        sort: arr.sort,
        splice: arr.splice
      };
      jQuery2.extend = jQuery2.fn.extend = function() {
        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
        if (typeof target === "boolean") {
          deep = target;
          target = arguments[i] || {};
          i++;
        }
        if (typeof target !== "object" && !isFunction(target)) {
          target = {};
        }
        if (i === length) {
          target = this;
          i--;
        }
        for (; i < length; i++) {
          if ((options = arguments[i]) != null) {
            for (name in options) {
              copy = options[name];
              if (name === "__proto__" || target === copy) {
                continue;
              }
              if (deep && copy && (jQuery2.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                src = target[name];
                if (copyIsArray && !Array.isArray(src)) {
                  clone = [];
                } else if (!copyIsArray && !jQuery2.isPlainObject(src)) {
                  clone = {};
                } else {
                  clone = src;
                }
                copyIsArray = false;
                target[name] = jQuery2.extend(deep, clone, copy);
              } else if (copy !== void 0) {
                target[name] = copy;
              }
            }
          }
        }
        return target;
      };
      jQuery2.extend({
        // Unique for each copy of jQuery on the page
        expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
        // Assume jQuery is ready without the ready module
        isReady: true,
        error: function(msg) {
          throw new Error(msg);
        },
        noop: function() {
        },
        isPlainObject: function(obj) {
          var proto, Ctor;
          if (!obj || toString.call(obj) !== "[object Object]") {
            return false;
          }
          proto = getProto(obj);
          if (!proto) {
            return true;
          }
          Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
          return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
        },
        isEmptyObject: function(obj) {
          var name;
          for (name in obj) {
            return false;
          }
          return true;
        },
        // Evaluates a script in a provided context; falls back to the global one
        // if not specified.
        globalEval: function(code, options, doc) {
          DOMEval(code, { nonce: options && options.nonce }, doc);
        },
        each: function(obj, callback) {
          var length, i = 0;
          if (isArrayLike(obj)) {
            length = obj.length;
            for (; i < length; i++) {
              if (callback.call(obj[i], i, obj[i]) === false) {
                break;
              }
            }
          } else {
            for (i in obj) {
              if (callback.call(obj[i], i, obj[i]) === false) {
                break;
              }
            }
          }
          return obj;
        },
        // Retrieve the text value of an array of DOM nodes
        text: function(elem) {
          var node, ret = "", i = 0, nodeType = elem.nodeType;
          if (!nodeType) {
            while (node = elem[i++]) {
              ret += jQuery2.text(node);
            }
          }
          if (nodeType === 1 || nodeType === 11) {
            return elem.textContent;
          }
          if (nodeType === 9) {
            return elem.documentElement.textContent;
          }
          if (nodeType === 3 || nodeType === 4) {
            return elem.nodeValue;
          }
          return ret;
        },
        // results is for internal usage only
        makeArray: function(arr2, results) {
          var ret = results || [];
          if (arr2 != null) {
            if (isArrayLike(Object(arr2))) {
              jQuery2.merge(
                ret,
                typeof arr2 === "string" ? [arr2] : arr2
              );
            } else {
              push.call(ret, arr2);
            }
          }
          return ret;
        },
        inArray: function(elem, arr2, i) {
          return arr2 == null ? -1 : indexOf.call(arr2, elem, i);
        },
        isXMLDoc: function(elem) {
          var namespace = elem && elem.namespaceURI, docElem = elem && (elem.ownerDocument || elem).documentElement;
          return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || "HTML");
        },
        // Support: Android <=4.0 only, PhantomJS 1 only
        // push.apply(_, arraylike) throws on ancient WebKit
        merge: function(first, second) {
          var len = +second.length, j = 0, i = first.length;
          for (; j < len; j++) {
            first[i++] = second[j];
          }
          first.length = i;
          return first;
        },
        grep: function(elems, callback, invert) {
          var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;
          for (; i < length; i++) {
            callbackInverse = !callback(elems[i], i);
            if (callbackInverse !== callbackExpect) {
              matches.push(elems[i]);
            }
          }
          return matches;
        },
        // arg is for internal usage only
        map: function(elems, callback, arg) {
          var length, value, i = 0, ret = [];
          if (isArrayLike(elems)) {
            length = elems.length;
            for (; i < length; i++) {
              value = callback(elems[i], i, arg);
              if (value != null) {
                ret.push(value);
              }
            }
          } else {
            for (i in elems) {
              value = callback(elems[i], i, arg);
              if (value != null) {
                ret.push(value);
              }
            }
          }
          return flat(ret);
        },
        // A global GUID counter for objects
        guid: 1,
        // jQuery.support is not used in Core but other projects attach their
        // properties to it so it needs to exist.
        support
      });
      if (typeof Symbol === "function") {
        jQuery2.fn[Symbol.iterator] = arr[Symbol.iterator];
      }
      jQuery2.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
        function(_i, name) {
          class2type["[object " + name + "]"] = name.toLowerCase();
        }
      );
      function isArrayLike(obj) {
        var length = !!obj && "length" in obj && obj.length, type = toType(obj);
        if (isFunction(obj) || isWindow(obj)) {
          return false;
        }
        return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
      }
      function nodeName(elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
      }
      var pop = arr.pop;
      var sort = arr.sort;
      var splice = arr.splice;
      var whitespace = "[\\x20\\t\\r\\n\\f]";
      var rtrimCSS = new RegExp(
        "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
        "g"
      );
      jQuery2.contains = function(a, b) {
        var bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && // Support: IE 9 - 11+
        // IE doesn't have `contains` on SVG.
        (a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      };
      var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      function fcssescape(ch, asCodePoint) {
        if (asCodePoint) {
          if (ch === "\0") {
            return "�";
          }
          return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
        }
        return "\\" + ch;
      }
      jQuery2.escapeSelector = function(sel) {
        return (sel + "").replace(rcssescape, fcssescape);
      };
      var preferredDoc = document2, pushNative = push;
      (function() {
        var i, Expr, outermostContext, sortInput, hasDuplicate, push2 = pushNative, document3, documentElement2, documentIsHTML, rbuggyQSA, matches, expando = jQuery2.expando, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {
          if (a === b) {
            hasDuplicate = true;
          }
          return 0;
        }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
        "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
        `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + identifier + "))|)" + whitespace + "*\\]", pseudos = ":(" + identifier + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + attributes + ")*)|.*)\\)|)", rwhitespace = new RegExp(whitespace + "+", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rleadingCombinator = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rdescend = new RegExp(whitespace + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
          ID: new RegExp("^#(" + identifier + ")"),
          CLASS: new RegExp("^\\.(" + identifier + ")"),
          TAG: new RegExp("^(" + identifier + "|[*])"),
          ATTR: new RegExp("^" + attributes),
          PSEUDO: new RegExp("^" + pseudos),
          CHILD: new RegExp(
            "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)",
            "i"
          ),
          bool: new RegExp("^(?:" + booleans + ")$", "i"),
          // For use in libraries implementing .is()
          // We use this for POS matching in `select`
          needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rquickExpr2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
          var high = "0x" + escape.slice(1) - 65536;
          if (nonHex) {
            return nonHex;
          }
          return high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
        }, unloadHandler = function() {
          setDocument();
        }, inDisabledFieldset = addCombinator(
          function(elem) {
            return elem.disabled === true && nodeName(elem, "fieldset");
          },
          { dir: "parentNode", next: "legend" }
        );
        function safeActiveElement() {
          try {
            return document3.activeElement;
          } catch (err) {
          }
        }
        try {
          push2.apply(
            arr = slice.call(preferredDoc.childNodes),
            preferredDoc.childNodes
          );
          arr[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
          push2 = {
            apply: function(target, els) {
              pushNative.apply(target, slice.call(els));
            },
            call: function(target) {
              pushNative.apply(target, slice.call(arguments, 1));
            }
          };
        }
        function find(selector, context, results, seed) {
          var m, i2, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
          results = results || [];
          if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
            return results;
          }
          if (!seed) {
            setDocument(context);
            context = context || document3;
            if (documentIsHTML) {
              if (nodeType !== 11 && (match = rquickExpr2.exec(selector))) {
                if (m = match[1]) {
                  if (nodeType === 9) {
                    if (elem = context.getElementById(m)) {
                      if (elem.id === m) {
                        push2.call(results, elem);
                        return results;
                      }
                    } else {
                      return results;
                    }
                  } else {
                    if (newContext && (elem = newContext.getElementById(m)) && find.contains(context, elem) && elem.id === m) {
                      push2.call(results, elem);
                      return results;
                    }
                  }
                } else if (match[2]) {
                  push2.apply(results, context.getElementsByTagName(selector));
                  return results;
                } else if ((m = match[3]) && context.getElementsByClassName) {
                  push2.apply(results, context.getElementsByClassName(m));
                  return results;
                }
              }
              if (!nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                newSelector = selector;
                newContext = context;
                if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {
                  newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                  if (newContext != context || !support.scope) {
                    if (nid = context.getAttribute("id")) {
                      nid = jQuery2.escapeSelector(nid);
                    } else {
                      context.setAttribute("id", nid = expando);
                    }
                  }
                  groups = tokenize(selector);
                  i2 = groups.length;
                  while (i2--) {
                    groups[i2] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i2]);
                  }
                  newSelector = groups.join(",");
                }
                try {
                  push2.apply(
                    results,
                    newContext.querySelectorAll(newSelector)
                  );
                  return results;
                } catch (qsaError) {
                  nonnativeSelectorCache(selector, true);
                } finally {
                  if (nid === expando) {
                    context.removeAttribute("id");
                  }
                }
              }
            }
          }
          return select(selector.replace(rtrimCSS, "$1"), context, results, seed);
        }
        function createCache() {
          var keys = [];
          function cache(key, value) {
            if (keys.push(key + " ") > Expr.cacheLength) {
              delete cache[keys.shift()];
            }
            return cache[key + " "] = value;
          }
          return cache;
        }
        function markFunction(fn) {
          fn[expando] = true;
          return fn;
        }
        function assert(fn) {
          var el = document3.createElement("fieldset");
          try {
            return !!fn(el);
          } catch (e) {
            return false;
          } finally {
            if (el.parentNode) {
              el.parentNode.removeChild(el);
            }
            el = null;
          }
        }
        function createInputPseudo(type) {
          return function(elem) {
            return nodeName(elem, "input") && elem.type === type;
          };
        }
        function createButtonPseudo(type) {
          return function(elem) {
            return (nodeName(elem, "input") || nodeName(elem, "button")) && elem.type === type;
          };
        }
        function createDisabledPseudo(disabled) {
          return function(elem) {
            if ("form" in elem) {
              if (elem.parentNode && elem.disabled === false) {
                if ("label" in elem) {
                  if ("label" in elem.parentNode) {
                    return elem.parentNode.disabled === disabled;
                  } else {
                    return elem.disabled === disabled;
                  }
                }
                return elem.isDisabled === disabled || // Where there is no isDisabled, check manually
                elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
              }
              return elem.disabled === disabled;
            } else if ("label" in elem) {
              return elem.disabled === disabled;
            }
            return false;
          };
        }
        function createPositionalPseudo(fn) {
          return markFunction(function(argument) {
            argument = +argument;
            return markFunction(function(seed, matches2) {
              var j, matchIndexes = fn([], seed.length, argument), i2 = matchIndexes.length;
              while (i2--) {
                if (seed[j = matchIndexes[i2]]) {
                  seed[j] = !(matches2[j] = seed[j]);
                }
              }
            });
          });
        }
        function testContext(context) {
          return context && typeof context.getElementsByTagName !== "undefined" && context;
        }
        function setDocument(node) {
          var subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
          if (doc == document3 || doc.nodeType !== 9 || !doc.documentElement) {
            return document3;
          }
          document3 = doc;
          documentElement2 = document3.documentElement;
          documentIsHTML = !jQuery2.isXMLDoc(document3);
          matches = documentElement2.matches || documentElement2.webkitMatchesSelector || documentElement2.msMatchesSelector;
          if (documentElement2.msMatchesSelector && // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq
          preferredDoc != document3 && (subWindow = document3.defaultView) && subWindow.top !== subWindow) {
            subWindow.addEventListener("unload", unloadHandler);
          }
          support.getById = assert(function(el) {
            documentElement2.appendChild(el).id = jQuery2.expando;
            return !document3.getElementsByName || !document3.getElementsByName(jQuery2.expando).length;
          });
          support.disconnectedMatch = assert(function(el) {
            return matches.call(el, "*");
          });
          support.scope = assert(function() {
            return document3.querySelectorAll(":scope");
          });
          support.cssHas = assert(function() {
            try {
              document3.querySelector(":has(*,:jqfake)");
              return false;
            } catch (e) {
              return true;
            }
          });
          if (support.getById) {
            Expr.filter.ID = function(id) {
              var attrId = id.replace(runescape, funescape);
              return function(elem) {
                return elem.getAttribute("id") === attrId;
              };
            };
            Expr.find.ID = function(id, context) {
              if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                var elem = context.getElementById(id);
                return elem ? [elem] : [];
              }
            };
          } else {
            Expr.filter.ID = function(id) {
              var attrId = id.replace(runescape, funescape);
              return function(elem) {
                var node2 = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                return node2 && node2.value === attrId;
              };
            };
            Expr.find.ID = function(id, context) {
              if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                var node2, i2, elems, elem = context.getElementById(id);
                if (elem) {
                  node2 = elem.getAttributeNode("id");
                  if (node2 && node2.value === id) {
                    return [elem];
                  }
                  elems = context.getElementsByName(id);
                  i2 = 0;
                  while (elem = elems[i2++]) {
                    node2 = elem.getAttributeNode("id");
                    if (node2 && node2.value === id) {
                      return [elem];
                    }
                  }
                }
                return [];
              }
            };
          }
          Expr.find.TAG = function(tag, context) {
            if (typeof context.getElementsByTagName !== "undefined") {
              return context.getElementsByTagName(tag);
            } else {
              return context.querySelectorAll(tag);
            }
          };
          Expr.find.CLASS = function(className, context) {
            if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
              return context.getElementsByClassName(className);
            }
          };
          rbuggyQSA = [];
          assert(function(el) {
            var input;
            documentElement2.appendChild(el).innerHTML = "<a id='" + expando + "' href='' disabled='disabled'></a><select id='" + expando + "-\r\\' disabled='disabled'><option selected=''></option></select>";
            if (!el.querySelectorAll("[selected]").length) {
              rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
            }
            if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
              rbuggyQSA.push("~=");
            }
            if (!el.querySelectorAll("a#" + expando + "+*").length) {
              rbuggyQSA.push(".#.+[+~]");
            }
            if (!el.querySelectorAll(":checked").length) {
              rbuggyQSA.push(":checked");
            }
            input = document3.createElement("input");
            input.setAttribute("type", "hidden");
            el.appendChild(input).setAttribute("name", "D");
            documentElement2.appendChild(el).disabled = true;
            if (el.querySelectorAll(":disabled").length !== 2) {
              rbuggyQSA.push(":enabled", ":disabled");
            }
            input = document3.createElement("input");
            input.setAttribute("name", "");
            el.appendChild(input);
            if (!el.querySelectorAll("[name='']").length) {
              rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + `*(?:''|"")`);
            }
          });
          if (!support.cssHas) {
            rbuggyQSA.push(":has");
          }
          rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
          sortOrder = function(a, b) {
            if (a === b) {
              hasDuplicate = true;
              return 0;
            }
            var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
            if (compare) {
              return compare;
            }
            compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : (
              // Otherwise we know they are disconnected
              1
            );
            if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
              if (a === document3 || a.ownerDocument == preferredDoc && find.contains(preferredDoc, a)) {
                return -1;
              }
              if (b === document3 || b.ownerDocument == preferredDoc && find.contains(preferredDoc, b)) {
                return 1;
              }
              return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
            }
            return compare & 4 ? -1 : 1;
          };
          return document3;
        }
        find.matches = function(expr, elements) {
          return find(expr, null, null, elements);
        };
        find.matchesSelector = function(elem, expr) {
          setDocument(elem);
          if (documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
            try {
              var ret = matches.call(elem, expr);
              if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document
              // fragment in IE 9
              elem.document && elem.document.nodeType !== 11) {
                return ret;
              }
            } catch (e) {
              nonnativeSelectorCache(expr, true);
            }
          }
          return find(expr, document3, null, [elem]).length > 0;
        };
        find.contains = function(context, elem) {
          if ((context.ownerDocument || context) != document3) {
            setDocument(context);
          }
          return jQuery2.contains(context, elem);
        };
        find.attr = function(elem, name) {
          if ((elem.ownerDocument || elem) != document3) {
            setDocument(elem);
          }
          var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
          if (val !== void 0) {
            return val;
          }
          return elem.getAttribute(name);
        };
        find.error = function(msg) {
          throw new Error("Syntax error, unrecognized expression: " + msg);
        };
        jQuery2.uniqueSort = function(results) {
          var elem, duplicates = [], j = 0, i2 = 0;
          hasDuplicate = !support.sortStable;
          sortInput = !support.sortStable && slice.call(results, 0);
          sort.call(results, sortOrder);
          if (hasDuplicate) {
            while (elem = results[i2++]) {
              if (elem === results[i2]) {
                j = duplicates.push(i2);
              }
            }
            while (j--) {
              splice.call(results, duplicates[j], 1);
            }
          }
          sortInput = null;
          return results;
        };
        jQuery2.fn.uniqueSort = function() {
          return this.pushStack(jQuery2.uniqueSort(slice.apply(this)));
        };
        Expr = jQuery2.expr = {
          // Can be adjusted by the user
          cacheLength: 50,
          createPseudo: markFunction,
          match: matchExpr,
          attrHandle: {},
          find: {},
          relative: {
            ">": { dir: "parentNode", first: true },
            " ": { dir: "parentNode" },
            "+": { dir: "previousSibling", first: true },
            "~": { dir: "previousSibling" }
          },
          preFilter: {
            ATTR: function(match) {
              match[1] = match[1].replace(runescape, funescape);
              match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
              if (match[2] === "~=") {
                match[3] = " " + match[3] + " ";
              }
              return match.slice(0, 4);
            },
            CHILD: function(match) {
              match[1] = match[1].toLowerCase();
              if (match[1].slice(0, 3) === "nth") {
                if (!match[3]) {
                  find.error(match[0]);
                }
                match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                match[5] = +(match[7] + match[8] || match[3] === "odd");
              } else if (match[3]) {
                find.error(match[0]);
              }
              return match;
            },
            PSEUDO: function(match) {
              var excess, unquoted = !match[6] && match[2];
              if (matchExpr.CHILD.test(match[0])) {
                return null;
              }
              if (match[3]) {
                match[2] = match[4] || match[5] || "";
              } else if (unquoted && rpseudo.test(unquoted) && // Get excess from tokenize (recursively)
              (excess = tokenize(unquoted, true)) && // advance to the next closing parenthesis
              (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                match[0] = match[0].slice(0, excess);
                match[2] = unquoted.slice(0, excess);
              }
              return match.slice(0, 3);
            }
          },
          filter: {
            TAG: function(nodeNameSelector) {
              var expectedNodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
              return nodeNameSelector === "*" ? function() {
                return true;
              } : function(elem) {
                return nodeName(elem, expectedNodeName);
              };
            },
            CLASS: function(className) {
              var pattern = classCache[className + " "];
              return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                return pattern.test(
                  typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || ""
                );
              });
            },
            ATTR: function(name, operator, check) {
              return function(elem) {
                var result = find.attr(elem, name);
                if (result == null) {
                  return operator === "!=";
                }
                if (!operator) {
                  return true;
                }
                result += "";
                if (operator === "=") {
                  return result === check;
                }
                if (operator === "!=") {
                  return result !== check;
                }
                if (operator === "^=") {
                  return check && result.indexOf(check) === 0;
                }
                if (operator === "*=") {
                  return check && result.indexOf(check) > -1;
                }
                if (operator === "$=") {
                  return check && result.slice(-check.length) === check;
                }
                if (operator === "~=") {
                  return (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1;
                }
                if (operator === "|=") {
                  return result === check || result.slice(0, check.length + 1) === check + "-";
                }
                return false;
              };
            },
            CHILD: function(type, what, _argument, first, last) {
              var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
              return first === 1 && last === 0 ? (
                // Shortcut for :nth-*(n)
                function(elem) {
                  return !!elem.parentNode;
                }
              ) : function(elem, _context, xml) {
                var cache, outerCache, node, nodeIndex, start, dir2 = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                if (parent) {
                  if (simple) {
                    while (dir2) {
                      node = elem;
                      while (node = node[dir2]) {
                        if (ofType ? nodeName(node, name) : node.nodeType === 1) {
                          return false;
                        }
                      }
                      start = dir2 = type === "only" && !start && "nextSibling";
                    }
                    return true;
                  }
                  start = [forward ? parent.firstChild : parent.lastChild];
                  if (forward && useCache) {
                    outerCache = parent[expando] || (parent[expando] = {});
                    cache = outerCache[type] || [];
                    nodeIndex = cache[0] === dirruns && cache[1];
                    diff = nodeIndex && cache[2];
                    node = nodeIndex && parent.childNodes[nodeIndex];
                    while (node = ++nodeIndex && node && node[dir2] || // Fallback to seeking `elem` from the start
                    (diff = nodeIndex = 0) || start.pop()) {
                      if (node.nodeType === 1 && ++diff && node === elem) {
                        outerCache[type] = [dirruns, nodeIndex, diff];
                        break;
                      }
                    }
                  } else {
                    if (useCache) {
                      outerCache = elem[expando] || (elem[expando] = {});
                      cache = outerCache[type] || [];
                      nodeIndex = cache[0] === dirruns && cache[1];
                      diff = nodeIndex;
                    }
                    if (diff === false) {
                      while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                        if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {
                          if (useCache) {
                            outerCache = node[expando] || (node[expando] = {});
                            outerCache[type] = [dirruns, diff];
                          }
                          if (node === elem) {
                            break;
                          }
                        }
                      }
                    }
                  }
                  diff -= last;
                  return diff === first || diff % first === 0 && diff / first >= 0;
                }
              };
            },
            PSEUDO: function(pseudo, argument) {
              var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || find.error("unsupported pseudo: " + pseudo);
              if (fn[expando]) {
                return fn(argument);
              }
              if (fn.length > 1) {
                args = [pseudo, pseudo, "", argument];
                return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches2) {
                  var idx, matched = fn(seed, argument), i2 = matched.length;
                  while (i2--) {
                    idx = indexOf.call(seed, matched[i2]);
                    seed[idx] = !(matches2[idx] = matched[i2]);
                  }
                }) : function(elem) {
                  return fn(elem, 0, args);
                };
              }
              return fn;
            }
          },
          pseudos: {
            // Potentially complex pseudos
            not: markFunction(function(selector) {
              var input = [], results = [], matcher = compile(selector.replace(rtrimCSS, "$1"));
              return matcher[expando] ? markFunction(function(seed, matches2, _context, xml) {
                var elem, unmatched = matcher(seed, null, xml, []), i2 = seed.length;
                while (i2--) {
                  if (elem = unmatched[i2]) {
                    seed[i2] = !(matches2[i2] = elem);
                  }
                }
              }) : function(elem, _context, xml) {
                input[0] = elem;
                matcher(input, null, xml, results);
                input[0] = null;
                return !results.pop();
              };
            }),
            has: markFunction(function(selector) {
              return function(elem) {
                return find(selector, elem).length > 0;
              };
            }),
            contains: markFunction(function(text) {
              text = text.replace(runescape, funescape);
              return function(elem) {
                return (elem.textContent || jQuery2.text(elem)).indexOf(text) > -1;
              };
            }),
            // "Whether an element is represented by a :lang() selector
            // is based solely on the element's language value
            // being equal to the identifier C,
            // or beginning with the identifier C immediately followed by "-".
            // The matching of C against the element's language value is performed case-insensitively.
            // The identifier C does not have to be a valid language name."
            // https://www.w3.org/TR/selectors/#lang-pseudo
            lang: markFunction(function(lang) {
              if (!ridentifier.test(lang || "")) {
                find.error("unsupported lang: " + lang);
              }
              lang = lang.replace(runescape, funescape).toLowerCase();
              return function(elem) {
                var elemLang;
                do {
                  if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                    elemLang = elemLang.toLowerCase();
                    return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                  }
                } while ((elem = elem.parentNode) && elem.nodeType === 1);
                return false;
              };
            }),
            // Miscellaneous
            target: function(elem) {
              var hash = window2.location && window2.location.hash;
              return hash && hash.slice(1) === elem.id;
            },
            root: function(elem) {
              return elem === documentElement2;
            },
            focus: function(elem) {
              return elem === safeActiveElement() && document3.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);
            },
            // Boolean properties
            enabled: createDisabledPseudo(false),
            disabled: createDisabledPseudo(true),
            checked: function(elem) {
              return nodeName(elem, "input") && !!elem.checked || nodeName(elem, "option") && !!elem.selected;
            },
            selected: function(elem) {
              if (elem.parentNode) {
                elem.parentNode.selectedIndex;
              }
              return elem.selected === true;
            },
            // Contents
            empty: function(elem) {
              for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                if (elem.nodeType < 6) {
                  return false;
                }
              }
              return true;
            },
            parent: function(elem) {
              return !Expr.pseudos.empty(elem);
            },
            // Element/input types
            header: function(elem) {
              return rheader.test(elem.nodeName);
            },
            input: function(elem) {
              return rinputs.test(elem.nodeName);
            },
            button: function(elem) {
              return nodeName(elem, "input") && elem.type === "button" || nodeName(elem, "button");
            },
            text: function(elem) {
              var attr;
              return nodeName(elem, "input") && elem.type === "text" && // Support: IE <10 only
              // New HTML5 attribute values (e.g., "search") appear
              // with elem.type === "text"
              ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
            },
            // Position-in-collection
            first: createPositionalPseudo(function() {
              return [0];
            }),
            last: createPositionalPseudo(function(_matchIndexes, length) {
              return [length - 1];
            }),
            eq: createPositionalPseudo(function(_matchIndexes, length, argument) {
              return [argument < 0 ? argument + length : argument];
            }),
            even: createPositionalPseudo(function(matchIndexes, length) {
              var i2 = 0;
              for (; i2 < length; i2 += 2) {
                matchIndexes.push(i2);
              }
              return matchIndexes;
            }),
            odd: createPositionalPseudo(function(matchIndexes, length) {
              var i2 = 1;
              for (; i2 < length; i2 += 2) {
                matchIndexes.push(i2);
              }
              return matchIndexes;
            }),
            lt: createPositionalPseudo(function(matchIndexes, length, argument) {
              var i2;
              if (argument < 0) {
                i2 = argument + length;
              } else if (argument > length) {
                i2 = length;
              } else {
                i2 = argument;
              }
              for (; --i2 >= 0; ) {
                matchIndexes.push(i2);
              }
              return matchIndexes;
            }),
            gt: createPositionalPseudo(function(matchIndexes, length, argument) {
              var i2 = argument < 0 ? argument + length : argument;
              for (; ++i2 < length; ) {
                matchIndexes.push(i2);
              }
              return matchIndexes;
            })
          }
        };
        Expr.pseudos.nth = Expr.pseudos.eq;
        for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {
          Expr.pseudos[i] = createInputPseudo(i);
        }
        for (i in { submit: true, reset: true }) {
          Expr.pseudos[i] = createButtonPseudo(i);
        }
        function setFilters() {
        }
        setFilters.prototype = Expr.filters = Expr.pseudos;
        Expr.setFilters = new setFilters();
        function tokenize(selector, parseOnly) {
          var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
          if (cached) {
            return parseOnly ? 0 : cached.slice(0);
          }
          soFar = selector;
          groups = [];
          preFilters = Expr.preFilter;
          while (soFar) {
            if (!matched || (match = rcomma.exec(soFar))) {
              if (match) {
                soFar = soFar.slice(match[0].length) || soFar;
              }
              groups.push(tokens = []);
            }
            matched = false;
            if (match = rleadingCombinator.exec(soFar)) {
              matched = match.shift();
              tokens.push({
                value: matched,
                // Cast descendant combinators to space
                type: match[0].replace(rtrimCSS, " ")
              });
              soFar = soFar.slice(matched.length);
            }
            for (type in Expr.filter) {
              if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                matched = match.shift();
                tokens.push({
                  value: matched,
                  type,
                  matches: match
                });
                soFar = soFar.slice(matched.length);
              }
            }
            if (!matched) {
              break;
            }
          }
          if (parseOnly) {
            return soFar.length;
          }
          return soFar ? find.error(selector) : (
            // Cache the tokens
            tokenCache(selector, groups).slice(0)
          );
        }
        function toSelector(tokens) {
          var i2 = 0, len = tokens.length, selector = "";
          for (; i2 < len; i2++) {
            selector += tokens[i2].value;
          }
          return selector;
        }
        function addCombinator(matcher, combinator, base) {
          var dir2 = combinator.dir, skip = combinator.next, key = skip || dir2, checkNonElements = base && key === "parentNode", doneName = done++;
          return combinator.first ? (
            // Check against closest ancestor/preceding element
            function(elem, context, xml) {
              while (elem = elem[dir2]) {
                if (elem.nodeType === 1 || checkNonElements) {
                  return matcher(elem, context, xml);
                }
              }
              return false;
            }
          ) : (
            // Check against all ancestor/preceding elements
            function(elem, context, xml) {
              var oldCache, outerCache, newCache = [dirruns, doneName];
              if (xml) {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    if (matcher(elem, context, xml)) {
                      return true;
                    }
                  }
                }
              } else {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    outerCache = elem[expando] || (elem[expando] = {});
                    if (skip && nodeName(elem, skip)) {
                      elem = elem[dir2] || elem;
                    } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                      return newCache[2] = oldCache[2];
                    } else {
                      outerCache[key] = newCache;
                      if (newCache[2] = matcher(elem, context, xml)) {
                        return true;
                      }
                    }
                  }
                }
              }
              return false;
            }
          );
        }
        function elementMatcher(matchers) {
          return matchers.length > 1 ? function(elem, context, xml) {
            var i2 = matchers.length;
            while (i2--) {
              if (!matchers[i2](elem, context, xml)) {
                return false;
              }
            }
            return true;
          } : matchers[0];
        }
        function multipleContexts(selector, contexts, results) {
          var i2 = 0, len = contexts.length;
          for (; i2 < len; i2++) {
            find(selector, contexts[i2], results);
          }
          return results;
        }
        function condense(unmatched, map, filter, context, xml) {
          var elem, newUnmatched = [], i2 = 0, len = unmatched.length, mapped = map != null;
          for (; i2 < len; i2++) {
            if (elem = unmatched[i2]) {
              if (!filter || filter(elem, context, xml)) {
                newUnmatched.push(elem);
                if (mapped) {
                  map.push(i2);
                }
              }
            }
          }
          return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
          if (postFilter && !postFilter[expando]) {
            postFilter = setMatcher(postFilter);
          }
          if (postFinder && !postFinder[expando]) {
            postFinder = setMatcher(postFinder, postSelector);
          }
          return markFunction(function(seed, results, context, xml) {
            var temp, i2, elem, matcherOut, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(
              selector || "*",
              context.nodeType ? [context] : context,
              []
            ), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems;
            if (matcher) {
              matcherOut = postFinder || (seed ? preFilter : preexisting || postFilter) ? (
                // ...intermediate processing is necessary
                []
              ) : (
                // ...otherwise use results directly
                results
              );
              matcher(matcherIn, matcherOut, context, xml);
            } else {
              matcherOut = matcherIn;
            }
            if (postFilter) {
              temp = condense(matcherOut, postMap);
              postFilter(temp, [], context, xml);
              i2 = temp.length;
              while (i2--) {
                if (elem = temp[i2]) {
                  matcherOut[postMap[i2]] = !(matcherIn[postMap[i2]] = elem);
                }
              }
            }
            if (seed) {
              if (postFinder || preFilter) {
                if (postFinder) {
                  temp = [];
                  i2 = matcherOut.length;
                  while (i2--) {
                    if (elem = matcherOut[i2]) {
                      temp.push(matcherIn[i2] = elem);
                    }
                  }
                  postFinder(null, matcherOut = [], temp, xml);
                }
                i2 = matcherOut.length;
                while (i2--) {
                  if ((elem = matcherOut[i2]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i2]) > -1) {
                    seed[temp] = !(results[temp] = elem);
                  }
                }
              }
            } else {
              matcherOut = condense(
                matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut
              );
              if (postFinder) {
                postFinder(null, results, matcherOut, xml);
              } else {
                push2.apply(results, matcherOut);
              }
            }
          });
        }
        function matcherFromTokens(tokens) {
          var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i2 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
            return elem === checkContext;
          }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
            return indexOf.call(checkContext, elem) > -1;
          }, implicitRelative, true), matchers = [function(elem, context, xml) {
            var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
            checkContext = null;
            return ret;
          }];
          for (; i2 < len; i2++) {
            if (matcher = Expr.relative[tokens[i2].type]) {
              matchers = [addCombinator(elementMatcher(matchers), matcher)];
            } else {
              matcher = Expr.filter[tokens[i2].type].apply(null, tokens[i2].matches);
              if (matcher[expando]) {
                j = ++i2;
                for (; j < len; j++) {
                  if (Expr.relative[tokens[j].type]) {
                    break;
                  }
                }
                return setMatcher(
                  i2 > 1 && elementMatcher(matchers),
                  i2 > 1 && toSelector(
                    // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                    tokens.slice(0, i2 - 1).concat({ value: tokens[i2 - 2].type === " " ? "*" : "" })
                  ).replace(rtrimCSS, "$1"),
                  matcher,
                  i2 < j && matcherFromTokens(tokens.slice(i2, j)),
                  j < len && matcherFromTokens(tokens = tokens.slice(j)),
                  j < len && toSelector(tokens)
                );
              }
              matchers.push(matcher);
            }
          }
          return elementMatcher(matchers);
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
          var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
            var elem, j, matcher, matchedCount = 0, i2 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find.TAG("*", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
            if (outermost) {
              outermostContext = context == document3 || context || outermost;
            }
            for (; i2 !== len && (elem = elems[i2]) != null; i2++) {
              if (byElement && elem) {
                j = 0;
                if (!context && elem.ownerDocument != document3) {
                  setDocument(elem);
                  xml = !documentIsHTML;
                }
                while (matcher = elementMatchers[j++]) {
                  if (matcher(elem, context || document3, xml)) {
                    push2.call(results, elem);
                    break;
                  }
                }
                if (outermost) {
                  dirruns = dirrunsUnique;
                }
              }
              if (bySet) {
                if (elem = !matcher && elem) {
                  matchedCount--;
                }
                if (seed) {
                  unmatched.push(elem);
                }
              }
            }
            matchedCount += i2;
            if (bySet && i2 !== matchedCount) {
              j = 0;
              while (matcher = setMatchers[j++]) {
                matcher(unmatched, setMatched, context, xml);
              }
              if (seed) {
                if (matchedCount > 0) {
                  while (i2--) {
                    if (!(unmatched[i2] || setMatched[i2])) {
                      setMatched[i2] = pop.call(results);
                    }
                  }
                }
                setMatched = condense(setMatched);
              }
              push2.apply(results, setMatched);
              if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                jQuery2.uniqueSort(results);
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
              outermostContext = contextBackup;
            }
            return unmatched;
          };
          return bySet ? markFunction(superMatcher) : superMatcher;
        }
        function compile(selector, match) {
          var i2, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
          if (!cached) {
            if (!match) {
              match = tokenize(selector);
            }
            i2 = match.length;
            while (i2--) {
              cached = matcherFromTokens(match[i2]);
              if (cached[expando]) {
                setMatchers.push(cached);
              } else {
                elementMatchers.push(cached);
              }
            }
            cached = compilerCache(
              selector,
              matcherFromGroupMatchers(elementMatchers, setMatchers)
            );
            cached.selector = selector;
          }
          return cached;
        }
        function select(selector, context, results, seed) {
          var i2, tokens, token, type, find2, compiled = typeof selector === "function" && selector, match = !seed && tokenize(selector = compiled.selector || selector);
          results = results || [];
          if (match.length === 1) {
            tokens = match[0] = match[0].slice(0);
            if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
              context = (Expr.find.ID(
                token.matches[0].replace(runescape, funescape),
                context
              ) || [])[0];
              if (!context) {
                return results;
              } else if (compiled) {
                context = context.parentNode;
              }
              selector = selector.slice(tokens.shift().value.length);
            }
            i2 = matchExpr.needsContext.test(selector) ? 0 : tokens.length;
            while (i2--) {
              token = tokens[i2];
              if (Expr.relative[type = token.type]) {
                break;
              }
              if (find2 = Expr.find[type]) {
                if (seed = find2(
                  token.matches[0].replace(runescape, funescape),
                  rsibling.test(tokens[0].type) && testContext(context.parentNode) || context
                )) {
                  tokens.splice(i2, 1);
                  selector = seed.length && toSelector(tokens);
                  if (!selector) {
                    push2.apply(results, seed);
                    return results;
                  }
                  break;
                }
              }
            }
          }
          (compiled || compile(selector, match))(
            seed,
            context,
            !documentIsHTML,
            results,
            !context || rsibling.test(selector) && testContext(context.parentNode) || context
          );
          return results;
        }
        support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
        setDocument();
        support.sortDetached = assert(function(el) {
          return el.compareDocumentPosition(document3.createElement("fieldset")) & 1;
        });
        jQuery2.find = find;
        jQuery2.expr[":"] = jQuery2.expr.pseudos;
        jQuery2.unique = jQuery2.uniqueSort;
        find.compile = compile;
        find.select = select;
        find.setDocument = setDocument;
        find.tokenize = tokenize;
        find.escape = jQuery2.escapeSelector;
        find.getText = jQuery2.text;
        find.isXML = jQuery2.isXMLDoc;
        find.selectors = jQuery2.expr;
        find.support = jQuery2.support;
        find.uniqueSort = jQuery2.uniqueSort;
      })();
      var dir = function(elem, dir2, until) {
        var matched = [], truncate = until !== void 0;
        while ((elem = elem[dir2]) && elem.nodeType !== 9) {
          if (elem.nodeType === 1) {
            if (truncate && jQuery2(elem).is(until)) {
              break;
            }
            matched.push(elem);
          }
        }
        return matched;
      };
      var siblings = function(n, elem) {
        var matched = [];
        for (; n; n = n.nextSibling) {
          if (n.nodeType === 1 && n !== elem) {
            matched.push(n);
          }
        }
        return matched;
      };
      var rneedsContext = jQuery2.expr.match.needsContext;
      var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
      function winnow(elements, qualifier, not) {
        if (isFunction(qualifier)) {
          return jQuery2.grep(elements, function(elem, i) {
            return !!qualifier.call(elem, i, elem) !== not;
          });
        }
        if (qualifier.nodeType) {
          return jQuery2.grep(elements, function(elem) {
            return elem === qualifier !== not;
          });
        }
        if (typeof qualifier !== "string") {
          return jQuery2.grep(elements, function(elem) {
            return indexOf.call(qualifier, elem) > -1 !== not;
          });
        }
        return jQuery2.filter(qualifier, elements, not);
      }
      jQuery2.filter = function(expr, elems, not) {
        var elem = elems[0];
        if (not) {
          expr = ":not(" + expr + ")";
        }
        if (elems.length === 1 && elem.nodeType === 1) {
          return jQuery2.find.matchesSelector(elem, expr) ? [elem] : [];
        }
        return jQuery2.find.matches(expr, jQuery2.grep(elems, function(elem2) {
          return elem2.nodeType === 1;
        }));
      };
      jQuery2.fn.extend({
        find: function(selector) {
          var i, ret, len = this.length, self = this;
          if (typeof selector !== "string") {
            return this.pushStack(jQuery2(selector).filter(function() {
              for (i = 0; i < len; i++) {
                if (jQuery2.contains(self[i], this)) {
                  return true;
                }
              }
            }));
          }
          ret = this.pushStack([]);
          for (i = 0; i < len; i++) {
            jQuery2.find(selector, self[i], ret);
          }
          return len > 1 ? jQuery2.uniqueSort(ret) : ret;
        },
        filter: function(selector) {
          return this.pushStack(winnow(this, selector || [], false));
        },
        not: function(selector) {
          return this.pushStack(winnow(this, selector || [], true));
        },
        is: function(selector) {
          return !!winnow(
            this,
            // If this is a positional/relative selector, check membership in the returned set
            // so $("p:first").is("p:last") won't return true for a doc with two "p".
            typeof selector === "string" && rneedsContext.test(selector) ? jQuery2(selector) : selector || [],
            false
          ).length;
        }
      });
      var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = jQuery2.fn.init = function(selector, context, root) {
        var match, elem;
        if (!selector) {
          return this;
        }
        root = root || rootjQuery;
        if (typeof selector === "string") {
          if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
            match = [null, selector, null];
          } else {
            match = rquickExpr.exec(selector);
          }
          if (match && (match[1] || !context)) {
            if (match[1]) {
              context = context instanceof jQuery2 ? context[0] : context;
              jQuery2.merge(this, jQuery2.parseHTML(
                match[1],
                context && context.nodeType ? context.ownerDocument || context : document2,
                true
              ));
              if (rsingleTag.test(match[1]) && jQuery2.isPlainObject(context)) {
                for (match in context) {
                  if (isFunction(this[match])) {
                    this[match](context[match]);
                  } else {
                    this.attr(match, context[match]);
                  }
                }
              }
              return this;
            } else {
              elem = document2.getElementById(match[2]);
              if (elem) {
                this[0] = elem;
                this.length = 1;
              }
              return this;
            }
          } else if (!context || context.jquery) {
            return (context || root).find(selector);
          } else {
            return this.constructor(context).find(selector);
          }
        } else if (selector.nodeType) {
          this[0] = selector;
          this.length = 1;
          return this;
        } else if (isFunction(selector)) {
          return root.ready !== void 0 ? root.ready(selector) : (
            // Execute immediately if ready is not present
            selector(jQuery2)
          );
        }
        return jQuery2.makeArray(selector, this);
      };
      init.prototype = jQuery2.fn;
      rootjQuery = jQuery2(document2);
      var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
      };
      jQuery2.fn.extend({
        has: function(target) {
          var targets = jQuery2(target, this), l = targets.length;
          return this.filter(function() {
            var i = 0;
            for (; i < l; i++) {
              if (jQuery2.contains(this, targets[i])) {
                return true;
              }
            }
          });
        },
        closest: function(selectors, context) {
          var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== "string" && jQuery2(selectors);
          if (!rneedsContext.test(selectors)) {
            for (; i < l; i++) {
              for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
                if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : (
                  // Don't pass non-elements to jQuery#find
                  cur.nodeType === 1 && jQuery2.find.matchesSelector(cur, selectors)
                ))) {
                  matched.push(cur);
                  break;
                }
              }
            }
          }
          return this.pushStack(matched.length > 1 ? jQuery2.uniqueSort(matched) : matched);
        },
        // Determine the position of an element within the set
        index: function(elem) {
          if (!elem) {
            return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
          }
          if (typeof elem === "string") {
            return indexOf.call(jQuery2(elem), this[0]);
          }
          return indexOf.call(
            this,
            // If it receives a jQuery object, the first element is used
            elem.jquery ? elem[0] : elem
          );
        },
        add: function(selector, context) {
          return this.pushStack(
            jQuery2.uniqueSort(
              jQuery2.merge(this.get(), jQuery2(selector, context))
            )
          );
        },
        addBack: function(selector) {
          return this.add(
            selector == null ? this.prevObject : this.prevObject.filter(selector)
          );
        }
      });
      function sibling(cur, dir2) {
        while ((cur = cur[dir2]) && cur.nodeType !== 1) {
        }
        return cur;
      }
      jQuery2.each({
        parent: function(elem) {
          var parent = elem.parentNode;
          return parent && parent.nodeType !== 11 ? parent : null;
        },
        parents: function(elem) {
          return dir(elem, "parentNode");
        },
        parentsUntil: function(elem, _i, until) {
          return dir(elem, "parentNode", until);
        },
        next: function(elem) {
          return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
          return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
          return dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
          return dir(elem, "previousSibling");
        },
        nextUntil: function(elem, _i, until) {
          return dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, _i, until) {
          return dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
          return siblings((elem.parentNode || {}).firstChild, elem);
        },
        children: function(elem) {
          return siblings(elem.firstChild);
        },
        contents: function(elem) {
          if (elem.contentDocument != null && // Support: IE 11+
          // <object> elements with no `data` attribute has an object
          // `contentDocument` with a `null` prototype.
          getProto(elem.contentDocument)) {
            return elem.contentDocument;
          }
          if (nodeName(elem, "template")) {
            elem = elem.content || elem;
          }
          return jQuery2.merge([], elem.childNodes);
        }
      }, function(name, fn) {
        jQuery2.fn[name] = function(until, selector) {
          var matched = jQuery2.map(this, fn, until);
          if (name.slice(-5) !== "Until") {
            selector = until;
          }
          if (selector && typeof selector === "string") {
            matched = jQuery2.filter(selector, matched);
          }
          if (this.length > 1) {
            if (!guaranteedUnique[name]) {
              jQuery2.uniqueSort(matched);
            }
            if (rparentsprev.test(name)) {
              matched.reverse();
            }
          }
          return this.pushStack(matched);
        };
      });
      var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
      function createOptions(options) {
        var object = {};
        jQuery2.each(options.match(rnothtmlwhite) || [], function(_, flag) {
          object[flag] = true;
        });
        return object;
      }
      jQuery2.Callbacks = function(options) {
        options = typeof options === "string" ? createOptions(options) : jQuery2.extend({}, options);
        var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function() {
          locked = locked || options.once;
          fired = firing = true;
          for (; queue.length; firingIndex = -1) {
            memory = queue.shift();
            while (++firingIndex < list.length) {
              if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                firingIndex = list.length;
                memory = false;
              }
            }
          }
          if (!options.memory) {
            memory = false;
          }
          firing = false;
          if (locked) {
            if (memory) {
              list = [];
            } else {
              list = "";
            }
          }
        }, self = {
          // Add a callback or a collection of callbacks to the list
          add: function() {
            if (list) {
              if (memory && !firing) {
                firingIndex = list.length - 1;
                queue.push(memory);
              }
              (function add(args) {
                jQuery2.each(args, function(_, arg) {
                  if (isFunction(arg)) {
                    if (!options.unique || !self.has(arg)) {
                      list.push(arg);
                    }
                  } else if (arg && arg.length && toType(arg) !== "string") {
                    add(arg);
                  }
                });
              })(arguments);
              if (memory && !firing) {
                fire();
              }
            }
            return this;
          },
          // Remove a callback from the list
          remove: function() {
            jQuery2.each(arguments, function(_, arg) {
              var index;
              while ((index = jQuery2.inArray(arg, list, index)) > -1) {
                list.splice(index, 1);
                if (index <= firingIndex) {
                  firingIndex--;
                }
              }
            });
            return this;
          },
          // Check if a given callback is in the list.
          // If no argument is given, return whether or not list has callbacks attached.
          has: function(fn) {
            return fn ? jQuery2.inArray(fn, list) > -1 : list.length > 0;
          },
          // Remove all callbacks from the list
          empty: function() {
            if (list) {
              list = [];
            }
            return this;
          },
          // Disable .fire and .add
          // Abort any current/pending executions
          // Clear all callbacks and values
          disable: function() {
            locked = queue = [];
            list = memory = "";
            return this;
          },
          disabled: function() {
            return !list;
          },
          // Disable .fire
          // Also disable .add unless we have memory (since it would have no effect)
          // Abort any pending executions
          lock: function() {
            locked = queue = [];
            if (!memory && !firing) {
              list = memory = "";
            }
            return this;
          },
          locked: function() {
            return !!locked;
          },
          // Call all callbacks with the given context and arguments
          fireWith: function(context, args) {
            if (!locked) {
              args = args || [];
              args = [context, args.slice ? args.slice() : args];
              queue.push(args);
              if (!firing) {
                fire();
              }
            }
            return this;
          },
          // Call all the callbacks with the given arguments
          fire: function() {
            self.fireWith(this, arguments);
            return this;
          },
          // To know if the callbacks have already been called at least once
          fired: function() {
            return !!fired;
          }
        };
        return self;
      };
      function Identity(v) {
        return v;
      }
      function Thrower(ex) {
        throw ex;
      }
      function adoptValue(value, resolve, reject, noValue) {
        var method;
        try {
          if (value && isFunction(method = value.promise)) {
            method.call(value).done(resolve).fail(reject);
          } else if (value && isFunction(method = value.then)) {
            method.call(value, resolve, reject);
          } else {
            resolve.apply(void 0, [value].slice(noValue));
          }
        } catch (value2) {
          reject.apply(void 0, [value2]);
        }
      }
      jQuery2.extend({
        Deferred: function(func) {
          var tuples = [
            // action, add listener, callbacks,
            // ... .then handlers, argument index, [final state]
            [
              "notify",
              "progress",
              jQuery2.Callbacks("memory"),
              jQuery2.Callbacks("memory"),
              2
            ],
            [
              "resolve",
              "done",
              jQuery2.Callbacks("once memory"),
              jQuery2.Callbacks("once memory"),
              0,
              "resolved"
            ],
            [
              "reject",
              "fail",
              jQuery2.Callbacks("once memory"),
              jQuery2.Callbacks("once memory"),
              1,
              "rejected"
            ]
          ], state = "pending", promise = {
            state: function() {
              return state;
            },
            always: function() {
              deferred.done(arguments).fail(arguments);
              return this;
            },
            "catch": function(fn) {
              return promise.then(null, fn);
            },
            // Keep pipe for back-compat
            pipe: function() {
              var fns = arguments;
              return jQuery2.Deferred(function(newDefer) {
                jQuery2.each(tuples, function(_i, tuple) {
                  var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                  deferred[tuple[1]](function() {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && isFunction(returned.promise)) {
                      returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                    } else {
                      newDefer[tuple[0] + "With"](
                        this,
                        fn ? [returned] : arguments
                      );
                    }
                  });
                });
                fns = null;
              }).promise();
            },
            then: function(onFulfilled, onRejected, onProgress) {
              var maxDepth = 0;
              function resolve(depth, deferred2, handler, special) {
                return function() {
                  var that = this, args = arguments, mightThrow = function() {
                    var returned, then;
                    if (depth < maxDepth) {
                      return;
                    }
                    returned = handler.apply(that, args);
                    if (returned === deferred2.promise()) {
                      throw new TypeError("Thenable self-resolution");
                    }
                    then = returned && // Support: Promises/A+ section 2.3.4
                    // https://promisesaplus.com/#point-64
                    // Only check objects and functions for thenability
                    (typeof returned === "object" || typeof returned === "function") && returned.then;
                    if (isFunction(then)) {
                      if (special) {
                        then.call(
                          returned,
                          resolve(maxDepth, deferred2, Identity, special),
                          resolve(maxDepth, deferred2, Thrower, special)
                        );
                      } else {
                        maxDepth++;
                        then.call(
                          returned,
                          resolve(maxDepth, deferred2, Identity, special),
                          resolve(maxDepth, deferred2, Thrower, special),
                          resolve(
                            maxDepth,
                            deferred2,
                            Identity,
                            deferred2.notifyWith
                          )
                        );
                      }
                    } else {
                      if (handler !== Identity) {
                        that = void 0;
                        args = [returned];
                      }
                      (special || deferred2.resolveWith)(that, args);
                    }
                  }, process = special ? mightThrow : function() {
                    try {
                      mightThrow();
                    } catch (e) {
                      if (jQuery2.Deferred.exceptionHook) {
                        jQuery2.Deferred.exceptionHook(
                          e,
                          process.error
                        );
                      }
                      if (depth + 1 >= maxDepth) {
                        if (handler !== Thrower) {
                          that = void 0;
                          args = [e];
                        }
                        deferred2.rejectWith(that, args);
                      }
                    }
                  };
                  if (depth) {
                    process();
                  } else {
                    if (jQuery2.Deferred.getErrorHook) {
                      process.error = jQuery2.Deferred.getErrorHook();
                    } else if (jQuery2.Deferred.getStackHook) {
                      process.error = jQuery2.Deferred.getStackHook();
                    }
                    window2.setTimeout(process);
                  }
                };
              }
              return jQuery2.Deferred(function(newDefer) {
                tuples[0][3].add(
                  resolve(
                    0,
                    newDefer,
                    isFunction(onProgress) ? onProgress : Identity,
                    newDefer.notifyWith
                  )
                );
                tuples[1][3].add(
                  resolve(
                    0,
                    newDefer,
                    isFunction(onFulfilled) ? onFulfilled : Identity
                  )
                );
                tuples[2][3].add(
                  resolve(
                    0,
                    newDefer,
                    isFunction(onRejected) ? onRejected : Thrower
                  )
                );
              }).promise();
            },
            // Get a promise for this deferred
            // If obj is provided, the promise aspect is added to the object
            promise: function(obj) {
              return obj != null ? jQuery2.extend(obj, promise) : promise;
            }
          }, deferred = {};
          jQuery2.each(tuples, function(i, tuple) {
            var list = tuple[2], stateString = tuple[5];
            promise[tuple[1]] = list.add;
            if (stateString) {
              list.add(
                function() {
                  state = stateString;
                },
                // rejected_callbacks.disable
                // fulfilled_callbacks.disable
                tuples[3 - i][2].disable,
                // rejected_handlers.disable
                // fulfilled_handlers.disable
                tuples[3 - i][3].disable,
                // progress_callbacks.lock
                tuples[0][2].lock,
                // progress_handlers.lock
                tuples[0][3].lock
              );
            }
            list.add(tuple[3].fire);
            deferred[tuple[0]] = function() {
              deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments);
              return this;
            };
            deferred[tuple[0] + "With"] = list.fireWith;
          });
          promise.promise(deferred);
          if (func) {
            func.call(deferred, deferred);
          }
          return deferred;
        },
        // Deferred helper
        when: function(singleValue) {
          var remaining = arguments.length, i = remaining, resolveContexts = Array(i), resolveValues = slice.call(arguments), primary = jQuery2.Deferred(), updateFunc = function(i2) {
            return function(value) {
              resolveContexts[i2] = this;
              resolveValues[i2] = arguments.length > 1 ? slice.call(arguments) : value;
              if (!--remaining) {
                primary.resolveWith(resolveContexts, resolveValues);
              }
            };
          };
          if (remaining <= 1) {
            adoptValue(
              singleValue,
              primary.done(updateFunc(i)).resolve,
              primary.reject,
              !remaining
            );
            if (primary.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {
              return primary.then();
            }
          }
          while (i--) {
            adoptValue(resolveValues[i], updateFunc(i), primary.reject);
          }
          return primary.promise();
        }
      });
      var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      jQuery2.Deferred.exceptionHook = function(error, asyncError) {
        if (window2.console && window2.console.warn && error && rerrorNames.test(error.name)) {
          window2.console.warn(
            "jQuery.Deferred exception: " + error.message,
            error.stack,
            asyncError
          );
        }
      };
      jQuery2.readyException = function(error) {
        window2.setTimeout(function() {
          throw error;
        });
      };
      var readyList = jQuery2.Deferred();
      jQuery2.fn.ready = function(fn) {
        readyList.then(fn).catch(function(error) {
          jQuery2.readyException(error);
        });
        return this;
      };
      jQuery2.extend({
        // Is the DOM ready to be used? Set to true once it occurs.
        isReady: false,
        // A counter to track how many items to wait for before
        // the ready event fires. See trac-6781
        readyWait: 1,
        // Handle when the DOM is ready
        ready: function(wait) {
          if (wait === true ? --jQuery2.readyWait : jQuery2.isReady) {
            return;
          }
          jQuery2.isReady = true;
          if (wait !== true && --jQuery2.readyWait > 0) {
            return;
          }
          readyList.resolveWith(document2, [jQuery2]);
        }
      });
      jQuery2.ready.then = readyList.then;
      function completed() {
        document2.removeEventListener("DOMContentLoaded", completed);
        window2.removeEventListener("load", completed);
        jQuery2.ready();
      }
      if (document2.readyState === "complete" || document2.readyState !== "loading" && !document2.documentElement.doScroll) {
        window2.setTimeout(jQuery2.ready);
      } else {
        document2.addEventListener("DOMContentLoaded", completed);
        window2.addEventListener("load", completed);
      }
      var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
        var i = 0, len = elems.length, bulk = key == null;
        if (toType(key) === "object") {
          chainable = true;
          for (i in key) {
            access(elems, fn, i, key[i], true, emptyGet, raw);
          }
        } else if (value !== void 0) {
          chainable = true;
          if (!isFunction(value)) {
            raw = true;
          }
          if (bulk) {
            if (raw) {
              fn.call(elems, value);
              fn = null;
            } else {
              bulk = fn;
              fn = function(elem, _key, value2) {
                return bulk.call(jQuery2(elem), value2);
              };
            }
          }
          if (fn) {
            for (; i < len; i++) {
              fn(
                elems[i],
                key,
                raw ? value : value.call(elems[i], i, fn(elems[i], key))
              );
            }
          }
        }
        if (chainable) {
          return elems;
        }
        if (bulk) {
          return fn.call(elems);
        }
        return len ? fn(elems[0], key) : emptyGet;
      };
      var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
      function fcamelCase(_all, letter) {
        return letter.toUpperCase();
      }
      function camelCase(string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
      }
      var acceptData = function(owner) {
        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
      };
      function Data() {
        this.expando = jQuery2.expando + Data.uid++;
      }
      Data.uid = 1;
      Data.prototype = {
        cache: function(owner) {
          var value = owner[this.expando];
          if (!value) {
            value = {};
            if (acceptData(owner)) {
              if (owner.nodeType) {
                owner[this.expando] = value;
              } else {
                Object.defineProperty(owner, this.expando, {
                  value,
                  configurable: true
                });
              }
            }
          }
          return value;
        },
        set: function(owner, data, value) {
          var prop, cache = this.cache(owner);
          if (typeof data === "string") {
            cache[camelCase(data)] = value;
          } else {
            for (prop in data) {
              cache[camelCase(prop)] = data[prop];
            }
          }
          return cache;
        },
        get: function(owner, key) {
          return key === void 0 ? this.cache(owner) : (
            // Always use camelCase key (gh-2257)
            owner[this.expando] && owner[this.expando][camelCase(key)]
          );
        },
        access: function(owner, key, value) {
          if (key === void 0 || key && typeof key === "string" && value === void 0) {
            return this.get(owner, key);
          }
          this.set(owner, key, value);
          return value !== void 0 ? value : key;
        },
        remove: function(owner, key) {
          var i, cache = owner[this.expando];
          if (cache === void 0) {
            return;
          }
          if (key !== void 0) {
            if (Array.isArray(key)) {
              key = key.map(camelCase);
            } else {
              key = camelCase(key);
              key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
            }
            i = key.length;
            while (i--) {
              delete cache[key[i]];
            }
          }
          if (key === void 0 || jQuery2.isEmptyObject(cache)) {
            if (owner.nodeType) {
              owner[this.expando] = void 0;
            } else {
              delete owner[this.expando];
            }
          }
        },
        hasData: function(owner) {
          var cache = owner[this.expando];
          return cache !== void 0 && !jQuery2.isEmptyObject(cache);
        }
      };
      var dataPriv = new Data();
      var dataUser = new Data();
      var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
      function getData(data) {
        if (data === "true") {
          return true;
        }
        if (data === "false") {
          return false;
        }
        if (data === "null") {
          return null;
        }
        if (data === +data + "") {
          return +data;
        }
        if (rbrace.test(data)) {
          return JSON.parse(data);
        }
        return data;
      }
      function dataAttr(elem, key, data) {
        var name;
        if (data === void 0 && elem.nodeType === 1) {
          name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
          data = elem.getAttribute(name);
          if (typeof data === "string") {
            try {
              data = getData(data);
            } catch (e) {
            }
            dataUser.set(elem, key, data);
          } else {
            data = void 0;
          }
        }
        return data;
      }
      jQuery2.extend({
        hasData: function(elem) {
          return dataUser.hasData(elem) || dataPriv.hasData(elem);
        },
        data: function(elem, name, data) {
          return dataUser.access(elem, name, data);
        },
        removeData: function(elem, name) {
          dataUser.remove(elem, name);
        },
        // TODO: Now that all calls to _data and _removeData have been replaced
        // with direct calls to dataPriv methods, these can be deprecated.
        _data: function(elem, name, data) {
          return dataPriv.access(elem, name, data);
        },
        _removeData: function(elem, name) {
          dataPriv.remove(elem, name);
        }
      });
      jQuery2.fn.extend({
        data: function(key, value) {
          var i, name, data, elem = this[0], attrs = elem && elem.attributes;
          if (key === void 0) {
            if (this.length) {
              data = dataUser.get(elem);
              if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                i = attrs.length;
                while (i--) {
                  if (attrs[i]) {
                    name = attrs[i].name;
                    if (name.indexOf("data-") === 0) {
                      name = camelCase(name.slice(5));
                      dataAttr(elem, name, data[name]);
                    }
                  }
                }
                dataPriv.set(elem, "hasDataAttrs", true);
              }
            }
            return data;
          }
          if (typeof key === "object") {
            return this.each(function() {
              dataUser.set(this, key);
            });
          }
          return access(this, function(value2) {
            var data2;
            if (elem && value2 === void 0) {
              data2 = dataUser.get(elem, key);
              if (data2 !== void 0) {
                return data2;
              }
              data2 = dataAttr(elem, key);
              if (data2 !== void 0) {
                return data2;
              }
              return;
            }
            this.each(function() {
              dataUser.set(this, key, value2);
            });
          }, null, value, arguments.length > 1, null, true);
        },
        removeData: function(key) {
          return this.each(function() {
            dataUser.remove(this, key);
          });
        }
      });
      jQuery2.extend({
        queue: function(elem, type, data) {
          var queue;
          if (elem) {
            type = (type || "fx") + "queue";
            queue = dataPriv.get(elem, type);
            if (data) {
              if (!queue || Array.isArray(data)) {
                queue = dataPriv.access(elem, type, jQuery2.makeArray(data));
              } else {
                queue.push(data);
              }
            }
            return queue || [];
          }
        },
        dequeue: function(elem, type) {
          type = type || "fx";
          var queue = jQuery2.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery2._queueHooks(elem, type), next = function() {
            jQuery2.dequeue(elem, type);
          };
          if (fn === "inprogress") {
            fn = queue.shift();
            startLength--;
          }
          if (fn) {
            if (type === "fx") {
              queue.unshift("inprogress");
            }
            delete hooks.stop;
            fn.call(elem, next, hooks);
          }
          if (!startLength && hooks) {
            hooks.empty.fire();
          }
        },
        // Not public - generate a queueHooks object, or return the current one
        _queueHooks: function(elem, type) {
          var key = type + "queueHooks";
          return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
            empty: jQuery2.Callbacks("once memory").add(function() {
              dataPriv.remove(elem, [type + "queue", key]);
            })
          });
        }
      });
      jQuery2.fn.extend({
        queue: function(type, data) {
          var setter = 2;
          if (typeof type !== "string") {
            data = type;
            type = "fx";
            setter--;
          }
          if (arguments.length < setter) {
            return jQuery2.queue(this[0], type);
          }
          return data === void 0 ? this : this.each(function() {
            var queue = jQuery2.queue(this, type, data);
            jQuery2._queueHooks(this, type);
            if (type === "fx" && queue[0] !== "inprogress") {
              jQuery2.dequeue(this, type);
            }
          });
        },
        dequeue: function(type) {
          return this.each(function() {
            jQuery2.dequeue(this, type);
          });
        },
        clearQueue: function(type) {
          return this.queue(type || "fx", []);
        },
        // Get a promise resolved when queues of a certain type
        // are emptied (fx is the type by default)
        promise: function(type, obj) {
          var tmp, count = 1, defer = jQuery2.Deferred(), elements = this, i = this.length, resolve = function() {
            if (!--count) {
              defer.resolveWith(elements, [elements]);
            }
          };
          if (typeof type !== "string") {
            obj = type;
            type = void 0;
          }
          type = type || "fx";
          while (i--) {
            tmp = dataPriv.get(elements[i], type + "queueHooks");
            if (tmp && tmp.empty) {
              count++;
              tmp.empty.add(resolve);
            }
          }
          resolve();
          return defer.promise(obj);
        }
      });
      var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
      var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
      var cssExpand = ["Top", "Right", "Bottom", "Left"];
      var documentElement = document2.documentElement;
      var isAttached = function(elem) {
        return jQuery2.contains(elem.ownerDocument, elem);
      }, composed = { composed: true };
      if (documentElement.getRootNode) {
        isAttached = function(elem) {
          return jQuery2.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
        };
      }
      var isHiddenWithinTree = function(elem, el) {
        elem = el || elem;
        return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
        // Support: Firefox <=43 - 45
        // Disconnected elements can have computed display: none, so first confirm that elem is
        // in the document.
        isAttached(elem) && jQuery2.css(elem, "display") === "none";
      };
      function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
          return tween.cur();
        } : function() {
          return jQuery2.css(elem, prop, "");
        }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery2.cssNumber[prop] ? "" : "px"), initialInUnit = elem.nodeType && (jQuery2.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery2.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
          initial = initial / 2;
          unit = unit || initialInUnit[3];
          initialInUnit = +initial || 1;
          while (maxIterations--) {
            jQuery2.style(elem, prop, initialInUnit + unit);
            if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
              maxIterations = 0;
            }
            initialInUnit = initialInUnit / scale;
          }
          initialInUnit = initialInUnit * 2;
          jQuery2.style(elem, prop, initialInUnit + unit);
          valueParts = valueParts || [];
        }
        if (valueParts) {
          initialInUnit = +initialInUnit || +initial || 0;
          adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
          if (tween) {
            tween.unit = unit;
            tween.start = initialInUnit;
            tween.end = adjusted;
          }
        }
        return adjusted;
      }
      var defaultDisplayMap = {};
      function getDefaultDisplay(elem) {
        var temp, doc = elem.ownerDocument, nodeName2 = elem.nodeName, display = defaultDisplayMap[nodeName2];
        if (display) {
          return display;
        }
        temp = doc.body.appendChild(doc.createElement(nodeName2));
        display = jQuery2.css(temp, "display");
        temp.parentNode.removeChild(temp);
        if (display === "none") {
          display = "block";
        }
        defaultDisplayMap[nodeName2] = display;
        return display;
      }
      function showHide(elements, show) {
        var display, elem, values = [], index = 0, length = elements.length;
        for (; index < length; index++) {
          elem = elements[index];
          if (!elem.style) {
            continue;
          }
          display = elem.style.display;
          if (show) {
            if (display === "none") {
              values[index] = dataPriv.get(elem, "display") || null;
              if (!values[index]) {
                elem.style.display = "";
              }
            }
            if (elem.style.display === "" && isHiddenWithinTree(elem)) {
              values[index] = getDefaultDisplay(elem);
            }
          } else {
            if (display !== "none") {
              values[index] = "none";
              dataPriv.set(elem, "display", display);
            }
          }
        }
        for (index = 0; index < length; index++) {
          if (values[index] != null) {
            elements[index].style.display = values[index];
          }
        }
        return elements;
      }
      jQuery2.fn.extend({
        show: function() {
          return showHide(this, true);
        },
        hide: function() {
          return showHide(this);
        },
        toggle: function(state) {
          if (typeof state === "boolean") {
            return state ? this.show() : this.hide();
          }
          return this.each(function() {
            if (isHiddenWithinTree(this)) {
              jQuery2(this).show();
            } else {
              jQuery2(this).hide();
            }
          });
        }
      });
      var rcheckableType = /^(?:checkbox|radio)$/i;
      var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
      var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
      (function() {
        var fragment = document2.createDocumentFragment(), div = fragment.appendChild(document2.createElement("div")), input = document2.createElement("input");
        input.setAttribute("type", "radio");
        input.setAttribute("checked", "checked");
        input.setAttribute("name", "t");
        div.appendChild(input);
        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
        div.innerHTML = "<textarea>x</textarea>";
        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
        div.innerHTML = "<option></option>";
        support.option = !!div.lastChild;
      })();
      var wrapMap = {
        // XHTML parsers do not magically insert elements in the
        // same way that tag soup parsers do. So we cannot shorten
        // this by omitting <tbody> or other required elements.
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
      };
      wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
      wrapMap.th = wrapMap.td;
      if (!support.option) {
        wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
      }
      function getAll(context, tag) {
        var ret;
        if (typeof context.getElementsByTagName !== "undefined") {
          ret = context.getElementsByTagName(tag || "*");
        } else if (typeof context.querySelectorAll !== "undefined") {
          ret = context.querySelectorAll(tag || "*");
        } else {
          ret = [];
        }
        if (tag === void 0 || tag && nodeName(context, tag)) {
          return jQuery2.merge([context], ret);
        }
        return ret;
      }
      function setGlobalEval(elems, refElements) {
        var i = 0, l = elems.length;
        for (; i < l; i++) {
          dataPriv.set(
            elems[i],
            "globalEval",
            !refElements || dataPriv.get(refElements[i], "globalEval")
          );
        }
      }
      var rhtml = /<|&#?\w+;/;
      function buildFragment(elems, context, scripts, selection, ignored) {
        var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;
        for (; i < l; i++) {
          elem = elems[i];
          if (elem || elem === 0) {
            if (toType(elem) === "object") {
              jQuery2.merge(nodes, elem.nodeType ? [elem] : elem);
            } else if (!rhtml.test(elem)) {
              nodes.push(context.createTextNode(elem));
            } else {
              tmp = tmp || fragment.appendChild(context.createElement("div"));
              tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
              wrap = wrapMap[tag] || wrapMap._default;
              tmp.innerHTML = wrap[1] + jQuery2.htmlPrefilter(elem) + wrap[2];
              j = wrap[0];
              while (j--) {
                tmp = tmp.lastChild;
              }
              jQuery2.merge(nodes, tmp.childNodes);
              tmp = fragment.firstChild;
              tmp.textContent = "";
            }
          }
        }
        fragment.textContent = "";
        i = 0;
        while (elem = nodes[i++]) {
          if (selection && jQuery2.inArray(elem, selection) > -1) {
            if (ignored) {
              ignored.push(elem);
            }
            continue;
          }
          attached = isAttached(elem);
          tmp = getAll(fragment.appendChild(elem), "script");
          if (attached) {
            setGlobalEval(tmp);
          }
          if (scripts) {
            j = 0;
            while (elem = tmp[j++]) {
              if (rscriptType.test(elem.type || "")) {
                scripts.push(elem);
              }
            }
          }
        }
        return fragment;
      }
      var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
      function returnTrue() {
        return true;
      }
      function returnFalse() {
        return false;
      }
      function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        if (typeof types === "object") {
          if (typeof selector !== "string") {
            data = data || selector;
            selector = void 0;
          }
          for (type in types) {
            on(elem, type, selector, data, types[type], one);
          }
          return elem;
        }
        if (data == null && fn == null) {
          fn = selector;
          data = selector = void 0;
        } else if (fn == null) {
          if (typeof selector === "string") {
            fn = data;
            data = void 0;
          } else {
            fn = data;
            data = selector;
            selector = void 0;
          }
        }
        if (fn === false) {
          fn = returnFalse;
        } else if (!fn) {
          return elem;
        }
        if (one === 1) {
          origFn = fn;
          fn = function(event2) {
            jQuery2().off(event2);
            return origFn.apply(this, arguments);
          };
          fn.guid = origFn.guid || (origFn.guid = jQuery2.guid++);
        }
        return elem.each(function() {
          jQuery2.event.add(this, types, fn, data, selector);
        });
      }
      jQuery2.event = {
        global: {},
        add: function(elem, types, handler, data, selector) {
          var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
          if (!acceptData(elem)) {
            return;
          }
          if (handler.handler) {
            handleObjIn = handler;
            handler = handleObjIn.handler;
            selector = handleObjIn.selector;
          }
          if (selector) {
            jQuery2.find.matchesSelector(documentElement, selector);
          }
          if (!handler.guid) {
            handler.guid = jQuery2.guid++;
          }
          if (!(events = elemData.events)) {
            events = elemData.events = /* @__PURE__ */ Object.create(null);
          }
          if (!(eventHandle = elemData.handle)) {
            eventHandle = elemData.handle = function(e) {
              return typeof jQuery2 !== "undefined" && jQuery2.event.triggered !== e.type ? jQuery2.event.dispatch.apply(elem, arguments) : void 0;
            };
          }
          types = (types || "").match(rnothtmlwhite) || [""];
          t = types.length;
          while (t--) {
            tmp = rtypenamespace.exec(types[t]) || [];
            type = origType = tmp[1];
            namespaces = (tmp[2] || "").split(".").sort();
            if (!type) {
              continue;
            }
            special = jQuery2.event.special[type] || {};
            type = (selector ? special.delegateType : special.bindType) || type;
            special = jQuery2.event.special[type] || {};
            handleObj = jQuery2.extend({
              type,
              origType,
              data,
              handler,
              guid: handler.guid,
              selector,
              needsContext: selector && jQuery2.expr.match.needsContext.test(selector),
              namespace: namespaces.join(".")
            }, handleObjIn);
            if (!(handlers = events[type])) {
              handlers = events[type] = [];
              handlers.delegateCount = 0;
              if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                if (elem.addEventListener) {
                  elem.addEventListener(type, eventHandle);
                }
              }
            }
            if (special.add) {
              special.add.call(elem, handleObj);
              if (!handleObj.handler.guid) {
                handleObj.handler.guid = handler.guid;
              }
            }
            if (selector) {
              handlers.splice(handlers.delegateCount++, 0, handleObj);
            } else {
              handlers.push(handleObj);
            }
            jQuery2.event.global[type] = true;
          }
        },
        // Detach an event or set of events from an element
        remove: function(elem, types, handler, selector, mappedTypes) {
          var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
          if (!elemData || !(events = elemData.events)) {
            return;
          }
          types = (types || "").match(rnothtmlwhite) || [""];
          t = types.length;
          while (t--) {
            tmp = rtypenamespace.exec(types[t]) || [];
            type = origType = tmp[1];
            namespaces = (tmp[2] || "").split(".").sort();
            if (!type) {
              for (type in events) {
                jQuery2.event.remove(elem, type + types[t], handler, selector, true);
              }
              continue;
            }
            special = jQuery2.event.special[type] || {};
            type = (selector ? special.delegateType : special.bindType) || type;
            handlers = events[type] || [];
            tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
            origCount = j = handlers.length;
            while (j--) {
              handleObj = handlers[j];
              if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                handlers.splice(j, 1);
                if (handleObj.selector) {
                  handlers.delegateCount--;
                }
                if (special.remove) {
                  special.remove.call(elem, handleObj);
                }
              }
            }
            if (origCount && !handlers.length) {
              if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                jQuery2.removeEvent(elem, type, elemData.handle);
              }
              delete events[type];
            }
          }
          if (jQuery2.isEmptyObject(events)) {
            dataPriv.remove(elem, "handle events");
          }
        },
        dispatch: function(nativeEvent) {
          var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), event2 = jQuery2.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || /* @__PURE__ */ Object.create(null))[event2.type] || [], special = jQuery2.event.special[event2.type] || {};
          args[0] = event2;
          for (i = 1; i < arguments.length; i++) {
            args[i] = arguments[i];
          }
          event2.delegateTarget = this;
          if (special.preDispatch && special.preDispatch.call(this, event2) === false) {
            return;
          }
          handlerQueue = jQuery2.event.handlers.call(this, event2, handlers);
          i = 0;
          while ((matched = handlerQueue[i++]) && !event2.isPropagationStopped()) {
            event2.currentTarget = matched.elem;
            j = 0;
            while ((handleObj = matched.handlers[j++]) && !event2.isImmediatePropagationStopped()) {
              if (!event2.rnamespace || handleObj.namespace === false || event2.rnamespace.test(handleObj.namespace)) {
                event2.handleObj = handleObj;
                event2.data = handleObj.data;
                ret = ((jQuery2.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                if (ret !== void 0) {
                  if ((event2.result = ret) === false) {
                    event2.preventDefault();
                    event2.stopPropagation();
                  }
                }
              }
            }
          }
          if (special.postDispatch) {
            special.postDispatch.call(this, event2);
          }
          return event2.result;
        },
        handlers: function(event2, handlers) {
          var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event2.target;
          if (delegateCount && // Support: IE <=9
          // Black-hole SVG <use> instance trees (trac-13180)
          cur.nodeType && // Support: Firefox <=42
          // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
          // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
          // Support: IE 11 only
          // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
          !(event2.type === "click" && event2.button >= 1)) {
            for (; cur !== this; cur = cur.parentNode || this) {
              if (cur.nodeType === 1 && !(event2.type === "click" && cur.disabled === true)) {
                matchedHandlers = [];
                matchedSelectors = {};
                for (i = 0; i < delegateCount; i++) {
                  handleObj = handlers[i];
                  sel = handleObj.selector + " ";
                  if (matchedSelectors[sel] === void 0) {
                    matchedSelectors[sel] = handleObj.needsContext ? jQuery2(sel, this).index(cur) > -1 : jQuery2.find(sel, this, null, [cur]).length;
                  }
                  if (matchedSelectors[sel]) {
                    matchedHandlers.push(handleObj);
                  }
                }
                if (matchedHandlers.length) {
                  handlerQueue.push({ elem: cur, handlers: matchedHandlers });
                }
              }
            }
          }
          cur = this;
          if (delegateCount < handlers.length) {
            handlerQueue.push({ elem: cur, handlers: handlers.slice(delegateCount) });
          }
          return handlerQueue;
        },
        addProp: function(name, hook) {
          Object.defineProperty(jQuery2.Event.prototype, name, {
            enumerable: true,
            configurable: true,
            get: isFunction(hook) ? function() {
              if (this.originalEvent) {
                return hook(this.originalEvent);
              }
            } : function() {
              if (this.originalEvent) {
                return this.originalEvent[name];
              }
            },
            set: function(value) {
              Object.defineProperty(this, name, {
                enumerable: true,
                configurable: true,
                writable: true,
                value
              });
            }
          });
        },
        fix: function(originalEvent) {
          return originalEvent[jQuery2.expando] ? originalEvent : new jQuery2.Event(originalEvent);
        },
        special: {
          load: {
            // Prevent triggered image.load events from bubbling to window.load
            noBubble: true
          },
          click: {
            // Utilize native event to ensure correct state for checkable inputs
            setup: function(data) {
              var el = this || data;
              if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                leverageNative(el, "click", true);
              }
              return false;
            },
            trigger: function(data) {
              var el = this || data;
              if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                leverageNative(el, "click");
              }
              return true;
            },
            // For cross-browser consistency, suppress native .click() on links
            // Also prevent it if we're currently inside a leveraged native-event stack
            _default: function(event2) {
              var target = event2.target;
              return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
            }
          },
          beforeunload: {
            postDispatch: function(event2) {
              if (event2.result !== void 0 && event2.originalEvent) {
                event2.originalEvent.returnValue = event2.result;
              }
            }
          }
        }
      };
      function leverageNative(el, type, isSetup) {
        if (!isSetup) {
          if (dataPriv.get(el, type) === void 0) {
            jQuery2.event.add(el, type, returnTrue);
          }
          return;
        }
        dataPriv.set(el, type, false);
        jQuery2.event.add(el, type, {
          namespace: false,
          handler: function(event2) {
            var result, saved = dataPriv.get(this, type);
            if (event2.isTrigger & 1 && this[type]) {
              if (!saved) {
                saved = slice.call(arguments);
                dataPriv.set(this, type, saved);
                this[type]();
                result = dataPriv.get(this, type);
                dataPriv.set(this, type, false);
                if (saved !== result) {
                  event2.stopImmediatePropagation();
                  event2.preventDefault();
                  return result;
                }
              } else if ((jQuery2.event.special[type] || {}).delegateType) {
                event2.stopPropagation();
              }
            } else if (saved) {
              dataPriv.set(this, type, jQuery2.event.trigger(
                saved[0],
                saved.slice(1),
                this
              ));
              event2.stopPropagation();
              event2.isImmediatePropagationStopped = returnTrue;
            }
          }
        });
      }
      jQuery2.removeEvent = function(elem, type, handle) {
        if (elem.removeEventListener) {
          elem.removeEventListener(type, handle);
        }
      };
      jQuery2.Event = function(src, props) {
        if (!(this instanceof jQuery2.Event)) {
          return new jQuery2.Event(src, props);
        }
        if (src && src.type) {
          this.originalEvent = src;
          this.type = src.type;
          this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === void 0 && // Support: Android <=2.3 only
          src.returnValue === false ? returnTrue : returnFalse;
          this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
          this.currentTarget = src.currentTarget;
          this.relatedTarget = src.relatedTarget;
        } else {
          this.type = src;
        }
        if (props) {
          jQuery2.extend(this, props);
        }
        this.timeStamp = src && src.timeStamp || Date.now();
        this[jQuery2.expando] = true;
      };
      jQuery2.Event.prototype = {
        constructor: jQuery2.Event,
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        isSimulated: false,
        preventDefault: function() {
          var e = this.originalEvent;
          this.isDefaultPrevented = returnTrue;
          if (e && !this.isSimulated) {
            e.preventDefault();
          }
        },
        stopPropagation: function() {
          var e = this.originalEvent;
          this.isPropagationStopped = returnTrue;
          if (e && !this.isSimulated) {
            e.stopPropagation();
          }
        },
        stopImmediatePropagation: function() {
          var e = this.originalEvent;
          this.isImmediatePropagationStopped = returnTrue;
          if (e && !this.isSimulated) {
            e.stopImmediatePropagation();
          }
          this.stopPropagation();
        }
      };
      jQuery2.each({
        altKey: true,
        bubbles: true,
        cancelable: true,
        changedTouches: true,
        ctrlKey: true,
        detail: true,
        eventPhase: true,
        metaKey: true,
        pageX: true,
        pageY: true,
        shiftKey: true,
        view: true,
        "char": true,
        code: true,
        charCode: true,
        key: true,
        keyCode: true,
        button: true,
        buttons: true,
        clientX: true,
        clientY: true,
        offsetX: true,
        offsetY: true,
        pointerId: true,
        pointerType: true,
        screenX: true,
        screenY: true,
        targetTouches: true,
        toElement: true,
        touches: true,
        which: true
      }, jQuery2.event.addProp);
      jQuery2.each({ focus: "focusin", blur: "focusout" }, function(type, delegateType) {
        function focusMappedHandler(nativeEvent) {
          if (document2.documentMode) {
            var handle = dataPriv.get(this, "handle"), event2 = jQuery2.event.fix(nativeEvent);
            event2.type = nativeEvent.type === "focusin" ? "focus" : "blur";
            event2.isSimulated = true;
            handle(nativeEvent);
            if (event2.target === event2.currentTarget) {
              handle(event2);
            }
          } else {
            jQuery2.event.simulate(
              delegateType,
              nativeEvent.target,
              jQuery2.event.fix(nativeEvent)
            );
          }
        }
        jQuery2.event.special[type] = {
          // Utilize native event if possible so blur/focus sequence is correct
          setup: function() {
            var attaches;
            leverageNative(this, type, true);
            if (document2.documentMode) {
              attaches = dataPriv.get(this, delegateType);
              if (!attaches) {
                this.addEventListener(delegateType, focusMappedHandler);
              }
              dataPriv.set(this, delegateType, (attaches || 0) + 1);
            } else {
              return false;
            }
          },
          trigger: function() {
            leverageNative(this, type);
            return true;
          },
          teardown: function() {
            var attaches;
            if (document2.documentMode) {
              attaches = dataPriv.get(this, delegateType) - 1;
              if (!attaches) {
                this.removeEventListener(delegateType, focusMappedHandler);
                dataPriv.remove(this, delegateType);
              } else {
                dataPriv.set(this, delegateType, attaches);
              }
            } else {
              return false;
            }
          },
          // Suppress native focus or blur if we're currently inside
          // a leveraged native-event stack
          _default: function(event2) {
            return dataPriv.get(event2.target, type);
          },
          delegateType
        };
        jQuery2.event.special[delegateType] = {
          setup: function() {
            var doc = this.ownerDocument || this.document || this, dataHolder = document2.documentMode ? this : doc, attaches = dataPriv.get(dataHolder, delegateType);
            if (!attaches) {
              if (document2.documentMode) {
                this.addEventListener(delegateType, focusMappedHandler);
              } else {
                doc.addEventListener(type, focusMappedHandler, true);
              }
            }
            dataPriv.set(dataHolder, delegateType, (attaches || 0) + 1);
          },
          teardown: function() {
            var doc = this.ownerDocument || this.document || this, dataHolder = document2.documentMode ? this : doc, attaches = dataPriv.get(dataHolder, delegateType) - 1;
            if (!attaches) {
              if (document2.documentMode) {
                this.removeEventListener(delegateType, focusMappedHandler);
              } else {
                doc.removeEventListener(type, focusMappedHandler, true);
              }
              dataPriv.remove(dataHolder, delegateType);
            } else {
              dataPriv.set(dataHolder, delegateType, attaches);
            }
          }
        };
      });
      jQuery2.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
      }, function(orig, fix) {
        jQuery2.event.special[orig] = {
          delegateType: fix,
          bindType: fix,
          handle: function(event2) {
            var ret, target = this, related = event2.relatedTarget, handleObj = event2.handleObj;
            if (!related || related !== target && !jQuery2.contains(target, related)) {
              event2.type = handleObj.origType;
              ret = handleObj.handler.apply(this, arguments);
              event2.type = fix;
            }
            return ret;
          }
        };
      });
      jQuery2.fn.extend({
        on: function(types, selector, data, fn) {
          return on(this, types, selector, data, fn);
        },
        one: function(types, selector, data, fn) {
          return on(this, types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
          var handleObj, type;
          if (types && types.preventDefault && types.handleObj) {
            handleObj = types.handleObj;
            jQuery2(types.delegateTarget).off(
              handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
              handleObj.selector,
              handleObj.handler
            );
            return this;
          }
          if (typeof types === "object") {
            for (type in types) {
              this.off(type, selector, types[type]);
            }
            return this;
          }
          if (selector === false || typeof selector === "function") {
            fn = selector;
            selector = void 0;
          }
          if (fn === false) {
            fn = returnFalse;
          }
          return this.each(function() {
            jQuery2.event.remove(this, types, fn, selector);
          });
        }
      });
      var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
      function manipulationTarget(elem, content) {
        if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
          return jQuery2(elem).children("tbody")[0] || elem;
        }
        return elem;
      }
      function disableScript(elem) {
        elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
        return elem;
      }
      function restoreScript(elem) {
        if ((elem.type || "").slice(0, 5) === "true/") {
          elem.type = elem.type.slice(5);
        } else {
          elem.removeAttribute("type");
        }
        return elem;
      }
      function cloneCopyEvent(src, dest) {
        var i, l, type, pdataOld, udataOld, udataCur, events;
        if (dest.nodeType !== 1) {
          return;
        }
        if (dataPriv.hasData(src)) {
          pdataOld = dataPriv.get(src);
          events = pdataOld.events;
          if (events) {
            dataPriv.remove(dest, "handle events");
            for (type in events) {
              for (i = 0, l = events[type].length; i < l; i++) {
                jQuery2.event.add(dest, type, events[type][i]);
              }
            }
          }
        }
        if (dataUser.hasData(src)) {
          udataOld = dataUser.access(src);
          udataCur = jQuery2.extend({}, udataOld);
          dataUser.set(dest, udataCur);
        }
      }
      function fixInput(src, dest) {
        var nodeName2 = dest.nodeName.toLowerCase();
        if (nodeName2 === "input" && rcheckableType.test(src.type)) {
          dest.checked = src.checked;
        } else if (nodeName2 === "input" || nodeName2 === "textarea") {
          dest.defaultValue = src.defaultValue;
        }
      }
      function domManip(collection, args, callback, ignored) {
        args = flat(args);
        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
        if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
          return collection.each(function(index) {
            var self = collection.eq(index);
            if (valueIsFunction) {
              args[0] = value.call(this, index, self.html());
            }
            domManip(self, args, callback, ignored);
          });
        }
        if (l) {
          fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
          first = fragment.firstChild;
          if (fragment.childNodes.length === 1) {
            fragment = first;
          }
          if (first || ignored) {
            scripts = jQuery2.map(getAll(fragment, "script"), disableScript);
            hasScripts = scripts.length;
            for (; i < l; i++) {
              node = fragment;
              if (i !== iNoClone) {
                node = jQuery2.clone(node, true, true);
                if (hasScripts) {
                  jQuery2.merge(scripts, getAll(node, "script"));
                }
              }
              callback.call(collection[i], node, i);
            }
            if (hasScripts) {
              doc = scripts[scripts.length - 1].ownerDocument;
              jQuery2.map(scripts, restoreScript);
              for (i = 0; i < hasScripts; i++) {
                node = scripts[i];
                if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery2.contains(doc, node)) {
                  if (node.src && (node.type || "").toLowerCase() !== "module") {
                    if (jQuery2._evalUrl && !node.noModule) {
                      jQuery2._evalUrl(node.src, {
                        nonce: node.nonce || node.getAttribute("nonce")
                      }, doc);
                    }
                  } else {
                    DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                  }
                }
              }
            }
          }
        }
        return collection;
      }
      function remove(elem, selector, keepData) {
        var node, nodes = selector ? jQuery2.filter(selector, elem) : elem, i = 0;
        for (; (node = nodes[i]) != null; i++) {
          if (!keepData && node.nodeType === 1) {
            jQuery2.cleanData(getAll(node));
          }
          if (node.parentNode) {
            if (keepData && isAttached(node)) {
              setGlobalEval(getAll(node, "script"));
            }
            node.parentNode.removeChild(node);
          }
        }
        return elem;
      }
      jQuery2.extend({
        htmlPrefilter: function(html) {
          return html;
        },
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
          var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
          if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery2.isXMLDoc(elem)) {
            destElements = getAll(clone);
            srcElements = getAll(elem);
            for (i = 0, l = srcElements.length; i < l; i++) {
              fixInput(srcElements[i], destElements[i]);
            }
          }
          if (dataAndEvents) {
            if (deepDataAndEvents) {
              srcElements = srcElements || getAll(elem);
              destElements = destElements || getAll(clone);
              for (i = 0, l = srcElements.length; i < l; i++) {
                cloneCopyEvent(srcElements[i], destElements[i]);
              }
            } else {
              cloneCopyEvent(elem, clone);
            }
          }
          destElements = getAll(clone, "script");
          if (destElements.length > 0) {
            setGlobalEval(destElements, !inPage && getAll(elem, "script"));
          }
          return clone;
        },
        cleanData: function(elems) {
          var data, elem, type, special = jQuery2.event.special, i = 0;
          for (; (elem = elems[i]) !== void 0; i++) {
            if (acceptData(elem)) {
              if (data = elem[dataPriv.expando]) {
                if (data.events) {
                  for (type in data.events) {
                    if (special[type]) {
                      jQuery2.event.remove(elem, type);
                    } else {
                      jQuery2.removeEvent(elem, type, data.handle);
                    }
                  }
                }
                elem[dataPriv.expando] = void 0;
              }
              if (elem[dataUser.expando]) {
                elem[dataUser.expando] = void 0;
              }
            }
          }
        }
      });
      jQuery2.fn.extend({
        detach: function(selector) {
          return remove(this, selector, true);
        },
        remove: function(selector) {
          return remove(this, selector);
        },
        text: function(value) {
          return access(this, function(value2) {
            return value2 === void 0 ? jQuery2.text(this) : this.empty().each(function() {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                this.textContent = value2;
              }
            });
          }, null, value, arguments.length);
        },
        append: function() {
          return domManip(this, arguments, function(elem) {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
              var target = manipulationTarget(this, elem);
              target.appendChild(elem);
            }
          });
        },
        prepend: function() {
          return domManip(this, arguments, function(elem) {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
              var target = manipulationTarget(this, elem);
              target.insertBefore(elem, target.firstChild);
            }
          });
        },
        before: function() {
          return domManip(this, arguments, function(elem) {
            if (this.parentNode) {
              this.parentNode.insertBefore(elem, this);
            }
          });
        },
        after: function() {
          return domManip(this, arguments, function(elem) {
            if (this.parentNode) {
              this.parentNode.insertBefore(elem, this.nextSibling);
            }
          });
        },
        empty: function() {
          var elem, i = 0;
          for (; (elem = this[i]) != null; i++) {
            if (elem.nodeType === 1) {
              jQuery2.cleanData(getAll(elem, false));
              elem.textContent = "";
            }
          }
          return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
          dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
          deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
          return this.map(function() {
            return jQuery2.clone(this, dataAndEvents, deepDataAndEvents);
          });
        },
        html: function(value) {
          return access(this, function(value2) {
            var elem = this[0] || {}, i = 0, l = this.length;
            if (value2 === void 0 && elem.nodeType === 1) {
              return elem.innerHTML;
            }
            if (typeof value2 === "string" && !rnoInnerhtml.test(value2) && !wrapMap[(rtagName.exec(value2) || ["", ""])[1].toLowerCase()]) {
              value2 = jQuery2.htmlPrefilter(value2);
              try {
                for (; i < l; i++) {
                  elem = this[i] || {};
                  if (elem.nodeType === 1) {
                    jQuery2.cleanData(getAll(elem, false));
                    elem.innerHTML = value2;
                  }
                }
                elem = 0;
              } catch (e) {
              }
            }
            if (elem) {
              this.empty().append(value2);
            }
          }, null, value, arguments.length);
        },
        replaceWith: function() {
          var ignored = [];
          return domManip(this, arguments, function(elem) {
            var parent = this.parentNode;
            if (jQuery2.inArray(this, ignored) < 0) {
              jQuery2.cleanData(getAll(this));
              if (parent) {
                parent.replaceChild(elem, this);
              }
            }
          }, ignored);
        }
      });
      jQuery2.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
      }, function(name, original) {
        jQuery2.fn[name] = function(selector) {
          var elems, ret = [], insert = jQuery2(selector), last = insert.length - 1, i = 0;
          for (; i <= last; i++) {
            elems = i === last ? this : this.clone(true);
            jQuery2(insert[i])[original](elems);
            push.apply(ret, elems.get());
          }
          return this.pushStack(ret);
        };
      });
      var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
      var rcustomProp = /^--/;
      var getStyles = function(elem) {
        var view = elem.ownerDocument.defaultView;
        if (!view || !view.opener) {
          view = window2;
        }
        return view.getComputedStyle(elem);
      };
      var swap = function(elem, options, callback) {
        var ret, name, old = {};
        for (name in options) {
          old[name] = elem.style[name];
          elem.style[name] = options[name];
        }
        ret = callback.call(elem);
        for (name in options) {
          elem.style[name] = old[name];
        }
        return ret;
      };
      var rboxStyle = new RegExp(cssExpand.join("|"), "i");
      (function() {
        function computeStyleTests() {
          if (!div) {
            return;
          }
          container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
          div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
          documentElement.appendChild(container).appendChild(div);
          var divStyle = window2.getComputedStyle(div);
          pixelPositionVal = divStyle.top !== "1%";
          reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
          div.style.right = "60%";
          pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
          boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
          div.style.position = "absolute";
          scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
          documentElement.removeChild(container);
          div = null;
        }
        function roundPixelMeasures(measure) {
          return Math.round(parseFloat(measure));
        }
        var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document2.createElement("div"), div = document2.createElement("div");
        if (!div.style) {
          return;
        }
        div.style.backgroundClip = "content-box";
        div.cloneNode(true).style.backgroundClip = "";
        support.clearCloneStyle = div.style.backgroundClip === "content-box";
        jQuery2.extend(support, {
          boxSizingReliable: function() {
            computeStyleTests();
            return boxSizingReliableVal;
          },
          pixelBoxStyles: function() {
            computeStyleTests();
            return pixelBoxStylesVal;
          },
          pixelPosition: function() {
            computeStyleTests();
            return pixelPositionVal;
          },
          reliableMarginLeft: function() {
            computeStyleTests();
            return reliableMarginLeftVal;
          },
          scrollboxSize: function() {
            computeStyleTests();
            return scrollboxSizeVal;
          },
          // Support: IE 9 - 11+, Edge 15 - 18+
          // IE/Edge misreport `getComputedStyle` of table rows with width/height
          // set in CSS while `offset*` properties report correct values.
          // Behavior in IE 9 is more subtle than in newer versions & it passes
          // some versions of this test; make sure not to make it pass there!
          //
          // Support: Firefox 70+
          // Only Firefox includes border widths
          // in computed dimensions. (gh-4529)
          reliableTrDimensions: function() {
            var table, tr, trChild, trStyle;
            if (reliableTrDimensionsVal == null) {
              table = document2.createElement("table");
              tr = document2.createElement("tr");
              trChild = document2.createElement("div");
              table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
              tr.style.cssText = "box-sizing:content-box;border:1px solid";
              tr.style.height = "1px";
              trChild.style.height = "9px";
              trChild.style.display = "block";
              documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
              trStyle = window2.getComputedStyle(tr);
              reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
              documentElement.removeChild(table);
            }
            return reliableTrDimensionsVal;
          }
        });
      })();
      function curCSS(elem, name, computed) {
        var width, minWidth, maxWidth, ret, isCustomProp = rcustomProp.test(name), style = elem.style;
        computed = computed || getStyles(elem);
        if (computed) {
          ret = computed.getPropertyValue(name) || computed[name];
          if (isCustomProp && ret) {
            ret = ret.replace(rtrimCSS, "$1") || void 0;
          }
          if (ret === "" && !isAttached(elem)) {
            ret = jQuery2.style(elem, name);
          }
          if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
            width = style.width;
            minWidth = style.minWidth;
            maxWidth = style.maxWidth;
            style.minWidth = style.maxWidth = style.width = ret;
            ret = computed.width;
            style.width = width;
            style.minWidth = minWidth;
            style.maxWidth = maxWidth;
          }
        }
        return ret !== void 0 ? (
          // Support: IE <=9 - 11 only
          // IE returns zIndex value as an integer.
          ret + ""
        ) : ret;
      }
      function addGetHookIf(conditionFn, hookFn) {
        return {
          get: function() {
            if (conditionFn()) {
              delete this.get;
              return;
            }
            return (this.get = hookFn).apply(this, arguments);
          }
        };
      }
      var cssPrefixes = ["Webkit", "Moz", "ms"], emptyStyle = document2.createElement("div").style, vendorProps = {};
      function vendorPropName(name) {
        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;
        while (i--) {
          name = cssPrefixes[i] + capName;
          if (name in emptyStyle) {
            return name;
          }
        }
      }
      function finalPropName(name) {
        var final = jQuery2.cssProps[name] || vendorProps[name];
        if (final) {
          return final;
        }
        if (name in emptyStyle) {
          return name;
        }
        return vendorProps[name] = vendorPropName(name) || name;
      }
      var rdisplayswap = /^(none|table(?!-c[ea]).+)/, cssShow = { position: "absolute", visibility: "hidden", display: "block" }, cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
      };
      function setPositiveNumber(_elem, value, subtract) {
        var matches = rcssNum.exec(value);
        return matches ? (
          // Guard against undefined "subtract", e.g., when used as in cssHooks
          Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px")
        ) : value;
      }
      function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
        var i = dimension === "width" ? 1 : 0, extra = 0, delta = 0, marginDelta = 0;
        if (box === (isBorderBox ? "border" : "content")) {
          return 0;
        }
        for (; i < 4; i += 2) {
          if (box === "margin") {
            marginDelta += jQuery2.css(elem, box + cssExpand[i], true, styles);
          }
          if (!isBorderBox) {
            delta += jQuery2.css(elem, "padding" + cssExpand[i], true, styles);
            if (box !== "padding") {
              delta += jQuery2.css(elem, "border" + cssExpand[i] + "Width", true, styles);
            } else {
              extra += jQuery2.css(elem, "border" + cssExpand[i] + "Width", true, styles);
            }
          } else {
            if (box === "content") {
              delta -= jQuery2.css(elem, "padding" + cssExpand[i], true, styles);
            }
            if (box !== "margin") {
              delta -= jQuery2.css(elem, "border" + cssExpand[i] + "Width", true, styles);
            }
          }
        }
        if (!isBorderBox && computedVal >= 0) {
          delta += Math.max(0, Math.ceil(
            elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5
            // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
            // Use an explicit zero to avoid NaN (gh-3964)
          )) || 0;
        }
        return delta + marginDelta;
      }
      function getWidthOrHeight(elem, dimension, extra) {
        var styles = getStyles(elem), boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
        if (rnumnonpx.test(val)) {
          if (!extra) {
            return val;
          }
          val = "auto";
        }
        if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
        // IE/Edge misreport `getComputedStyle` of table rows with width/height
        // set in CSS while `offset*` properties report correct values.
        // Interestingly, in some cases IE 9 doesn't suffer from this issue.
        !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
        // This happens for inline elements with no explicit setting (gh-3571)
        val === "auto" || // Support: Android <=4.1 - 4.3 only
        // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
        !parseFloat(val) && jQuery2.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
        elem.getClientRects().length) {
          isBorderBox = jQuery2.css(elem, "boxSizing", false, styles) === "border-box";
          valueIsBorderBox = offsetProp in elem;
          if (valueIsBorderBox) {
            val = elem[offsetProp];
          }
        }
        val = parseFloat(val) || 0;
        return val + boxModelAdjustment(
          elem,
          dimension,
          extra || (isBorderBox ? "border" : "content"),
          valueIsBorderBox,
          styles,
          // Provide the current computed size to request scroll gutter calculation (gh-3589)
          val
        ) + "px";
      }
      jQuery2.extend({
        // Add in style property hooks for overriding the default
        // behavior of getting and setting a style property
        cssHooks: {
          opacity: {
            get: function(elem, computed) {
              if (computed) {
                var ret = curCSS(elem, "opacity");
                return ret === "" ? "1" : ret;
              }
            }
          }
        },
        // Don't automatically add "px" to these possibly-unitless properties
        cssNumber: {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageSlice: true,
          columnCount: true,
          flexGrow: true,
          flexShrink: true,
          fontWeight: true,
          gridArea: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnStart: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowStart: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          scale: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeMiterlimit: true,
          strokeOpacity: true
        },
        // Add in properties whose names you wish to fix before
        // setting or getting the value
        cssProps: {},
        // Get and set the style property on a DOM Node
        style: function(elem, name, value, extra) {
          if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
            return;
          }
          var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
          if (!isCustomProp) {
            name = finalPropName(origName);
          }
          hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
          if (value !== void 0) {
            type = typeof value;
            if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
              value = adjustCSS(elem, name, ret);
              type = "number";
            }
            if (value == null || value !== value) {
              return;
            }
            if (type === "number" && !isCustomProp) {
              value += ret && ret[3] || (jQuery2.cssNumber[origName] ? "" : "px");
            }
            if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
              style[name] = "inherit";
            }
            if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== void 0) {
              if (isCustomProp) {
                style.setProperty(name, value);
              } else {
                style[name] = value;
              }
            }
          } else {
            if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== void 0) {
              return ret;
            }
            return style[name];
          }
        },
        css: function(elem, name, extra, styles) {
          var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
          if (!isCustomProp) {
            name = finalPropName(origName);
          }
          hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
          if (hooks && "get" in hooks) {
            val = hooks.get(elem, true, extra);
          }
          if (val === void 0) {
            val = curCSS(elem, name, styles);
          }
          if (val === "normal" && name in cssNormalTransform) {
            val = cssNormalTransform[name];
          }
          if (extra === "" || extra) {
            num = parseFloat(val);
            return extra === true || isFinite(num) ? num || 0 : val;
          }
          return val;
        }
      });
      jQuery2.each(["height", "width"], function(_i, dimension) {
        jQuery2.cssHooks[dimension] = {
          get: function(elem, computed, extra) {
            if (computed) {
              return rdisplayswap.test(jQuery2.css(elem, "display")) && // Support: Safari 8+
              // Table columns in Safari have non-zero offsetWidth & zero
              // getBoundingClientRect().width unless display is changed.
              // Support: IE <=11 only
              // Running getBoundingClientRect on a disconnected node
              // in IE throws an error.
              (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                return getWidthOrHeight(elem, dimension, extra);
              }) : getWidthOrHeight(elem, dimension, extra);
            }
          },
          set: function(elem, value, extra) {
            var matches, styles = getStyles(elem), scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute", boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(
              elem,
              dimension,
              extra,
              isBorderBox,
              styles
            ) : 0;
            if (isBorderBox && scrollboxSizeBuggy) {
              subtract -= Math.ceil(
                elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5
              );
            }
            if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
              elem.style[dimension] = value;
              value = jQuery2.css(elem, dimension);
            }
            return setPositiveNumber(elem, value, subtract);
          }
        };
      });
      jQuery2.cssHooks.marginLeft = addGetHookIf(
        support.reliableMarginLeft,
        function(elem, computed) {
          if (computed) {
            return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function() {
              return elem.getBoundingClientRect().left;
            })) + "px";
          }
        }
      );
      jQuery2.each({
        margin: "",
        padding: "",
        border: "Width"
      }, function(prefix, suffix) {
        jQuery2.cssHooks[prefix + suffix] = {
          expand: function(value) {
            var i = 0, expanded = {}, parts = typeof value === "string" ? value.split(" ") : [value];
            for (; i < 4; i++) {
              expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
            }
            return expanded;
          }
        };
        if (prefix !== "margin") {
          jQuery2.cssHooks[prefix + suffix].set = setPositiveNumber;
        }
      });
      jQuery2.fn.extend({
        css: function(name, value) {
          return access(this, function(elem, name2, value2) {
            var styles, len, map = {}, i = 0;
            if (Array.isArray(name2)) {
              styles = getStyles(elem);
              len = name2.length;
              for (; i < len; i++) {
                map[name2[i]] = jQuery2.css(elem, name2[i], false, styles);
              }
              return map;
            }
            return value2 !== void 0 ? jQuery2.style(elem, name2, value2) : jQuery2.css(elem, name2);
          }, name, value, arguments.length > 1);
        }
      });
      function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
      }
      jQuery2.Tween = Tween;
      Tween.prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
          this.elem = elem;
          this.prop = prop;
          this.easing = easing || jQuery2.easing._default;
          this.options = options;
          this.start = this.now = this.cur();
          this.end = end;
          this.unit = unit || (jQuery2.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
          var hooks = Tween.propHooks[this.prop];
          return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function(percent) {
          var eased, hooks = Tween.propHooks[this.prop];
          if (this.options.duration) {
            this.pos = eased = jQuery2.easing[this.easing](
              percent,
              this.options.duration * percent,
              0,
              1,
              this.options.duration
            );
          } else {
            this.pos = eased = percent;
          }
          this.now = (this.end - this.start) * eased + this.start;
          if (this.options.step) {
            this.options.step.call(this.elem, this.now, this);
          }
          if (hooks && hooks.set) {
            hooks.set(this);
          } else {
            Tween.propHooks._default.set(this);
          }
          return this;
        }
      };
      Tween.prototype.init.prototype = Tween.prototype;
      Tween.propHooks = {
        _default: {
          get: function(tween) {
            var result;
            if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
              return tween.elem[tween.prop];
            }
            result = jQuery2.css(tween.elem, tween.prop, "");
            return !result || result === "auto" ? 0 : result;
          },
          set: function(tween) {
            if (jQuery2.fx.step[tween.prop]) {
              jQuery2.fx.step[tween.prop](tween);
            } else if (tween.elem.nodeType === 1 && (jQuery2.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
              jQuery2.style(tween.elem, tween.prop, tween.now + tween.unit);
            } else {
              tween.elem[tween.prop] = tween.now;
            }
          }
        }
      };
      Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
          if (tween.elem.nodeType && tween.elem.parentNode) {
            tween.elem[tween.prop] = tween.now;
          }
        }
      };
      jQuery2.easing = {
        linear: function(p) {
          return p;
        },
        swing: function(p) {
          return 0.5 - Math.cos(p * Math.PI) / 2;
        },
        _default: "swing"
      };
      jQuery2.fx = Tween.prototype.init;
      jQuery2.fx.step = {};
      var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
      function schedule() {
        if (inProgress) {
          if (document2.hidden === false && window2.requestAnimationFrame) {
            window2.requestAnimationFrame(schedule);
          } else {
            window2.setTimeout(schedule, jQuery2.fx.interval);
          }
          jQuery2.fx.tick();
        }
      }
      function createFxNow() {
        window2.setTimeout(function() {
          fxNow = void 0;
        });
        return fxNow = Date.now();
      }
      function genFx(type, includeWidth) {
        var which, i = 0, attrs = { height: type };
        includeWidth = includeWidth ? 1 : 0;
        for (; i < 4; i += 2 - includeWidth) {
          which = cssExpand[i];
          attrs["margin" + which] = attrs["padding" + which] = type;
        }
        if (includeWidth) {
          attrs.opacity = attrs.width = type;
        }
        return attrs;
      }
      function createTween(value, prop, animation) {
        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length;
        for (; index < length; index++) {
          if (tween = collection[index].call(animation, prop, value)) {
            return tween;
          }
        }
      }
      function defaultPrefilter(elem, props, opts) {
        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
        if (!opts.queue) {
          hooks = jQuery2._queueHooks(elem, "fx");
          if (hooks.unqueued == null) {
            hooks.unqueued = 0;
            oldfire = hooks.empty.fire;
            hooks.empty.fire = function() {
              if (!hooks.unqueued) {
                oldfire();
              }
            };
          }
          hooks.unqueued++;
          anim.always(function() {
            anim.always(function() {
              hooks.unqueued--;
              if (!jQuery2.queue(elem, "fx").length) {
                hooks.empty.fire();
              }
            });
          });
        }
        for (prop in props) {
          value = props[prop];
          if (rfxtypes.test(value)) {
            delete props[prop];
            toggle = toggle || value === "toggle";
            if (value === (hidden ? "hide" : "show")) {
              if (value === "show" && dataShow && dataShow[prop] !== void 0) {
                hidden = true;
              } else {
                continue;
              }
            }
            orig[prop] = dataShow && dataShow[prop] || jQuery2.style(elem, prop);
          }
        }
        propTween = !jQuery2.isEmptyObject(props);
        if (!propTween && jQuery2.isEmptyObject(orig)) {
          return;
        }
        if (isBox && elem.nodeType === 1) {
          opts.overflow = [style.overflow, style.overflowX, style.overflowY];
          restoreDisplay = dataShow && dataShow.display;
          if (restoreDisplay == null) {
            restoreDisplay = dataPriv.get(elem, "display");
          }
          display = jQuery2.css(elem, "display");
          if (display === "none") {
            if (restoreDisplay) {
              display = restoreDisplay;
            } else {
              showHide([elem], true);
              restoreDisplay = elem.style.display || restoreDisplay;
              display = jQuery2.css(elem, "display");
              showHide([elem]);
            }
          }
          if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
            if (jQuery2.css(elem, "float") === "none") {
              if (!propTween) {
                anim.done(function() {
                  style.display = restoreDisplay;
                });
                if (restoreDisplay == null) {
                  display = style.display;
                  restoreDisplay = display === "none" ? "" : display;
                }
              }
              style.display = "inline-block";
            }
          }
        }
        if (opts.overflow) {
          style.overflow = "hidden";
          anim.always(function() {
            style.overflow = opts.overflow[0];
            style.overflowX = opts.overflow[1];
            style.overflowY = opts.overflow[2];
          });
        }
        propTween = false;
        for (prop in orig) {
          if (!propTween) {
            if (dataShow) {
              if ("hidden" in dataShow) {
                hidden = dataShow.hidden;
              }
            } else {
              dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay });
            }
            if (toggle) {
              dataShow.hidden = !hidden;
            }
            if (hidden) {
              showHide([elem], true);
            }
            anim.done(function() {
              if (!hidden) {
                showHide([elem]);
              }
              dataPriv.remove(elem, "fxshow");
              for (prop in orig) {
                jQuery2.style(elem, prop, orig[prop]);
              }
            });
          }
          propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
          if (!(prop in dataShow)) {
            dataShow[prop] = propTween.start;
            if (hidden) {
              propTween.end = propTween.start;
              propTween.start = 0;
            }
          }
        }
      }
      function propFilter(props, specialEasing) {
        var index, name, easing, value, hooks;
        for (index in props) {
          name = camelCase(index);
          easing = specialEasing[name];
          value = props[index];
          if (Array.isArray(value)) {
            easing = value[1];
            value = props[index] = value[0];
          }
          if (index !== name) {
            props[name] = value;
            delete props[index];
          }
          hooks = jQuery2.cssHooks[name];
          if (hooks && "expand" in hooks) {
            value = hooks.expand(value);
            delete props[name];
            for (index in value) {
              if (!(index in props)) {
                props[index] = value[index];
                specialEasing[index] = easing;
              }
            }
          } else {
            specialEasing[name] = easing;
          }
        }
      }
      function Animation(elem, properties, options) {
        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery2.Deferred().always(function() {
          delete tick.elem;
        }), tick = function() {
          if (stopped) {
            return false;
          }
          var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index2 = 0, length2 = animation.tweens.length;
          for (; index2 < length2; index2++) {
            animation.tweens[index2].run(percent);
          }
          deferred.notifyWith(elem, [animation, percent, remaining]);
          if (percent < 1 && length2) {
            return remaining;
          }
          if (!length2) {
            deferred.notifyWith(elem, [animation, 1, 0]);
          }
          deferred.resolveWith(elem, [animation]);
          return false;
        }, animation = deferred.promise({
          elem,
          props: jQuery2.extend({}, properties),
          opts: jQuery2.extend(true, {
            specialEasing: {},
            easing: jQuery2.easing._default
          }, options),
          originalProperties: properties,
          originalOptions: options,
          startTime: fxNow || createFxNow(),
          duration: options.duration,
          tweens: [],
          createTween: function(prop, end) {
            var tween = jQuery2.Tween(
              elem,
              animation.opts,
              prop,
              end,
              animation.opts.specialEasing[prop] || animation.opts.easing
            );
            animation.tweens.push(tween);
            return tween;
          },
          stop: function(gotoEnd) {
            var index2 = 0, length2 = gotoEnd ? animation.tweens.length : 0;
            if (stopped) {
              return this;
            }
            stopped = true;
            for (; index2 < length2; index2++) {
              animation.tweens[index2].run(1);
            }
            if (gotoEnd) {
              deferred.notifyWith(elem, [animation, 1, 0]);
              deferred.resolveWith(elem, [animation, gotoEnd]);
            } else {
              deferred.rejectWith(elem, [animation, gotoEnd]);
            }
            return this;
          }
        }), props = animation.props;
        propFilter(props, animation.opts.specialEasing);
        for (; index < length; index++) {
          result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
          if (result) {
            if (isFunction(result.stop)) {
              jQuery2._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
            }
            return result;
          }
        }
        jQuery2.map(props, createTween, animation);
        if (isFunction(animation.opts.start)) {
          animation.opts.start.call(elem, animation);
        }
        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
        jQuery2.fx.timer(
          jQuery2.extend(tick, {
            elem,
            anim: animation,
            queue: animation.opts.queue
          })
        );
        return animation;
      }
      jQuery2.Animation = jQuery2.extend(Animation, {
        tweeners: {
          "*": [function(prop, value) {
            var tween = this.createTween(prop, value);
            adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
            return tween;
          }]
        },
        tweener: function(props, callback) {
          if (isFunction(props)) {
            callback = props;
            props = ["*"];
          } else {
            props = props.match(rnothtmlwhite);
          }
          var prop, index = 0, length = props.length;
          for (; index < length; index++) {
            prop = props[index];
            Animation.tweeners[prop] = Animation.tweeners[prop] || [];
            Animation.tweeners[prop].unshift(callback);
          }
        },
        prefilters: [defaultPrefilter],
        prefilter: function(callback, prepend) {
          if (prepend) {
            Animation.prefilters.unshift(callback);
          } else {
            Animation.prefilters.push(callback);
          }
        }
      });
      jQuery2.speed = function(speed, easing, fn) {
        var opt = speed && typeof speed === "object" ? jQuery2.extend({}, speed) : {
          complete: fn || !fn && easing || isFunction(speed) && speed,
          duration: speed,
          easing: fn && easing || easing && !isFunction(easing) && easing
        };
        if (jQuery2.fx.off) {
          opt.duration = 0;
        } else {
          if (typeof opt.duration !== "number") {
            if (opt.duration in jQuery2.fx.speeds) {
              opt.duration = jQuery2.fx.speeds[opt.duration];
            } else {
              opt.duration = jQuery2.fx.speeds._default;
            }
          }
        }
        if (opt.queue == null || opt.queue === true) {
          opt.queue = "fx";
        }
        opt.old = opt.complete;
        opt.complete = function() {
          if (isFunction(opt.old)) {
            opt.old.call(this);
          }
          if (opt.queue) {
            jQuery2.dequeue(this, opt.queue);
          }
        };
        return opt;
      };
      jQuery2.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
          return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({ opacity: to }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
          var empty = jQuery2.isEmptyObject(prop), optall = jQuery2.speed(speed, easing, callback), doAnimation = function() {
            var anim = Animation(this, jQuery2.extend({}, prop), optall);
            if (empty || dataPriv.get(this, "finish")) {
              anim.stop(true);
            }
          };
          doAnimation.finish = doAnimation;
          return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
          var stopQueue = function(hooks) {
            var stop = hooks.stop;
            delete hooks.stop;
            stop(gotoEnd);
          };
          if (typeof type !== "string") {
            gotoEnd = clearQueue;
            clearQueue = type;
            type = void 0;
          }
          if (clearQueue) {
            this.queue(type || "fx", []);
          }
          return this.each(function() {
            var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery2.timers, data = dataPriv.get(this);
            if (index) {
              if (data[index] && data[index].stop) {
                stopQueue(data[index]);
              }
            } else {
              for (index in data) {
                if (data[index] && data[index].stop && rrun.test(index)) {
                  stopQueue(data[index]);
                }
              }
            }
            for (index = timers.length; index--; ) {
              if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                timers[index].anim.stop(gotoEnd);
                dequeue = false;
                timers.splice(index, 1);
              }
            }
            if (dequeue || !gotoEnd) {
              jQuery2.dequeue(this, type);
            }
          });
        },
        finish: function(type) {
          if (type !== false) {
            type = type || "fx";
          }
          return this.each(function() {
            var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery2.timers, length = queue ? queue.length : 0;
            data.finish = true;
            jQuery2.queue(this, type, []);
            if (hooks && hooks.stop) {
              hooks.stop.call(this, true);
            }
            for (index = timers.length; index--; ) {
              if (timers[index].elem === this && timers[index].queue === type) {
                timers[index].anim.stop(true);
                timers.splice(index, 1);
              }
            }
            for (index = 0; index < length; index++) {
              if (queue[index] && queue[index].finish) {
                queue[index].finish.call(this);
              }
            }
            delete data.finish;
          });
        }
      });
      jQuery2.each(["toggle", "show", "hide"], function(_i, name) {
        var cssFn = jQuery2.fn[name];
        jQuery2.fn[name] = function(speed, easing, callback) {
          return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
        };
      });
      jQuery2.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: { opacity: "show" },
        fadeOut: { opacity: "hide" },
        fadeToggle: { opacity: "toggle" }
      }, function(name, props) {
        jQuery2.fn[name] = function(speed, easing, callback) {
          return this.animate(props, speed, easing, callback);
        };
      });
      jQuery2.timers = [];
      jQuery2.fx.tick = function() {
        var timer, i = 0, timers = jQuery2.timers;
        fxNow = Date.now();
        for (; i < timers.length; i++) {
          timer = timers[i];
          if (!timer() && timers[i] === timer) {
            timers.splice(i--, 1);
          }
        }
        if (!timers.length) {
          jQuery2.fx.stop();
        }
        fxNow = void 0;
      };
      jQuery2.fx.timer = function(timer) {
        jQuery2.timers.push(timer);
        jQuery2.fx.start();
      };
      jQuery2.fx.interval = 13;
      jQuery2.fx.start = function() {
        if (inProgress) {
          return;
        }
        inProgress = true;
        schedule();
      };
      jQuery2.fx.stop = function() {
        inProgress = null;
      };
      jQuery2.fx.speeds = {
        slow: 600,
        fast: 200,
        // Default speed
        _default: 400
      };
      jQuery2.fn.delay = function(time, type) {
        time = jQuery2.fx ? jQuery2.fx.speeds[time] || time : time;
        type = type || "fx";
        return this.queue(type, function(next, hooks) {
          var timeout = window2.setTimeout(next, time);
          hooks.stop = function() {
            window2.clearTimeout(timeout);
          };
        });
      };
      (function() {
        var input = document2.createElement("input"), select = document2.createElement("select"), opt = select.appendChild(document2.createElement("option"));
        input.type = "checkbox";
        support.checkOn = input.value !== "";
        support.optSelected = opt.selected;
        input = document2.createElement("input");
        input.value = "t";
        input.type = "radio";
        support.radioValue = input.value === "t";
      })();
      var boolHook, attrHandle = jQuery2.expr.attrHandle;
      jQuery2.fn.extend({
        attr: function(name, value) {
          return access(this, jQuery2.attr, name, value, arguments.length > 1);
        },
        removeAttr: function(name) {
          return this.each(function() {
            jQuery2.removeAttr(this, name);
          });
        }
      });
      jQuery2.extend({
        attr: function(elem, name, value) {
          var ret, hooks, nType = elem.nodeType;
          if (nType === 3 || nType === 8 || nType === 2) {
            return;
          }
          if (typeof elem.getAttribute === "undefined") {
            return jQuery2.prop(elem, name, value);
          }
          if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
            hooks = jQuery2.attrHooks[name.toLowerCase()] || (jQuery2.expr.match.bool.test(name) ? boolHook : void 0);
          }
          if (value !== void 0) {
            if (value === null) {
              jQuery2.removeAttr(elem, name);
              return;
            }
            if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
              return ret;
            }
            elem.setAttribute(name, value + "");
            return value;
          }
          if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
            return ret;
          }
          ret = jQuery2.find.attr(elem, name);
          return ret == null ? void 0 : ret;
        },
        attrHooks: {
          type: {
            set: function(elem, value) {
              if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
                var val = elem.value;
                elem.setAttribute("type", value);
                if (val) {
                  elem.value = val;
                }
                return value;
              }
            }
          }
        },
        removeAttr: function(elem, value) {
          var name, i = 0, attrNames = value && value.match(rnothtmlwhite);
          if (attrNames && elem.nodeType === 1) {
            while (name = attrNames[i++]) {
              elem.removeAttribute(name);
            }
          }
        }
      });
      boolHook = {
        set: function(elem, value, name) {
          if (value === false) {
            jQuery2.removeAttr(elem, name);
          } else {
            elem.setAttribute(name, name);
          }
          return name;
        }
      };
      jQuery2.each(jQuery2.expr.match.bool.source.match(/\w+/g), function(_i, name) {
        var getter = attrHandle[name] || jQuery2.find.attr;
        attrHandle[name] = function(elem, name2, isXML) {
          var ret, handle, lowercaseName = name2.toLowerCase();
          if (!isXML) {
            handle = attrHandle[lowercaseName];
            attrHandle[lowercaseName] = ret;
            ret = getter(elem, name2, isXML) != null ? lowercaseName : null;
            attrHandle[lowercaseName] = handle;
          }
          return ret;
        };
      });
      var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
      jQuery2.fn.extend({
        prop: function(name, value) {
          return access(this, jQuery2.prop, name, value, arguments.length > 1);
        },
        removeProp: function(name) {
          return this.each(function() {
            delete this[jQuery2.propFix[name] || name];
          });
        }
      });
      jQuery2.extend({
        prop: function(elem, name, value) {
          var ret, hooks, nType = elem.nodeType;
          if (nType === 3 || nType === 8 || nType === 2) {
            return;
          }
          if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
            name = jQuery2.propFix[name] || name;
            hooks = jQuery2.propHooks[name];
          }
          if (value !== void 0) {
            if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
              return ret;
            }
            return elem[name] = value;
          }
          if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
            return ret;
          }
          return elem[name];
        },
        propHooks: {
          tabIndex: {
            get: function(elem) {
              var tabindex = jQuery2.find.attr(elem, "tabindex");
              if (tabindex) {
                return parseInt(tabindex, 10);
              }
              if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
                return 0;
              }
              return -1;
            }
          }
        },
        propFix: {
          "for": "htmlFor",
          "class": "className"
        }
      });
      if (!support.optSelected) {
        jQuery2.propHooks.selected = {
          get: function(elem) {
            var parent = elem.parentNode;
            if (parent && parent.parentNode) {
              parent.parentNode.selectedIndex;
            }
            return null;
          },
          set: function(elem) {
            var parent = elem.parentNode;
            if (parent) {
              parent.selectedIndex;
              if (parent.parentNode) {
                parent.parentNode.selectedIndex;
              }
            }
          }
        };
      }
      jQuery2.each([
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable"
      ], function() {
        jQuery2.propFix[this.toLowerCase()] = this;
      });
      function stripAndCollapse(value) {
        var tokens = value.match(rnothtmlwhite) || [];
        return tokens.join(" ");
      }
      function getClass(elem) {
        return elem.getAttribute && elem.getAttribute("class") || "";
      }
      function classesToArray(value) {
        if (Array.isArray(value)) {
          return value;
        }
        if (typeof value === "string") {
          return value.match(rnothtmlwhite) || [];
        }
        return [];
      }
      jQuery2.fn.extend({
        addClass: function(value) {
          var classNames, cur, curValue, className, i, finalValue;
          if (isFunction(value)) {
            return this.each(function(j) {
              jQuery2(this).addClass(value.call(this, j, getClass(this)));
            });
          }
          classNames = classesToArray(value);
          if (classNames.length) {
            return this.each(function() {
              curValue = getClass(this);
              cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
              if (cur) {
                for (i = 0; i < classNames.length; i++) {
                  className = classNames[i];
                  if (cur.indexOf(" " + className + " ") < 0) {
                    cur += className + " ";
                  }
                }
                finalValue = stripAndCollapse(cur);
                if (curValue !== finalValue) {
                  this.setAttribute("class", finalValue);
                }
              }
            });
          }
          return this;
        },
        removeClass: function(value) {
          var classNames, cur, curValue, className, i, finalValue;
          if (isFunction(value)) {
            return this.each(function(j) {
              jQuery2(this).removeClass(value.call(this, j, getClass(this)));
            });
          }
          if (!arguments.length) {
            return this.attr("class", "");
          }
          classNames = classesToArray(value);
          if (classNames.length) {
            return this.each(function() {
              curValue = getClass(this);
              cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
              if (cur) {
                for (i = 0; i < classNames.length; i++) {
                  className = classNames[i];
                  while (cur.indexOf(" " + className + " ") > -1) {
                    cur = cur.replace(" " + className + " ", " ");
                  }
                }
                finalValue = stripAndCollapse(cur);
                if (curValue !== finalValue) {
                  this.setAttribute("class", finalValue);
                }
              }
            });
          }
          return this;
        },
        toggleClass: function(value, stateVal) {
          var classNames, className, i, self, type = typeof value, isValidValue = type === "string" || Array.isArray(value);
          if (isFunction(value)) {
            return this.each(function(i2) {
              jQuery2(this).toggleClass(
                value.call(this, i2, getClass(this), stateVal),
                stateVal
              );
            });
          }
          if (typeof stateVal === "boolean" && isValidValue) {
            return stateVal ? this.addClass(value) : this.removeClass(value);
          }
          classNames = classesToArray(value);
          return this.each(function() {
            if (isValidValue) {
              self = jQuery2(this);
              for (i = 0; i < classNames.length; i++) {
                className = classNames[i];
                if (self.hasClass(className)) {
                  self.removeClass(className);
                } else {
                  self.addClass(className);
                }
              }
            } else if (value === void 0 || type === "boolean") {
              className = getClass(this);
              if (className) {
                dataPriv.set(this, "__className__", className);
              }
              if (this.setAttribute) {
                this.setAttribute(
                  "class",
                  className || value === false ? "" : dataPriv.get(this, "__className__") || ""
                );
              }
            }
          });
        },
        hasClass: function(selector) {
          var className, elem, i = 0;
          className = " " + selector + " ";
          while (elem = this[i++]) {
            if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
              return true;
            }
          }
          return false;
        }
      });
      var rreturn = /\r/g;
      jQuery2.fn.extend({
        val: function(value) {
          var hooks, ret, valueIsFunction, elem = this[0];
          if (!arguments.length) {
            if (elem) {
              hooks = jQuery2.valHooks[elem.type] || jQuery2.valHooks[elem.nodeName.toLowerCase()];
              if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== void 0) {
                return ret;
              }
              ret = elem.value;
              if (typeof ret === "string") {
                return ret.replace(rreturn, "");
              }
              return ret == null ? "" : ret;
            }
            return;
          }
          valueIsFunction = isFunction(value);
          return this.each(function(i) {
            var val;
            if (this.nodeType !== 1) {
              return;
            }
            if (valueIsFunction) {
              val = value.call(this, i, jQuery2(this).val());
            } else {
              val = value;
            }
            if (val == null) {
              val = "";
            } else if (typeof val === "number") {
              val += "";
            } else if (Array.isArray(val)) {
              val = jQuery2.map(val, function(value2) {
                return value2 == null ? "" : value2 + "";
              });
            }
            hooks = jQuery2.valHooks[this.type] || jQuery2.valHooks[this.nodeName.toLowerCase()];
            if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === void 0) {
              this.value = val;
            }
          });
        }
      });
      jQuery2.extend({
        valHooks: {
          option: {
            get: function(elem) {
              var val = jQuery2.find.attr(elem, "value");
              return val != null ? val : (
                // Support: IE <=10 - 11 only
                // option.text throws exceptions (trac-14686, trac-14858)
                // Strip and collapse whitespace
                // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                stripAndCollapse(jQuery2.text(elem))
              );
            }
          },
          select: {
            get: function(elem) {
              var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max = one ? index + 1 : options.length;
              if (index < 0) {
                i = max;
              } else {
                i = one ? index : 0;
              }
              for (; i < max; i++) {
                option = options[i];
                if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup
                !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                  value = jQuery2(option).val();
                  if (one) {
                    return value;
                  }
                  values.push(value);
                }
              }
              return values;
            },
            set: function(elem, value) {
              var optionSet, option, options = elem.options, values = jQuery2.makeArray(value), i = options.length;
              while (i--) {
                option = options[i];
                if (option.selected = jQuery2.inArray(jQuery2.valHooks.option.get(option), values) > -1) {
                  optionSet = true;
                }
              }
              if (!optionSet) {
                elem.selectedIndex = -1;
              }
              return values;
            }
          }
        }
      });
      jQuery2.each(["radio", "checkbox"], function() {
        jQuery2.valHooks[this] = {
          set: function(elem, value) {
            if (Array.isArray(value)) {
              return elem.checked = jQuery2.inArray(jQuery2(elem).val(), value) > -1;
            }
          }
        };
        if (!support.checkOn) {
          jQuery2.valHooks[this].get = function(elem) {
            return elem.getAttribute("value") === null ? "on" : elem.value;
          };
        }
      });
      var location2 = window2.location;
      var nonce = { guid: Date.now() };
      var rquery = /\?/;
      jQuery2.parseXML = function(data) {
        var xml, parserErrorElem;
        if (!data || typeof data !== "string") {
          return null;
        }
        try {
          xml = new window2.DOMParser().parseFromString(data, "text/xml");
        } catch (e) {
        }
        parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
        if (!xml || parserErrorElem) {
          jQuery2.error("Invalid XML: " + (parserErrorElem ? jQuery2.map(parserErrorElem.childNodes, function(el) {
            return el.textContent;
          }).join("\n") : data));
        }
        return xml;
      };
      var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e) {
        e.stopPropagation();
      };
      jQuery2.extend(jQuery2.event, {
        trigger: function(event2, data, elem, onlyHandlers) {
          var i, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [elem || document2], type = hasOwn.call(event2, "type") ? event2.type : event2, namespaces = hasOwn.call(event2, "namespace") ? event2.namespace.split(".") : [];
          cur = lastElement = tmp = elem = elem || document2;
          if (elem.nodeType === 3 || elem.nodeType === 8) {
            return;
          }
          if (rfocusMorph.test(type + jQuery2.event.triggered)) {
            return;
          }
          if (type.indexOf(".") > -1) {
            namespaces = type.split(".");
            type = namespaces.shift();
            namespaces.sort();
          }
          ontype = type.indexOf(":") < 0 && "on" + type;
          event2 = event2[jQuery2.expando] ? event2 : new jQuery2.Event(type, typeof event2 === "object" && event2);
          event2.isTrigger = onlyHandlers ? 2 : 3;
          event2.namespace = namespaces.join(".");
          event2.rnamespace = event2.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
          event2.result = void 0;
          if (!event2.target) {
            event2.target = elem;
          }
          data = data == null ? [event2] : jQuery2.makeArray(data, [event2]);
          special = jQuery2.event.special[type] || {};
          if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
            return;
          }
          if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
            bubbleType = special.delegateType || type;
            if (!rfocusMorph.test(bubbleType + type)) {
              cur = cur.parentNode;
            }
            for (; cur; cur = cur.parentNode) {
              eventPath.push(cur);
              tmp = cur;
            }
            if (tmp === (elem.ownerDocument || document2)) {
              eventPath.push(tmp.defaultView || tmp.parentWindow || window2);
            }
          }
          i = 0;
          while ((cur = eventPath[i++]) && !event2.isPropagationStopped()) {
            lastElement = cur;
            event2.type = i > 1 ? bubbleType : special.bindType || type;
            handle = (dataPriv.get(cur, "events") || /* @__PURE__ */ Object.create(null))[event2.type] && dataPriv.get(cur, "handle");
            if (handle) {
              handle.apply(cur, data);
            }
            handle = ontype && cur[ontype];
            if (handle && handle.apply && acceptData(cur)) {
              event2.result = handle.apply(cur, data);
              if (event2.result === false) {
                event2.preventDefault();
              }
            }
          }
          event2.type = type;
          if (!onlyHandlers && !event2.isDefaultPrevented()) {
            if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
              if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                tmp = elem[ontype];
                if (tmp) {
                  elem[ontype] = null;
                }
                jQuery2.event.triggered = type;
                if (event2.isPropagationStopped()) {
                  lastElement.addEventListener(type, stopPropagationCallback);
                }
                elem[type]();
                if (event2.isPropagationStopped()) {
                  lastElement.removeEventListener(type, stopPropagationCallback);
                }
                jQuery2.event.triggered = void 0;
                if (tmp) {
                  elem[ontype] = tmp;
                }
              }
            }
          }
          return event2.result;
        },
        // Piggyback on a donor event to simulate a different one
        // Used only for `focus(in | out)` events
        simulate: function(type, elem, event2) {
          var e = jQuery2.extend(
            new jQuery2.Event(),
            event2,
            {
              type,
              isSimulated: true
            }
          );
          jQuery2.event.trigger(e, null, elem);
        }
      });
      jQuery2.fn.extend({
        trigger: function(type, data) {
          return this.each(function() {
            jQuery2.event.trigger(type, data, this);
          });
        },
        triggerHandler: function(type, data) {
          var elem = this[0];
          if (elem) {
            return jQuery2.event.trigger(type, data, elem, true);
          }
        }
      });
      var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
      function buildParams(prefix, obj, traditional, add) {
        var name;
        if (Array.isArray(obj)) {
          jQuery2.each(obj, function(i, v) {
            if (traditional || rbracket.test(prefix)) {
              add(prefix, v);
            } else {
              buildParams(
                prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]",
                v,
                traditional,
                add
              );
            }
          });
        } else if (!traditional && toType(obj) === "object") {
          for (name in obj) {
            buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
          }
        } else {
          add(prefix, obj);
        }
      }
      jQuery2.param = function(a, traditional) {
        var prefix, s = [], add = function(key, valueOrFunction) {
          var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
          s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
        };
        if (a == null) {
          return "";
        }
        if (Array.isArray(a) || a.jquery && !jQuery2.isPlainObject(a)) {
          jQuery2.each(a, function() {
            add(this.name, this.value);
          });
        } else {
          for (prefix in a) {
            buildParams(prefix, a[prefix], traditional, add);
          }
        }
        return s.join("&");
      };
      jQuery2.fn.extend({
        serialize: function() {
          return jQuery2.param(this.serializeArray());
        },
        serializeArray: function() {
          return this.map(function() {
            var elements = jQuery2.prop(this, "elements");
            return elements ? jQuery2.makeArray(elements) : this;
          }).filter(function() {
            var type = this.type;
            return this.name && !jQuery2(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
          }).map(function(_i, elem) {
            var val = jQuery2(this).val();
            if (val == null) {
              return null;
            }
            if (Array.isArray(val)) {
              return jQuery2.map(val, function(val2) {
                return { name: elem.name, value: val2.replace(rCRLF, "\r\n") };
              });
            }
            return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
          }).get();
        }
      });
      var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document2.createElement("a");
      originAnchor.href = location2.href;
      function addToPrefiltersOrTransports(structure) {
        return function(dataTypeExpression, func) {
          if (typeof dataTypeExpression !== "string") {
            func = dataTypeExpression;
            dataTypeExpression = "*";
          }
          var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
          if (isFunction(func)) {
            while (dataType = dataTypes[i++]) {
              if (dataType[0] === "+") {
                dataType = dataType.slice(1) || "*";
                (structure[dataType] = structure[dataType] || []).unshift(func);
              } else {
                (structure[dataType] = structure[dataType] || []).push(func);
              }
            }
          }
        };
      }
      function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {}, seekingTransport = structure === transports;
        function inspect(dataType) {
          var selected;
          inspected[dataType] = true;
          jQuery2.each(structure[dataType] || [], function(_, prefilterOrFactory) {
            var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
            if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
              options.dataTypes.unshift(dataTypeOrTransport);
              inspect(dataTypeOrTransport);
              return false;
            } else if (seekingTransport) {
              return !(selected = dataTypeOrTransport);
            }
          });
          return selected;
        }
        return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
      }
      function ajaxExtend(target, src) {
        var key, deep, flatOptions = jQuery2.ajaxSettings.flatOptions || {};
        for (key in src) {
          if (src[key] !== void 0) {
            (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
          }
        }
        if (deep) {
          jQuery2.extend(true, target, deep);
        }
        return target;
      }
      function ajaxHandleResponses(s, jqXHR, responses) {
        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
        while (dataTypes[0] === "*") {
          dataTypes.shift();
          if (ct === void 0) {
            ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
          }
        }
        if (ct) {
          for (type in contents) {
            if (contents[type] && contents[type].test(ct)) {
              dataTypes.unshift(type);
              break;
            }
          }
        }
        if (dataTypes[0] in responses) {
          finalDataType = dataTypes[0];
        } else {
          for (type in responses) {
            if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
              finalDataType = type;
              break;
            }
            if (!firstDataType) {
              firstDataType = type;
            }
          }
          finalDataType = finalDataType || firstDataType;
        }
        if (finalDataType) {
          if (finalDataType !== dataTypes[0]) {
            dataTypes.unshift(finalDataType);
          }
          return responses[finalDataType];
        }
      }
      function ajaxConvert(s, response, jqXHR, isSuccess) {
        var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
        if (dataTypes[1]) {
          for (conv in s.converters) {
            converters[conv.toLowerCase()] = s.converters[conv];
          }
        }
        current = dataTypes.shift();
        while (current) {
          if (s.responseFields[current]) {
            jqXHR[s.responseFields[current]] = response;
          }
          if (!prev && isSuccess && s.dataFilter) {
            response = s.dataFilter(response, s.dataType);
          }
          prev = current;
          current = dataTypes.shift();
          if (current) {
            if (current === "*") {
              current = prev;
            } else if (prev !== "*" && prev !== current) {
              conv = converters[prev + " " + current] || converters["* " + current];
              if (!conv) {
                for (conv2 in converters) {
                  tmp = conv2.split(" ");
                  if (tmp[1] === current) {
                    conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                    if (conv) {
                      if (conv === true) {
                        conv = converters[conv2];
                      } else if (converters[conv2] !== true) {
                        current = tmp[0];
                        dataTypes.unshift(tmp[1]);
                      }
                      break;
                    }
                  }
                }
              }
              if (conv !== true) {
                if (conv && s.throws) {
                  response = conv(response);
                } else {
                  try {
                    response = conv(response);
                  } catch (e) {
                    return {
                      state: "parsererror",
                      error: conv ? e : "No conversion from " + prev + " to " + current
                    };
                  }
                }
              }
            }
          }
        }
        return { state: "success", data: response };
      }
      jQuery2.extend({
        // Counter for holding the number of active queries
        active: 0,
        // Last-Modified header cache for next request
        lastModified: {},
        etag: {},
        ajaxSettings: {
          url: location2.href,
          type: "GET",
          isLocal: rlocalProtocol.test(location2.protocol),
          global: true,
          processData: true,
          async: true,
          contentType: "application/x-www-form-urlencoded; charset=UTF-8",
          /*
          timeout: 0,
          data: null,
          dataType: null,
          username: null,
          password: null,
          cache: null,
          throws: false,
          traditional: false,
          headers: {},
          */
          accepts: {
            "*": allTypes,
            text: "text/plain",
            html: "text/html",
            xml: "application/xml, text/xml",
            json: "application/json, text/javascript"
          },
          contents: {
            xml: /\bxml\b/,
            html: /\bhtml/,
            json: /\bjson\b/
          },
          responseFields: {
            xml: "responseXML",
            text: "responseText",
            json: "responseJSON"
          },
          // Data converters
          // Keys separate source (or catchall "*") and destination types with a single space
          converters: {
            // Convert anything to text
            "* text": String,
            // Text to html (true = no transformation)
            "text html": true,
            // Evaluate text as a json expression
            "text json": JSON.parse,
            // Parse text as xml
            "text xml": jQuery2.parseXML
          },
          // For options that shouldn't be deep extended:
          // you can add your own custom options here if
          // and when you create one that shouldn't be
          // deep extended (see ajaxExtend)
          flatOptions: {
            url: true,
            context: true
          }
        },
        // Creates a full fledged settings object into target
        // with both ajaxSettings and settings fields.
        // If target is omitted, writes into ajaxSettings.
        ajaxSetup: function(target, settings) {
          return settings ? (
            // Building a settings object
            ajaxExtend(ajaxExtend(target, jQuery2.ajaxSettings), settings)
          ) : (
            // Extending ajaxSettings
            ajaxExtend(jQuery2.ajaxSettings, target)
          );
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        // Main method
        ajax: function(url, options) {
          if (typeof url === "object") {
            options = url;
            url = void 0;
          }
          options = options || {};
          var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed2, fireGlobals, i, uncached, s = jQuery2.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery2(callbackContext) : jQuery2.event, deferred = jQuery2.Deferred(), completeDeferred = jQuery2.Callbacks("once memory"), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {
            readyState: 0,
            // Builds headers hashtable if needed
            getResponseHeader: function(key) {
              var match;
              if (completed2) {
                if (!responseHeaders) {
                  responseHeaders = {};
                  while (match = rheaders.exec(responseHeadersString)) {
                    responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                  }
                }
                match = responseHeaders[key.toLowerCase() + " "];
              }
              return match == null ? null : match.join(", ");
            },
            // Raw string
            getAllResponseHeaders: function() {
              return completed2 ? responseHeadersString : null;
            },
            // Caches the header
            setRequestHeader: function(name, value) {
              if (completed2 == null) {
                name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                requestHeaders[name] = value;
              }
              return this;
            },
            // Overrides response content-type header
            overrideMimeType: function(type) {
              if (completed2 == null) {
                s.mimeType = type;
              }
              return this;
            },
            // Status-dependent callbacks
            statusCode: function(map) {
              var code;
              if (map) {
                if (completed2) {
                  jqXHR.always(map[jqXHR.status]);
                } else {
                  for (code in map) {
                    statusCode[code] = [statusCode[code], map[code]];
                  }
                }
              }
              return this;
            },
            // Cancel the request
            abort: function(statusText) {
              var finalText = statusText || strAbort;
              if (transport) {
                transport.abort(finalText);
              }
              done(0, finalText);
              return this;
            }
          };
          deferred.promise(jqXHR);
          s.url = ((url || s.url || location2.href) + "").replace(rprotocol, location2.protocol + "//");
          s.type = options.method || options.type || s.method || s.type;
          s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];
          if (s.crossDomain == null) {
            urlAnchor = document2.createElement("a");
            try {
              urlAnchor.href = s.url;
              urlAnchor.href = urlAnchor.href;
              s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
            } catch (e) {
              s.crossDomain = true;
            }
          }
          if (s.data && s.processData && typeof s.data !== "string") {
            s.data = jQuery2.param(s.data, s.traditional);
          }
          inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
          if (completed2) {
            return jqXHR;
          }
          fireGlobals = jQuery2.event && s.global;
          if (fireGlobals && jQuery2.active++ === 0) {
            jQuery2.event.trigger("ajaxStart");
          }
          s.type = s.type.toUpperCase();
          s.hasContent = !rnoContent.test(s.type);
          cacheURL = s.url.replace(rhash, "");
          if (!s.hasContent) {
            uncached = s.url.slice(cacheURL.length);
            if (s.data && (s.processData || typeof s.data === "string")) {
              cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;
              delete s.data;
            }
            if (s.cache === false) {
              cacheURL = cacheURL.replace(rantiCache, "$1");
              uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
            }
            s.url = cacheURL + uncached;
          } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
            s.data = s.data.replace(r20, "+");
          }
          if (s.ifModified) {
            if (jQuery2.lastModified[cacheURL]) {
              jqXHR.setRequestHeader("If-Modified-Since", jQuery2.lastModified[cacheURL]);
            }
            if (jQuery2.etag[cacheURL]) {
              jqXHR.setRequestHeader("If-None-Match", jQuery2.etag[cacheURL]);
            }
          }
          if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
            jqXHR.setRequestHeader("Content-Type", s.contentType);
          }
          jqXHR.setRequestHeader(
            "Accept",
            s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]
          );
          for (i in s.headers) {
            jqXHR.setRequestHeader(i, s.headers[i]);
          }
          if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed2)) {
            return jqXHR.abort();
          }
          strAbort = "abort";
          completeDeferred.add(s.complete);
          jqXHR.done(s.success);
          jqXHR.fail(s.error);
          transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
          if (!transport) {
            done(-1, "No Transport");
          } else {
            jqXHR.readyState = 1;
            if (fireGlobals) {
              globalEventContext.trigger("ajaxSend", [jqXHR, s]);
            }
            if (completed2) {
              return jqXHR;
            }
            if (s.async && s.timeout > 0) {
              timeoutTimer = window2.setTimeout(function() {
                jqXHR.abort("timeout");
              }, s.timeout);
            }
            try {
              completed2 = false;
              transport.send(requestHeaders, done);
            } catch (e) {
              if (completed2) {
                throw e;
              }
              done(-1, e);
            }
          }
          function done(status, nativeStatusText, responses, headers) {
            var isSuccess, success, error, response, modified, statusText = nativeStatusText;
            if (completed2) {
              return;
            }
            completed2 = true;
            if (timeoutTimer) {
              window2.clearTimeout(timeoutTimer);
            }
            transport = void 0;
            responseHeadersString = headers || "";
            jqXHR.readyState = status > 0 ? 4 : 0;
            isSuccess = status >= 200 && status < 300 || status === 304;
            if (responses) {
              response = ajaxHandleResponses(s, jqXHR, responses);
            }
            if (!isSuccess && jQuery2.inArray("script", s.dataTypes) > -1 && jQuery2.inArray("json", s.dataTypes) < 0) {
              s.converters["text script"] = function() {
              };
            }
            response = ajaxConvert(s, response, jqXHR, isSuccess);
            if (isSuccess) {
              if (s.ifModified) {
                modified = jqXHR.getResponseHeader("Last-Modified");
                if (modified) {
                  jQuery2.lastModified[cacheURL] = modified;
                }
                modified = jqXHR.getResponseHeader("etag");
                if (modified) {
                  jQuery2.etag[cacheURL] = modified;
                }
              }
              if (status === 204 || s.type === "HEAD") {
                statusText = "nocontent";
              } else if (status === 304) {
                statusText = "notmodified";
              } else {
                statusText = response.state;
                success = response.data;
                error = response.error;
                isSuccess = !error;
              }
            } else {
              error = statusText;
              if (status || !statusText) {
                statusText = "error";
                if (status < 0) {
                  status = 0;
                }
              }
            }
            jqXHR.status = status;
            jqXHR.statusText = (nativeStatusText || statusText) + "";
            if (isSuccess) {
              deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
            } else {
              deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
            }
            jqXHR.statusCode(statusCode);
            statusCode = void 0;
            if (fireGlobals) {
              globalEventContext.trigger(
                isSuccess ? "ajaxSuccess" : "ajaxError",
                [jqXHR, s, isSuccess ? success : error]
              );
            }
            completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
            if (fireGlobals) {
              globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
              if (!--jQuery2.active) {
                jQuery2.event.trigger("ajaxStop");
              }
            }
          }
          return jqXHR;
        },
        getJSON: function(url, data, callback) {
          return jQuery2.get(url, data, callback, "json");
        },
        getScript: function(url, callback) {
          return jQuery2.get(url, void 0, callback, "script");
        }
      });
      jQuery2.each(["get", "post"], function(_i, method) {
        jQuery2[method] = function(url, data, callback, type) {
          if (isFunction(data)) {
            type = type || callback;
            callback = data;
            data = void 0;
          }
          return jQuery2.ajax(jQuery2.extend({
            url,
            type: method,
            dataType: type,
            data,
            success: callback
          }, jQuery2.isPlainObject(url) && url));
        };
      });
      jQuery2.ajaxPrefilter(function(s) {
        var i;
        for (i in s.headers) {
          if (i.toLowerCase() === "content-type") {
            s.contentType = s.headers[i] || "";
          }
        }
      });
      jQuery2._evalUrl = function(url, options, doc) {
        return jQuery2.ajax({
          url,
          // Make this explicit, since user can override this through ajaxSetup (trac-11264)
          type: "GET",
          dataType: "script",
          cache: true,
          async: false,
          global: false,
          // Only evaluate the response if it is successful (gh-4126)
          // dataFilter is not invoked for failure responses, so using it instead
          // of the default converter is kludgy but it works.
          converters: {
            "text script": function() {
            }
          },
          dataFilter: function(response) {
            jQuery2.globalEval(response, options, doc);
          }
        });
      };
      jQuery2.fn.extend({
        wrapAll: function(html) {
          var wrap;
          if (this[0]) {
            if (isFunction(html)) {
              html = html.call(this[0]);
            }
            wrap = jQuery2(html, this[0].ownerDocument).eq(0).clone(true);
            if (this[0].parentNode) {
              wrap.insertBefore(this[0]);
            }
            wrap.map(function() {
              var elem = this;
              while (elem.firstElementChild) {
                elem = elem.firstElementChild;
              }
              return elem;
            }).append(this);
          }
          return this;
        },
        wrapInner: function(html) {
          if (isFunction(html)) {
            return this.each(function(i) {
              jQuery2(this).wrapInner(html.call(this, i));
            });
          }
          return this.each(function() {
            var self = jQuery2(this), contents = self.contents();
            if (contents.length) {
              contents.wrapAll(html);
            } else {
              self.append(html);
            }
          });
        },
        wrap: function(html) {
          var htmlIsFunction = isFunction(html);
          return this.each(function(i) {
            jQuery2(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
          });
        },
        unwrap: function(selector) {
          this.parent(selector).not("body").each(function() {
            jQuery2(this).replaceWith(this.childNodes);
          });
          return this;
        }
      });
      jQuery2.expr.pseudos.hidden = function(elem) {
        return !jQuery2.expr.pseudos.visible(elem);
      };
      jQuery2.expr.pseudos.visible = function(elem) {
        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
      };
      jQuery2.ajaxSettings.xhr = function() {
        try {
          return new window2.XMLHttpRequest();
        } catch (e) {
        }
      };
      var xhrSuccessStatus = {
        // File protocol always yields status code 0, assume 200
        0: 200,
        // Support: IE <=9 only
        // trac-1450: sometimes IE returns 1223 when it should be 204
        1223: 204
      }, xhrSupported = jQuery2.ajaxSettings.xhr();
      support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
      support.ajax = xhrSupported = !!xhrSupported;
      jQuery2.ajaxTransport(function(options) {
        var callback, errorCallback;
        if (support.cors || xhrSupported && !options.crossDomain) {
          return {
            send: function(headers, complete) {
              var i, xhr = options.xhr();
              xhr.open(
                options.type,
                options.url,
                options.async,
                options.username,
                options.password
              );
              if (options.xhrFields) {
                for (i in options.xhrFields) {
                  xhr[i] = options.xhrFields[i];
                }
              }
              if (options.mimeType && xhr.overrideMimeType) {
                xhr.overrideMimeType(options.mimeType);
              }
              if (!options.crossDomain && !headers["X-Requested-With"]) {
                headers["X-Requested-With"] = "XMLHttpRequest";
              }
              for (i in headers) {
                xhr.setRequestHeader(i, headers[i]);
              }
              callback = function(type) {
                return function() {
                  if (callback) {
                    callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                    if (type === "abort") {
                      xhr.abort();
                    } else if (type === "error") {
                      if (typeof xhr.status !== "number") {
                        complete(0, "error");
                      } else {
                        complete(
                          // File: protocol always yields status 0; see trac-8605, trac-14207
                          xhr.status,
                          xhr.statusText
                        );
                      }
                    } else {
                      complete(
                        xhrSuccessStatus[xhr.status] || xhr.status,
                        xhr.statusText,
                        // Support: IE <=9 only
                        // IE9 has no XHR2 but throws on binary (trac-11426)
                        // For XHR2 non-text, let the caller handle it (gh-2498)
                        (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? { binary: xhr.response } : { text: xhr.responseText },
                        xhr.getAllResponseHeaders()
                      );
                    }
                  }
                };
              };
              xhr.onload = callback();
              errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
              if (xhr.onabort !== void 0) {
                xhr.onabort = errorCallback;
              } else {
                xhr.onreadystatechange = function() {
                  if (xhr.readyState === 4) {
                    window2.setTimeout(function() {
                      if (callback) {
                        errorCallback();
                      }
                    });
                  }
                };
              }
              callback = callback("abort");
              try {
                xhr.send(options.hasContent && options.data || null);
              } catch (e) {
                if (callback) {
                  throw e;
                }
              }
            },
            abort: function() {
              if (callback) {
                callback();
              }
            }
          };
        }
      });
      jQuery2.ajaxPrefilter(function(s) {
        if (s.crossDomain) {
          s.contents.script = false;
        }
      });
      jQuery2.ajaxSetup({
        accepts: {
          script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
          script: /\b(?:java|ecma)script\b/
        },
        converters: {
          "text script": function(text) {
            jQuery2.globalEval(text);
            return text;
          }
        }
      });
      jQuery2.ajaxPrefilter("script", function(s) {
        if (s.cache === void 0) {
          s.cache = false;
        }
        if (s.crossDomain) {
          s.type = "GET";
        }
      });
      jQuery2.ajaxTransport("script", function(s) {
        if (s.crossDomain || s.scriptAttrs) {
          var script, callback;
          return {
            send: function(_, complete) {
              script = jQuery2("<script>").attr(s.scriptAttrs || {}).prop({ charset: s.scriptCharset, src: s.url }).on("load error", callback = function(evt) {
                script.remove();
                callback = null;
                if (evt) {
                  complete(evt.type === "error" ? 404 : 200, evt.type);
                }
              });
              document2.head.appendChild(script[0]);
            },
            abort: function() {
              if (callback) {
                callback();
              }
            }
          };
        }
      });
      var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
      jQuery2.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
          var callback = oldCallbacks.pop() || jQuery2.expando + "_" + nonce.guid++;
          this[callback] = true;
          return callback;
        }
      });
      jQuery2.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
        if (jsonProp || s.dataTypes[0] === "jsonp") {
          callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
          if (jsonProp) {
            s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
          } else if (s.jsonp !== false) {
            s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
          }
          s.converters["script json"] = function() {
            if (!responseContainer) {
              jQuery2.error(callbackName + " was not called");
            }
            return responseContainer[0];
          };
          s.dataTypes[0] = "json";
          overwritten = window2[callbackName];
          window2[callbackName] = function() {
            responseContainer = arguments;
          };
          jqXHR.always(function() {
            if (overwritten === void 0) {
              jQuery2(window2).removeProp(callbackName);
            } else {
              window2[callbackName] = overwritten;
            }
            if (s[callbackName]) {
              s.jsonpCallback = originalSettings.jsonpCallback;
              oldCallbacks.push(callbackName);
            }
            if (responseContainer && isFunction(overwritten)) {
              overwritten(responseContainer[0]);
            }
            responseContainer = overwritten = void 0;
          });
          return "script";
        }
      });
      support.createHTMLDocument = function() {
        var body = document2.implementation.createHTMLDocument("").body;
        body.innerHTML = "<form></form><form></form>";
        return body.childNodes.length === 2;
      }();
      jQuery2.parseHTML = function(data, context, keepScripts) {
        if (typeof data !== "string") {
          return [];
        }
        if (typeof context === "boolean") {
          keepScripts = context;
          context = false;
        }
        var base, parsed, scripts;
        if (!context) {
          if (support.createHTMLDocument) {
            context = document2.implementation.createHTMLDocument("");
            base = context.createElement("base");
            base.href = document2.location.href;
            context.head.appendChild(base);
          } else {
            context = document2;
          }
        }
        parsed = rsingleTag.exec(data);
        scripts = !keepScripts && [];
        if (parsed) {
          return [context.createElement(parsed[1])];
        }
        parsed = buildFragment([data], context, scripts);
        if (scripts && scripts.length) {
          jQuery2(scripts).remove();
        }
        return jQuery2.merge([], parsed.childNodes);
      };
      jQuery2.fn.load = function(url, params, callback) {
        var selector, type, response, self = this, off = url.indexOf(" ");
        if (off > -1) {
          selector = stripAndCollapse(url.slice(off));
          url = url.slice(0, off);
        }
        if (isFunction(params)) {
          callback = params;
          params = void 0;
        } else if (params && typeof params === "object") {
          type = "POST";
        }
        if (self.length > 0) {
          jQuery2.ajax({
            url,
            // If "type" variable is undefined, then "GET" method will be used.
            // Make value of this field explicit since
            // user can override it through ajaxSetup method
            type: type || "GET",
            dataType: "html",
            data: params
          }).done(function(responseText) {
            response = arguments;
            self.html(selector ? (
              // If a selector was specified, locate the right elements in a dummy div
              // Exclude scripts to avoid IE 'Permission Denied' errors
              jQuery2("<div>").append(jQuery2.parseHTML(responseText)).find(selector)
            ) : (
              // Otherwise use the full result
              responseText
            ));
          }).always(callback && function(jqXHR, status) {
            self.each(function() {
              callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
            });
          });
        }
        return this;
      };
      jQuery2.expr.pseudos.animated = function(elem) {
        return jQuery2.grep(jQuery2.timers, function(fn) {
          return elem === fn.elem;
        }).length;
      };
      jQuery2.offset = {
        setOffset: function(elem, options, i) {
          var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery2.css(elem, "position"), curElem = jQuery2(elem), props = {};
          if (position === "static") {
            elem.style.position = "relative";
          }
          curOffset = curElem.offset();
          curCSSTop = jQuery2.css(elem, "top");
          curCSSLeft = jQuery2.css(elem, "left");
          calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
          if (calculatePosition) {
            curPosition = curElem.position();
            curTop = curPosition.top;
            curLeft = curPosition.left;
          } else {
            curTop = parseFloat(curCSSTop) || 0;
            curLeft = parseFloat(curCSSLeft) || 0;
          }
          if (isFunction(options)) {
            options = options.call(elem, i, jQuery2.extend({}, curOffset));
          }
          if (options.top != null) {
            props.top = options.top - curOffset.top + curTop;
          }
          if (options.left != null) {
            props.left = options.left - curOffset.left + curLeft;
          }
          if ("using" in options) {
            options.using.call(elem, props);
          } else {
            curElem.css(props);
          }
        }
      };
      jQuery2.fn.extend({
        // offset() relates an element's border box to the document origin
        offset: function(options) {
          if (arguments.length) {
            return options === void 0 ? this : this.each(function(i) {
              jQuery2.offset.setOffset(this, options, i);
            });
          }
          var rect, win, elem = this[0];
          if (!elem) {
            return;
          }
          if (!elem.getClientRects().length) {
            return { top: 0, left: 0 };
          }
          rect = elem.getBoundingClientRect();
          win = elem.ownerDocument.defaultView;
          return {
            top: rect.top + win.pageYOffset,
            left: rect.left + win.pageXOffset
          };
        },
        // position() relates an element's margin box to its offset parent's padding box
        // This corresponds to the behavior of CSS absolute positioning
        position: function() {
          if (!this[0]) {
            return;
          }
          var offsetParent, offset, doc, elem = this[0], parentOffset = { top: 0, left: 0 };
          if (jQuery2.css(elem, "position") === "fixed") {
            offset = elem.getBoundingClientRect();
          } else {
            offset = this.offset();
            doc = elem.ownerDocument;
            offsetParent = elem.offsetParent || doc.documentElement;
            while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery2.css(offsetParent, "position") === "static") {
              offsetParent = offsetParent.parentNode;
            }
            if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
              parentOffset = jQuery2(offsetParent).offset();
              parentOffset.top += jQuery2.css(offsetParent, "borderTopWidth", true);
              parentOffset.left += jQuery2.css(offsetParent, "borderLeftWidth", true);
            }
          }
          return {
            top: offset.top - parentOffset.top - jQuery2.css(elem, "marginTop", true),
            left: offset.left - parentOffset.left - jQuery2.css(elem, "marginLeft", true)
          };
        },
        // This method will return documentElement in the following cases:
        // 1) For the element inside the iframe without offsetParent, this method will return
        //    documentElement of the parent window
        // 2) For the hidden or detached element
        // 3) For body or html element, i.e. in case of the html node - it will return itself
        //
        // but those exceptions were never presented as a real life use-cases
        // and might be considered as more preferable results.
        //
        // This logic, however, is not guaranteed and can change at any point in the future
        offsetParent: function() {
          return this.map(function() {
            var offsetParent = this.offsetParent;
            while (offsetParent && jQuery2.css(offsetParent, "position") === "static") {
              offsetParent = offsetParent.offsetParent;
            }
            return offsetParent || documentElement;
          });
        }
      });
      jQuery2.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(method, prop) {
        var top2 = "pageYOffset" === prop;
        jQuery2.fn[method] = function(val) {
          return access(this, function(elem, method2, val2) {
            var win;
            if (isWindow(elem)) {
              win = elem;
            } else if (elem.nodeType === 9) {
              win = elem.defaultView;
            }
            if (val2 === void 0) {
              return win ? win[prop] : elem[method2];
            }
            if (win) {
              win.scrollTo(
                !top2 ? val2 : win.pageXOffset,
                top2 ? val2 : win.pageYOffset
              );
            } else {
              elem[method2] = val2;
            }
          }, method, val, arguments.length);
        };
      });
      jQuery2.each(["top", "left"], function(_i, prop) {
        jQuery2.cssHooks[prop] = addGetHookIf(
          support.pixelPosition,
          function(elem, computed) {
            if (computed) {
              computed = curCSS(elem, prop);
              return rnumnonpx.test(computed) ? jQuery2(elem).position()[prop] + "px" : computed;
            }
          }
        );
      });
      jQuery2.each({ Height: "height", Width: "width" }, function(name, type) {
        jQuery2.each({
          padding: "inner" + name,
          content: type,
          "": "outer" + name
        }, function(defaultExtra, funcName) {
          jQuery2.fn[funcName] = function(margin, value) {
            var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
            return access(this, function(elem, type2, value2) {
              var doc;
              if (isWindow(elem)) {
                return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
              }
              if (elem.nodeType === 9) {
                doc = elem.documentElement;
                return Math.max(
                  elem.body["scroll" + name],
                  doc["scroll" + name],
                  elem.body["offset" + name],
                  doc["offset" + name],
                  doc["client" + name]
                );
              }
              return value2 === void 0 ? (
                // Get width or height on the element, requesting but not forcing parseFloat
                jQuery2.css(elem, type2, extra)
              ) : (
                // Set width or height on the element
                jQuery2.style(elem, type2, value2, extra)
              );
            }, type, chainable ? margin : void 0, chainable);
          };
        });
      });
      jQuery2.each([
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend"
      ], function(_i, type) {
        jQuery2.fn[type] = function(fn) {
          return this.on(type, fn);
        };
      });
      jQuery2.fn.extend({
        bind: function(types, data, fn) {
          return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
          return this.off(types, null, fn);
        },
        delegate: function(selector, types, data, fn) {
          return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
          return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        hover: function(fnOver, fnOut) {
          return this.on("mouseenter", fnOver).on("mouseleave", fnOut || fnOver);
        }
      });
      jQuery2.each(
        "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
        function(_i, name) {
          jQuery2.fn[name] = function(data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
          };
        }
      );
      var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
      jQuery2.proxy = function(fn, context) {
        var tmp, args, proxy;
        if (typeof context === "string") {
          tmp = fn[context];
          context = fn;
          fn = tmp;
        }
        if (!isFunction(fn)) {
          return void 0;
        }
        args = slice.call(arguments, 2);
        proxy = function() {
          return fn.apply(context || this, args.concat(slice.call(arguments)));
        };
        proxy.guid = fn.guid = fn.guid || jQuery2.guid++;
        return proxy;
      };
      jQuery2.holdReady = function(hold) {
        if (hold) {
          jQuery2.readyWait++;
        } else {
          jQuery2.ready(true);
        }
      };
      jQuery2.isArray = Array.isArray;
      jQuery2.parseJSON = JSON.parse;
      jQuery2.nodeName = nodeName;
      jQuery2.isFunction = isFunction;
      jQuery2.isWindow = isWindow;
      jQuery2.camelCase = camelCase;
      jQuery2.type = toType;
      jQuery2.now = Date.now;
      jQuery2.isNumeric = function(obj) {
        var type = jQuery2.type(obj);
        return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
        // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
        // subtraction forces infinities to NaN
        !isNaN(obj - parseFloat(obj));
      };
      jQuery2.trim = function(text) {
        return text == null ? "" : (text + "").replace(rtrim, "$1");
      };
      if (typeof define === "function" && define.amd) {
        define("jquery", [], function() {
          return jQuery2;
        });
      }
      var _jQuery = window2.jQuery, _$ = window2.$;
      jQuery2.noConflict = function(deep) {
        if (window2.$ === jQuery2) {
          window2.$ = _$;
        }
        if (deep && window2.jQuery === jQuery2) {
          window2.jQuery = _jQuery;
        }
        return jQuery2;
      };
      if (typeof noGlobal === "undefined") {
        window2.jQuery = window2.$ = jQuery2;
      }
      return jQuery2;
    });
  }
});

// node_modules/@progress/telerik-angular-report-viewer/dist/dependencies/telerikReportViewer.kendo.min.js
var require_telerikReportViewer_kendo_min = __commonJS({
  "node_modules/@progress/telerik-angular-report-viewer/dist/dependencies/telerikReportViewer.kendo.min.js"(exports, module) {
    var jQuery2 = require_jquery();
    !function(e) {
      "function" == typeof define && define.amd ? define(["jquery"], e) : e();
    }(function() {
      var e = { name: "@progress/kendo-ui", productName: "Kendo UI", productCodes: ["KENDOUICOMPLETE", "KENDOUI", "KENDOUI", "KENDOUICOMPLETE"], publishDate: 0, version: "2022.3.2112".replace(/^\s+|\s+$/g, ""), licensingDocsUrl: "https://docs.telerik.com/kendo-ui/intro/installation/using-license-code" };
      !function(t2, n2, i2) {
        var a2, r2 = n2.kendo = n2.kendo || { cultures: {} }, o2 = t2.extend, s2 = t2.each, l2 = Array.isArray, d2 = t2.noop, u2 = Math, c2 = n2.JSON || {}, p2 = {}, h2 = /%/, f2 = /\{(\d+)(:[^\}]+)?\}/g, m2 = /(\d+(?:\.?)\d*)px\s*(\d+(?:\.?)\d*)px\s*(\d+(?:\.?)\d*)px\s*(\d+)?/i, g2 = /^(\+|-?)\d+(\.?)\d*$/, v2 = "function", _2 = "string", b2 = "number", k2 = "object", w = "null", y = "boolean", x = "undefined", C = "aria-labelledby", T = "aria-label", S = {}, I = {}, D = [].slice, E = ["themeColor", "fillMode", "shape", "size", "rounded", "positionMode"], A = function() {
          var e2, t3, n3, a3, r3, o3, s3 = arguments, l3 = arguments[0] || {}, d3 = 1, u3 = arguments.length, c3 = false;
          for ("boolean" == typeof l3 && (c3 = l3, l3 = arguments[d3] || {}, d3++), "object" != typeof l3 && "function" != typeof l3 && (l3 = {}), d3 === u3 && (l3 = this, d3--); d3 < u3; d3++) if (null != (r3 = s3[d3])) for (a3 in r3) "filters" != a3 && "concat" != a3 && ":" != a3 && (e2 = l3[a3], l3 !== (n3 = r3[a3]) && (c3 && n3 && (jQuery2.isPlainObject(n3) || (t3 = Array.isArray(n3))) ? (t3 ? (t3 = false, o3 = e2 && Array.isArray(e2) ? e2 : []) : o3 = e2 && jQuery2.isPlainObject(e2) ? e2 : {}, l3[a3] = A(c3, o3, n3)) : n3 !== i2 && (l3[a3] = n3)));
          return l3;
        };
        function F() {
        }
        r2.version = "2022.3.2112".replace(/^\s+|\s+$/g, ""), F.extend = function(e2) {
          var t3, n3, i3 = function() {
          }, a3 = this, r3 = e2 && e2.init ? e2.init : function() {
            a3.apply(this, arguments);
          };
          for (t3 in i3.prototype = a3.prototype, n3 = r3.fn = r3.prototype = new i3(), e2) null != e2[t3] && e2[t3].constructor === Object ? n3[t3] = o2(true, {}, i3.prototype[t3], e2[t3]) : n3[t3] = e2[t3];
          return n3.constructor = r3, r3.extend = a3.extend, r3;
        }, F.prototype._initOptions = function(e2) {
          this.options = G({}, this.options, e2);
        };
        var z = r2.isFunction = function(e2) {
          return "function" == typeof e2;
        }, P = function() {
          this._defaultPrevented = true;
        }, H = function() {
          return true === this._defaultPrevented;
        }, N = F.extend({ init: function() {
          this._events = {};
        }, bind: function(e2, t3, n3) {
          var a3, r3, o3, s3, l3 = this, d3 = typeof e2 === _2 ? [e2] : e2, u3 = typeof t3 === v2;
          if (t3 === i2) {
            for (a3 in e2) l3.bind(a3, e2[a3]);
            return l3;
          }
          for (a3 = 0, r3 = d3.length; a3 < r3; a3++) e2 = d3[a3], (s3 = u3 ? t3 : t3[e2]) && (n3 && (o3 = s3, s3 = function() {
            l3.unbind(e2, s3), o3.apply(l3, arguments);
          }, s3.original = o3), (l3._events[e2] = l3._events[e2] || []).push(s3));
          return l3;
        }, one: function(e2, t3) {
          return this.bind(e2, t3, true);
        }, first: function(e2, t3) {
          var n3, i3, a3, r3 = this, o3 = typeof e2 === _2 ? [e2] : e2, s3 = typeof t3 === v2;
          for (n3 = 0, i3 = o3.length; n3 < i3; n3++) e2 = o3[n3], (a3 = s3 ? t3 : t3[e2]) && (r3._events[e2] = r3._events[e2] || []).unshift(a3);
          return r3;
        }, trigger: function(e2, t3) {
          var n3, i3, a3 = this, r3 = a3._events[e2];
          if (r3) {
            for ((t3 = t3 || {}).sender = a3, t3._defaultPrevented = false, t3.preventDefault = P, t3.isDefaultPrevented = H, n3 = 0, i3 = (r3 = r3.slice()).length; n3 < i3; n3++) r3[n3].call(a3, t3);
            return true === t3._defaultPrevented;
          }
          return false;
        }, unbind: function(e2, t3) {
          var n3, a3 = this, r3 = a3._events[e2];
          if (e2 === i2) a3._events = {};
          else if (r3) if (t3) for (n3 = r3.length - 1; n3 >= 0; n3--) r3[n3] !== t3 && r3[n3].original !== t3 || r3.splice(n3, 1);
          else a3._events[e2] = [];
          return a3;
        } });
        function R(e2, t3) {
          if (t3) return "'" + e2.split("'").join("\\'").split('\\"').join('\\\\\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\t/g, "\\t") + "'";
          var n3 = e2.charAt(0), i3 = e2.substring(1);
          return "=" === n3 ? "+(" + i3 + ")+" : ":" === n3 ? "+$kendoHtmlEncode(" + i3 + ")+" : ";" + e2 + ";$kendoOutput+=";
        }
        var O = /^\w+/, M = /\$\{([^}]*)\}/g, B = /\\\}/g, L = /__CURLY__/g, V = /\\#/g, U = /__SHARP__/g, W = ["", "0", "00", "000", "0000"];
        function j(e2, t3, n3) {
          return (n3 = (t3 = t3 || 2) - (e2 += "").length) ? W[t3].substring(0, n3) + e2 : e2;
        }
        function q(e2, t3) {
          var n3 = r2._outerWidth, i3 = r2._outerHeight, a3 = e2.parent(".k-animation-container"), o3 = a3[0].style;
          a3.is(":hidden") && a3.css({ display: "", position: "" }), h2.test(o3.width) || h2.test(o3.height) || a3.css({ width: t3 ? n3(e2) + 1 : n3(e2), height: i3(e2), boxSizing: "content-box", mozBoxSizing: "content-box", webkitBoxSizing: "content-box" });
        }
        function G(e2) {
          var t3 = arguments, n3 = 1, i3 = arguments.length;
          for (n3 = 1; n3 < i3; n3++) K(e2, t3[n3]);
          return e2;
        }
        function K(e2, t3) {
          var i3, a3, o3, s3, l3, d3 = r2.data.ObservableArray, u3 = r2.data.LazyObservableArray, c3 = r2.data.DataSource, p3 = r2.data.HierarchicalDataSource;
          for (i3 in t3) !(s3 = (o3 = typeof (a3 = t3[i3])) === k2 && null !== a3 ? a3.constructor : null) || s3 === Array || s3 === d3 || s3 === u3 || s3 === c3 || s3 === p3 || s3 === RegExp || r2.isFunction(n2.ArrayBuffer) && s3 === ArrayBuffer || a3 instanceof HTMLElement ? o3 !== x && (e2[i3] = a3) : a3 instanceof Date ? e2[i3] = new Date(a3.getTime()) : z(a3.clone) ? e2[i3] = a3.clone() : (l3 = e2[i3], e2[i3] = typeof l3 === k2 && l3 || {}, K(e2[i3], a3));
          return e2;
        }
        function $(e2, t3, n3) {
          for (var a3 in t3) if (t3.hasOwnProperty(a3) && t3[a3].test(e2)) return a3;
          return n3 !== i2 ? n3 : e2;
        }
        function Y(e2) {
          return e2.replace(/\-(\w)/g, function(e3, t3) {
            return t3.toUpperCase();
          });
        }
        function Q(e2, n3) {
          var i3, a3 = {};
          return document.defaultView && document.defaultView.getComputedStyle ? (i3 = document.defaultView.getComputedStyle(e2, ""), n3 && t2.each(n3, function(e3, t3) {
            a3[t3] = i3.getPropertyValue(t3);
          })) : (i3 = e2.currentStyle, n3 && t2.each(n3, function(e3, t3) {
            a3[t3] = i3[Y(t3)];
          })), r2.size(a3) || (a3 = i3), a3;
        }
        a2 = { paramName: "data", useWithBlock: true, render: function(e2, t3) {
          var n3, i3, a3 = "";
          for (n3 = 0, i3 = t3.length; n3 < i3; n3++) a3 += e2(t3[n3]);
          return a3;
        }, compile: function(e2, t3) {
          var n3, i3, a3, s3 = o2({}, this, t3), l3 = s3.paramName, d3 = l3.match(O)[0], u3 = s3.useWithBlock, c3 = "var $kendoOutput, $kendoHtmlEncode = kendo.htmlEncode;";
          if (z(e2)) return e2;
          for (c3 += u3 ? "with(" + l3 + "){" : "", c3 += "$kendoOutput=", i3 = e2.replace(B, "__CURLY__").replace(M, "#=$kendoHtmlEncode($1)#").replace(L, "}").replace(V, "__SHARP__").split("#"), a3 = 0; a3 < i3.length; a3++) c3 += R(i3[a3], a3 % 2 == 0);
          c3 += u3 ? ";}" : ";", c3 = (c3 += "return $kendoOutput;").replace(U, "#");
          try {
            return (n3 = new Function(d3, c3))._slotCount = Math.floor(i3.length / 2), n3;
          } catch (t4) {
            throw new Error(r2.format("Invalid template:'{0}' Generated code:'{1}'", e2, c3));
          }
        } }, function() {
          var e2, t3, n3, i3 = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, a3 = { "\b": "\\b", "	": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, r3 = {}.toString;
          function o3(e3) {
            return i3.lastIndex = 0, i3.test(e3) ? '"' + e3.replace(i3, function(e4) {
              var t4 = a3[e4];
              return typeof t4 === _2 ? t4 : "\\u" + ("0000" + e4.charCodeAt(0).toString(16)).slice(-4);
            }) + '"' : '"' + e3 + '"';
          }
          function s3(i4, a4) {
            var l3, d3, u3, c3, p3, h3, f3 = e2, m3 = a4[i4];
            if (m3 && typeof m3 === k2 && typeof m3.toJSON === v2 && (m3 = m3.toJSON(i4)), typeof n3 === v2 && (m3 = n3.call(a4, i4, m3)), (h3 = typeof m3) === _2) return o3(m3);
            if (h3 === b2) return isFinite(m3) ? String(m3) : w;
            if (h3 === y || h3 === w) return String(m3);
            if (h3 === k2) {
              if (!m3) return w;
              if (e2 += t3, p3 = [], "[object Array]" === r3.apply(m3)) {
                for (c3 = m3.length, l3 = 0; l3 < c3; l3++) p3[l3] = s3(l3, m3) || w;
                return u3 = 0 === p3.length ? "[]" : e2 ? "[\n" + e2 + p3.join(",\n" + e2) + "\n" + f3 + "]" : "[" + p3.join(",") + "]", e2 = f3, u3;
              }
              if (n3 && typeof n3 === k2) for (c3 = n3.length, l3 = 0; l3 < c3; l3++) typeof n3[l3] === _2 && (u3 = s3(d3 = n3[l3], m3)) && p3.push(o3(d3) + (e2 ? ": " : ":") + u3);
              else for (d3 in m3) Object.hasOwnProperty.call(m3, d3) && (u3 = s3(d3, m3)) && p3.push(o3(d3) + (e2 ? ": " : ":") + u3);
              return u3 = 0 === p3.length ? "{}" : e2 ? "{\n" + e2 + p3.join(",\n" + e2) + "\n" + f3 + "}" : "{" + p3.join(",") + "}", e2 = f3, u3;
            }
          }
          typeof Date.prototype.toJSON !== v2 && (Date.prototype.toJSON = function() {
            var e3 = this;
            return isFinite(e3.valueOf()) ? j(e3.getUTCFullYear(), 4) + "-" + j(e3.getUTCMonth() + 1) + "-" + j(e3.getUTCDate()) + "T" + j(e3.getUTCHours()) + ":" + j(e3.getUTCMinutes()) + ":" + j(e3.getUTCSeconds()) + "Z" : null;
          }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
            return this.valueOf();
          }), typeof c2.stringify !== v2 && (c2.stringify = function(i4, a4, r4) {
            var o4;
            if (e2 = "", t3 = "", typeof r4 === b2) for (o4 = 0; o4 < r4; o4 += 1) t3 += " ";
            else typeof r4 === _2 && (t3 = r4);
            if (n3 = a4, a4 && typeof a4 !== v2 && (typeof a4 !== k2 || typeof a4.length !== b2)) throw new Error("JSON.stringify");
            return s3("", { "": i4 });
          });
        }(), function() {
          var e2 = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|"[^"]*"|'[^']*'/g, n3 = /^(n|c|p|e)(\d*)$/i, a3 = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g, o3 = /\,/g, s3 = "", l3 = ".", d3 = "#", c3 = "0", p3 = "en-US", h3 = {}.toString;
          function m3(e3) {
            if (e3) {
              if (e3.numberFormat) return e3;
              if (typeof e3 === _2) {
                var t3 = r2.cultures;
                return t3[e3] || t3[e3.split("-")[0]] || null;
              }
              return null;
            }
            return null;
          }
          function g3(e3) {
            return e3 && (e3 = m3(e3)), e3 || r2.cultures.current;
          }
          r2.cultures["en-US"] = { name: p3, numberFormat: { pattern: ["-n"], decimals: 2, ",": ",", ".": ".", groupSize: [3], percent: { pattern: ["-n %", "n %"], decimals: 2, ",": ",", ".": ".", groupSize: [3], symbol: "%" }, currency: { name: "US Dollar", abbr: "USD", pattern: ["($n)", "$n"], decimals: 2, ",": ",", ".": ".", groupSize: [3], symbol: "$" } }, calendars: { standard: { days: { names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"] }, months: { names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] }, AM: ["AM", "am", "AM"], PM: ["PM", "pm", "PM"], patterns: { d: "M/d/yyyy", D: "dddd, MMMM dd, yyyy", F: "dddd, MMMM dd, yyyy h:mm:ss tt", g: "M/d/yyyy h:mm tt", G: "M/d/yyyy h:mm:ss tt", m: "MMMM dd", M: "MMMM dd", s: "yyyy'-'MM'-'ddTHH':'mm':'ss", t: "h:mm tt", T: "h:mm:ss tt", u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'", y: "MMMM, yyyy", Y: "MMMM, yyyy" }, "/": "/", ":": ":", firstDay: 0, twoDigitYearMax: 2029 } } }, r2.culture = function(e3) {
            var t3, n4 = r2.cultures;
            if (e3 === i2) return n4.current;
            (t3 = m3(e3) || n4[p3]).calendar = t3.calendars.standard, n4.current = t3;
          }, r2.findCulture = m3, r2.getCulture = g3, r2.culture(p3);
          var v3 = function(e3, t3, n4, a4) {
            var r3, o4, s4, l4, d4, u3, c4 = e3.indexOf(a4["."]), p4 = a4.groupSize.slice(), h4 = p4.shift();
            if (n4 = -1 !== c4 ? c4 : n4 + 1, (o4 = (r3 = e3.substring(t3, n4)).length) >= h4) {
              for (s4 = o4, l4 = []; s4 > -1; ) if ((d4 = r3.substring(s4 - h4, s4)) && l4.push(d4), s4 -= h4, 0 === (h4 = (u3 = p4.shift()) !== i2 ? u3 : h4)) {
                s4 > 0 && l4.push(r3.substring(0, s4));
                break;
              }
              r3 = l4.reverse().join(a4[","]), e3 = e3.substring(0, t3) + r3 + e3.substring(n4);
            }
            return e3;
          }, k3 = function(e3, t3, n4) {
            return t3 = t3 || 0, e3 = e3.toString().split("e"), e3 = Math.round(+(e3[0] + "e" + (e3[1] ? +e3[1] + t3 : t3))), n4 && (e3 = -e3), (e3 = +((e3 = e3.toString().split("e"))[0] + "e" + (e3[1] ? +e3[1] - t3 : -t3))).toFixed(Math.min(t3, 20));
          }, w2 = function(t3, r3, p4) {
            if (r3) {
              if ("[object Date]" === h3.call(t3)) return function(t4, n4, a4) {
                var r4 = (a4 = g3(a4)).calendars.standard, o4 = r4.days, s4 = r4.months;
                return (n4 = r4.patterns[n4] || n4).replace(e2, function(e3) {
                  var n5, a5, l4;
                  return "d" === e3 ? a5 = t4.getDate() : "dd" === e3 ? a5 = j(t4.getDate()) : "ddd" === e3 ? a5 = o4.namesAbbr[t4.getDay()] : "dddd" === e3 ? a5 = o4.names[t4.getDay()] : "M" === e3 ? a5 = t4.getMonth() + 1 : "MM" === e3 ? a5 = j(t4.getMonth() + 1) : "MMM" === e3 ? a5 = s4.namesAbbr[t4.getMonth()] : "MMMM" === e3 ? a5 = s4.names[t4.getMonth()] : "yy" === e3 ? a5 = j(t4.getFullYear() % 100) : "yyyy" === e3 ? a5 = j(t4.getFullYear(), 4) : "h" === e3 ? a5 = t4.getHours() % 12 || 12 : "hh" === e3 ? a5 = j(t4.getHours() % 12 || 12) : "H" === e3 ? a5 = t4.getHours() : "HH" === e3 ? a5 = j(t4.getHours()) : "m" === e3 ? a5 = t4.getMinutes() : "mm" === e3 ? a5 = j(t4.getMinutes()) : "s" === e3 ? a5 = t4.getSeconds() : "ss" === e3 ? a5 = j(t4.getSeconds()) : "f" === e3 ? a5 = u2.floor(t4.getMilliseconds() / 100) : "ff" === e3 ? ((a5 = t4.getMilliseconds()) > 99 && (a5 = u2.floor(a5 / 10)), a5 = j(a5)) : "fff" === e3 ? a5 = j(t4.getMilliseconds(), 3) : "tt" === e3 ? a5 = t4.getHours() < 12 ? r4.AM[0] : r4.PM[0] : "zzz" === e3 ? (l4 = (n5 = t4.getTimezoneOffset()) < 0, a5 = u2.abs(n5 / 60).toString().split(".")[0], n5 = u2.abs(n5) - 60 * a5, a5 = (l4 ? "+" : "-") + j(a5), a5 += ":" + j(n5)) : "zz" !== e3 && "z" !== e3 || (l4 = (a5 = t4.getTimezoneOffset() / 60) < 0, a5 = u2.abs(a5).toString().split(".")[0], a5 = (l4 ? "+" : "-") + ("zz" === e3 ? j(a5) : a5)), a5 !== i2 ? a5 : e3.slice(1, e3.length - 1);
                });
              }(t3, r3, p4);
              if (typeof t3 === b2) return function(e3, t4, r4) {
                var u3, p5, h4, f3, m4, _3, b3, w3, y2, x2, C2, T2, S2, I2, D2, E2, A2, F2, z2, P2, H2 = (r4 = g3(r4)).numberFormat, N2 = H2["."], R2 = H2.decimals, O2 = H2.pattern[0], M2 = [], B2 = e3 < 0, L2 = s3, V2 = s3, U2 = -1;
                if (e3 === i2) return s3;
                if (!isFinite(e3)) return e3;
                if (!t4) return r4.name.length ? e3.toLocaleString() : e3.toString();
                if (m4 = n3.exec(t4)) {
                  if (h4 = "p" === (t4 = m4[1].toLowerCase()), ((p5 = "c" === t4) || h4) && (N2 = (H2 = p5 ? H2.currency : H2.percent)["."], R2 = H2.decimals, u3 = H2.symbol, O2 = H2.pattern[B2 ? 0 : 1]), (f3 = m4[2]) && (R2 = +f3), "e" === t4) return (f3 ? e3.toExponential(R2) : e3.toExponential()).replace(l3, H2["."]);
                  if (h4 && (e3 *= 100), B2 = (e3 = k3(e3, R2)) < 0, _3 = (e3 = e3.split(l3))[0], b3 = e3[1], B2 && (_3 = _3.substring(1)), V2 = v3(_3, 0, _3.length, H2), b3 && (V2 += N2 + b3), "n" === t4 && !B2) return V2;
                  for (e3 = s3, y2 = 0, x2 = O2.length; y2 < x2; y2++) e3 += "n" === (C2 = O2.charAt(y2)) ? V2 : "$" === C2 || "%" === C2 ? u3 : C2;
                  return e3;
                }
                if ((t4.indexOf("'") > -1 || t4.indexOf('"') > -1 || t4.indexOf("\\") > -1) && (t4 = t4.replace(a3, function(e4) {
                  var t5 = e4.charAt(0).replace("\\", ""), n4 = e4.slice(1).replace(t5, "");
                  return M2.push(n4), "??";
                })), t4 = t4.split(";"), B2 && t4[1]) t4 = t4[1], S2 = true;
                else if (0 === e3 && t4[2]) {
                  if (-1 == (t4 = t4[2]).indexOf(d3) && -1 == t4.indexOf(c3)) return t4;
                } else t4 = t4[0];
                if ((h4 = -1 != t4.indexOf("%")) && (e3 *= 100), (p5 = -1 != (z2 = t4.indexOf("$"))) && "\\" === t4[z2 - 1] && (t4 = t4.split("\\").join(""), p5 = false), (p5 || h4) && (N2 = (H2 = p5 ? H2.currency : H2.percent)["."], R2 = H2.decimals, u3 = H2.symbol), (T2 = t4.indexOf(",") > -1) && (t4 = t4.replace(o3, s3)), I2 = t4.indexOf(l3), x2 = t4.length, -1 != I2) {
                  if (b3 = (b3 = (b3 = e3.toString().split("e"))[1] ? k3(e3, Math.abs(b3[1])) : b3[0]).split(l3)[1] || s3, A2 = (E2 = t4.lastIndexOf(c3) - I2) > -1, F2 = (D2 = t4.lastIndexOf(d3) - I2) > -1, y2 = b3.length, A2 || F2 || (x2 = (t4 = t4.substring(0, I2) + t4.substring(I2 + 1)).length, I2 = -1, y2 = 0), A2 && E2 > D2) y2 = E2;
                  else if (D2 > E2) if (F2 && y2 > D2) {
                    for (var W2 = k3(e3, D2, B2); W2.charAt(W2.length - 1) === c3 && D2 > 0 && D2 > E2; ) D2--, W2 = k3(e3, D2, B2);
                    y2 = D2;
                  } else A2 && y2 < E2 && (y2 = E2);
                }
                if (e3 = k3(e3, y2, B2), D2 = t4.indexOf(d3), E2 = t4.indexOf(c3), U2 = -1 == D2 && -1 != E2 ? E2 : -1 != D2 && -1 == E2 ? D2 : D2 > E2 ? E2 : D2, D2 = t4.lastIndexOf(d3), E2 = t4.lastIndexOf(c3), P2 = -1 == D2 && -1 != E2 ? E2 : -1 != D2 && -1 == E2 || D2 > E2 ? D2 : E2, U2 == x2 && (P2 = U2), -1 != U2) {
                  for (_3 = (V2 = e3.toString().split(l3))[0], b3 = V2[1] || s3, w3 = _3.length, b3.length, B2 && -1 * e3 >= 0 && (B2 = false), e3 = t4.substring(0, U2), B2 && !S2 && (e3 += "-"), y2 = U2; y2 < x2; y2++) {
                    if (C2 = t4.charAt(y2), -1 == I2) {
                      if (P2 - y2 < w3) {
                        e3 += _3;
                        break;
                      }
                    } else if (-1 != E2 && E2 < y2 && (L2 = s3), I2 - y2 <= w3 && I2 - y2 > -1 && (e3 += _3, y2 = I2), I2 === y2) {
                      e3 += (b3 ? N2 : s3) + b3, y2 += P2 - I2 + 1;
                      continue;
                    }
                    C2 === c3 ? (e3 += C2, L2 = C2) : C2 === d3 && (e3 += L2);
                  }
                  if (T2 && (e3 = v3(e3, U2 + (B2 && !S2 ? 1 : 0), Math.max(P2, w3 + U2), H2)), P2 >= U2 && (e3 += t4.substring(P2 + 1)), p5 || h4) {
                    for (V2 = s3, y2 = 0, x2 = e3.length; y2 < x2; y2++) V2 += "$" === (C2 = e3.charAt(y2)) || "%" === C2 ? u3 : C2;
                    e3 = V2;
                  }
                  if (x2 = M2.length) for (y2 = 0; y2 < x2; y2++) e3 = e3.replace("??", M2[y2]);
                }
                return e3;
              }(t3, r3, p4);
            }
            return t3 !== i2 ? t3 : "";
          };
          r2.format = function(e3) {
            var t3 = arguments;
            return e3.replace(f2, function(e4, n4, i3) {
              var a4 = t3[parseInt(n4, 10) + 1];
              return w2(a4, i3 ? i3.substring(1) : "");
            });
          }, r2._extractFormat = function(e3) {
            return "{0:" === e3.slice(0, 3) && (e3 = e3.slice(3, e3.length - 1)), e3;
          }, r2._activeElement = function() {
            try {
              return document.activeElement;
            } catch (e3) {
              return document.documentElement.activeElement;
            }
          }, r2._round = k3, r2._outerWidth = function(e3, n4) {
            return t2(e3).outerWidth(n4 || false) || 0;
          }, r2._outerHeight = function(e3, n4) {
            return t2(e3).outerHeight(n4 || false) || 0;
          }, r2.toString = w2;
        }(), function() {
          var e2 = /\u00A0/g, n3 = /\s/g, a3 = /[eE][\-+]?[0-9]+/, o3 = /[+|\-]\d{1,2}/, s3 = /[+|\-]\d{1,2}:?\d{2}/, d3 = /^\/Date\((.*?)\)\/$/, c3 = /[+-]\d*/, p3 = [[], ["G", "g", "F"], ["D", "d", "y", "m", "T", "t"]], h3 = [["yyyy-MM-ddTHH:mm:ss.fffffffzzz", "yyyy-MM-ddTHH:mm:ss.fffffff", "yyyy-MM-ddTHH:mm:ss.fffzzz", "yyyy-MM-ddTHH:mm:ss.fff", "ddd MMM dd yyyy HH:mm:ss", "yyyy-MM-ddTHH:mm:sszzz", "yyyy-MM-ddTHH:mmzzz", "yyyy-MM-ddTHH:mmzz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-dd HH:mm:ss", "yyyy/MM/dd HH:mm:ss"], ["yyyy-MM-ddTHH:mm", "yyyy-MM-dd HH:mm", "yyyy/MM/dd HH:mm"], ["yyyy/MM/dd", "yyyy-MM-dd", "HH:mm:ss", "HH:mm"]], f3 = { 2: /^\d{1,2}/, 3: /^\d{1,3}/, 4: /^\d{4}/ }, m3 = {}.toString;
          function g3(e3, t3, n4) {
            return !(e3 >= t3 && e3 <= n4);
          }
          function v3(e3) {
            return e3.charAt(0);
          }
          function _3(e3) {
            return t2.map(e3, v3);
          }
          function k3(e3) {
            for (var t3 = 0, n4 = e3.length, i3 = []; t3 < n4; t3++) i3[t3] = (e3[t3] + "").toLowerCase();
            return i3;
          }
          function w2(e3) {
            var t3, n4 = {};
            for (t3 in e3) n4[t3] = k3(e3[t3]);
            return n4;
          }
          function y2(e3, t3, n4, a4) {
            if (!e3) return null;
            var l3, d4, u3, c4, p4, h4, m4, v4, b3, k4, y3, x3, C2 = function(e4) {
              for (var n5 = 0; t3[R2] === e4; ) n5++, R2++;
              return n5 > 0 && (R2 -= 1), n5;
            }, T2 = function(t4) {
              var n5 = f3[t4] || new RegExp("^\\d{1," + t4 + "}"), i3 = e3.substr(O2, t4).match(n5);
              return i3 ? (i3 = i3[0], O2 += i3.length, parseInt(i3, 10)) : null;
            }, S2 = function(t4, n5) {
              for (var i3, a5, r3, o4 = 0, s4 = t4.length, l4 = 0, d5 = 0; o4 < s4; o4++) a5 = (i3 = t4[o4]).length, r3 = e3.substr(O2, a5), n5 && (r3 = r3.toLowerCase()), r3 == i3 && a5 > l4 && (l4 = a5, d5 = o4);
              return l4 ? (O2 += l4, d5 + 1) : null;
            }, I2 = function() {
              var n5 = false;
              return e3.charAt(O2) === t3[R2] && (O2++, n5 = true), n5;
            }, D2 = n4.calendars.standard, E2 = null, A2 = null, F2 = null, z2 = null, P2 = null, H2 = null, N2 = null, R2 = 0, O2 = 0, M2 = false, B2 = /* @__PURE__ */ new Date(), L2 = D2.twoDigitYearMax || 2029, V2 = B2.getFullYear();
            for (t3 || (t3 = "d"), (c4 = D2.patterns[t3]) && (t3 = c4), u3 = (t3 = t3.split("")).length; R2 < u3; R2++) if (l3 = t3[R2], M2) "'" === l3 ? M2 = false : I2();
            else if ("d" === l3) {
              if (d4 = C2("d"), D2._lowerDays || (D2._lowerDays = w2(D2.days)), null !== F2 && d4 > 2) continue;
              if (null === (F2 = d4 < 3 ? T2(2) : S2(D2._lowerDays[3 == d4 ? "namesAbbr" : "names"], true)) || g3(F2, 1, 31)) return null;
            } else if ("M" === l3) {
              if (d4 = C2("M"), D2._lowerMonths || (D2._lowerMonths = w2(D2.months)), null === (A2 = d4 < 3 ? T2(2) : S2(D2._lowerMonths[3 == d4 ? "namesAbbr" : "names"], true)) || g3(A2, 1, 12)) return null;
              A2 -= 1;
            } else if ("y" === l3) {
              if (null === (E2 = T2(d4 = C2("y")))) return null;
              2 == d4 && ("string" == typeof L2 && (L2 = V2 + parseInt(L2, 10)), (E2 = V2 - V2 % 100 + E2) > L2 && (E2 -= 100));
            } else if ("h" === l3) {
              if (C2("h"), 12 == (z2 = T2(2)) && (z2 = 0), null === z2 || g3(z2, 0, 11)) return null;
            } else if ("H" === l3) {
              if (C2("H"), null === (z2 = T2(2)) || g3(z2, 0, 23)) return null;
            } else if ("m" === l3) {
              if (C2("m"), null === (P2 = T2(2)) || g3(P2, 0, 59)) return null;
            } else if ("s" === l3) {
              if (C2("s"), null === (H2 = T2(2)) || g3(H2, 0, 59)) return null;
            } else if ("f" === l3) {
              if (d4 = C2("f"), x3 = e3.substr(O2, d4).match(f3[3]), null !== (N2 = T2(d4)) && (N2 = parseFloat("0." + x3[0], 10), N2 = r2._round(N2, 3), N2 *= 1e3), null === N2 || g3(N2, 0, 999)) return null;
            } else if ("t" === l3) {
              if (d4 = C2("t"), v4 = D2.AM, b3 = D2.PM, 1 === d4 && (v4 = _3(v4), b3 = _3(b3)), !(p4 = S2(b3)) && !S2(v4)) return null;
            } else if ("z" === l3) {
              if (h4 = true, d4 = C2("z"), "Z" === e3.substr(O2, 1)) {
                I2();
                continue;
              }
              if (!(m4 = e3.substr(O2, 6).match(d4 > 2 ? s3 : o3))) return null;
              if (k4 = (m4 = m4[0].split(":"))[0], !(y3 = m4[1]) && k4.length > 3 && (O2 = k4.length - 2, y3 = k4.substring(O2), k4 = k4.substring(0, O2)), g3(k4 = parseInt(k4, 10), -12, 13)) return null;
              if (d4 > 2 && (y3 = m4[0][0] + y3, y3 = parseInt(y3, 10), isNaN(y3) || g3(y3, -59, 59))) return null;
            } else if ("'" === l3) M2 = true, I2();
            else if (!I2()) return null;
            return a4 && !/^\s*$/.test(e3.substr(O2)) ? null : (null === E2 && null === A2 && null === F2 && (null !== z2 || null !== P2 || H2 || null) ? (E2 = V2, A2 = B2.getMonth(), F2 = B2.getDate()) : (null === E2 && (E2 = V2), null === F2 && (F2 = 1)), p4 && z2 < 12 && (z2 += 12), h4 ? (k4 && (z2 += -k4), y3 && (P2 += -y3), e3 = new Date(Date.UTC(E2, A2, F2, z2, P2, H2, N2))) : function(e4, t4) {
              t4 || 23 !== e4.getHours() || e4.setHours(e4.getHours() + 2);
            }(e3 = new Date(E2, A2, F2, z2, P2, H2, N2), z2), E2 < 100 && e3.setFullYear(E2), e3.getDate() !== F2 && h4 === i2 ? null : e3);
          }
          function x2(e3, t3, n4, i3) {
            if ("[object Date]" === m3.call(e3)) return e3;
            var a4, o4, s4, f4, g4 = 0, v4 = null;
            if (e3 && 0 === e3.indexOf("/D") && (v4 = d3.exec(e3))) return v4 = v4[1], o4 = c3.exec(v4.substring(1)), v4 = new Date(parseInt(v4, 10)), o4 && (s4 = o4[0], f4 = "-" === s4.substr(0, 1) ? -1 : 1, s4 = s4.substring(1), o4 = f4 * (60 * parseInt(s4.substr(0, 2), 10) + parseInt(s4.substring(2), 10)), v4 = r2.timezone.apply(v4, 0), v4 = r2.timezone.convert(v4, 0, -1 * o4)), v4;
            for (n4 = r2.getCulture(n4), t3 || (t3 = function(e4) {
              var t4, n5, i4, a5 = u2.max(p3.length, h3.length), r3 = (e4.calendar || e4.calendars.standard).patterns, o5 = [];
              for (i4 = 0; i4 < a5; i4++) {
                for (t4 = p3[i4], n5 = 0; n5 < t4.length; n5++) o5.push(r3[t4[n5]]);
                o5 = o5.concat(h3[i4]);
              }
              return o5;
            }(n4)), a4 = (t3 = l2(t3) ? t3 : [t3]).length; g4 < a4; g4++) if (v4 = y2(e3, t3[g4], n4, i3)) return v4;
            return v4;
          }
          r2.parseDate = function(e3, t3, n4) {
            return x2(e3, t3, n4, false);
          }, r2.parseExactDate = function(e3, t3, n4) {
            return x2(e3, t3, n4, true);
          }, r2.parseInt = function(e3, t3) {
            var n4 = r2.parseFloat(e3, t3);
            return n4 && (n4 |= 0), n4;
          }, r2.parseFloat = function(t3, i3, o4) {
            if (!t3 && 0 !== t3) return null;
            if (typeof t3 === b2) return t3;
            t3 = t3.toString();
            var s4, l3, d4 = (i3 = r2.getCulture(i3)).numberFormat, u3 = d4.percent, c4 = d4.currency, p4 = c4.symbol, h4 = u3.symbol, f4 = t3.indexOf("-");
            return a3.test(t3) ? (t3 = parseFloat(t3.replace(d4["."], ".")), isNaN(t3) && (t3 = null), t3) : f4 > 0 ? null : (f4 = f4 > -1, t3.indexOf(p4) > -1 || o4 && o4.toLowerCase().indexOf("c") > -1 ? (s4 = (d4 = c4).pattern[0].replace("$", p4).split("n"), t3.indexOf(s4[0]) > -1 && t3.indexOf(s4[1]) > -1 && (t3 = t3.replace(s4[0], "").replace(s4[1], ""), f4 = true)) : t3.indexOf(h4) > -1 && (l3 = true, d4 = u3, p4 = h4), t3 = t3.replace("-", "").replace(p4, "").replace(e2, " ").split(d4[","].replace(e2, " ")).join("").replace(n3, "").replace(d4["."], "."), t3 = parseFloat(t3), isNaN(t3) ? t3 = null : f4 && (t3 *= -1), t3 && l3 && (t3 /= 100), t3);
          };
        }(), function() {
          p2._scrollbar = i2, p2.scrollbar = function(e3) {
            if (isNaN(p2._scrollbar) || e3) {
              var t3, n3 = document.createElement("div");
              return n3.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block", n3.innerHTML = "&nbsp;", document.body.appendChild(n3), p2._scrollbar = t3 = n3.offsetWidth - n3.scrollWidth, document.body.removeChild(n3), t3;
            }
            return p2._scrollbar;
          }, p2.isRtl = function(e3) {
            return t2(e3).closest(".k-rtl").length > 0;
          };
          var e2 = document.createElement("table");
          try {
            e2.innerHTML = "<tr><td></td></tr>", p2.tbodyInnerHtml = true;
          } catch (e3) {
            p2.tbodyInnerHtml = false;
          }
          p2.touch = "ontouchstart" in n2;
          var a3 = document.documentElement.style, r3 = p2.transitions = false, o3 = p2.transforms = false, l3 = "HTMLElement" in n2 ? HTMLElement.prototype : [];
          p2.hasHW3D = "WebKitCSSMatrix" in n2 && "m11" in new n2.WebKitCSSMatrix() || "MozPerspective" in a3 || "msPerspective" in a3, p2.cssFlexbox = "flexWrap" in a3 || "WebkitFlexWrap" in a3 || "msFlexWrap" in a3, s2(["Moz", "webkit", "O", "ms"], function() {
            var t3 = this.toString(), n3 = typeof e2.style[t3 + "Transition"] === _2;
            if (n3 || typeof e2.style[t3 + "Transform"] === _2) {
              var i3 = t3.toLowerCase();
              return o3 = { css: "ms" != i3 ? "-" + i3 + "-" : "", prefix: t3, event: "o" === i3 || "webkit" === i3 ? i3 : "" }, n3 && ((r3 = o3).event = r3.event ? r3.event + "TransitionEnd" : "transitionend"), false;
            }
          }), e2 = null, p2.transforms = o3, p2.transitions = r3, p2.devicePixelRatio = n2.devicePixelRatio === i2 ? 1 : n2.devicePixelRatio;
          try {
            p2.screenWidth = n2.outerWidth || n2.screen ? n2.screen.availWidth : n2.innerWidth, p2.screenHeight = n2.outerHeight || n2.screen ? n2.screen.availHeight : n2.innerHeight;
          } catch (e3) {
            p2.screenWidth = n2.screen.availWidth, p2.screenHeight = n2.screen.availHeight;
          }
          p2.detectOS = function(e3) {
            var t3, i3 = false, a4 = [], r4 = !/mobile safari/i.test(e3), o4 = { wp: /(Windows Phone(?: OS)?)\s(\d+)\.(\d+(\.\d+)?)/, fire: /(Silk)\/(\d+)\.(\d+(\.\d+)?)/, android: /(Android|Android.*(?:Opera|Firefox).*?\/)\s*(\d+)\.?(\d+(\.\d+)?)?/, iphone: /(iPhone|iPod).*OS\s+(\d+)[\._]([\d\._]+)/, ipad: /(iPad).*OS\s+(\d+)[\._]([\d_]+)/, meego: /(MeeGo).+NokiaBrowser\/(\d+)\.([\d\._]+)/, webos: /(webOS)\/(\d+)\.(\d+(\.\d+)?)/, blackberry: /(BlackBerry|BB10).*?Version\/(\d+)\.(\d+(\.\d+)?)/, playbook: /(PlayBook).*?Tablet\s*OS\s*(\d+)\.(\d+(\.\d+)?)/, windows: /(MSIE)\s+(\d+)\.(\d+(\.\d+)?)/, tizen: /(tizen).*?Version\/(\d+)\.(\d+(\.\d+)?)/i, sailfish: /(sailfish).*rv:(\d+)\.(\d+(\.\d+)?).*firefox/i, ffos: /(Mobile).*rv:(\d+)\.(\d+(\.\d+)?).*Firefox/ }, s3 = { ios: /^i(phone|pad|pod)$/i, android: /^android|fire$/i, blackberry: /^blackberry|playbook/i, windows: /windows/, wp: /wp/, flat: /sailfish|ffos|tizen/i, meego: /meego/ }, l4 = { tablet: /playbook|ipad|fire/i }, d4 = { omini: /Opera\sMini/i, omobile: /Opera\sMobi/i, firefox: /Firefox|Fennec/i, mobilesafari: /version\/.*safari/i, ie: /MSIE|Windows\sPhone/i, chrome: /chrome|crios/i, webkit: /webkit/i };
            for (var u4 in o4) if (o4.hasOwnProperty(u4) && (a4 = e3.match(o4[u4]))) {
              if ("windows" == u4 && "plugins" in navigator) return false;
              (i3 = {}).device = u4, i3.tablet = $(u4, l4, false), i3.browser = $(e3, d4, "default"), i3.name = $(u4, s3), i3[i3.name] = true, i3.majorVersion = a4[2], i3.minorVersion = (a4[3] || "0").replace("_", "."), t3 = i3.minorVersion.replace(".", "").substr(0, 2), i3.flatVersion = i3.majorVersion + t3 + new Array(3 - (t3.length < 3 ? t3.length : 2)).join("0"), i3.cordova = typeof n2.PhoneGap !== x || typeof n2.cordova !== x, i3.appMode = n2.navigator.standalone || /file|local|wmapp/.test(n2.location.protocol) || i3.cordova, i3.android && (p2.devicePixelRatio < 1.5 && i3.flatVersion < 400 || r4) && (p2.screenWidth > 800 || p2.screenHeight > 800) && (i3.tablet = u4);
              break;
            }
            return i3;
          };
          var d3 = p2.mobileOS = p2.detectOS(navigator.userAgent);
          p2.wpDevicePixelRatio = d3.wp ? screen.width / 320 : 0, p2.hasNativeScrolling = false, (d3.ios || d3.android && d3.majorVersion > 2 || d3.wp) && (p2.hasNativeScrolling = d3), p2.delayedClick = function() {
            if (p2.touch) {
              if (d3.ios) return true;
              if (d3.android) return !p2.browser.chrome || !(p2.browser.version < 32) && !(t2("meta[name=viewport]").attr("content") || "").match(/user-scalable=no/i);
            }
            return false;
          }, p2.mouseAndTouchPresent = p2.touch && !(p2.mobileOS.ios || p2.mobileOS.android), p2.detectBrowser = function(e3) {
            var t3 = false, n3 = [], i3 = { edge: /(edge)[ \/]([\w.]+)/i, webkit: /(chrome|crios)[ \/]([\w.]+)/i, safari: /(webkit)[ \/]([\w.]+)/i, opera: /(opera)(?:.*version|)[ \/]([\w.]+)/i, msie: /(msie\s|trident.*? rv:)([\w.]+)/i, mozilla: /(mozilla)(?:.*? rv:([\w.]+)|)/i };
            for (var a4 in i3) if (i3.hasOwnProperty(a4) && (n3 = e3.match(i3[a4]))) {
              (t3 = {})[a4] = true, t3[n3[1].toLowerCase().split(" ")[0].split("/")[0]] = true, t3.version = parseInt(document.documentMode || n3[2], 10), t3.chrome && e3.match(/(edg)[ \/]([\w.]+)/i) && (t3.chromiumEdge = true);
              break;
            }
            return t3;
          }, p2.browser = p2.detectBrowser(navigator.userAgent), !d3 && p2.touch && p2.browser.safari && (d3 = p2.mobileOS = { ios: true, tablet: "tablet", device: "ipad" }), p2.detectClipboardAccess = function() {
            var e3 = { copy: !!document.queryCommandSupported && document.queryCommandSupported("copy"), cut: !!document.queryCommandSupported && document.queryCommandSupported("cut"), paste: !!document.queryCommandSupported && document.queryCommandSupported("paste") };
            return p2.browser.chrome && (e3.paste = false, p2.browser.version >= 43 && (e3.copy = true, e3.cut = true)), e3;
          }, p2.clipboard = p2.detectClipboardAccess(), p2.zoomLevel = function() {
            try {
              var e3 = p2.browser, t3 = 0, i3 = document.documentElement;
              return e3.msie && 11 == e3.version && i3.scrollHeight > i3.clientHeight && !p2.touch && (t3 = p2.scrollbar()), p2.touch ? i3.clientWidth / n2.innerWidth : e3.msie && e3.version >= 10 ? ((top || n2).document.documentElement.offsetWidth + t3) / (top || n2).innerWidth : 1;
            } catch (e4) {
              return 1;
            }
          }, function(e3) {
            var n3 = "", i3 = t2(document.documentElement), a4 = parseInt(e3.version, 10);
            e3.msie ? n3 = "ie" : e3.mozilla ? n3 = "ff" : e3.safari ? n3 = "safari" : e3.webkit ? n3 = "webkit" : e3.opera ? n3 = "opera" : e3.edge && (n3 = "edge"), n3 && (n3 = "k-" + n3 + " k-" + n3 + a4), p2.mobileOS && (n3 += " k-mobile"), p2.cssFlexbox || (n3 += " k-no-flexbox"), i3.addClass(n3);
          }(p2.browser), p2.eventCapture = document.documentElement.addEventListener;
          var u3 = document.createElement("input");
          p2.placeholder = "placeholder" in u3, p2.propertyChangeEvent = "onpropertychange" in u3, p2.input = function() {
            for (var e3, t3 = ["number", "date", "time", "month", "week", "datetime", "datetime-local"], n3 = t3.length, i3 = "test", a4 = {}, r4 = 0; r4 < n3; r4++) e3 = t3[r4], u3.setAttribute("type", e3), u3.value = i3, a4[e3.replace("-", "")] = "text" !== u3.type && u3.value !== i3;
            return a4;
          }(), u3.style.cssText = "float:left;", p2.cssFloat = !!u3.style.cssFloat, u3 = null, p2.stableSort = function() {
            for (var e3 = [{ index: 0, field: "b" }], t3 = 1; t3 < 513; t3++) e3.push({ index: t3, field: "a" });
            return e3.sort(function(e4, t4) {
              return e4.field > t4.field ? 1 : e4.field < t4.field ? -1 : 0;
            }), 1 === e3[0].index;
          }(), p2.matchesSelector = l3.webkitMatchesSelector || l3.mozMatchesSelector || l3.msMatchesSelector || l3.oMatchesSelector || l3.matchesSelector || l3.matches || function(e3) {
            for (var n3 = document.querySelectorAll ? (this.parentNode || document).querySelectorAll(e3) || [] : t2(e3), i3 = n3.length; i3--; ) if (n3[i3] == this) return true;
            return false;
          }, p2.matchMedia = "matchMedia" in n2, p2.pushState = n2.history && n2.history.pushState, p2.hashChange = "onhashchange" in n2, p2.customElements = "registerElement" in n2.document;
          var c3 = p2.browser.chrome, h3 = p2.browser.crios, f3 = p2.browser.mozilla, m3 = p2.browser.safari;
          p2.msPointers = !c3 && n2.MSPointerEvent, p2.pointers = !c3 && !h3 && !f3 && !m3 && n2.PointerEvent, p2.kineticScrollNeeded = d3 && (p2.touch || p2.msPointers || p2.pointers);
        }();
        var X = {};
        function J(e2, t3, n3, i3) {
          return typeof e2 === _2 && (z(t3) && (i3 = t3, t3 = 400, n3 = false), z(n3) && (i3 = n3, n3 = false), typeof t3 === y && (n3 = t3, t3 = 400), e2 = { effects: e2, duration: t3, reverse: n3, complete: i3 }), o2({ effects: {}, duration: 400, reverse: false, init: d2, teardown: d2, hide: false }, e2, { completeCallback: e2.complete, complete: d2 });
        }
        function Z(e2, n3, i3, a3, r3) {
          for (var o3, s3 = 0, l3 = e2.length; s3 < l3; s3++) (o3 = t2(e2[s3])).queue(function() {
            X.promise(o3, J(n3, i3, a3, r3));
          });
          return e2;
        }
        t2.extend(X, { enabled: true, Element: function(e2) {
          this.element = t2(e2);
        }, promise: function(e2, t3) {
          e2.is(":visible") || e2.css({ display: e2.data("olddisplay") || "block" }).css("display"), t3.hide && e2.data("olddisplay", e2.css("display")).hide(), t3.init && t3.init(), t3.completeCallback && t3.completeCallback(e2), e2.dequeue();
        }, disable: function() {
          this.enabled = false, this.promise = this.promiseShim;
        }, enable: function() {
          this.enabled = true, this.promise = this.animatedPromise;
        } }), X.promiseShim = X.promise, "kendoAnimate" in t2.fn || o2(t2.fn, { kendoStop: function(e2, t3) {
          return this.stop(e2, t3);
        }, kendoAnimate: function(e2, t3, n3, i3) {
          return Z(this, e2, t3, n3, i3);
        }, kendoAddClass: function(e2, t3) {
          return r2.toggleClass(this, e2, t3, true);
        }, kendoRemoveClass: function(e2, t3) {
          return r2.toggleClass(this, e2, t3, false);
        }, kendoToggleClass: function(e2, t3, n3) {
          return r2.toggleClass(this, e2, t3, n3);
        } });
        var ee = /&/g, te = /</g, ne = /"/g, ie = /'/g, ae = />/g;
        var re = function(e2) {
          return e2.target;
        };
        p2.touch && (re = function(e2) {
          var t3 = "originalEvent" in e2 ? e2.originalEvent.changedTouches : "changedTouches" in e2 ? e2.changedTouches : null;
          return t3 ? document.elementFromPoint(t3[0].clientX, t3[0].clientY) : e2.target;
        }, s2(["swipe", "swipeLeft", "swipeRight", "swipeUp", "swipeDown", "doubleTap", "tap"], function(e2, n3) {
          t2.fn[n3] = function(e3) {
            return this.on(n3, e3);
          };
        })), p2.touch ? p2.mobileOS ? (p2.mousedown = "touchstart", p2.mouseup = "touchend", p2.mousemove = "touchmove", p2.mousecancel = "touchcancel", p2.click = "touchend", p2.resize = "orientationchange") : (p2.mousedown = "mousedown touchstart", p2.mouseup = "mouseup touchend", p2.mousemove = "mousemove touchmove", p2.mousecancel = "mouseleave touchcancel", p2.click = "click", p2.resize = "resize") : p2.pointers ? (p2.mousemove = "pointermove", p2.mousedown = "pointerdown", p2.mouseup = "pointerup", p2.mousecancel = "pointercancel", p2.click = "pointerup", p2.resize = "orientationchange resize") : p2.msPointers ? (p2.mousemove = "MSPointerMove", p2.mousedown = "MSPointerDown", p2.mouseup = "MSPointerUp", p2.mousecancel = "MSPointerCancel", p2.click = "MSPointerUp", p2.resize = "orientationchange resize") : (p2.mousemove = "mousemove", p2.mousedown = "mousedown", p2.mouseup = "mouseup", p2.mousecancel = "mouseleave", p2.click = "click", p2.resize = "resize");
        var oe = /^([a-z]+:)?\/\//i;
        o2(r2, { widgets: [], _widgetRegisteredCallbacks: [], ui: r2.ui || {}, fx: r2.fx || function(e2) {
          return new r2.effects.Element(e2);
        }, effects: r2.effects || X, mobile: r2.mobile || {}, data: r2.data || {}, dataviz: r2.dataviz || {}, drawing: r2.drawing || {}, spreadsheet: { messages: {} }, keys: { INSERT: 45, DELETE: 46, BACKSPACE: 8, TAB: 9, ENTER: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, END: 35, HOME: 36, SPACEBAR: 32, PAGEUP: 33, PAGEDOWN: 34, F2: 113, F10: 121, F12: 123, NUMPAD_PLUS: 107, NUMPAD_MINUS: 109, NUMPAD_DOT: 110 }, support: r2.support || p2, animate: r2.animate || Z, ns: "", attr: function(e2) {
          return "data-" + r2.ns + e2;
        }, getShadows: function(e2) {
          var t3 = e2.css(r2.support.transitions.css + "box-shadow") || e2.css("box-shadow"), n3 = t3 && t3.match(m2) || [0, 0, 0, 0, 0], i3 = u2.max(+n3[3], +(n3[4] || 0));
          return { left: -n3[1] + i3, right: +n3[1] + i3, bottom: +n3[2] + i3 };
        }, wrap: function(e2, i3) {
          var a3, o3 = r2._outerWidth, s3 = r2._outerHeight, l3 = e2.parent(), d3 = o3(n2);
          if (l3.removeClass("k-animation-container-sm"), l3.hasClass("k-animation-container")) q(e2, i3);
          else {
            var u3 = e2[0].style.width, c3 = e2[0].style.height, p3 = h2.test(u3), f3 = h2.test(c3), m3 = e2.hasClass("k-tooltip") || e2.is(".k-menu-horizontal.k-context-menu");
            a3 = p3 || f3, !p3 && (!i3 || i3 && u3 || m3) && (u3 = i3 ? o3(e2) + 1 : o3(e2)), (!f3 && (!i3 || i3 && c3) || e2.is(".k-menu-horizontal.k-context-menu")) && (c3 = s3(e2)), e2.wrap(t2("<div/>").addClass("k-animation-container").attr("role", "region").css({ width: u3, height: c3 })), l3 = e2.parent(), a3 && e2.css({ width: "100%", height: "100%", boxSizing: "border-box", mozBoxSizing: "border-box", webkitBoxSizing: "border-box" });
          }
          return d3 < o3(l3) && (l3.addClass("k-animation-container-sm"), q(e2, i3)), l3;
        }, deepExtend: G, getComputedStyles: Q, isScrollable: function(e2) {
          if ("false" === e2.dataset[r2.ns + "scrollable"]) return false;
          if (e2 && e2.className && "string" == typeof e2.className && e2.className.indexOf("k-auto-scrollable") > -1) return true;
          var t3 = Q(e2, ["overflow"]).overflow;
          return t3.indexOf("auto") > -1 || t3.indexOf("scroll") > -1;
        }, scrollLeft: function e2(n3, a3) {
          var r3, o3, s3 = p2.browser.webkit, l3 = p2.browser.mozilla, d3 = p2.browser.version;
          if (n3 instanceof t2 && a3 !== i2) n3.each(function(t3, n4) {
            e2(n4, a3);
          });
          else if (r3 = n3 instanceof t2 ? n3[0] : n3) {
            if (o3 = p2.isRtl(n3), a3 === i2) return o3 && s3 && (d3 < 85 || p2.browser.safari) ? r3.scrollWidth - r3.clientWidth - r3.scrollLeft : Math.abs(r3.scrollLeft);
            o3 && s3 && (d3 < 85 || p2.browser.safari) ? r3.scrollLeft = r3.scrollWidth - r3.clientWidth - a3 : r3.scrollLeft = o3 && (l3 || s3) && a3 > 0 ? -a3 : a3;
          }
        }, size: function(e2) {
          var t3, n3 = 0;
          for (t3 in e2) e2.hasOwnProperty(t3) && "toJSON" != t3 && n3++;
          return n3;
        }, toCamelCase: Y, toHyphens: function(e2) {
          return e2.replace(/([a-z][A-Z])/g, function(e3) {
            return e3.charAt(0) + "-" + e3.charAt(1).toLowerCase();
          });
        }, getOffset: r2.getOffset || function(e2, t3, i3) {
          t3 || (t3 = "offset");
          var a3 = e2[t3](), r3 = { top: a3.top, right: a3.right, bottom: a3.bottom, left: a3.left };
          if (p2.browser.msie && (p2.pointers || p2.msPointers) && !i3) {
            var o3 = p2.isRtl(e2) ? 1 : -1;
            r3.top -= n2.pageYOffset - document.documentElement.scrollTop, r3.left -= n2.pageXOffset + o3 * document.documentElement.scrollLeft;
          }
          return r3;
        }, parseEffects: r2.parseEffects || function(e2) {
          var t3 = {};
          return s2("string" == typeof e2 ? e2.split(" ") : e2, function(e3) {
            t3[e3] = this;
          }), t3;
        }, toggleClass: r2.toggleClass || function(e2, t3, n3, i3) {
          return t3 && (t3 = t3.split(" "), s2(t3, function(t4, n4) {
            e2.toggleClass(n4, i3);
          })), e2;
        }, directions: r2.directions || { left: { reverse: "right" }, right: { reverse: "left" }, down: { reverse: "up" }, up: { reverse: "down" }, top: { reverse: "bottom" }, bottom: { reverse: "top" }, in: { reverse: "out" }, out: { reverse: "in" } }, Observable: N, Class: F, Template: a2, template: a2.compile.bind(a2), render: a2.render.bind(a2), stringify: c2.stringify.bind(c2), eventTarget: re, htmlEncode: function(e2) {
          return ("" + e2).replace(ee, "&amp;").replace(te, "&lt;").replace(ae, "&gt;").replace(ne, "&quot;").replace(ie, "&#39;");
        }, unescape: function(e2) {
          var t3;
          try {
            t3 = n2.decodeURIComponent(e2);
          } catch (n3) {
            t3 = e2.replace(/%u([\dA-F]{4})|%([\dA-F]{2})/gi, function(e3, t4, n4) {
              return String.fromCharCode(parseInt("0x" + (t4 || n4), 16));
            });
          }
          return t3;
        }, isLocalUrl: function(e2) {
          return e2 && !oe.test(e2);
        }, expr: function(e2, t3, n3) {
          return typeof t3 == _2 && (n3 = t3, t3 = false), n3 = n3 || "d", (e2 = e2 || "") && "[" !== e2.charAt(0) && (e2 = "." + e2), t3 ? (e2 = function(e3, t4) {
            var n4, i3, a3, r3, o3 = t4 || "d", s3 = 1;
            for (i3 = 0, a3 = e3.length; i3 < a3; i3++) "" !== (r3 = e3[i3]) && (0 !== (n4 = r3.indexOf("[")) && (-1 == n4 ? r3 = "." + r3 : (s3++, r3 = "." + r3.substring(0, n4) + " || {})" + r3.substring(n4))), s3++, o3 += r3 + (i3 < a3 - 1 ? " || {})" : ")"));
            return new Array(s3).join("(") + o3;
          }((e2 = (e2 = e2.replace(/"([^.]*)\.([^"]*)"/g, '"$1_$DOT$_$2"')).replace(/'([^.]*)\.([^']*)'/g, "'$1_$DOT$_$2'")).split("."), n3), e2 = e2.replace(/_\$DOT\$_/g, ".")) : e2 = n3 + e2, e2;
        }, getter: function(e2, t3) {
          var n3 = e2 + t3;
          return S[n3] = S[n3] || new Function("d", "return " + r2.expr(e2, t3));
        }, setter: function(e2) {
          return I[e2] = I[e2] || new Function("d,value", r2.expr(e2) + "=value");
        }, accessor: function(e2) {
          return { get: r2.getter(e2), set: r2.setter(e2) };
        }, guid: function() {
          var e2, t3, n3 = "", i3 = "abcdef";
          for (n3 += i3[Math.floor(Math.random() * Math.floor(i3.length))], e2 = 1; e2 < 32; e2++) t3 = 16 * u2.random() | 0, 8 != e2 && 12 != e2 && 16 != e2 && 20 != e2 || (n3 += "-"), n3 += (12 == e2 ? 4 : 16 == e2 ? 3 & t3 | 8 : t3).toString(16);
          return n3;
        }, roleSelector: function(e2) {
          return e2.replace(/(\S+)/g, "[" + r2.attr("role") + "=$1],").slice(0, -1);
        }, directiveSelector: function(e2) {
          var t3 = e2.split(" ");
          if (t3) for (var n3 = 0; n3 < t3.length; n3++) "view" != t3[n3] && (t3[n3] = t3[n3].replace(/(\w*)(view|bar|strip|over)$/, "$1-$2"));
          return t3.join(" ").replace(/(\S+)/g, "kendo-mobile-$1,").slice(0, -1);
        }, triggeredByInput: function(e2) {
          return /^(label|input|textarea|select)$/i.test(e2.target.tagName);
        }, onWidgetRegistered: function(e2) {
          for (var t3 = 0, n3 = r2.widgets.length; t3 < n3; t3++) e2(r2.widgets[t3]);
          r2._widgetRegisteredCallbacks.push(e2);
        }, logToConsole: function(e2, t3) {
          var i3 = n2.console;
          !r2.suppressLog && void 0 !== i3 && i3.log && i3[t3 || "log"](e2);
        } });
        var se = N.extend({ init: function(t3, n3) {
          var i3 = this;
          KendoLicensing.validatePackage(e), i3.element = r2.jQuery(t3).handler(i3), i3.angular("init", n3), N.fn.init.call(i3);
          var a3, s3 = n3 ? n3.dataSource : null;
          n3 && (a3 = (i3.componentTypes || {})[(n3 || {}).componentType]), s3 && (n3 = o2({}, n3, { dataSource: {} })), n3 = i3.options = o2(true, {}, i3.options, i3.defaults, a3 || {}, n3), s3 && (n3.dataSource = s3), i3.element.attr(r2.attr("role")) || i3.element.attr(r2.attr("role"), (n3.name || "").toLowerCase()), i3.element.data("kendo" + n3.prefix + n3.name, i3), i3.bind(i3.events, n3);
        }, events: [], options: { prefix: "" }, _hasBindingTarget: function() {
          return !!this.element[0].kendoBindingTarget;
        }, _tabindex: function(e2) {
          e2 = e2 || this.wrapper;
          var t3 = this.element, n3 = "tabindex", i3 = e2.attr(n3) || t3.attr(n3);
          t3.removeAttr(n3), e2.attr(n3, isNaN(i3) ? 0 : i3);
        }, setOptions: function(e2) {
          this._clearCssClasses(e2), this._setEvents(e2), t2.extend(this.options, e2), this._applyCssClasses();
        }, _setEvents: function(e2) {
          for (var t3, n3 = this, i3 = 0, a3 = n3.events.length; i3 < a3; i3++) t3 = n3.events[i3], n3.options[t3] && e2[t3] && (n3.unbind(t3, n3.options[t3]), n3._events && n3._events[t3] && delete n3._events[t3]);
          n3.bind(n3.events, e2);
        }, resize: function(e2) {
          var t3 = this.getSize(), n3 = this._size;
          (e2 || (t3.width > 0 || t3.height > 0) && (!n3 || t3.width !== n3.width || t3.height !== n3.height)) && (this._size = t3, this._resize(t3, e2), this.trigger("resize", t3));
        }, getSize: function() {
          return r2.dimensions(this.element);
        }, size: function(e2) {
          if (!e2) return this.getSize();
          this.setSize(e2);
        }, setSize: t2.noop, _resize: t2.noop, destroy: function() {
          var e2 = this;
          e2.element.removeData("kendo" + e2.options.prefix + e2.options.name), e2.element.removeData("handler"), e2.unbind();
        }, _destroy: function() {
          this.destroy();
        }, angular: function() {
        }, _muteAngularRebind: function(e2) {
          this._muteRebind = true, e2.call(this), this._muteRebind = false;
        }, _applyCssClasses: function(e2) {
          var t3, n3, i3, a3, o3 = this.__proto__.options, s3 = this.options, l3 = e2 || this.wrapper || this.element, d3 = [];
          if (r2.cssProperties.propertyDictionary[o3.name]) {
            for (t3 = 0; t3 < E.length; t3++) n3 = E[t3], a3 = this.options._altname || o3.name, o3.hasOwnProperty(n3) && ("themeColor" === n3 ? (i3 = r2.cssProperties.getValidClass({ widget: a3, propName: "fillMode", value: s3.fillMode })) && i3.length && d3.push(r2.cssProperties.getValidClass({ widget: a3, propName: n3, value: s3[n3], fill: s3.fillMode })) : d3.push(r2.cssProperties.getValidClass({ widget: a3, propName: n3, value: s3[n3] })));
            l3.addClass(d3.join(" "));
          }
        }, _ariaLabel: function(e2) {
          var n3, i3 = this.element, a3 = i3.attr("id"), o3 = t2('label[for="' + a3 + '"]'), s3 = i3.attr(T), l3 = i3.attr(C);
          e2[0] !== i3[0] && (s3 ? e2.attr(T, s3) : l3 ? e2.attr(C, l3) : o3.length && (n3 = o3.attr("id") || this._generateLabelId(o3, a3 || r2.guid()), e2.attr(C, n3)));
        }, _clearCssClasses: function(e2, t3) {
          var n3, i3, a3, o3 = this.__proto__.options, s3 = this.options, l3 = t3 || this.wrapper || this.element;
          if (r2.cssProperties.propertyDictionary[o3.name]) for (n3 = 0; n3 < E.length; n3++) i3 = E[n3], a3 = this.options._altname || o3.name, o3.hasOwnProperty(i3) && e2.hasOwnProperty(i3) && ("themeColor" === i3 ? l3.removeClass(r2.cssProperties.getValidClass({ widget: a3, propName: i3, value: s3[i3], fill: s3.fillMode })) : ("fillMode" === i3 && l3.removeClass(r2.cssProperties.getValidClass({ widget: a3, propName: "themeColor", value: s3.themeColor, fill: s3.fillMode })), l3.removeClass(r2.cssProperties.getValidClass({ widget: a3, propName: i3, value: s3[i3] }))));
        }, _generateLabelId: function(e2, t3) {
          var n3 = t3 + "_label";
          return e2.attr("id", n3), n3;
        } }), le = se.extend({ dataItems: function() {
          return this.dataSource.flatView();
        }, _angularItems: function(e2) {
          var n3 = this;
          n3.angular(e2, function() {
            return { elements: n3.items(), data: t2.map(n3.dataItems(), function(e3) {
              return { dataItem: e3 };
            }) };
          });
        } });
        r2.dimensions = function(e2, t3) {
          var n3 = e2[0];
          return t3 && e2.css(t3), { width: n3.offsetWidth, height: n3.offsetHeight };
        }, r2.notify = d2;
        var de = /template$/i, ue = /^\s*(?:\{(?:.|\r\n|\n)*\}|\[(?:.|\r\n|\n)*\])\s*$/, ce = /^\{(\d+)(:[^\}]+)?\}|^\[[A-Za-z_]+\]$/, pe = /([A-Z])/g;
        function he(e2, t3) {
          var n3;
          return 0 === t3.indexOf("data") && (t3 = (t3 = t3.substring(4)).charAt(0).toLowerCase() + t3.substring(1)), t3 = t3.replace(pe, "-$1"), null === (n3 = e2.getAttribute("data-" + r2.ns + t3)) ? n3 = i2 : "null" === n3 ? n3 = null : "true" === n3 ? n3 = true : "false" === n3 ? n3 = false : g2.test(n3) && "mask" != t3 && "format" != t3 ? n3 = parseFloat(n3) : ue.test(n3) && !ce.test(n3) && (n3 = new Function("return (" + n3 + ")")()), n3;
        }
        function fe(e2, n3, a3) {
          var o3, s3, l3 = {}, d3 = e2.getAttribute("data-" + r2.ns + "role");
          for (o3 in n3) (s3 = he(e2, o3)) !== i2 && (de.test(o3) && "drawer" != d3 && ("string" == typeof s3 ? t2("#" + s3).length ? s3 = r2.template(t2("#" + s3).html()) : a3 && (s3 = r2.template(a3[s3])) : s3 = e2.getAttribute(o3)), l3[o3] = s3);
          return l3;
        }
        function me(e2, n3) {
          return t2.contains(e2, n3) ? -1 : 1;
        }
        function ge() {
          var e2 = t2(this);
          return t2.inArray(e2.attr("data-" + r2.ns + "role"), ["slider", "rangeslider", "breadcrumb"]) > -1 || e2.is(":visible");
        }
        r2.initWidget = function(e2, a3, o3) {
          var s3, l3, d3, u3, c3, p3, h3, f3, m3, g3;
          if (o3 ? o3.roles && (o3 = o3.roles) : o3 = r2.ui.roles, p3 = (e2 = e2.nodeType ? e2 : e2[0]).getAttribute("data-" + r2.ns + "role")) {
            d3 = (m3 = -1 === p3.indexOf(".")) ? o3[p3] : r2.getter(p3)(n2);
            var v3 = t2(e2).data(), b3 = d3 ? "kendo" + d3.fn.options.prefix + d3.fn.options.name : "";
            for (var k3 in g3 = m3 ? new RegExp("^kendo.*" + p3 + "$", "i") : new RegExp("^" + b3 + "$", "i"), v3) if (k3.match(g3)) {
              if (k3 !== b3) return v3[k3];
              s3 = v3[k3];
            }
            if (d3) {
              for (f3 = he(e2, "dataSource"), a3 = t2.extend({}, fe(e2, t2.extend({}, d3.fn.options, d3.fn.defaults)), a3), f3 && (a3.dataSource = typeof f3 === _2 ? r2.getter(f3)(n2) : f3), u3 = 0, c3 = d3.fn.events.length; u3 < c3; u3++) (h3 = he(e2, l3 = d3.fn.events[u3])) !== i2 && (a3[l3] = r2.getter(h3)(n2));
              return s3 ? t2.isEmptyObject(a3) || s3.setOptions(a3) : s3 = new d3(e2, a3), s3;
            }
          }
        }, r2.rolesFromNamespaces = function(e2) {
          var t3, n3, i3 = [];
          for (e2[0] || (e2 = [r2.ui, r2.dataviz.ui]), t3 = 0, n3 = e2.length; t3 < n3; t3++) i3[t3] = e2[t3].roles;
          return o2.apply(null, [{}].concat(i3.reverse()));
        }, r2.init = function(e2) {
          var n3 = r2.rolesFromNamespaces(D.call(arguments, 1));
          t2(e2).find("[data-" + r2.ns + "role]").addBack().each(function() {
            r2.initWidget(this, {}, n3);
          });
        }, r2.destroy = function(e2) {
          t2(e2).find("[data-" + r2.ns + "role]").addBack().each(function() {
            var e3 = t2(this).data();
            for (var n3 in e3) 0 === n3.indexOf("kendo") && typeof e3[n3].destroy === v2 && e3[n3].destroy();
          });
        }, r2.resize = function(e2, n3) {
          var i3 = t2(e2).find("[data-" + r2.ns + "role]").addBack().filter(ge);
          if (i3.length) {
            var a3 = t2.makeArray(i3);
            a3.sort(me), t2.each(a3, function() {
              var e3 = r2.widgetInstance(t2(this));
              e3 && e3.resize(n3);
            });
          }
        }, r2.parseOptions = fe, o2(r2.ui, { Widget: se, DataBoundWidget: le, roles: {}, progress: function(e2, n3, i3) {
          var a3, o3, s3, l3, d3, u3 = e2.find(".k-loading-mask"), c3 = r2.support, p3 = c3.browser;
          d3 = (i3 = t2.extend({}, { width: "100%", height: "100%", top: e2.scrollTop(), opacity: false }, i3)).opacity ? "k-loading-mask k-opaque" : "k-loading-mask", n3 ? u3.length || (o3 = (a3 = c3.isRtl(e2)) ? "right" : "left", l3 = r2.scrollLeft(e2), s3 = p3.webkit && a3 ? e2[0].scrollWidth - e2.width() - 2 * l3 : 0, u3 = t2(r2.format("<div class='{0}'><span role='alert' aria-live='polite' class='k-loading-text'>{1}</span><div class='k-loading-image'></div><div class='k-loading-color'></div></div>", d3, r2.ui.progress.messages.loading)).width(i3.width).height(i3.height).css("top", i3.top).css(o3, Math.abs(l3) + s3).prependTo(e2)) : u3 && u3.remove();
        }, plugin: function(e2, n3, a3) {
          var o3, s3 = e2.fn.options.name;
          a3 = a3 || "", (n3 = n3 || r2.ui)[s3] = e2, n3.roles[s3.toLowerCase()] = e2, o3 = "getKendo" + a3 + s3;
          var l3 = { name: s3 = "kendo" + a3 + s3, widget: e2, prefix: a3 || "" };
          r2.widgets.push(l3);
          for (var d3 = 0, u3 = r2._widgetRegisteredCallbacks.length; d3 < u3; d3++) r2._widgetRegisteredCallbacks[d3](l3);
          t2.fn[s3] = function(n4) {
            var a4, o4 = this;
            return typeof n4 === _2 ? (a4 = D.call(arguments, 1), this.each(function() {
              var e3, l4, d4 = t2.data(this, s3);
              if (!d4) throw new Error(r2.format("Cannot call method '{0}' of {1} before it is initialized", n4, s3));
              if (typeof (e3 = d4[n4]) !== v2) throw new Error(r2.format("Cannot find method '{0}' of {1}", n4, s3));
              if ((l4 = e3.apply(d4, a4)) !== i2) return o4 = l4, false;
            })) : this.each(function() {
              return new e2(this, n4);
            }), o4;
          }, t2.fn[s3].widget = e2, t2.fn[o3] = function() {
            return this.data(s3);
          };
        } }), r2.ui.progress.messages = { loading: "Loading..." };
        var ve = { bind: function() {
          return this;
        }, nullObject: true, options: {} }, _e = se.extend({ init: function(e2, t3) {
          se.fn.init.call(this, e2, t3), this.element.autoApplyNS(), this.wrapper = this.element, this.element.addClass("km-widget");
        }, destroy: function() {
          se.fn.destroy.call(this), this.element.kendoDestroy();
        }, options: { prefix: "Mobile" }, events: [], view: function() {
          var e2 = this.element.closest(r2.roleSelector("view splitview modalview drawer"));
          return r2.widgetInstance(e2, r2.mobile.ui) || ve;
        }, viewHasNativeScrolling: function() {
          var e2 = this.view();
          return e2 && e2.options.useNativeScrolling;
        }, container: function() {
          var e2 = this.element.closest(r2.roleSelector("view layout modalview drawer splitview"));
          return r2.widgetInstance(e2.eq(0), r2.mobile.ui) || ve;
        } });
        function be(e2, n3) {
          var i3 = e2.nodeName.toLowerCase();
          return (/input|select|textarea|button|object/.test(i3) ? !e2.disabled : "a" === i3 && e2.href || n3) && function(e3) {
            return t2.expr.pseudos.visible(e3) && !t2(e3).parents().addBack().filter(function() {
              return "hidden" === t2.css(this, "visibility");
            }).length;
          }(e2);
        }
        o2(r2.mobile, { init: function(e2) {
          r2.init(e2, r2.mobile.ui, r2.ui, r2.dataviz.ui);
        }, appLevelNativeScrolling: function() {
          return r2.mobile.application && r2.mobile.application.options && r2.mobile.application.options.useNativeScrolling;
        }, roles: {}, ui: { Widget: _e, DataBoundWidget: le.extend(_e.prototype), roles: {}, plugin: function(e2) {
          r2.ui.plugin(e2, r2.mobile.ui, "Mobile");
        } } }), G(r2.dataviz, { init: function(e2) {
          r2.init(e2, r2.dataviz.ui);
        }, ui: { roles: {}, themes: {}, views: [], plugin: function(e2) {
          r2.ui.plugin(e2, r2.dataviz.ui);
        } }, roles: {} }), r2.touchScroller = function(e2, n3) {
          return n3 || (n3 = {}), n3.useNative = true, t2(e2).map(function(e3, i3) {
            return i3 = t2(i3), !(!p2.kineticScrollNeeded || !r2.mobile.ui.Scroller || i3.data("kendoMobileScroller")) && (i3.kendoMobileScroller(n3), i3.data("kendoMobileScroller"));
          })[0];
        }, r2.preventDefault = function(e2) {
          e2.preventDefault();
        }, r2.widgetInstance = function(e2, t3) {
          var i3, a3, o3 = e2.data(r2.ns + "role"), s3 = [], l3 = e2.data("kendoView");
          if (o3) {
            if ("content" === o3 && (o3 = "scroller"), "editortoolbar" === o3) {
              var d3 = e2.data("kendoEditorToolbar");
              if (d3) return d3;
            }
            if ("view" === o3 && l3) return l3;
            if (t3) if (t3[0]) for (i3 = 0, a3 = t3.length; i3 < a3; i3++) s3.push(t3[i3].roles[o3]);
            else s3.push(t3.roles[o3]);
            else s3 = [r2.ui.roles[o3], r2.dataviz.ui.roles[o3], r2.mobile.ui.roles[o3]];
            for (o3.indexOf(".") >= 0 && (s3 = [r2.getter(o3)(n2)]), i3 = 0, a3 = s3.length; i3 < a3; i3++) {
              var u3 = s3[i3];
              if (u3) {
                var c3 = e2.data("kendo" + u3.fn.options.prefix + u3.fn.options.name);
                if (c3) return c3;
              }
            }
          }
        }, r2.onResize = function(e2) {
          var i3 = e2;
          return p2.mobileOS.android && (i3 = function() {
            setTimeout(e2, 600);
          }), t2(n2).on(p2.resize, i3), i3;
        }, r2.unbindResize = function(e2) {
          t2(n2).off(p2.resize, e2);
        }, r2.attrValue = function(e2, t3) {
          return e2.data(r2.ns + t3);
        }, r2.days = { Sunday: 0, Monday: 1, Tuesday: 2, Wednesday: 3, Thursday: 4, Friday: 5, Saturday: 6 }, t2.extend(t2.expr.pseudos, { kendoFocusable: function(e2) {
          var n3 = t2.attr(e2, "tabindex");
          return be(e2, !isNaN(n3) && n3 > -1);
        } });
        var ke = ["mousedown", "mousemove", "mouseenter", "mouseleave", "mouseover", "mouseout", "mouseup", "click"], we = { setupMouseMute: function() {
          var e2 = 0, n3 = ke.length, i3 = document.documentElement;
          if (!we.mouseTrap && p2.eventCapture) {
            we.mouseTrap = true, we.bustClick = false, we.captureMouse = false;
            for (var a3 = function(e3) {
              we.captureMouse && ("click" === e3.type ? we.bustClick && !t2(e3.target).is("label, input, [data-rel=external]") && (e3.preventDefault(), e3.stopPropagation()) : e3.stopPropagation());
            }; e2 < n3; e2++) i3.addEventListener(ke[e2], a3, true);
          }
        }, muteMouse: function(e2) {
          we.captureMouse = true, e2.data.bustClick && (we.bustClick = true), clearTimeout(we.mouseTrapTimeoutID);
        }, unMuteMouse: function() {
          clearTimeout(we.mouseTrapTimeoutID), we.mouseTrapTimeoutID = setTimeout(function() {
            we.captureMouse = false, we.bustClick = false;
          }, 400);
        } }, ye = { down: "touchstart mousedown", move: "mousemove touchmove", up: "mouseup touchend touchcancel", cancel: "mouseleave touchcancel" };
        p2.touch && (p2.mobileOS.ios || p2.mobileOS.android) ? ye = { down: "touchstart", move: "touchmove", up: "touchend touchcancel", cancel: "touchcancel" } : p2.pointers ? ye = { down: "pointerdown", move: "pointermove", up: "pointerup", cancel: "pointercancel pointerleave" } : p2.msPointers && (ye = { down: "MSPointerDown", move: "MSPointerMove", up: "MSPointerUp", cancel: "MSPointerCancel MSPointerLeave" }), p2.msPointers && !("onmspointerenter" in n2) && t2.each({ MSPointerEnter: "MSPointerOver", MSPointerLeave: "MSPointerOut" }, function(e2, n3) {
          t2.event.special[e2] = { delegateType: n3, bindType: n3, handle: function(e3) {
            var i3, a3 = this, r3 = e3.relatedTarget, o3 = e3.handleObj;
            return r3 && (r3 === a3 || t2.contains(a3, r3)) || (e3.type = o3.origType, i3 = o3.handler.apply(this, arguments), e3.type = n3), i3;
          } };
        });
        var xe = function(e2) {
          return ye[e2] || e2;
        }, Ce = /([^ ]+)/g;
        r2.applyEventMap = function(e2, t3) {
          return e2 = e2.replace(Ce, xe), t3 && (e2 = e2.replace(Ce, "$1." + t3)), e2;
        }, r2.keyDownHandler = function(e2, t3) {
          var n3 = t3._events.kendoKeydown;
          if (!n3) return true;
          n3 = n3.slice(), e2.sender = t3, e2.preventKendoKeydown = false;
          for (var i3 = 0, a3 = n3.length; i3 < a3; i3++) n3[i3].call(t3, e2);
          return !e2.preventKendoKeydown;
        };
        var Te = t2.fn.on;
        function Se(e2, t3) {
          return new Se.fn.init(e2, t3);
        }
        A(true, Se, t2), Se.fn = Se.prototype = new t2(), Se.fn.constructor = Se, Se.fn.init = function(e2, n3) {
          return n3 && n3 instanceof t2 && !(n3 instanceof Se) && (n3 = Se(n3)), t2.fn.init.call(this, e2, n3, Ie);
        }, Se.fn.init.prototype = Se.fn;
        var Ie = Se(document);
        o2(Se.fn, { handler: function(e2) {
          return this.data("handler", e2), this;
        }, autoApplyNS: function(e2) {
          return this.data("kendoNS", e2 || r2.guid()), this;
        }, on: function() {
          var e2 = this, t3 = e2.data("kendoNS");
          if (1 === arguments.length) return Te.call(e2, arguments[0]);
          var n3 = e2, i3 = D.call(arguments);
          typeof i3[i3.length - 1] === x && i3.pop();
          var a3 = i3[i3.length - 1], o3 = r2.applyEventMap(i3[0], t3);
          if (p2.mouseAndTouchPresent && o3.search(/mouse|click/) > -1 && this[0] !== document.documentElement) {
            we.setupMouseMute();
            var s3 = 2 === i3.length ? null : i3[1], l3 = o3.indexOf("click") > -1 && o3.indexOf("touchend") > -1;
            Te.call(this, { touchstart: we.muteMouse, touchend: we.unMuteMouse }, s3, { bustClick: l3 });
          }
          if (-1 !== arguments[0].indexOf("keydown") && i3[1] && i3[1].options) {
            i3[0] = o3;
            var d3 = i3[1], u3 = i3[i3.length - 1];
            return i3[i3.length - 1] = function(e3) {
              if (r2.keyDownHandler(e3, d3)) return u3.apply(this, [e3]);
            }, Te.apply(e2, i3), e2;
          }
          return typeof a3 === _2 && (n3 = e2.data("handler"), a3 = n3[a3], i3[i3.length - 1] = function(e3) {
            a3.call(n3, e3);
          }), i3[0] = o3, Te.apply(e2, i3), e2;
        }, kendoDestroy: function(e2) {
          return (e2 = e2 || this.data("kendoNS")) && this.off("." + e2), this;
        } }), r2.jQuery = Se, r2.eventMap = ye, r2.timezone = /* @__PURE__ */ function() {
          var e2 = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 }, t3 = { Sun: 0, Mon: 1, Tue: 2, Wed: 3, Thu: 4, Fri: 5, Sat: 6 };
          function n3(n4, i4) {
            var a4, r3, o3, s3 = i4[3], l3 = i4[4], d3 = i4[5], u3 = i4[8];
            return u3 || (i4[8] = u3 = {}), u3[n4] ? u3[n4] : (isNaN(l3) ? 0 === l3.indexOf("last") ? (a4 = new Date(Date.UTC(n4, e2[s3] + 1, 1, d3[0] - 24, d3[1], d3[2], 0)), r3 = t3[l3.substr(4, 3)], o3 = a4.getUTCDay(), a4.setUTCDate(a4.getUTCDate() + r3 - o3 - (r3 > o3 ? 7 : 0))) : l3.indexOf(">=") >= 0 ? (a4 = new Date(Date.UTC(n4, e2[s3], l3.substr(5), d3[0], d3[1], d3[2], 0)), r3 = t3[l3.substr(0, 3)], o3 = a4.getUTCDay(), a4.setUTCDate(a4.getUTCDate() + r3 - o3 + (r3 < o3 ? 7 : 0))) : l3.indexOf("<=") >= 0 && (a4 = new Date(Date.UTC(n4, e2[s3], l3.substr(5), d3[0], d3[1], d3[2], 0)), r3 = t3[l3.substr(0, 3)], o3 = a4.getUTCDay(), a4.setUTCDate(a4.getUTCDate() + r3 - o3 - (r3 > o3 ? 7 : 0))) : a4 = new Date(Date.UTC(n4, e2[s3], l3, d3[0], d3[1], d3[2], 0)), u3[n4] = a4);
          }
          function i3(e3, t4, i4) {
            if (!(t4 = t4[i4])) {
              var a4 = i4.split(":"), r3 = 0;
              return a4.length > 1 && (r3 = 60 * a4[0] + Number(a4[1])), [-1e6, "max", "-", "Jan", 1, [0, 0, 0], r3, "-"];
            }
            var o3 = new Date(e3).getUTCFullYear();
            t4 = jQuery2.grep(t4, function(e4) {
              var t5 = e4[0], n4 = e4[1];
              return t5 <= o3 && (n4 >= o3 || t5 == o3 && "only" == n4 || "max" == n4);
            }), t4.push(e3), t4.sort(function(e4, t5) {
              return "number" != typeof e4 && (e4 = Number(n3(o3, e4))), "number" != typeof t5 && (t5 = Number(n3(o3, t5))), e4 - t5;
            });
            var s3 = t4[jQuery2.inArray(e3, t4) - 1] || t4[t4.length - 1];
            return isNaN(s3) ? s3 : null;
          }
          function a3(e3, t4, n4, a4) {
            typeof e3 != b2 && (e3 = Date.UTC(e3.getFullYear(), e3.getMonth(), e3.getDate(), e3.getHours(), e3.getMinutes(), e3.getSeconds(), e3.getMilliseconds()));
            var r3 = function(e4, t5, n5) {
              var i4 = t5[n5];
              if ("string" == typeof i4 && (i4 = t5[i4]), !i4) throw new Error('Timezone "' + n5 + '" is either incorrect, or kendo.timezones.min.js is not included.');
              for (var a5 = i4.length - 1; a5 >= 0; a5--) {
                var r4 = i4[a5][3];
                if (r4 && e4 > r4) break;
              }
              var o3 = i4[a5 + 1];
              if (!o3) throw new Error('Timezone "' + n5 + '" not found on ' + e4 + ".");
              return o3;
            }(e3, t4, a4);
            return { zone: r3, rule: i3(e3, n4, r3[1]) };
          }
          return { zones: {}, rules: {}, offset: function(e3, t4) {
            if ("Etc/UTC" == t4 || "Etc/GMT" == t4) return 0;
            var n4 = a3(e3, this.zones, this.rules, t4), i4 = n4.zone, o3 = n4.rule;
            return r2.parseFloat(o3 ? i4[0] - o3[6] : i4[0]);
          }, convert: function(e3, t4, n4) {
            var i4, a4 = n4;
            typeof t4 == _2 && (t4 = this.offset(e3, t4)), typeof n4 == _2 && (n4 = this.offset(e3, n4));
            var r3 = e3.getTimezoneOffset(), o3 = (e3 = new Date(e3.getTime() + 6e4 * (t4 - n4))).getTimezoneOffset();
            return typeof a4 == _2 && (a4 = this.offset(e3, a4)), i4 = o3 - r3 + (n4 - a4), new Date(e3.getTime() + 6e4 * i4);
          }, apply: function(e3, t4) {
            return this.convert(e3, e3.getTimezoneOffset(), t4);
          }, remove: function(e3, t4) {
            return this.convert(e3, t4, e3.getTimezoneOffset());
          }, abbr: function(e3, t4) {
            var n4 = a3(e3, this.zones, this.rules, t4), i4 = n4.zone, r3 = n4.rule, o3 = i4[2];
            return o3.indexOf("/") >= 0 ? o3.split("/")[r3 && +r3[6] ? 1 : 0] : o3.indexOf("%s") >= 0 ? o3.replace("%s", r3 && "-" != r3[7] ? r3[7] : "") : o3;
          }, toLocalDate: function(e3) {
            return this.apply(new Date(e3), "Etc/UTC");
          } };
        }(), r2.date = /* @__PURE__ */ function() {
          var e2 = 6e4, t3 = 864e5;
          function n3(e3, t4) {
            return 0 === t4 && 23 === e3.getHours() && (e3.setHours(e3.getHours() + 2), true);
          }
          function a3(e3, t4, i3) {
            var a4 = e3.getHours();
            i3 = i3 || 1, t4 = (t4 - e3.getDay() + 7 * i3) % 7, e3.setDate(e3.getDate() + t4), n3(e3, a4);
          }
          function o3(e3, t4, n4) {
            return a3(e3 = new Date(e3), t4, n4), e3;
          }
          function s3(e3) {
            return new Date(e3.getFullYear(), e3.getMonth(), 1);
          }
          function l3(e3, n4) {
            var i3 = new Date(e3.getFullYear(), 0, 1, -6), a4 = function(e4, t4) {
              return 1 !== t4 ? c3(o3(e4, t4, -1), 4) : c3(e4, 4 - (e4.getDay() || 7));
            }(e3, n4), r3 = a4.getTime() - i3.getTime(), s4 = Math.floor(r3 / t3);
            return 1 + Math.floor(s4 / 7);
          }
          function d3(e3) {
            return n3(e3 = new Date(e3.getFullYear(), e3.getMonth(), e3.getDate(), 0, 0, 0), 0), e3;
          }
          function u3(e3) {
            return f3(e3).getTime() - d3(f3(e3));
          }
          function c3(e3, i3) {
            var a4 = e3.getHours();
            return p3(e3 = new Date(e3), i3 * t3), n3(e3, a4), e3;
          }
          function p3(t4, n4, i3) {
            var a4, r3 = t4.getTimezoneOffset();
            t4.setTime(t4.getTime() + n4), i3 || (a4 = t4.getTimezoneOffset() - r3, t4.setTime(t4.getTime() + a4 * e2));
          }
          function h3() {
            return d3(/* @__PURE__ */ new Date());
          }
          function f3(e3) {
            var t4 = new Date(1980, 1, 1, 0, 0, 0);
            return e3 && t4.setHours(e3.getHours(), e3.getMinutes(), e3.getSeconds(), e3.getMilliseconds()), t4;
          }
          function m3(e3, t4) {
            var n4 = new Date(e3);
            return new Date(n4.setFullYear(n4.getFullYear() + t4));
          }
          return { adjustDST: n3, dayOfWeek: o3, setDayOfWeek: a3, getDate: d3, isInDateRange: function(e3, n4, i3) {
            var a4, r3 = n4.getTime(), o4 = i3.getTime();
            return r3 >= o4 && (o4 += t3), (a4 = e3.getTime()) >= r3 && a4 <= o4;
          }, isInTimeRange: function(e3, n4, i3) {
            var a4, r3 = u3(n4), o4 = u3(i3);
            return !e3 || r3 == o4 || (n4 >= i3 && (i3 += t3), r3 > (a4 = u3(e3)) && (a4 += t3), o4 < r3 && (o4 += t3), a4 >= r3 && a4 <= o4);
          }, isToday: function(e3) {
            return d3(e3).getTime() == h3().getTime();
          }, nextDay: function(e3) {
            return c3(e3, 1);
          }, previousDay: function(e3) {
            return c3(e3, -1);
          }, toUtcTime: function(e3) {
            return Date.UTC(e3.getFullYear(), e3.getMonth(), e3.getDate(), e3.getHours(), e3.getMinutes(), e3.getSeconds(), e3.getMilliseconds());
          }, MS_PER_DAY: t3, MS_PER_HOUR: 36e5, MS_PER_MINUTE: e2, setTime: p3, setHours: function(e3, t4) {
            return n3(e3 = new Date(e3.getFullYear(), e3.getMonth(), e3.getDate(), t4.getHours(), t4.getMinutes(), t4.getSeconds(), t4.getMilliseconds()), t4.getHours()), e3;
          }, addDays: c3, today: h3, toInvariantTime: f3, firstDayOfMonth: s3, lastDayOfMonth: function(e3) {
            var t4 = new Date(e3.getFullYear(), e3.getMonth() + 1, 0), n4 = s3(e3), i3 = Math.abs(t4.getTimezoneOffset() - n4.getTimezoneOffset());
            return i3 && t4.setHours(n4.getHours() + i3 / 60), t4;
          }, weekInYear: function(e3, t4) {
            t4 === i2 && (t4 = r2.culture().calendar.firstDay);
            var n4 = c3(e3, -7), a4 = c3(e3, 7), o4 = l3(e3, t4);
            return 0 === o4 ? l3(n4, t4) + 1 : 53 === o4 && l3(a4, t4) > 1 ? 1 : o4;
          }, getMilliseconds: u3, firstDayOfYear: function(e3) {
            return new Date(e3.getFullYear(), 0, 1);
          }, lastDayOfYear: function(e3) {
            return new Date(e3.getFullYear(), 11, 31);
          }, nextYear: function(e3) {
            return m3(e3, 1);
          }, previousYear: function(e3) {
            return m3(e3, -1);
          } };
        }(), r2.stripWhitespace = function(e2) {
          if (document.createNodeIterator) for (var t3 = document.createNodeIterator(e2, NodeFilter.SHOW_TEXT, function(t4) {
            return t4.parentNode == e2 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;
          }, false); t3.nextNode(); ) t3.referenceNode && !t3.referenceNode.textContent.trim() && t3.referenceNode.parentNode.removeChild(t3.referenceNode);
          else for (var n3 = 0; n3 < e2.childNodes.length; n3++) {
            var i3 = e2.childNodes[n3];
            3 != i3.nodeType || /\S/.test(i3.nodeValue) || (e2.removeChild(i3), n3--), 1 == i3.nodeType && r2.stripWhitespace(i3);
          }
        };
        var De = n2.requestAnimationFrame || n2.webkitRequestAnimationFrame || n2.mozRequestAnimationFrame || n2.oRequestAnimationFrame || n2.msRequestAnimationFrame || function(e2) {
          setTimeout(e2, 1e3 / 60);
        };
        r2.animationFrame = function(e2) {
          De.call(n2, e2);
        };
        var Ee = [];
        r2.queueAnimation = function(e2) {
          Ee[Ee.length] = e2, 1 === Ee.length && r2.runNextAnimation();
        }, r2.runNextAnimation = function() {
          r2.animationFrame(function() {
            Ee[0] && (Ee.shift()(), Ee[0] && r2.runNextAnimation());
          });
        }, r2.parseQueryStringParams = function(e2) {
          for (var t3 = {}, n3 = (e2.split("?")[1] || "").split(/&|=/), i3 = n3.length, a3 = 0; a3 < i3; a3 += 2) "" !== n3[a3] && (t3[decodeURIComponent(n3[a3])] = decodeURIComponent(n3[a3 + 1]));
          return t3;
        }, r2.elementUnderCursor = function(e2) {
          if (void 0 !== e2.x.client) return document.elementFromPoint(e2.x.client, e2.y.client);
        }, r2.wheelDeltaY = function(e2) {
          var t3, n3 = e2.originalEvent, a3 = n3.wheelDeltaY;
          return n3.wheelDelta ? (a3 === i2 || a3) && (t3 = n3.wheelDelta) : n3.detail && n3.axis === n3.VERTICAL_AXIS && (t3 = 10 * -n3.detail), t3;
        }, r2.throttle = function(e2, t3) {
          var n3, i3 = 0;
          if (!t3 || t3 <= 0) return e2;
          var a3 = function() {
            var a4 = this, r3 = +/* @__PURE__ */ new Date() - i3, o3 = arguments;
            function s3() {
              e2.apply(a4, o3), i3 = +/* @__PURE__ */ new Date();
            }
            if (!i3) return s3();
            n3 && clearTimeout(n3), r3 > t3 ? s3() : n3 = setTimeout(s3, t3 - r3);
          };
          return a3.cancel = function() {
            clearTimeout(n3);
          }, a3;
        }, r2.caret = function(e2, n3, a3) {
          var r3, o3 = n3 !== i2;
          if (a3 === i2 && (a3 = n3), e2[0] && (e2 = e2[0]), !o3 || !e2.disabled) {
            try {
              if (e2.selectionStart !== i2) if (o3) {
                e2.focus();
                var s3 = p2.mobileOS;
                s3.wp || s3.android ? setTimeout(function() {
                  e2.setSelectionRange(n3, a3);
                }, 0) : e2.setSelectionRange(n3, a3);
              } else n3 = [e2.selectionStart, e2.selectionEnd];
              else if (document.selection) if (t2(e2).is(":visible") && e2.focus(), r3 = e2.createTextRange(), o3) r3.collapse(true), r3.moveStart("character", n3), r3.moveEnd("character", a3 - n3), r3.select();
              else {
                var l3, d3, u3 = r3.duplicate();
                r3.moveToBookmark(document.selection.createRange().getBookmark()), u3.setEndPoint("EndToStart", r3), d3 = (l3 = u3.text.length) + r3.text.length, n3 = [l3, d3];
              }
            } catch (e3) {
              n3 = [];
            }
            return n3;
          }
        }, r2.compileMobileDirective = function(e2, t3) {
          var i3 = n2.angular;
          return e2.attr("data-" + r2.ns + "role", e2[0].tagName.toLowerCase().replace("kendo-mobile-", "").replace("-", "")), i3.element(e2).injector().invoke(["$compile", function(n3) {
            n3(e2)(t3), /^\$(digest|apply)$/.test(t3.$$phase) || t3.$digest();
          }]), r2.widgetInstance(e2, r2.mobile.ui);
        }, r2.antiForgeryTokens = function() {
          var e2 = {}, n3 = t2("meta[name=csrf-token],meta[name=_csrf]").attr("content"), a3 = t2("meta[name=csrf-param],meta[name=_csrf_header]").attr("content");
          return t2("input[name^='__RequestVerificationToken']").each(function() {
            e2[this.name] = this.value;
          }), a3 !== i2 && n3 !== i2 && (e2[a3] = n3), e2;
        }, r2.cycleForm = function(e2) {
          var t3 = e2.find("input, .k-widget, .k-dropdownlist, .k-combobox").first(), n3 = e2.find("button, .k-button").last();
          function i3(e3) {
            var t4 = r2.widgetInstance(e3);
            t4 && t4.focus ? t4.focus() : e3.trigger("focus");
          }
          n3.on("keydown", function(e3) {
            e3.keyCode != r2.keys.TAB || e3.shiftKey || (e3.preventDefault(), i3(t3));
          }), t3.on("keydown", function(e3) {
            e3.keyCode == r2.keys.TAB && e3.shiftKey && (e3.preventDefault(), i3(n3));
          });
        }, r2.focusElement = function(e2) {
          var i3 = [], a3 = e2.parentsUntil("body").filter(function(e3, t3) {
            return "visible" !== r2.getComputedStyles(t3, ["overflow"]).overflow;
          }).add(n2);
          a3.each(function(e3, n3) {
            i3[e3] = t2(n3).scrollTop();
          });
          try {
            e2[0].setActive();
          } catch (t3) {
            e2[0].focus();
          }
          a3.each(function(e3, n3) {
            t2(n3).scrollTop(i3[e3]);
          });
        }, r2.focusNextElement = function() {
          if (document.activeElement) {
            var e2 = t2(":kendoFocusable"), n3 = e2.index(document.activeElement);
            if (n3 > -1) (e2[n3 + 1] || e2[0]).focus();
          }
        }, r2.trim = function(e2) {
          return e2 ? e2.toString().trim() : "";
        }, r2.getWidgetFocusableElement = function(e2) {
          var n3 = e2.closest(":kendoFocusable"), i3 = r2.widgetInstance(e2);
          return n3.length ? n3 : i3 ? "Editor" === i3.options.name ? t2(i3.body) : i3.wrapper.find(":kendoFocusable").first() : e2;
        }, r2.addAttribute = function(e2, t3, n3) {
          var i3 = e2.attr(t3) || "";
          i3.indexOf(n3) < 0 && e2.attr(t3, (i3 + " " + n3).trim());
        }, r2.removeAttribute = function(e2, t3, n3) {
          var i3 = e2.attr(t3) || "";
          e2.attr(t3, i3.replace(n3, "").trim());
        }, r2.toggleAttribute = function(e2, t3, n3) {
          (e2.attr(t3) || "").indexOf(n3) < 0 ? r2.addAttribute(e2, t3, n3) : r2.removeAttribute(e2, t3, n3);
        }, r2.matchesMedia = function(e2) {
          var t3 = r2._bootstrapToMedia(e2) || e2;
          return p2.matchMedia && n2.matchMedia(t3).matches;
        }, r2._bootstrapToMedia = function(e2) {
          return { xs: "(max-width: 576px)", sm: "(min-width: 576px)", md: "(min-width: 768px)", lg: "(min-width: 992px)", xl: "(min-width: 1200px)" }[e2];
        }, r2.fileGroupMap = { audio: [".aif", ".iff", ".m3u", ".m4a", ".mid", ".mp3", ".mpa", ".wav", ".wma", ".ogg", ".wav", ".wma", ".wpl"], video: [".3g2", ".3gp", ".avi", ".asf", ".flv", ".m4u", ".rm", ".h264", ".m4v", ".mkv", ".mov", ".mp4", ".mpg", ".rm", ".swf", ".vob", ".wmv"], image: [".ai", ".dds", ".heic", ".jpe", "jfif", ".jif", ".jp2", ".jps", ".eps", ".bmp", ".gif", ".jpeg", ".jpg", ".png", ".ps", ".psd", ".svg", ".svgz", ".tif", ".tiff"], txt: [".doc", ".docx", ".log", ".pages", ".tex", ".wpd", ".wps", ".odt", ".rtf", ".text", ".txt", ".wks"], presentation: [".key", ".odp", ".pps", ".ppt", ".pptx"], data: [".xlr", ".xls", ".xlsx"], programming: [".tmp", ".bak", ".msi", ".cab", ".cpl", ".cur", ".dll", ".dmp", ".drv", ".icns", ".ico", ".link", ".sys", ".cfg", ".ini", ".asp", ".aspx", ".cer", ".csr", ".css", ".dcr", ".htm", ".html", ".js", ".php", ".rss", ".xhtml"], pdf: [".pdf"], config: [".apk", ".app", ".bat", ".cgi", ".com", ".exe", ".gadget", ".jar", ".wsf"], zip: [".7z", ".cbr", ".gz", ".sitx", ".arj", ".deb", ".pkg", ".rar", ".rpm", ".tar.gz", ".z", ".zip", ".zipx"], "disc-image": [".dmg", ".iso", ".toast", ".vcd", ".bin", ".cue", ".mdf"] }, r2.getFileGroup = function(e2, t3) {
          var n3 = r2.fileGroupMap, a3 = Object.keys(n3), o3 = "file";
          if (e2 === i2 || !e2.length) return o3;
          for (var s3 = 0; s3 < a3.length; s3 += 1) {
            if (n3[a3[s3]].indexOf(e2.toLowerCase()) > -1) return t3 ? "file-" + a3[s3] : a3[s3];
          }
          return o3;
        }, r2.getFileSizeMessage = function(e2) {
          if (0 === e2) return "0 Byte";
          var t3 = parseInt(Math.floor(Math.log(e2) / Math.log(1024)), 10);
          return Math.round(e2 / Math.pow(1024, t3), 2) + " " + ["Bytes", "KB", "MB", "GB", "TB"][t3];
        }, r2.selectorFromClasses = function(e2) {
          return "." + e2.split(" ").join(".");
        };
        var Ae = ["base", "primary", "secondary", "tertiary", "inherit", "info", "success", "warning", "error", "dark", "light", "inverse"], Fe = ["solid", "outline", "flat"], ze = ["rectangle", "square"], Pe = [["small", "sm"], ["medium", "md"], ["large", "lg"]], He = [["small", "sm"], ["medium", "md"], ["large", "lg"]], Ne = ["fixed", "static", "sticky", "absolute"], Re = ["both", "horizontal", "vertical"], Oe = ["auto", "hidden", "visible", "scroll", "clip"];
        r2.cssProperties = function() {
          var e2 = {};
          function t3(t4, n4, i3) {
            e2[t4] || (e2[t4] = {}), e2[t4][n4] = i3 || n4;
          }
          function n3(e3, n4) {
            for (var i3 = 0; i3 < n4.length; i3++) l2(n4[i3]) ? t3(e3, n4[i3][0], n4[i3][1]) : t3(e3, n4[i3]);
          }
          return n3("themeColor", Ae), n3("fillMode", Fe), n3("shape", ze), n3("size", Pe), n3("positionMode", Ne), n3("rounded", He), n3("resize", Re), n3("overflow", Oe), { positionModeValues: Ne, roundedValues: He, sizeValues: Pe, shapeValues: ze, fillModeValues: Fe, themeColorValues: Ae, defaultValues: e2, propertyDictionary: {}, registerValues: function(e3, t4) {
            var n4, i3, a3, o3, s3, d3, u3 = r2.cssProperties.propertyDictionary;
            for (n4 = 0; n4 < t4.length; n4++) for (a3 = t4[n4].prop, s3 = t4[n4].values, u3[e3][a3] || (u3[e3][a3] = {}), o3 = u3[e3][a3], i3 = 0; i3 < s3.length; i3++) d3 = s3[i3], l2(s3[i3]) ? o3[d3[0]] = d3[1] : o3[d3] = d3;
          }, getValidClass: function(e3) {
            var t4, n4, i3 = e3.widget, a3 = e3.propName, o3 = e3.value, s3 = e3.fill, l3 = r2.cssProperties, d3 = l3.defaultValues[a3], u3 = l3.propertyDictionary[i3];
            return u3 && (n4 = (t4 = u3[a3]) && t4[o3] || d3[o3]) ? ("themeColor" === a3 ? u3.prefix + s3 + "-" : "positionMode" === a3 ? "k-pos-" : "rounded" === a3 ? "k-rounded-" : "resize" === a3 ? "k-resize-" : "overflow" === a3 ? "k-overflow-" : u3.prefix) + n4 : "";
          }, registerPrefix: function(e3, t4) {
            var n4 = r2.cssProperties.propertyDictionary;
            n4[e3] || (n4[e3] = {}), n4[e3].prefix = t4;
          } };
        }(), r2.registerCssClass = function(e2, t3, n3) {
          r2.propertyToCssClassMap[e2] || (r2.propertyToCssClassMap[e2] = {}), r2.propertyToCssClassMap[e2][t3] = n3 || t3;
        }, r2.registerCssClasses = function(e2, t3) {
          for (var n3 = 0; n3 < t3.length; n3++) l2(t3[n3]) ? r2.registerCssClass(e2, t3[n3][0], t3[n3][1]) : r2.registerCssClass(e2, t3[n3]);
        }, r2.getValidCssClass = function(e2, t3, n3) {
          var i3 = r2.propertyToCssClassMap[t3][n3];
          if (i3) return e2 + i3;
        }, r2.propertyToCssClassMap = {}, r2.registerCssClasses("themeColor", Ae), r2.registerCssClasses("fill", Fe), r2.registerCssClasses("shape", ze), r2.registerCssClasses("size", Pe), r2.registerCssClasses("positionMode", Ne), r2.whenAll = function(e2) {
          var n3, i3 = 1 == arguments.length && Array.isArray(e2) ? e2 : Array.prototype.slice.call(arguments), a3 = i3.length, o3 = a3, s3 = t2.Deferred(), l3 = 0, d3 = 0, u3 = Array(a3), c3 = Array(a3), p3 = Array(a3);
          function h3(e3, t3, n4) {
            return function() {
              n4 != i3 && d3++, s3.notifyWith(t3[e3] = this, n4[e3] = Array.prototype.slice.call(arguments)), --o3 || s3[(d3 ? "reject" : "resolve") + "With"](t3, n4);
            };
          }
          for (; l3 < a3; l3++) (n3 = i3[l3]) && r2.isFunction(n3.promise) ? n3.promise().done(h3(l3, p3, i3)).fail(h3(l3, u3, c3)) : (s3.notifyWith(this, n3), --o3);
          return o3 || s3.resolveWith(p3, i3), s3.promise();
        }, function() {
          function e2(e3, n3, i4, a4) {
            var o4 = t2("<form>").attr({ action: i4, method: "POST", target: a4 }), s4 = r2.antiForgeryTokens();
            s4.fileName = n3;
            var l3 = e3.split(";base64,");
            for (var d3 in s4.contentType = l3[0].replace("data:", ""), s4.base64 = l3[1], s4) s4.hasOwnProperty(d3) && t2("<input>").attr({ value: s4[d3], name: d3, type: "hidden" }).appendTo(o4);
            o4.appendTo("body").submit().remove();
          }
          var i3 = document.createElement("a"), a3 = "download" in i3 && !r2.support.browser.edge;
          function o3(e3, t3) {
            var n3 = e3;
            if ("string" == typeof e3) {
              for (var i4 = e3.split(";base64,"), a4 = i4[0], r3 = atob(i4[1]), o4 = new Uint8Array(r3.length), s4 = 0; s4 < r3.length; s4++) o4[s4] = r3.charCodeAt(s4);
              n3 = new Blob([o4.buffer], { type: a4 });
            }
            navigator.msSaveBlob(n3, t3);
          }
          function s3(e3, t3) {
            n2.Blob && e3 instanceof Blob && (e3 = URL.createObjectURL(e3)), i3.download = t3, i3.href = e3;
            var a4 = document.createEvent("MouseEvents");
            a4.initMouseEvent("click", true, false, n2, 0, 0, 0, 0, 0, false, false, false, false, 0, null), i3.dispatchEvent(a4), setTimeout(function() {
              URL.revokeObjectURL(e3);
            });
          }
          r2.saveAs = function(t3) {
            var n3 = e2;
            t3.forceProxy || (a3 ? n3 = s3 : navigator.msSaveBlob && (n3 = o3)), n3(t3.dataURI, t3.fileName, t3.proxyURL, t3.proxyTarget);
          };
        }(), r2.proxyModelSetters = function(e2) {
          var t3 = {};
          return Object.keys(e2 || {}).forEach(function(n3) {
            Object.defineProperty(t3, n3, { get: function() {
              return e2[n3];
            }, set: function(t4) {
              e2[n3] = t4, e2.dirty = true;
            } });
          }), t3;
        }, r2.getSeriesColors = function() {
          var e2 = t2('<div class="k-var--series-a"></div><div class="k-var--series-b"></div><div class="k-var--series-c"></div><div class="k-var--series-d"></div><div class="k-var--series-e"></div><div class="k-var--series-f"></div>'), n3 = [];
          return e2.appendTo(t2("body")), e2.each(function(e3, i3) {
            n3.push(t2(i3).css("background-color"));
          }), e2.remove(), n3;
        }, r2.isElement = function(e2) {
          return e2 instanceof Element || e2 instanceof HTMLDocument;
        }, r2.defaults = r2.defaults || {}, r2.setDefaults = function(e2, t3) {
          var n3 = e2.split("."), a3 = r2.defaults;
          e2 = n3.pop(), n3.forEach(function(e3) {
            a3[e3] === i2 && (a3[e3] = {}), a3 = a3[e3];
          }), t3.constructor === Object ? a3[e2] = G({}, a3[e2], t3) : a3[e2] = t3;
        }, r2.class2type = {}, jQuery2.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e2, t3) {
          r2.class2type["[object " + t3 + "]"] = t3.toLowerCase();
        }), r2.type = function(e2) {
          return null == e2 ? e2 + "" : "object" == typeof e2 || "function" == typeof e2 ? r2.class2type[Object.prototype.toString.call(e2)] || "object" : typeof e2;
        };
        var KendoLicensing = { validatePackage: function() {
        }, setScriptKey: function() {
        } };
        n2.KendoLicensing = { setScriptKey: KendoLicensing.setScriptKey };
      }(jQuery2, window);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = "\r\n", r2 = "\r\n\r\n", o2 = n2.isFunction, s2 = { eq: "eq", neq: "ne", gt: "gt", gte: "ge", lt: "lt", lte: "le", contains: "substringof", doesnotcontain: "substringof", endswith: "endswith", startswith: "startswith", isnull: "eq", isnotnull: "ne", isnullorempty: "eq", isnotnullorempty: "ne", isempty: "eq", isnotempty: "ne" }, l2 = i2({}, s2, { contains: "contains" }), d2 = { pageSize: e2.noop, page: e2.noop, filter: function(e3, t3, n3) {
          t3 && (t3 = c2(t3, n3)) && (e3.$filter = t3);
        }, sort: function(t3, n3) {
          var i3 = e2.map(n3, function(e3) {
            var t4 = e3.field.replace(/\./g, "/");
            return "desc" === e3.dir && (t4 += " desc"), t4;
          }).join(",");
          i3 && (t3.$orderby = i3);
        }, skip: function(e3, t3) {
          t3 && (e3.$skip = t3);
        }, take: function(e3, t3) {
          t3 && (e3.$top = t3);
        } }, u2 = { read: { dataType: "jsonp" } };
        function c2(e3, t3) {
          var i3, a3, r3, o3, d3, u3, p3, h3, f3 = [], m3 = e3.logic || "and", g3 = e3.filters;
          for (i3 = 0, a3 = g3.length; i3 < a3; i3++) r3 = (e3 = g3[i3]).field, p3 = e3.value, u3 = e3.operator, e3.filters ? e3 = c2(e3, t3) : (h3 = e3.ignoreCase, r3 = r3.replace(/\./g, "/"), e3 = s2[u3], t3 && (e3 = l2[u3]), "isnullorempty" === u3 ? e3 = n2.format("{0} {1} null or {0} {1} ''", r3, e3) : "isnotnullorempty" === u3 ? e3 = n2.format("{0} {1} null and {0} {1} ''", r3, e3) : "isnull" === u3 || "isnotnull" === u3 ? e3 = n2.format("{0} {1} null", r3, e3) : "isempty" === u3 || "isnotempty" === u3 ? e3 = n2.format("{0} {1} ''", r3, e3) : e3 && void 0 !== p3 && ("string" === (o3 = n2.type(p3)) ? (d3 = "'{1}'", p3 = p3.replace(/'/g, "''"), true === h3 && (r3 = "tolower(" + r3 + ")")) : "date" === o3 ? t3 ? (d3 = "{1:yyyy-MM-ddTHH:mm:ss+00:00}", p3 = n2.timezone.apply(p3, "Etc/UTC")) : d3 = "datetime'{1:yyyy-MM-ddTHH:mm:ss}'" : d3 = "{1}", e3.length > 3 ? "substringof" !== e3 ? d3 = "{0}({2}," + d3 + ")" : (d3 = "{0}(" + d3 + ",{2})", "doesnotcontain" === u3 && (t3 ? (d3 = "{0}({2},'{1}') eq -1", e3 = "indexof") : d3 += " eq false")) : d3 = "{2} {0} " + d3, e3 = n2.format(d3, e3, p3, r3))), f3.push(e3);
          return e3 = f3.join(" " + m3 + " "), f3.length > 1 && (e3 = "(" + e3 + ")"), e3;
        }
        function p2(e3) {
          for (var t3 in e3) 0 === t3.indexOf("@odata") && delete e3[t3];
        }
        function h2() {
          return Math.floor(65536 * (1 + Math.random())).toString(16).substr(1);
        }
        function f2(e3) {
          return e3 + h2() + "-" + h2() + "-" + h2();
        }
        function m2(e3, t3) {
          var n3 = "\r\n--" + e3;
          return t3 && (n3 += "--"), n3;
        }
        function g2(e3, t3, i3, a3) {
          var r3 = e3.options[a3].url, s3 = n2.format("{0} ", i3);
          return o2(r3) ? s3 + r3(t3) : s3 + r3;
        }
        function v2(e3, t3) {
          var n3 = "";
          return n3 += m2(e3, false), n3 += "\r\nContent-Type: application/http", n3 += "\r\nContent-Transfer-Encoding: binary", n3 += "\r\nContent-ID: " + t3;
        }
        function _2(e3, t3, i3, o3, s3, l3, d3) {
          var u3 = "";
          return u3 += function(e4, t4) {
            var n3 = "";
            return n3 += "--" + e4 + a2, n3 += "Content-Type: multipart/mixed; boundary=" + t4 + a2;
          }(t3, i3), u3 += function(e4, t4, i4, o4, s4, l4) {
            for (var d4, u4, c3 = "", p3 = 0; p3 < e4.length; p3++) c3 += v2(t4, i4), c3 += r2 + g2(s4, e4[p3], s4.options[o4].type, o4) + " HTTP/1.1", l4 || (c3 += (d4 = e4[p3], u4 = void 0, u4 = "", u4 += "\r\nContent-Type: application/json;odata=minimalmetadata", u4 += "\r\nPrefer: return=representation", u4 += r2 + n2.stringify(d4))), c3 += a2, i4++;
            return c3;
          }(e3, i3, o3, l3, s3, d3), u3 += m2(i3, true), u3 += a2;
        }
        i2(true, n2.data, { schemas: { odata: { type: "json", data: function(e3) {
          return e3.d.results || [e3.d];
        }, total: "d.__count" } }, transports: { odata: { read: { cache: true, dataType: "jsonp", jsonp: "$callback" }, update: { cache: true, dataType: "json", contentType: "application/json", type: "PUT" }, create: { cache: true, dataType: "json", contentType: "application/json", type: "POST" }, destroy: { cache: true, dataType: "json", type: "DELETE" }, parameterMap: function(e3, t3, i3) {
          var a3, r3, o3, s3;
          if (e3 = e3 || {}, t3 = t3 || "read", s3 = (s3 = (this.options || u2)[t3]) ? s3.dataType : "json", "read" === t3) for (o3 in a3 = { $inlinecount: "allpages" }, "json" != s3 && (a3.$format = "json"), e3) d2[o3] ? d2[o3](a3, e3[o3], i3) : a3[o3] = e3[o3];
          else {
            if ("json" !== s3) throw new Error("Only json dataType can be used for " + t3 + " operation.");
            if ("destroy" !== t3) {
              for (o3 in e3) "number" == typeof (r3 = e3[o3]) && (e3[o3] = r3 + "");
              a3 = n2.stringify(e3);
            }
          }
          return a3;
        } } } }), i2(true, n2.data, { schemas: { "odata-v4": { type: "json", data: function(t3) {
          if (Array.isArray(t3)) {
            for (var n3 = 0; n3 < t3.length; n3++) p2(t3[n3]);
            return t3;
          }
          return p2(t3 = e2.extend({}, t3)), t3.value ? t3.value : [t3];
        }, total: function(e3) {
          return e3["@odata.count"];
        } } }, transports: { "odata-v4": { batch: { type: "POST" }, read: { cache: true, dataType: "json" }, update: { cache: true, dataType: "json", contentType: "application/json;IEEE754Compatible=true", type: "PUT" }, create: { cache: true, dataType: "json", contentType: "application/json;IEEE754Compatible=true", type: "POST" }, destroy: { cache: true, dataType: "json", type: "DELETE" }, parameterMap: function(e3, t3) {
          var i3 = n2.data.transports.odata.parameterMap(e3, t3, true);
          return "read" == t3 && (i3.$count = true, delete i3.$inlinecount), i3 && i3.$filter && (i3.$filter = i3.$filter.replace(/('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')/gi, function(e4) {
            return e4.substring(1, e4.length - 1);
          })), i3;
        }, submit: function(t3) {
          var a3 = function(e3, t4) {
            var n3 = i2({}, e3.options.batch), a4 = f2("sf_batch_"), r4 = "", s3 = 0, l3 = e3.options.batch.url, d3 = f2("sf_changeset_");
            return n3.type = e3.options.batch.type, n3.url = o2(l3) ? l3() : l3, n3.headers = i2(n3.headers || {}, { "Content-Type": "multipart/mixed; boundary=" + a4 }), t4.updated.length && (r4 += _2(t4.updated, a4, d3, s3, e3, "update", false), s3 += t4.updated.length, d3 = f2("sf_changeset_")), t4.destroyed.length && (r4 += _2(t4.destroyed, a4, d3, s3, e3, "destroy", true), s3 += t4.destroyed.length, d3 = f2("sf_changeset_")), t4.created.length && (r4 += _2(t4.created, a4, d3, s3, e3, "create", false)), r4 += m2(a4, true), n3.data = r4, n3;
          }(this, t3.data), r3 = t3.data;
          (r3.updated.length || r3.destroyed.length || r3.created.length) && e2.ajax(i2(true, {}, { success: function(e3) {
            var i3, a4 = function(e4) {
              var t4, i4, a5, r4, o4, s3 = e4.match(/--changesetresponse_[a-z0-9-]+$/gm), l3 = 0, d3 = [];
              d3.push({ models: [], passed: true });
              for (var u3 = 0; u3 < s3.length; u3++) (r4 = s3[u3]).lastIndexOf("--", r4.length - 1) ? u3 < s3.length - 1 && d3.push({ models: [], passed: true }) : (l3 = l3 ? e4.indexOf(r4, l3 + r4.length) : e4.indexOf(r4), i4 = (t4 = e4.substring(l3, e4.indexOf("--", l3 + 1))).match(/^HTTP\/1\.\d (\d{3}) (.*)$/gm).pop(), (a5 = n2.parseFloat(i4.match(/\d{3}/g).pop())) >= 200 && a5 <= 299 ? (o4 = t4.match(/\{.*\}/gm)) && d3[d3.length - 1].models.push(JSON.parse(o4[0])) : d3[d3.length - 1].passed = false);
              return d3;
            }(e3), o3 = 0;
            r3.updated.length && ((i3 = a4[o3]).passed && t3.success(i3.models.length ? i3.models : [], "update"), o3++), r3.destroyed.length && ((i3 = a4[o3]).passed && t3.success([], "destroy"), o3++), r3.created.length && (i3 = a4[o3]).passed && t3.success(i3.models, "create");
          }, error: function(e3, n3, i3) {
            t3.error(e3, n3, i3);
          } }, a3));
        } } } });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = Array.isArray, a2 = e2.isPlainObject, r2 = e2.map, o2 = e2.each, s2 = e2.extend, l2 = n2.getter, d2 = n2.Class.extend({ init: function(e3) {
          var t3 = this, l3 = e3.total, d3 = e3.model, u2 = e3.parse, c2 = e3.errors, p2 = e3.serialize, h2 = e3.data;
          if (d3) {
            if (a2(d3)) {
              var f2 = e3.modelBase || n2.data.Model;
              d3.fields && o2(d3.fields, function(e4, i3) {
                a2(i3) && i3.field ? n2.isFunction(i3.field) || (i3 = s2(i3, { field: t3.getter(i3.field) })) : i3 = { field: t3.getter(i3) }, d3.fields[e4] = i3;
              });
              var m2 = d3.id;
              if (m2) {
                var g2 = {};
                g2[t3.xpathToMember(m2, true)] = { field: t3.getter(m2) }, d3.fields = s2(g2, d3.fields), d3.id = t3.xpathToMember(m2);
              }
              d3 = f2.define(d3);
            }
            t3.model = d3;
          }
          if (l3 && ("string" == typeof l3 ? (l3 = t3.getter(l3), t3.total = function(e4) {
            return parseInt(l3(e4), 10);
          }) : "function" == typeof l3 && (t3.total = l3)), c2 && ("string" == typeof c2 ? (c2 = t3.getter(c2), t3.errors = function(e4) {
            return c2(e4) || null;
          }) : "function" == typeof c2 && (t3.errors = c2)), h2 && ("string" == typeof h2 ? (h2 = t3.xpathToMember(h2), t3.data = function(e4) {
            var n3, a3 = t3.evaluate(e4, h2);
            return a3 = i2(a3) ? a3 : [a3], t3.model && d3.fields ? (n3 = new t3.model(), r2(a3, function(e5) {
              if (e5) {
                var t4, i3 = {};
                for (t4 in d3.fields) i3[t4] = n3._parse(t4, d3.fields[t4].field(e5));
                return i3;
              }
            })) : a3;
          }) : "function" == typeof h2 && (t3.data = h2)), "function" == typeof u2) {
            var v2 = t3.parse;
            t3.parse = function(e4) {
              var n3 = u2.call(t3, e4);
              return v2.call(t3, n3);
            };
          }
          "function" == typeof p2 && (t3.serialize = p2);
        }, total: function(e3) {
          return this.data(e3).length;
        }, errors: function(e3) {
          return e3 ? e3.errors : null;
        }, serialize: function(e3) {
          return e3;
        }, parseDOM: function(e3) {
          var t3, n3, a3, r3, o3, s3, l3, d3 = {}, u2 = e3.attributes, c2 = u2.length;
          for (l3 = 0; l3 < c2; l3++) d3["@" + (s3 = u2[l3]).nodeName] = s3.nodeValue;
          for (n3 = e3.firstChild; n3; n3 = n3.nextSibling) 3 === (a3 = n3.nodeType) || 4 === a3 ? d3["#text"] = n3.nodeValue : 1 === a3 && (t3 = this.parseDOM(n3), o3 = d3[r3 = n3.nodeName], i2(o3) ? o3.push(t3) : o3 = void 0 !== o3 ? [o3, t3] : t3, d3[r3] = o3);
          return d3;
        }, evaluate: function(e3, t3) {
          for (var n3, a3, r3, o3, s3, l3 = t3.split("."); n3 = l3.shift(); ) if (e3 = e3[n3], i2(e3)) {
            for (a3 = [], t3 = l3.join("."), s3 = 0, r3 = e3.length; s3 < r3; s3++) o3 = this.evaluate(e3[s3], t3), o3 = i2(o3) ? o3 : [o3], a3.push.apply(a3, o3);
            return a3;
          }
          return e3;
        }, parse: function(t3) {
          var n3, i3, a3 = {};
          return n3 = t3.documentElement || e2.parseXML(t3).documentElement, i3 = this.parseDOM(n3), a3[n3.nodeName] = i3, a3;
        }, xpathToMember: function(e3, t3) {
          return e3 ? (e3 = e3.replace(/^\//, "").replace(/\//g, ".")).indexOf("@") >= 0 ? e3.replace(/\.?(@.*)/, t3 ? "$1" : '["$1"]') : e3.indexOf("text()") >= 0 ? e3.replace(/(\.?text\(\))/, t3 ? "#text" : '["#text"]') : e3 : "";
        }, getter: function(e3) {
          return l2(this.xpathToMember(e3), true);
        } });
        e2.extend(true, n2.data, { XmlDataReader: d2, readers: { xml: d2 } });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2, i2 = e2.extend, a2 = e2.isPlainObject, r2 = e2.isEmptyObject, o2 = Array.isArray, s2 = e2.grep, l2 = e2.ajax, d2 = e2.each, u2 = e2.noop, c2 = window.kendo, p2 = c2.isFunction, h2 = c2.Observable, f2 = c2.Class, m2 = "string", g2 = "function", v2 = "create", _2 = "read", b2 = "update", k2 = "destroy", w = "change", y = "sync", x = "get", C = "error", T = "requestStart", S = "progress", I = "requestEnd", D = "itemsLoaded", E = "itemLoad", A = [v2, _2, b2, k2], F = function(e3) {
          return e3;
        }, z = c2.getter, P = c2.stringify, H = Math, N = [].push, R = [].join, O = [].pop, M = [].splice, B = [].shift, L = [].slice, V = [].unshift, U = {}.toString, W = c2.support.stableSort, j = /^\/Date\((.*?)\)\/$/, q = [], G = h2.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.type = t3 || Q, h2.fn.init.call(n3), n3.length = e3.length, n3.wrapAll(e3, n3), n3._loadPromises = [], n3._loadedNodes = [];
        }, at: function(e3) {
          return this[e3];
        }, toJSON: function(e3) {
          var t3, n3, i3 = this.length, a3 = new Array(i3);
          for (t3 = 0; t3 < i3; t3++) (n3 = this[t3]) instanceof Q && (n3 = n3.toJSON(e3)), a3[t3] = n3;
          return a3;
        }, parent: u2, wrapAll: function(e3, t3) {
          var n3, i3, a3 = this, r3 = function() {
            return a3;
          };
          for (t3 = t3 || [], n3 = 0, i3 = e3.length; n3 < i3; n3++) t3[n3] = a3.wrap(e3[n3], r3);
          return t3;
        }, wrap: function(e3, t3) {
          var n3 = this;
          return null !== e3 && "[object Object]" === U.call(e3) && (e3 instanceof n3.type || e3 instanceof ee || (e3 = e3 instanceof Q ? e3.toJSON() : e3, e3 = new n3.type(e3)), e3.parent = t3, e3.bind(w, function(t4) {
            var i3 = e3.hasOwnProperty("hasSubgroups");
            n3.trigger(w, { field: t4.field, node: t4.node, index: t4.index, items: t4.items || [this], action: t4.node || i3 ? t4.action || "itemloaded" : "itemchange" });
          }), e3.bind(E, function(e4) {
            n3._loadPromises.push(e4.promise), n3._loading = true, e4.promise.done(function() {
              n3._loadedNodes.push(e4.node);
              var t4 = n3._loadPromises.indexOf(e4.promise);
              n3._loadPromises.splice(t4, 1), n3._loadPromises.length || (n3._loading = false, n3.trigger(D, { collection: n3, nodes: n3._loadedNodes }), n3._loadedNodes = []);
            });
          })), e3;
        }, loading: function() {
          return this._loading;
        }, push: function() {
          var e3, t3 = this.length, n3 = this.wrapAll(arguments);
          return e3 = N.apply(this, n3), this.omitChangeEvent || this.trigger(w, { action: "add", index: t3, items: n3 }), e3;
        }, slice: L, sort: [].sort, join: R, pop: function() {
          var e3 = this.length, t3 = O.apply(this);
          return e3 && this.trigger(w, { action: "remove", index: e3 - 1, items: [t3] }), t3;
        }, splice: function(e3, t3, n3) {
          var i3, a3, r3, o3 = this.wrapAll(L.call(arguments, 2));
          if ((i3 = M.apply(this, [e3, t3].concat(o3))).length) for (this.omitChangeEvent || this.trigger(w, { action: "remove", index: e3, items: i3 }), a3 = 0, r3 = i3.length; a3 < r3; a3++) i3[a3] && i3[a3].children && i3[a3].unbind(w);
          return n3 && (this.omitChangeEvent || this.trigger(w, { action: "add", index: e3, items: o3 })), i3;
        }, shift: function() {
          var e3 = this.length, t3 = B.apply(this);
          return e3 && this.trigger(w, { action: "remove", index: 0, items: [t3] }), t3;
        }, unshift: function() {
          var e3, t3 = this.wrapAll(arguments);
          return e3 = V.apply(this, t3), this.trigger(w, { action: "add", index: 0, items: t3 }), e3;
        }, indexOf: function(e3) {
          var t3, n3;
          for (t3 = 0, n3 = this.length; t3 < n3; t3++) if (this[t3] === e3) return t3;
          return -1;
        }, forEach: function(e3, t3) {
          for (var n3 = 0, i3 = this.length, a3 = t3 || window; n3 < i3; n3++) e3.call(a3, this[n3], n3, this);
        }, map: function(e3, t3) {
          for (var n3 = 0, i3 = [], a3 = this.length, r3 = t3 || window; n3 < a3; n3++) i3[n3] = e3.call(r3, this[n3], n3, this);
          return i3;
        }, reduce: function(e3) {
          var t3, n3 = 0, i3 = this.length;
          for (2 == arguments.length ? t3 = arguments[1] : n3 < i3 && (t3 = this[n3++]); n3 < i3; n3++) t3 = e3(t3, this[n3], n3, this);
          return t3;
        }, reduceRight: function(e3) {
          var t3, n3 = this.length - 1;
          for (2 == arguments.length ? t3 = arguments[1] : n3 > 0 && (t3 = this[n3--]); n3 >= 0; n3--) t3 = e3(t3, this[n3], n3, this);
          return t3;
        }, filter: function(e3, t3) {
          for (var n3, i3 = 0, a3 = [], r3 = this.length, o3 = t3 || window; i3 < r3; i3++) n3 = this[i3], e3.call(o3, n3, i3, this) && (a3[a3.length] = n3);
          return a3;
        }, find: function(e3, t3) {
          for (var n3, i3 = 0, a3 = this.length, r3 = t3 || window; i3 < a3; i3++) if (n3 = this[i3], e3.call(r3, n3, i3, this)) return n3;
        }, every: function(e3, t3) {
          for (var n3, i3 = 0, a3 = this.length, r3 = t3 || window; i3 < a3; i3++) if (n3 = this[i3], !e3.call(r3, n3, i3, this)) return false;
          return true;
        }, some: function(e3, t3) {
          for (var n3, i3 = 0, a3 = this.length, r3 = t3 || window; i3 < a3; i3++) if (n3 = this[i3], e3.call(r3, n3, i3, this)) return true;
          return false;
        }, remove: function(e3) {
          var t3 = this.indexOf(e3);
          -1 !== t3 && this.splice(t3, 1);
        }, empty: function() {
          this.splice(0, this.length);
        } });
        "undefined" != typeof Symbol && Symbol.iterator && !G.prototype[Symbol.iterator] && (G.prototype[Symbol.iterator] = [][Symbol.iterator]);
        var K = G.extend({ init: function(e3, t3, n3) {
          h2.fn.init.call(this), this.type = t3 || Q, n3 && (this._events = n3);
          for (var i3 = 0; i3 < e3.length; i3++) this[i3] = e3[i3];
          this.length = i3, this._parent = function() {
            return this;
          }.bind(this);
        }, at: function(e3) {
          var t3 = this[e3];
          return t3 instanceof this.type ? t3.parent = this._parent : t3 = this[e3] = this.wrap(t3, this._parent), t3;
        } });
        function $(e3, t3, n3, i3) {
          return function(a3) {
            var r3, o3 = {};
            for (r3 in a3) o3[r3] = a3[r3];
            o3.field = i3 ? n3 + "." + a3.field : n3, t3 == w && e3._notifyChange && e3._notifyChange(o3), e3.trigger(t3, o3);
          };
        }
        function Y(e3, t3) {
          var n3, i3, a3 = [], r3 = [];
          for (function(e4) {
            return "object" == typeof e4 && Object.getPrototypeOf(e4) === Object.getPrototypeOf({}) || Object.getPrototypeOf(e4) === Object.getPrototypeOf(/* @__PURE__ */ new Date()) || "object" != typeof e4;
          }(e3 = e3 || {}) || (r3 = Object.getOwnPropertyNames(Object.getPrototypeOf(e3))), n3 = Object.getOwnPropertyNames(e3).concat(r3), i3 = q.filter(function(e4) {
            return n3.indexOf(e4) < 0;
          }); e3; ) Object.getOwnPropertyNames(e3).forEach(function(e4) {
            -1 === a3.indexOf(e4) && (!t3 || i3.indexOf(e4) < 0) && a3.push(e4);
          }), e3 = Object.getPrototypeOf(e3);
          return a3;
        }
        q = Y({}, false);
        var Q = h2.extend({ init: function(e3) {
          var t3, n3 = this, i3 = Y(e3, true), a3 = function() {
            return n3;
          };
          h2.fn.init.call(this), this._handlers = {}, i3.forEach(function(i4) {
            "object" == typeof (t3 = e3[i4]) && t3 && !t3.getTime && "_" != i4.charAt(0) && (t3 = n3.wrap(t3, i4, a3)), n3[i4] = t3;
          }), n3.uid = c2.guid();
        }, shouldSerialize: function(e3, t3) {
          return this.hasOwnProperty(e3) && "_handlers" !== e3 && "_events" !== e3 && (t3 && t3[e3] || typeof this[e3] !== g2) && "uid" !== e3;
        }, forEach: function(e3) {
          for (var t3 in this) this.shouldSerialize(t3) && e3(this[t3], t3);
        }, toJSON: function(e3) {
          var t3, n3, i3 = {};
          for (n3 in this) this.shouldSerialize(n3, e3) && (((t3 = this[n3]) instanceof Q || t3 instanceof G) && (t3 = t3.toJSON(e3)), i3[n3] = t3);
          return i3;
        }, get: function(e3) {
          var t3 = this;
          return t3.trigger(x, { field: e3 }), "this" === e3 ? t3 : c2.getter(e3, true)(t3);
        }, _set: function(e3, t3) {
          var n3 = e3.indexOf(".") >= 0;
          if (n3) for (var i3 = e3.split("."), a3 = ""; i3.length > 1; ) {
            a3 += i3.shift();
            var r3 = c2.getter(a3, true)(this);
            if (r3 instanceof Q) return r3.set(i3.join("."), t3), n3;
            a3 += ".";
          }
          return c2.setter(e3)(this, t3), n3;
        }, set: function(e3, t3) {
          var n3 = this, i3 = false, a3 = e3.indexOf(".") >= 0, r3 = c2.getter(e3, true)(n3);
          return r3 !== t3 && (r3 instanceof h2 && this._handlers[e3] && (this._handlers[e3].get && r3.unbind(x, this._handlers[e3].get), r3.unbind(w, this._handlers[e3].change)), (i3 = n3.trigger("set", { field: e3, value: t3 })) || (a3 || (t3 = n3.wrap(t3, e3, function() {
            return n3;
          })), (!n3._set(e3, t3) || e3.indexOf("(") >= 0 || e3.indexOf("[") >= 0) && n3.trigger(w, { field: e3 }))), i3;
        }, parent: u2, wrap: function(e3, t3, n3) {
          var i3, a3, r3 = this, o3 = U.call(e3);
          if (null != e3 && ("[object Object]" === o3 || "[object Array]" === o3)) {
            var s3 = e3 instanceof G, l3 = e3 instanceof qe;
            "[object Object]" !== o3 || l3 || s3 ? ("[object Array]" === o3 || s3 || l3) && (s3 || l3 || (e3 = new G(e3)), a3 = $(r3, w, t3, false), e3.bind(w, a3), r3._handlers[t3] = { change: a3 }) : (e3 instanceof Q || (e3 = new Q(e3)), i3 = $(r3, x, t3, true), e3.bind(x, i3), a3 = $(r3, w, t3, true), e3.bind(w, a3), r3._handlers[t3] = { get: i3, change: a3 }), e3.parent = n3;
          }
          return e3;
        } });
        function X(e3, t3) {
          if (e3 === t3) return true;
          var n3, i3 = c2.type(e3);
          if (i3 !== c2.type(t3)) return false;
          if ("date" === i3) return e3.getTime() === t3.getTime();
          if ("object" !== i3 && "array" !== i3) return false;
          for (n3 in e3) if (!X(e3[n3], t3[n3])) return false;
          return true;
        }
        var J = { number: function(e3) {
          return typeof e3 === m2 && "null" === e3.toLowerCase() ? null : c2.parseFloat(e3);
        }, date: function(e3) {
          return typeof e3 === m2 && "null" === e3.toLowerCase() ? null : c2.parseDate(e3);
        }, boolean: function(e3) {
          return typeof e3 === m2 ? "null" === e3.toLowerCase() ? null : "true" === e3.toLowerCase() : null != e3 ? !!e3 : e3;
        }, string: function(e3) {
          return typeof e3 === m2 && "null" === e3.toLowerCase() ? null : null != e3 ? e3 + "" : e3;
        }, default: function(e3) {
          return e3;
        } }, Z = { string: "", number: 0, date: /* @__PURE__ */ new Date(), boolean: false, default: "" };
        var ee = Q.extend({ init: function(n3) {
          var i3 = this;
          if ((!n3 || e2.isEmptyObject(n3)) && (n3 = e2.extend({}, i3.defaults, n3), i3._initializers)) for (var a3 = 0; a3 < i3._initializers.length; a3++) {
            var r3 = i3._initializers[a3];
            n3[r3] = i3.defaults[r3]();
          }
          Q.fn.init.call(i3, n3), i3.dirty = false, i3.dirtyFields = {}, i3.idField && (i3.id = i3.get(i3.idField), i3.id === t2 && (i3.id = i3._defaultId));
        }, shouldSerialize: function(e3) {
          return Q.fn.shouldSerialize.call(this, e3) && "uid" !== e3 && !("id" !== this.idField && "id" === e3) && "dirty" !== e3 && "dirtyFields" !== e3 && "_accessors" !== e3;
        }, _parse: function(e3, t3) {
          var n3, i3 = e3, r3 = this.fields || {};
          return (e3 = r3[e3]) || (e3 = function(e4, t4) {
            var n4, i4;
            for (i4 in e4) {
              if (n4 = e4[i4], a2(n4) && n4.field && n4.field === t4) return n4;
              if (n4 === t4) return n4;
            }
            return null;
          }(r3, i3)), e3 && !(n3 = e3.parse) && e3.type && (n3 = J[e3.type.toLowerCase()]), n3 ? n3(t3) : t3;
        }, _notifyChange: function(e3) {
          var t3 = e3.action;
          "add" != t3 && "remove" != t3 || (this.dirty = true, this.dirtyFields[e3.field] = true);
        }, editable: function(e3) {
          return !(e3 = (this.fields || {})[e3]) || false !== e3.editable;
        }, set: function(e3, t3) {
          var n3 = this, i3 = n3.dirty;
          n3.editable(e3) && (X(t3 = n3._parse(e3, t3), n3.get(e3)) ? n3.trigger("equalSet", { field: e3, value: t3 }) : (n3.dirty = true, n3.dirtyFields[e3] = true, Q.fn.set.call(n3, e3, t3) && !i3 && (n3.dirty = i3, n3.dirty || (n3.dirtyFields[e3] = false))));
        }, accept: function(e3) {
          var t3, n3 = this, i3 = function() {
            return n3;
          };
          for (t3 in e3) {
            var a3 = e3[t3];
            "_" != t3.charAt(0) && (a3 = n3.wrap(e3[t3], t3, i3)), n3._set(t3, a3);
          }
          n3.idField && (n3.id = n3.get(n3.idField)), n3.dirty = false, n3.dirtyFields = {};
        }, isNew: function() {
          return this.id === this._defaultId;
        } });
        ee.define = function(n3, a3) {
          a3 === t2 && (a3 = n3, n3 = ee);
          var r3, o3, s3, l3, d3, u3, c3, p3, h3 = i2({ defaults: {} }, a3), f3 = {}, g3 = h3.id, v3 = [];
          if (g3 && (h3.idField = g3), h3.id && delete h3.id, g3 && (h3.defaults[g3] = h3._defaultId = ""), "[object Array]" === U.call(h3.fields)) {
            for (u3 = 0, c3 = h3.fields.length; u3 < c3; u3++) typeof (s3 = h3.fields[u3]) === m2 ? f3[s3] = {} : s3.field && (f3[s3.field] = s3);
            h3.fields = f3;
          }
          for (o3 in h3.fields) l3 = (s3 = h3.fields[o3]).type || "default", d3 = null, p3 = o3, o3 = typeof s3.field === m2 ? s3.field : o3, s3.nullable || "function" == typeof (d3 = h3.defaults[p3 !== o3 ? p3 : o3] = s3.defaultValue !== t2 ? s3.defaultValue : Z[l3.toLowerCase()]) && v3.push(o3), a3.id === o3 && (h3._defaultId = d3), h3.defaults[p3 !== o3 ? p3 : o3] = d3, e2.isPlainObject(s3) ? s3.parse = s3.parse || J[l3] : s3 = { parse: J[l3] };
          return v3.length > 0 && (h3._initializers = v3), (r3 = n3.extend(h3)).define = function(e3) {
            return ee.define(r3, e3);
          }, h3.fields && (r3.fields = h3.fields, r3.idField = h3.idField), r3;
        };
        var te = { selector: function(e3) {
          return p2(e3) ? e3 : z(e3);
        }, compare: function(e3) {
          var t3 = this.selector(e3);
          return function(e4, n3) {
            return e4 = t3(e4), n3 = t3(n3), null == e4 && null == n3 ? 0 : null == e4 ? -1 : null == n3 ? 1 : e4.localeCompare ? e4.localeCompare(n3) : e4 > n3 ? 1 : e4 < n3 ? -1 : 0;
          };
        }, create: function(e3) {
          var t3 = e3.compare || this.compare(e3.field);
          return "desc" == e3.dir ? function(e4, n3) {
            return t3(n3, e4, true);
          } : t3;
        }, combine: function(e3) {
          return function(t3, n3) {
            var i3, a3, r3 = e3[0](t3, n3);
            for (i3 = 1, a3 = e3.length; i3 < a3; i3++) r3 = r3 || e3[i3](t3, n3);
            return r3;
          };
        } }, ne = i2({}, te, { asc: function(e3) {
          var t3 = this.selector(e3);
          return function(e4, n3) {
            var i3 = t3(e4), a3 = t3(n3);
            return i3 && i3.getTime && a3 && a3.getTime && (i3 = i3.getTime(), a3 = a3.getTime()), i3 === a3 ? e4.__position - n3.__position : null == i3 ? -1 : null == a3 ? 1 : i3.localeCompare ? i3.localeCompare(a3) : i3 > a3 ? 1 : -1;
          };
        }, desc: function(e3) {
          var t3 = this.selector(e3);
          return function(e4, n3) {
            var i3 = t3(e4), a3 = t3(n3);
            return i3 && i3.getTime && a3 && a3.getTime && (i3 = i3.getTime(), a3 = a3.getTime()), i3 === a3 ? e4.__position - n3.__position : null == i3 ? 1 : null == a3 ? -1 : a3.localeCompare ? a3.localeCompare(i3) : i3 < a3 ? 1 : -1;
          };
        }, create: function(e3) {
          return this[e3.dir](e3.field);
        } });
        n2 = function(e3, t3) {
          var n3, i3 = e3.length, a3 = new Array(i3);
          for (n3 = 0; n3 < i3; n3++) a3[n3] = t3(e3[n3], n3, e3);
          return a3;
        };
        var ie = function() {
          function e3(e4) {
            return "string" == typeof e4 && (e4 = e4.replace(/[\r\n]+/g, "")), JSON.stringify(e4);
          }
          function t3(t4) {
            return function(n4, i4, a3, r3) {
              return i4 += "", a3 && (n4 = "(" + n4 + " + '').toString()" + (r3 ? ".toLocaleLowerCase('" + r3 + "')" : ".toLowerCase()"), i4 = r3 ? i4.toLocaleLowerCase(r3) : i4.toLowerCase()), t4(n4, e3(i4), a3);
            };
          }
          function n3(t4, n4, i4, a3, r3) {
            if (null != i4) {
              if (typeof i4 === m2) {
                var o3 = j.exec(i4);
                o3 ? i4 = /* @__PURE__ */ new Date(+o3[1]) : a3 ? (i4 = e3(r3 ? i4.toLocaleLowerCase(r3) : i4.toLowerCase()), n4 = "((" + n4 + " || '')+'')" + (r3 ? ".toLocaleLowerCase('" + r3 + "')" : ".toLowerCase()")) : i4 = e3(i4);
              }
              i4.getTime && (n4 = "(" + n4 + "&&" + n4 + ".getTime?" + n4 + ".getTime():" + n4 + ")", i4 = i4.getTime());
            }
            return n4 + " " + t4 + " " + i4;
          }
          function i3(e4) {
            for (var t4 = "/^", n4 = false, i4 = 0; i4 < e4.length; ++i4) {
              var a3 = e4.charAt(i4);
              if (n4) t4 += "\\" + a3;
              else {
                if ("~" == a3) {
                  n4 = true;
                  continue;
                }
                "*" == a3 ? t4 += ".*" : "?" == a3 ? t4 += "." : ".+^$()[]{}|\\/\n\r\u2028\u2029 ".indexOf(a3) >= 0 ? t4 += "\\" + a3 : t4 += a3;
              }
              n4 = false;
            }
            return t4 + "$/";
          }
          return { quote: function(t4) {
            return t4 && t4.getTime ? "new Date(" + t4.getTime() + ")" : e3(t4);
          }, eq: function(e4, t4, i4, a3) {
            return n3("==", e4, t4, i4, a3);
          }, neq: function(e4, t4, i4, a3) {
            return n3("!=", e4, t4, i4, a3);
          }, gt: function(e4, t4, i4) {
            return n3(">", e4, t4, i4);
          }, gte: function(e4, t4, i4) {
            return n3(">=", e4, t4, i4);
          }, lt: function(e4, t4, i4) {
            return n3("<", e4, t4, i4);
          }, lte: function(e4, t4, i4) {
            return n3("<=", e4, t4, i4);
          }, startswith: t3(function(e4, t4) {
            return e4 + ".lastIndexOf(" + t4 + ", 0) == 0";
          }), doesnotstartwith: t3(function(e4, t4) {
            return e4 + ".lastIndexOf(" + t4 + ", 0) == -1";
          }), endswith: t3(function(e4, t4) {
            return e4 + ".indexOf(" + t4 + ", " + e4 + ".length - " + (t4 ? t4.length - 2 : 0) + ") >= 0";
          }), doesnotendwith: t3(function(e4, t4) {
            return e4 + ".indexOf(" + t4 + ", " + e4 + ".length - " + (t4 ? t4.length - 2 : 0) + ") < 0";
          }), contains: t3(function(e4, t4) {
            return e4 + ".indexOf(" + t4 + ") >= 0";
          }), doesnotcontain: t3(function(e4, t4) {
            return e4 + ".indexOf(" + t4 + ") == -1";
          }), matches: t3(function(e4, t4) {
            return i3(t4 = t4.substring(1, t4.length - 1)) + ".test(" + e4 + ")";
          }), doesnotmatch: t3(function(e4, t4) {
            return "!" + i3(t4 = t4.substring(1, t4.length - 1)) + ".test(" + e4 + ")";
          }), isempty: function(e4) {
            return e4 + " === ''";
          }, isnotempty: function(e4) {
            return e4 + " !== ''";
          }, isnull: function(e4) {
            return "(" + e4 + " == null)";
          }, isnotnull: function(e4) {
            return "(" + e4 + " != null)";
          }, isnullorempty: function(e4) {
            return "(" + e4 + " === null) || (" + e4 + " === '')";
          }, isnotnullorempty: function(e4) {
            return "(" + e4 + " !== null) && (" + e4 + " !== '')";
          } };
        }();
        function ae(e3) {
          this.data = e3 || [];
        }
        function re(e3, n3) {
          if (e3) {
            var i3 = typeof e3 === m2 ? { field: e3, dir: n3 } : e3, a3 = o2(i3) ? i3 : i3 !== t2 ? [i3] : [];
            return s2(a3, function(e4) {
              return !!e4.dir;
            });
          }
        }
        function oe(e3, n3) {
          var i3 = {};
          if (e3) for (var a3 = typeof e3 === m2 ? { field: e3, dir: n3 } : e3, r3 = o2(a3) ? a3 : a3 !== t2 ? [a3] : [], s3 = 0; s3 < r3.length; s3++) i3[r3[s3].field] = { dir: r3[s3].dir, index: s3 + 1 };
          return i3;
        }
        ae.filterExpr = function(e3) {
          var n3, i3, a3, r3, o3, s3, l3 = [], d3 = [], u3 = [], p3 = e3.filters;
          for (n3 = 0, i3 = p3.length; n3 < i3; n3++) o3 = (a3 = p3[n3]).field, s3 = a3.operator, a3.filters ? (a3 = (r3 = ae.filterExpr(a3)).expression.replace(/__o\[(\d+)\]/g, function(e4, t3) {
            return t3 = +t3, "__o[" + (u3.length + t3) + "]";
          }).replace(/__f\[(\d+)\]/g, function(e4, t3) {
            return t3 = +t3, "__f[" + (d3.length + t3) + "]";
          }), u3.push.apply(u3, r3.operators), d3.push.apply(d3, r3.fields)) : (typeof o3 === g2 ? (r3 = "__f[" + d3.length + "](d)", d3.push(o3)) : r3 = c2.expr(o3), typeof s3 === g2 ? (a3 = "__o[" + u3.length + "](" + r3 + ", " + ie.quote(a3.value) + ")", u3.push(s3)) : a3 = ie[(s3 || "eq").toLowerCase()](r3, a3.value, a3.ignoreCase === t2 || a3.ignoreCase, e3.accentFoldingFiltering)), l3.push(a3);
          return { expression: "(" + l3.join({ and: " && ", or: " || " }[e3.logic]) + ")", fields: d3, operators: u3 };
        };
        var se = { "==": "eq", equals: "eq", isequalto: "eq", equalto: "eq", equal: "eq", "!=": "neq", ne: "neq", notequals: "neq", isnotequalto: "neq", notequalto: "neq", notequal: "neq", "<": "lt", islessthan: "lt", lessthan: "lt", less: "lt", "<=": "lte", le: "lte", islessthanorequalto: "lte", lessthanequal: "lte", ">": "gt", isgreaterthan: "gt", greaterthan: "gt", greater: "gt", ">=": "gte", isgreaterthanorequalto: "gte", greaterthanequal: "gte", ge: "gte", notsubstringof: "doesnotcontain", isnull: "isnull", isempty: "isempty", isnotempty: "isnotempty" };
        function le(e3) {
          var t3, n3, i3, a3, r3 = e3.filters;
          if (r3) for (t3 = 0, n3 = r3.length; t3 < n3; t3++) (a3 = (i3 = r3[t3]).operator) && typeof a3 === m2 && (i3.operator = se[a3.toLowerCase()] || a3), le(i3);
        }
        function de(e3) {
          if (e3 && !r2(e3)) return !o2(e3) && e3.filters || (e3 = { logic: "and", filters: o2(e3) ? e3 : [e3] }), le(e3), e3;
        }
        function ue(e3, t3) {
          return !e3.logic && !t3.logic && (e3.field === t3.field && e3.value === t3.value && e3.operator === t3.operator);
        }
        function ce(e3) {
          return r2(e3 = e3 || {}) ? { logic: "and", filters: [] } : de(e3);
        }
        function pe(e3, t3) {
          return t3.logic || e3.field > t3.field ? 1 : e3.field < t3.field ? -1 : 0;
        }
        function he(e3, i3, a3, r3) {
          var s3 = typeof e3 === m2 ? { field: e3, dir: i3, compare: a3, skipItemSorting: r3 } : e3, l3 = o2(s3) ? s3 : s3 !== t2 ? [s3] : [];
          return n2(l3, function(e4) {
            return { field: e4.field, dir: e4.dir || "asc", aggregates: e4.aggregates, compare: e4.compare, skipItemSorting: e4.skipItemSorting };
          });
        }
        function fe(e3, t3, n3) {
          for (var i3 = he(e3, t3, n3), a3 = 0; a3 < i3.length; a3++) delete i3[a3].compare;
          return i3;
        }
        function me(e3, t3) {
          return e3 && e3.getTime && t3 && t3.getTime ? e3.getTime() === t3.getTime() : e3 === t3;
        }
        function ge(e3, t3, n3, i3, a3, r3) {
          var o3, s3, l3, d3 = (t3 = t3 || []).length;
          for (o3 = 0; o3 < d3; o3++) {
            l3 = (s3 = t3[o3]).aggregate;
            var u3 = s3.field;
            e3[u3] = e3[u3] || {}, r3[u3] = r3[u3] || {}, r3[u3][l3] = r3[u3][l3] || {}, e3[u3][l3] = ve[l3.toLowerCase()](e3[u3][l3], n3, c2.accessor(u3), i3, a3, r3[u3][l3]);
          }
        }
        ae.normalizeFilter = de, ae.compareFilters = function e3(t3, n3) {
          if (t3 = ce(t3), n3 = ce(n3), t3.logic !== n3.logic) return false;
          var i3, a3, r3 = (t3.filters || []).slice(), o3 = (n3.filters || []).slice();
          if (r3.length !== o3.length) return false;
          r3 = r3.sort(pe), o3 = o3.sort(pe);
          for (var s3 = 0; s3 < r3.length; s3++) if (i3 = r3[s3], a3 = o3[s3], i3.logic && a3.logic) {
            if (!e3(i3, a3)) return false;
          } else if (!ue(i3, a3)) return false;
          return true;
        }, ae.prototype = { toArray: function() {
          return this.data;
        }, range: function(e3, t3) {
          return new ae(this.data.slice(e3, e3 + t3));
        }, skip: function(e3) {
          return new ae(this.data.slice(e3));
        }, take: function(e3) {
          return new ae(this.data.slice(0, e3));
        }, select: function(e3) {
          return new ae(n2(this.data, e3));
        }, order: function(e3, t3, n3) {
          var i3 = { dir: t3 };
          return e3 && (e3.compare ? i3.compare = e3.compare : i3.field = e3), new ae(n3 ? this.data.sort(te.create(i3)) : this.data.slice(0).sort(te.create(i3)));
        }, orderBy: function(e3, t3) {
          return this.order(e3, "asc", t3);
        }, orderByDescending: function(e3, t3) {
          return this.order(e3, "desc", t3);
        }, sort: function(e3, t3, n3, i3) {
          var a3, r3, o3 = re(e3, t3), s3 = [];
          if (n3 = n3 || te, o3.length) {
            for (a3 = 0, r3 = o3.length; a3 < r3; a3++) s3.push(n3.create(o3[a3]));
            return this.orderBy({ compare: n3.combine(s3) }, i3);
          }
          return this;
        }, filter: function(e3) {
          var t3, n3, i3, a3, r3, o3, s3, l3, d3 = this.data, u3 = [];
          if (!(e3 = de(e3)) || 0 === e3.filters.length) return this;
          for (a3 = ae.filterExpr(e3), o3 = a3.fields, s3 = a3.operators, r3 = l3 = new Function("d, __f, __o", "return " + a3.expression), (o3.length || s3.length) && (l3 = function(e4) {
            return r3(e4, o3, s3);
          }), t3 = 0, i3 = d3.length; t3 < i3; t3++) l3(n3 = d3[t3]) && u3.push(n3);
          return new ae(u3);
        }, group: function(e3, t3, n3) {
          e3 = he(e3 || []), t3 = t3 || this.data;
          var i3, a3 = new ae(this.data);
          return e3.length > 0 && (i3 = e3[0], a3 = n3 && n3.groupPaging ? new ae(t3).groupAllData(i3, t3).select(function(a4) {
            var r3 = new ae(t3).filter([{ field: a4.field, operator: "eq", value: a4.value, ignoreCase: false }]), o3 = e3.length > 1 ? new ae(a4.items).group(e3.slice(1), r3.toArray(), n3).toArray() : a4.items;
            return { field: a4.field, value: a4.value, hasSubgroups: e3.length > 1, items: o3, aggregates: r3.aggregate(i3.aggregates), uid: c2.guid(), itemCount: o3.length, subgroupCount: o3.length };
          }) : a3.groupBy(i3).select(function(n4) {
            var a4 = new ae(t3).filter([{ field: n4.field, operator: "eq", value: n4.value, ignoreCase: false }]);
            return { field: n4.field, value: n4.value, items: e3.length > 1 ? new ae(n4.items).group(e3.slice(1), a4.toArray()).toArray() : n4.items, hasSubgroups: e3.length > 1, aggregates: a4.aggregate(i3.aggregates) };
          })), a3;
        }, groupBy: function(e3) {
          if (r2(e3) || !this.data.length) return new ae([]);
          var t3, n3, i3, a3, o3 = e3.field, s3 = e3.skipItemSorting ? this.data : this._sortForGrouping(o3, e3.dir || "asc"), l3 = c2.accessor(o3), d3 = l3.get(s3[0], o3), u3 = { field: o3, value: d3, items: [] }, p3 = [u3];
          for (i3 = 0, a3 = s3.length; i3 < a3; i3++) t3 = s3[i3], me(d3, n3 = l3.get(t3, o3)) || (u3 = { field: o3, value: d3 = n3, items: [] }, p3.push(u3)), u3.items.push(t3);
          return new ae(p3 = this._sortGroups(p3, e3));
        }, groupAllData: function(e3, t3) {
          if (r2(e3) || this.data && !this.data.length) return new ae([]);
          var n3, i3, a3, o3, s3 = e3.field, l3 = e3.skipItemSorting ? t3 : new ae(t3).sort(s3, e3.dir || "asc", ne).toArray(), d3 = c2.accessor(s3), u3 = d3.get(l3[0], s3), p3 = { field: s3, value: u3, items: [] }, h3 = [p3];
          for (a3 = 0, o3 = l3.length; a3 < o3; a3++) n3 = l3[a3], me(u3, i3 = d3.get(n3, s3)) || (p3 = { field: s3, value: u3 = i3, items: [] }, h3.push(p3)), p3.items.push(n3);
          return new ae(h3 = this._sortGroups(h3, e3));
        }, _sortForGrouping: function(e3, t3) {
          var n3, i3, a3 = this.data;
          if (!W) {
            for (n3 = 0, i3 = a3.length; n3 < i3; n3++) a3[n3].__position = n3;
            for (n3 = 0, i3 = (a3 = new ae(a3).sort(e3, t3, ne).toArray()).length; n3 < i3; n3++) delete a3[n3].__position;
            return a3;
          }
          return this.sort(e3, t3).toArray();
        }, _sortGroups: function(e3, t3) {
          var n3 = e3;
          return t3 && p2(t3.compare) && (n3 = new ae(n3).order({ compare: t3.compare }, t3.dir || "asc").toArray()), n3;
        }, aggregate: function(e3) {
          var t3, n3, i3 = {}, a3 = {};
          if (e3 && e3.length) for (t3 = 0, n3 = this.data.length; t3 < n3; t3++) ge(i3, e3, this.data[t3], t3, n3, a3);
          return i3;
        } };
        var ve = { sum: function(e3, t3, n3) {
          var i3 = n3.get(t3);
          return _e(e3) ? _e(i3) && (e3 += i3) : e3 = i3, e3;
        }, count: function(e3) {
          return (e3 || 0) + 1;
        }, average: function(e3, n3, i3, a3, r3, o3) {
          var s3 = i3.get(n3);
          return o3.count === t2 && (o3.count = 0), _e(e3) ? _e(s3) && (e3 += s3) : e3 = s3, _e(s3) && o3.count++, a3 == r3 - 1 && _e(e3) && (e3 /= o3.count), e3;
        }, max: function(e3, t3, n3) {
          var i3 = n3.get(t3);
          return _e(e3) || be(e3) || (e3 = i3), e3 < i3 && (_e(i3) || be(i3)) && (e3 = i3), e3;
        }, min: function(e3, t3, n3) {
          var i3 = n3.get(t3);
          return _e(e3) || be(e3) || (e3 = i3), e3 > i3 && (_e(i3) || be(i3)) && (e3 = i3), e3;
        } };
        function _e(e3) {
          return "number" == typeof e3 && !isNaN(e3);
        }
        function be(e3) {
          return e3 && e3.getTime;
        }
        function ke(e3) {
          var t3, n3 = e3.length, i3 = new Array(n3);
          for (t3 = 0; t3 < n3; t3++) i3[t3] = e3[t3].toJSON();
          return i3;
        }
        ae.normalizeGroup = he, ae.normalizeSort = re, ae.process = function(e3, a3, s3) {
          var l3, d3, u3 = (a3 = a3 || {}).group, c3 = function(e4) {
            for (var t3 = o2(e4) ? e4 : [e4], n3 = 0; n3 < t3.length; n3++) if (t3[n3] && p2(t3[n3].compare)) return true;
            return false;
          }(he(u3 || [])), h3 = new ae(e3), f3 = fe(u3 || []), m3 = re(a3.sort || []), g3 = c3 ? m3 : f3.concat(m3), v3 = a3.filterCallback, _3 = a3.filter, b3 = a3.skip, k3 = a3.take;
          return g3 && s3 && (h3 = h3.sort(g3, t2, t2, s3)), _3 && (h3 = h3.filter(_3), v3 && (h3 = v3(h3)), d3 = h3.toArray().length), g3 && (s3 || (h3 = h3.sort(g3)), u3 && (e3 = h3.toArray())), c3 ? (h3 = h3.group(u3, e3, a3), b3 === t2 || k3 === t2 || a3.groupPaging || (h3 = new ae(ze(h3.toArray())).range(b3, k3), l3 = n2(f3, function(e4) {
            return i2({}, e4, { skipItemSorting: true });
          }), h3 = h3.group(l3, e3, a3))) : (b3 !== t2 && k3 !== t2 && (b3 + k3 > (d3 = h3.data.length) && a3.virtual && (b3 = (b3 -= b3 + k3 - d3) < 0 ? 0 : b3), h3 = h3.range(b3, k3)), !u3 || r2(u3) && 0 === u3.length || (h3 = h3.group(u3, e3, a3))), { total: d3, data: h3.toArray() };
        };
        var we = f2.extend({ init: function(e3) {
          this.data = e3.data;
        }, read: function(e3) {
          e3.success(this.data);
        }, update: function(e3) {
          e3.success(e3.data);
        }, create: function(e3) {
          e3.success(e3.data);
        }, destroy: function(e3) {
          e3.success(e3.data);
        } }), ye = f2.extend({ init: function(e3) {
          var t3, n3 = this;
          e3 = n3.options = i2({}, n3.options, e3), d2(A, function(t4, n4) {
            typeof e3[n4] === m2 && (e3[n4] = { url: e3[n4] });
          }), n3.cache = e3.cache ? xe.create(e3.cache) : { find: u2, add: u2 }, t3 = e3.parameterMap, e3.submit && (n3.submit = e3.submit), p2(e3.push) && (n3.push = e3.push), n3.push || (n3.push = F), n3.parameterMap = p2(t3) ? t3 : function(e4) {
            var n4 = {};
            return d2(e4, function(e5, i3) {
              e5 in t3 && (e5 = t3[e5], a2(e5) && (i3 = e5.value(i3), e5 = e5.key)), n4[e5] = i3;
            }), n4;
          };
        }, options: { parameterMap: F }, create: function(e3) {
          return l2(this.setup(e3, v2));
        }, read: function(n3) {
          var i3, a3, r3 = this.cache;
          n3 = this.setup(n3, _2), i3 = n3.success || u2, n3.error, (a3 = r3.find(n3.data)) !== t2 ? i3(a3) : (n3.success = function(e3) {
            r3.add(n3.data, e3), i3(e3);
          }, e2.ajax(n3));
        }, update: function(e3) {
          return l2(this.setup(e3, b2));
        }, destroy: function(e3) {
          return l2(this.setup(e3, k2));
        }, setup: function(e3, t3) {
          e3 = e3 || {};
          var n3, a3 = this.options[t3], r3 = p2(a3.data) ? a3.data(e3.data) : a3.data;
          return e3 = i2(true, {}, a3, e3), n3 = i2(true, {}, r3, e3.data), e3.data = this.parameterMap(n3, t3), p2(e3.url) && (e3.url = e3.url(n3)), e3;
        } }), xe = f2.extend({ init: function() {
          this._store = {};
        }, add: function(e3, n3) {
          e3 !== t2 && (this._store[P(e3)] = n3);
        }, find: function(e3) {
          return this._store[P(e3)];
        }, clear: function() {
          this._store = {};
        }, remove: function(e3) {
          delete this._store[P(e3)];
        } });
        function Ce(e3, t3, n3, i3, a3) {
          var r3, o3, s3, l3, d3, u3 = {};
          for (l3 = 0, d3 = e3.length; l3 < d3; l3++) for (o3 in r3 = e3[l3], t3) (s3 = a3[o3]) && s3 !== o3 && (u3[s3] || (u3[s3] = c2.setter(s3)), u3[s3](r3, t3[o3](r3)), delete r3[o3]);
        }
        function Te(e3, t3, n3, i3, a3) {
          var r3, o3, s3, l3, d3;
          for (l3 = 0, d3 = e3.length; l3 < d3; l3++) for (o3 in r3 = e3[l3], t3) r3[o3] = n3._parse(o3, t3[o3](r3)), (s3 = a3[o3]) && s3 !== o3 && delete r3[s3];
        }
        function Se(e3, t3, n3, i3, a3) {
          var r3, o3, s3, l3;
          for (o3 = 0, l3 = e3.length; o3 < l3; o3++) (s3 = i3[(r3 = e3[o3]).field]) && s3 != r3.field && (r3.field = s3), r3.value = n3._parse(r3.field, r3.value), r3.items && (r3.hasSubgroups ? Se(r3.items, t3, n3, i3, a3) : Te(r3.items, t3, n3, 0, a3));
        }
        function Ie(e3, t3, n3, i3, a3, r3) {
          return function(o3) {
            return o3 = e3(o3), De(t3, n3, i3, a3, r3)(o3);
          };
        }
        function De(e3, t3, n3, i3, a3) {
          return function(o3) {
            return o3 && !r2(n3) && ("[object Array]" === U.call(o3) || o3 instanceof G || (o3 = [o3]), t3(o3, n3, new e3(), i3, a3)), o3 || [];
          };
        }
        xe.create = function(e3) {
          var t3 = { inmemory: function() {
            return new xe();
          } };
          return a2(e3) && p2(e3.find) ? e3 : true === e3 ? new xe() : t3[e3]();
        };
        var Ee = f2.extend({ init: function(e3) {
          var t3, n3, i3, r3, o3 = this;
          for (t3 in e3 = e3 || {}) n3 = e3[t3], o3[t3] = typeof n3 === m2 ? z(n3) : n3;
          r3 = e3.modelBase || ee, a2(o3.model) && (o3.model = i3 = r3.define(o3.model));
          var s3 = o3.data.bind(o3);
          if (o3._dataAccessFunction = s3, o3.model) {
            var l3, u3, c3 = o3.groups.bind(o3), p3 = o3.serialize.bind(o3), h3 = {}, f3 = {}, g3 = {}, v3 = {}, _3 = false;
            (i3 = o3.model).fields && (d2(i3.fields, function(e4, t4) {
              var n4;
              l3 = e4, a2(t4) && t4.field ? l3 = t4.field : typeof t4 === m2 && (l3 = t4), a2(t4) && t4.from && (n4 = t4.from), _3 = _3 || n4 && n4 !== e4 || l3 !== e4, u3 = n4 || l3, f3[e4] = -1 !== u3.indexOf(".") ? z(u3, true) : z(u3), g3[e4] = z(e4), h3[n4 || l3] = e4, v3[e4] = n4 || l3;
            }), !e3.serialize && _3 && (o3.serialize = Ie(p3, i3, Ce, g3, h3, v3))), o3._dataAccessFunction = s3, o3._wrapDataAccessBase = De(i3, Te, f3, h3, v3), o3.data = Ie(s3, i3, Te, f3, h3, v3), o3.groups = Ie(c3, i3, Se, f3, h3, v3);
          }
        }, errors: function(e3) {
          return e3 ? e3.errors : null;
        }, parse: F, data: F, total: function(e3) {
          return e3.length;
        }, groups: F, aggregates: function() {
          return {};
        }, serialize: function(e3) {
          return e3;
        } });
        function Ae(e3, t3) {
          var n3, i3;
          if (t3.items && t3.items.length) for (var a3 = 0; a3 < t3.items.length; a3++) n3 = e3.items[e3.items.length - 1], i3 = t3.items[a3], n3 && i3 ? n3.hasSubgroups && n3.value == i3.value ? Ae(n3, i3) : n3.field && n3.value == i3.value ? (n3.items.omitChangeEvent = true, n3.items.push.apply(n3.items, i3.items), n3.items.omitChangeEvent = false) : (e3.items.omitChangeEvent = true, e3.items.push.apply(e3.items, [i3]), e3.items.omitChangeEvent = false) : i3 && (e3.items.omitChangeEvent = true, e3.items.push.apply(e3.items, [i3]), e3.items.omitChangeEvent = false);
        }
        function Fe(e3, t3, n3, i3) {
          for (var a3, r3, o3 = 0; t3.length && i3; ) {
            var s3 = (r3 = (a3 = t3[o3]).items).length;
            if (e3 && e3.field === a3.field && e3.value === a3.value ? (e3.hasSubgroups && e3.items.length ? Fe(e3.items[e3.items.length - 1], a3.items, n3, i3) : (r3 = r3.slice(n3, n3 + i3), e3.items = e3.items.concat(r3)), t3.splice(o3--, 1)) : a3.hasSubgroups && r3.length ? (Fe(a3, r3, n3, i3), a3.items.length || t3.splice(o3--, 1)) : (r3 = r3.slice(n3, n3 + i3), a3.items = r3, a3.items.length || t3.splice(o3--, 1)), 0 === r3.length ? n3 -= s3 : (n3 = 0, i3 -= r3.length), ++o3 >= t3.length) break;
          }
          o3 < t3.length && t3.splice(o3, t3.length - o3);
        }
        function ze(e3, t3) {
          for (var n3, i3, a3 = [], r3 = (e3 || []).length, o3 = p2(t3) ? t3 : function(e4, t4) {
            return e4[t4];
          }, s3 = 0; s3 < r3; s3++) if ((n3 = o3(e3, s3)).hasSubgroups) a3 = a3.concat(ze(n3.items));
          else {
            i3 = n3.items;
            for (var l3 = 0; l3 < i3.length; l3++) a3.push(o3(i3, l3));
          }
          return a3;
        }
        function Pe(e3) {
          var t3, n3, i3, a3, r3 = [];
          for (t3 = 0, n3 = e3.length; t3 < n3; t3++) {
            var o3 = e3.at(t3);
            if (o3.items) if (o3.hasSubgroups) r3 = r3.concat(Pe(o3.items));
            else for (i3 = o3.items, a3 = 0; a3 < i3.length; a3++) r3.push(i3.at(a3));
          }
          return r3;
        }
        function He(e3, t3) {
          var n3, i3, a3;
          if (t3) for (n3 = 0, i3 = e3.length; n3 < i3; n3++) (a3 = e3.at(n3)).items && (a3.hasSubgroups ? He(a3.items, t3) : a3.items = new K(a3.items, t3, a3.items._events));
        }
        function Ne(e3, t3) {
          for (var n3 = 0; n3 < e3.length; n3++) if (e3[n3].hasSubgroups) {
            if (Ne(e3[n3].items, t3)) return true;
          } else if (t3(e3[n3].items, e3[n3])) return true;
        }
        function Re(e3, t3, n3, i3) {
          for (var a3 = 0; a3 < e3.length && e3[a3].data !== t3 && !Oe(e3[a3].data, n3, i3); a3++) ;
        }
        function Oe(e3, t3, n3) {
          for (var i3 = 0, a3 = e3.length; i3 < a3; i3++) {
            if (e3[i3] && e3[i3].hasSubgroups) return Oe(e3[i3].items, t3, n3);
            if (e3[i3] === t3 || e3[i3] === n3) return e3[i3] = n3, true;
          }
        }
        function Me(e3, n3, i3, a3, r3) {
          for (var o3 = 0, s3 = e3.length; o3 < s3; o3++) {
            var l3 = e3[o3];
            if (l3 && !(l3 instanceof a3)) if (l3.hasSubgroups === t2 || r3) {
              for (var d3 = 0; d3 < n3.length; d3++) if (n3[d3] === l3) {
                e3[o3] = n3.at(d3), Re(i3, n3, l3, e3[o3]);
                break;
              }
            } else Me(l3.items, n3, i3, a3, r3);
          }
        }
        function Be(e3, t3) {
          return t3 ? Ve(e3, function(e4) {
            return e4.uid && e4.uid == t3.uid || e4[t3.idField] === t3.id && t3.id !== t3._defaultId;
          }) : -1;
        }
        function Le(e3, t3) {
          return t3 ? Ve(e3, function(e4) {
            return e4.uid == t3.uid;
          }) : -1;
        }
        function Ve(e3, t3) {
          var n3, i3;
          if (e3) {
            for (n3 = 0, i3 = e3.length; n3 < i3; n3++) if (t3(e3[n3])) return n3;
            return -1;
          }
        }
        function Ue(e3, t3) {
          if (e3 && !r2(e3)) {
            var n3, i3 = e3[t3];
            return n3 = a2(i3) ? i3.from || i3.field || t3 : e3[t3] || t3, p2(n3) ? t3 : n3;
          }
          return t3;
        }
        function We(e3, t3) {
          var n3, i3, a3 = {};
          for (var r3 in e3) "filters" !== r3 && (a3[r3] = e3[r3]);
          if (e3.filters) for (a3.filters = [], n3 = 0, i3 = e3.filters.length; n3 < i3; n3++) a3.filters[n3] = We(e3.filters[n3], t3);
          else a3.field = Ue(t3.fields, a3.field);
          return a3;
        }
        function je(e3, t3) {
          var n3, i3, a3, r3, s3 = [];
          for (n3 = 0, i3 = e3.length; n3 < i3; n3++) {
            for (var l3 in a3 = {}, r3 = e3[n3]) a3[l3] = r3[l3];
            a3.field = Ue(t3.fields, a3.field), a3.aggregates && o2(a3.aggregates) && (a3.aggregates = je(a3.aggregates, t3)), s3.push(a3);
          }
          return s3;
        }
        var qe = h2.extend({ init: function(e3) {
          var n3, a3 = this;
          if (e3 && (n3 = e3.data), e3 = a3.options = i2({}, a3.options, e3), a3._map = {}, a3._prefetch = {}, a3._data = [], a3._pristineData = [], a3._ranges = [], a3._view = [], a3._pristineTotal = 0, a3._destroyed = [], a3._pageSize = e3.pageSize, a3._page = e3.page || (e3.pageSize ? 1 : t2), a3._sort = re(e3.sort), a3._sortFields = oe(e3.sort), a3._filter = de(e3.filter), a3._group = he(e3.group), a3._aggregate = e3.aggregate, a3._total = e3.total, a3._groupPaging = e3.groupPaging, a3._groupPaging && (a3._groupsState = {}), a3._shouldDetachObservableParents = true, h2.fn.init.call(a3), a3.transport = Ge.create(e3, n3, a3), p2(a3.transport.push) && a3.transport.push({ pushCreate: a3._pushCreate.bind(a3), pushUpdate: a3._pushUpdate.bind(a3), pushDestroy: a3._pushDestroy.bind(a3) }), null != e3.offlineStorage) if ("string" == typeof e3.offlineStorage) {
            var r3 = e3.offlineStorage;
            a3._storage = { getItem: function() {
              return JSON.parse(localStorage.getItem(r3));
            }, setItem: function(e4) {
              localStorage.setItem(r3, P(a3.reader.serialize(e4)));
            } };
          } else a3._storage = e3.offlineStorage;
          a3.reader = new c2.data.readers[e3.schema.type || "json"](e3.schema), a3.reader.model, a3._detachObservableParents(), a3._data = a3._observe(a3._data), a3._online = true, a3.bind(["push", C, w, T, y, I, S], e3);
        }, options: { data: null, schema: { modelBase: ee }, offlineStorage: null, serverSorting: false, serverPaging: false, serverFiltering: false, serverGrouping: false, serverAggregates: false, batch: false, inPlaceSort: false }, clone: function() {
          return this;
        }, online: function(n3) {
          return n3 !== t2 ? this._online != n3 && (this._online = n3, n3) ? this.sync() : e2.Deferred().resolve().promise() : this._online;
        }, offlineData: function(e3) {
          return null == this.options.offlineStorage ? null : e3 !== t2 ? this._storage.setItem(e3) : this._storage.getItem() || [];
        }, _isGrouped: function() {
          return (this.group() || []).length;
        }, _isServerGrouped: function() {
          var e3 = this.group() || [];
          return this.options.serverGrouping && e3.length;
        }, _isServerGroupPaged: function() {
          return this._isServerGrouped() && this._groupPaging;
        }, _isGroupPaged: function() {
          var e3 = this._group || [];
          return this._groupPaging && e3.length;
        }, _pushCreate: function(e3) {
          this._push(e3, "pushCreate");
        }, _pushUpdate: function(e3) {
          this._push(e3, "pushUpdate");
        }, _pushDestroy: function(e3) {
          this._push(e3, "pushDestroy");
        }, _push: function(e3, t3) {
          var n3 = this._readData(e3);
          n3 || (n3 = e3), this[t3](n3);
        }, _flatData: function(e3, t3) {
          if (e3) {
            if (this._isServerGrouped()) return Pe(e3);
            if (!t3) for (var n3 = 0; n3 < e3.length; n3++) e3.at(n3);
          }
          return e3;
        }, parent: u2, get: function(e3) {
          var t3, n3, i3 = this._flatData(this._data, this.options.useRanges);
          for (t3 = 0, n3 = i3.length; t3 < n3; t3++) if (i3[t3].id == e3) return i3[t3];
        }, getByUid: function(e3) {
          return this._getByUid(e3, this._data);
        }, _getByUid: function(e3, t3) {
          var n3, i3, a3 = this._flatData(t3, this.options.useRanges);
          if (a3) {
            for (n3 = 0, i3 = a3.length; n3 < i3; n3++) if (a3[n3].uid == e3) return a3[n3];
          }
        }, indexOf: function(e3) {
          return Le(this._data, e3);
        }, at: function(e3) {
          return this._data.at(e3);
        }, data: function(e3) {
          var n3 = this;
          if (e3 === t2) {
            if (n3._data) for (var i3 = 0; i3 < n3._data.length; i3++) n3._data.at(i3);
            return n3._data;
          }
          n3._detachObservableParents(), n3._data = this._observe(e3), n3._pristineData = e3.slice(0), n3._storeData(), n3._ranges = [], n3.trigger("reset"), n3._addRange(n3._data), n3._total = n3._data.length, n3._pristineTotal = n3._total, n3._process(n3._data);
        }, view: function(e3) {
          if (e3 === t2) return this._view;
          this._view = this._observeView(e3);
        }, _observeView: function(e3) {
          var t3 = this;
          Me(e3, t3._data, t3._ranges, t3.reader.model || Q, t3._isServerGrouped());
          var n3 = new K(e3, t3.reader.model);
          return n3.parent = function() {
            return t3.parent();
          }, n3;
        }, flatView: function() {
          return (this.group() || []).length ? Pe(this._view) : this._view;
        }, add: function(e3) {
          return this.insert(this._data.length, e3);
        }, _createNewModel: function(e3) {
          return this.reader.model ? new this.reader.model(e3) : e3 instanceof Q ? e3 : new Q(e3);
        }, insert: function(e3, t3) {
          return t3 || (t3 = e3, e3 = 0), t3 instanceof ee || (t3 = this._createNewModel(t3)), this._isServerGrouped() ? this._data.splice(e3, 0, this._wrapInEmptyGroup(t3)) : this._data.splice(e3, 0, t3), this._insertModelInRange(e3, t3), t3;
        }, pushInsert: function(t3, n3) {
          var i3 = this._getCurrentRangeSpan();
          n3 || (n3 = t3, t3 = 0), o2(n3) || (n3 = [n3]);
          var a3 = [], r3 = this.options.autoSync;
          this.options.autoSync = false;
          try {
            for (var s3 = 0; s3 < n3.length; s3++) {
              var l3 = n3[s3], d3 = this.insert(t3, l3);
              a3.push(d3);
              var u3 = d3.toJSON();
              this._isServerGrouped() && (u3 = this._wrapInEmptyGroup(u3)), this._pristineData.push(u3), i3 && i3.length && e2(i3).last()[0].pristineData.push(u3), t3++;
            }
          } finally {
            this.options.autoSync = r3;
          }
          a3.length && this.trigger("push", { type: "create", items: a3 });
        }, pushCreate: function(e3) {
          this.pushInsert(this._data.length, e3);
        }, pushUpdate: function(e3) {
          o2(e3) || (e3 = [e3]);
          for (var t3 = [], n3 = 0; n3 < e3.length; n3++) {
            var i3 = e3[n3], a3 = this._createNewModel(i3), r3 = this.get(a3.id);
            r3 ? (t3.push(r3), r3.accept(i3), r3.trigger(w), this._updatePristineForModel(r3, i3)) : this.pushCreate(i3);
          }
          t3.length && this.trigger("push", { type: "update", items: t3 });
        }, pushDestroy: function(e3) {
          var t3 = this._removeItems(e3);
          t3.length && this.trigger("push", { type: "destroy", items: t3 });
        }, _removeItems: function(e3, t3) {
          o2(e3) || (e3 = [e3]);
          var n3 = void 0 === t3 || t3, i3 = [], a3 = this.options.autoSync;
          this.options.autoSync = false;
          try {
            for (var r3 = 0; r3 < e3.length; r3++) {
              var s3 = e3[r3], l3 = this._createNewModel(s3), d3 = false;
              this._eachItem(this._data, function(e4) {
                for (var t4 = 0; t4 < e4.length; t4++) {
                  var n4 = e4.at(t4);
                  if (n4.id === l3.id) {
                    i3.push(n4), e4.splice(t4, 1), d3 = true;
                    break;
                  }
                }
              }), d3 && n3 && (this._removePristineForModel(l3), this._destroyed.pop());
            }
          } finally {
            this.options.autoSync = a3;
          }
          return i3;
        }, pushMove: function(e3, t3) {
          var n3 = this._moveItems(e3, t3);
          n3.length && this.trigger("push", { type: "update", items: n3 });
        }, _moveItems: function(e3, t3) {
          o2(t3) || (t3 = [t3]);
          var n3 = [], i3 = this.options.autoSync;
          this.options.autoSync = false;
          try {
            for (var a3 = 0; a3 < t3.length; a3++) {
              var r3 = t3[a3], s3 = this._createNewModel(r3);
              this._eachItem(this._data, function(t4) {
                for (var i4 = 0; i4 < t4.length; i4++) {
                  var a4 = t4.at(i4);
                  if (a4.id === s3.id) {
                    n3.push(a4), t4.splice(e3 >= i4 ? --e3 : e3, 0, t4.splice(i4, 1)[0]), e3++;
                    break;
                  }
                }
              });
            }
          } finally {
            this.options.autoSync = i3;
          }
          return n3;
        }, remove: function(e3) {
          var t3, n3 = this, i3 = n3._isServerGrouped();
          return !i3 || !e3.uid || e3.isNew && e3.isNew() || n3._pushInDestroyed(e3), this._eachItem(n3._data, function(n4) {
            if (t3 = function(e4, t4) {
              if (e4) {
                var n5, i4, a3 = e4.length;
                for (i4 = 0; i4 < a3; i4++) if ((n5 = e4[i4]).uid && n5.uid == t4.uid) return e4.splice(i4, 1), n5;
              }
            }(n4, e3), t3 && i3) return true;
          }), this._removeModelFromRanges(e3), e3;
        }, destroyed: function() {
          return this._destroyed;
        }, created: function() {
          var e3, t3, n3 = [], i3 = this._flatData(this._data, this.options.useRanges);
          for (e3 = 0, t3 = i3.length; e3 < t3; e3++) i3[e3].isNew && i3[e3].isNew() && n3.push(i3[e3]);
          return n3;
        }, updated: function() {
          var e3, t3, n3 = [], i3 = this._flatData(this._data, this.options.useRanges);
          for (e3 = 0, t3 = i3.length; e3 < t3; e3++) i3[e3].isNew && !i3[e3].isNew() && i3[e3].dirty && n3.push(i3[e3]);
          return n3;
        }, sync: function() {
          var t3 = this, n3 = [], i3 = [], a3 = t3._destroyed, r3 = e2.Deferred().resolve().promise();
          if (t3.online()) {
            if (!t3.reader.model) return r3;
            n3 = t3.created(), i3 = t3.updated();
            var o3 = [];
            t3.options.batch && t3.transport.submit ? o3 = t3._sendSubmit(n3, i3, a3) : (o3.push.apply(o3, t3._send("create", n3)), o3.push.apply(o3, t3._send("update", i3)), o3.push.apply(o3, t3._send("destroy", a3))), r3 = e2.when.apply(null, o3).then(function() {
              var e3, n4, i4 = arguments;
              for (e3 = 0, n4 = arguments.length; e3 < n4; e3++) i4[e3] && t3._accept(i4[e3]);
              t3._storeData(true), t3._syncEnd(), t3._change({ action: "sync" }), t3.trigger(y), t3._isServerGroupPaged() && t3.read();
            });
          } else t3._storeData(true), t3._syncEnd(), t3._change({ action: "sync" });
          return r3;
        }, _syncEnd: u2, cancelChanges: function(e3) {
          var t3 = this;
          e3 instanceof c2.data.Model ? t3._cancelModel(e3) : (t3._destroyed = [], t3._detachObservableParents(), t3._data = t3._observe(t3._pristineData), t3.options.serverPaging && (t3._total = t3._pristineTotal), t3._ranges = [], t3._addRange(t3._data, 0), t3._changesCanceled(), t3._change(), t3._markOfflineUpdatesAsDirty(), t3._isServerGrouped() && t3.read());
        }, _changesCanceled: u2, _markOfflineUpdatesAsDirty: function() {
          var e3 = this;
          null != e3.options.offlineStorage && e3._eachItem(e3._data, function(e4) {
            for (var t3 = 0; t3 < e4.length; t3++) {
              var n3 = e4.at(t3);
              "update" != n3.__state__ && "create" != n3.__state__ || (n3.dirty = true);
            }
          });
        }, hasChanges: function() {
          var e3, t3, n3 = this._flatData(this._data, this.options.useRanges);
          if (this._destroyed.length) return true;
          for (e3 = 0, t3 = n3.length; e3 < t3; e3++) if (n3[e3].isNew && n3[e3].isNew() || n3[e3].dirty) return true;
          return false;
        }, _accept: function(t3) {
          var n3, i3 = this, a3 = t3.models, s3 = t3.response, l3 = 0, d3 = i3._isServerGrouped(), u3 = i3._pristineData, c3 = t3.type;
          if (i3.trigger(I, { response: s3, type: c3 }), s3 && !r2(s3)) {
            if (s3 = i3.reader.parse(s3), i3._handleCustomErrors(s3)) return;
            s3 = i3.reader.data(s3), o2(s3) || (s3 = [s3]);
          } else s3 = e2.map(a3, function(e3) {
            return e3.toJSON();
          });
          for ("destroy" === c3 && (i3._destroyed = []), l3 = 0, n3 = a3.length; l3 < n3; l3++) "destroy" !== c3 ? (a3[l3].accept(s3[l3]), "create" === c3 ? u3.push(d3 ? i3._wrapInEmptyGroup(a3[l3].toJSON()) : s3[l3]) : "update" === c3 && i3._updatePristineForModel(a3[l3], s3[l3])) : i3._removePristineForModel(a3[l3]);
        }, _updatePristineForModel: function(e3, t3) {
          this._executeOnPristineForModel(e3, function(e4, n3) {
            c2.deepExtend(n3[e4], t3);
          });
        }, _executeOnPristineForModel: function(e3, t3) {
          this._eachPristineItem(function(n3) {
            var i3 = Be(n3, e3);
            if (i3 > -1) return t3(i3, n3), true;
          });
        }, _removePristineForModel: function(e3) {
          this._executeOnPristineForModel(e3, function(e4, t3) {
            t3.splice(e4, 1);
          });
        }, _readData: function(e3) {
          return (this._isServerGrouped() ? this.reader.groups : this.reader.data).call(this.reader, e3);
        }, _eachPristineItem: function(e3) {
          var t3 = this, n3 = t3.options, i3 = t3._getCurrentRangeSpan();
          t3._eachItem(t3._pristineData, e3), n3.serverPaging && n3.useRanges && d2(i3, function(n4, i4) {
            t3._eachItem(i4.pristineData, e3);
          });
        }, _eachItem: function(e3, t3) {
          e3 && e3.length && (this._isServerGrouped() ? Ne(e3, t3) : t3(e3));
        }, _pristineForModel: function(e3) {
          var t3, n3;
          return this._eachPristineItem(function(i3) {
            if ((n3 = Be(i3, e3)) > -1) return t3 = i3[n3], true;
          }), t3;
        }, _cancelModel: function(e3) {
          var t3 = this, n3 = this._pristineForModel(e3);
          this._eachItem(this._data, function(i3) {
            var a3 = Le(i3, e3);
            a3 >= 0 && (!n3 || e3.isNew() && !n3.__state__ ? (t3._modelCanceled(e3), i3.splice(a3, 1), t3._removeModelFromRanges(e3)) : (i3[a3].accept(n3), "update" == n3.__state__ && (i3[a3].dirty = true)));
          });
        }, _modelCanceled: u2, _submit: function(t3, n3) {
          var a3 = this;
          a3.trigger(T, { type: "submit" }), a3.trigger(S), a3.transport.submit(i2({ success: function(n4, i3) {
            var a4 = e2.grep(t3, function(e3) {
              return e3.type == i3;
            })[0];
            a4 && a4.resolve({ response: n4, models: a4.models, type: i3 });
          }, error: function(e3, n4, i3) {
            for (var r3 = 0; r3 < t3.length; r3++) t3[r3].reject(e3);
            a3.error(e3, n4, i3);
          } }, n3));
        }, _sendSubmit: function(t3, n3, i3) {
          var a3 = this, r3 = [];
          return a3.options.batch && (t3.length && r3.push(e2.Deferred(function(e3) {
            e3.type = "create", e3.models = t3;
          })), n3.length && r3.push(e2.Deferred(function(e3) {
            e3.type = "update", e3.models = n3;
          })), i3.length && r3.push(e2.Deferred(function(e3) {
            e3.type = "destroy", e3.models = i3;
          })), a3._submit(r3, { data: { created: a3.reader.serialize(ke(t3)), updated: a3.reader.serialize(ke(n3)), destroyed: a3.reader.serialize(ke(i3)) } })), r3;
        }, _promise: function(t3, n3, a3) {
          var r3 = this;
          return e2.Deferred(function(e3) {
            r3.trigger(T, { type: a3 }), r3.trigger(S), r3.transport[a3].call(r3.transport, i2({ success: function(t4) {
              e3.resolve({ response: t4, models: n3, type: a3 });
            }, error: function(t4, n4, i3) {
              e3.reject(t4), r3.error(t4, n4, i3);
            } }, t3));
          }).promise();
        }, _send: function(e3, t3) {
          var n3, i3, a3 = this, r3 = [], o3 = a3.reader.serialize(ke(t3));
          if (a3.options.batch) t3.length && r3.push(a3._promise({ data: { models: o3 } }, t3, e3));
          else for (n3 = 0, i3 = t3.length; n3 < i3; n3++) r3.push(a3._promise({ data: o3[n3] }, [t3[n3]], e3));
          return r3;
        }, read: function(t3) {
          var n3 = this, i3 = n3._params(t3), a3 = e2.Deferred();
          return n3._queueRequest(i3, function() {
            var e3 = n3.trigger(T, { type: "read" });
            e3 ? (n3._dequeueRequest(), a3.resolve(e3)) : (n3.trigger(S), n3._ranges = [], n3.trigger("reset"), n3.online() ? n3.transport.read({ data: i3, success: function(e4) {
              n3._ranges = [], n3.success(e4, i3), a3.resolve();
            }, error: function() {
              var e4 = L.call(arguments);
              n3.error.apply(n3, e4), a3.reject.apply(a3, e4);
            } }) : null != n3.options.offlineStorage && (n3.success(n3.offlineData(), i3), a3.resolve()));
          }), a3.promise();
        }, _readAggregates: function(e3) {
          return this.reader.aggregates(e3);
        }, success: function(e3) {
          var t3, n3, i3 = this, a3 = i3.options;
          if (i3.trigger(I, { response: e3, type: "read" }), i3.online()) {
            if (e3 = i3.reader.parse(e3), i3._handleCustomErrors(e3)) return void i3._dequeueRequest();
            i3._total = i3.reader.total(e3), i3._isServerGroupPaged() && (i3._serverGroupsTotal = i3._total), i3._pageSize > i3._total && (i3._pageSize = i3._total, i3.options.pageSize && i3.options.pageSize > i3._pageSize && (i3._pageSize = i3.options.pageSize)), i3._aggregate && a3.serverAggregates && (i3._aggregateResult = i3._readAggregates(e3)), e3 = i3._readData(e3), i3._destroyed = [];
          } else {
            e3 = i3._readData(e3), t3 = [];
            var r3, o3 = {}, s3 = i3.reader.model, l3 = s3 ? s3.idField : "id";
            for (r3 = 0; r3 < this._destroyed.length; r3++) {
              var d3 = this._destroyed[r3][l3];
              o3[d3] = d3;
            }
            for (r3 = 0; r3 < e3.length; r3++) {
              var u3 = e3[r3];
              "destroy" == u3.__state__ ? o3[u3[l3]] || this._pushInDestroyed(this._createNewModel(u3)) : t3.push(u3);
            }
            e3 = t3, i3._total = e3.length;
          }
          if (i3._pristineTotal = i3._total, n3 = i3._skip && i3._data.length && i3._skip < i3._data.length, i3.options.endless) {
            n3 && i3._pristineData.splice(i3._skip, i3._pristineData.length), t3 = e3.slice(0);
            for (var c3 = 0; c3 < t3.length; c3++) i3._pristineData.push(t3[c3]);
          } else i3._pristineData = e3.slice(0);
          if (i3._detachObservableParents(), i3.options.endless) {
            i3._data.unbind(w, i3._changeHandler), i3._isServerGrouped() && i3._data[i3._data.length - 1].value === e3[0].value && (Ae(i3._data[i3._data.length - 1], e3[0]), e3.shift()), e3 = i3._observe(e3), n3 && i3._data.splice(i3._skip, i3._data.length);
            for (var p3 = 0; p3 < e3.length; p3++) i3._data.push(e3[p3]);
            i3._data.bind(w, i3._changeHandler);
          } else i3._data = i3._observe(e3);
          i3._markOfflineUpdatesAsDirty(), i3._storeData(), i3._addRange(i3._data), i3._process(i3._data), i3._dequeueRequest();
        }, _detachObservableParents: function() {
          if (this._data && this._shouldDetachObservableParents) for (var e3 = 0; e3 < this._data.length; e3++) this._data[e3].parent && (this._data[e3].parent = u2);
        }, _storeData: function(e3) {
          var t3 = this._isServerGrouped(), n3 = this.reader.model;
          if (null != this.options.offlineStorage) {
            for (var i3 = function e4(i4) {
              for (var a4 = [], r4 = 0; r4 < i4.length; r4++) {
                var o4 = i4.at(r4), s3 = o4.toJSON();
                t3 && o4.items ? s3.items = e4(o4.items) : (s3.uid = o4.uid, n3 && (o4.isNew() ? s3.__state__ = "create" : o4.dirty && (s3.__state__ = "update"))), a4.push(s3);
              }
              return a4;
            }(this._data), a3 = [], r3 = 0; r3 < this._destroyed.length; r3++) {
              var o3 = this._destroyed[r3].toJSON();
              o3.__state__ = "destroy", a3.push(o3);
            }
            this.offlineData(i3.concat(a3)), e3 && (this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(i3) : this.reader._wrapDataAccessBase(i3));
          }
        }, _addRange: function(e3, t3) {
          var n3, i3 = this, a3 = void 0 !== t3 ? t3 : i3._skip || 0, r3 = { data: e3, pristineData: e3.toJSON(), timestamp: i3._timeStamp() };
          this._isGroupPaged() ? (n3 = a3 + e3.length, r3.outerStart = a3, r3.outerEnd = n3) : n3 = a3 + i3._flatData(e3, true).length, r3.start = a3, r3.end = n3, i3._ranges.push(r3), i3._sortRanges(), i3._isGroupPaged() && (i3._groupsFlat || (i3._groupsFlat = []), i3._appendToGroupsFlat(r3.data), i3._updateOuterRangesLength());
        }, _appendToGroupsFlat: function(e3) {
          for (var t3 = e3.length, n3 = 0; n3 < t3; n3++) this._groupsFlat.push(e3[n3]);
        }, _getGroupByUid: function(e3) {
          for (var t3, n3 = this._groupsFlat.length, i3 = 0; i3 < n3; i3++) if ((t3 = this._groupsFlat[i3]).uid === e3) return t3;
        }, _sortRanges: function() {
          this._ranges.sort(function(e3, t3) {
            return e3.start - t3.start;
          });
        }, error: function(e3, t3, n3) {
          this._dequeueRequest(), this.trigger(I, {}), this.trigger(C, { xhr: e3, status: t3, errorThrown: n3 });
        }, _params: function(e3) {
          var t3 = this, n3 = i2({ take: t3.take(), skip: t3.skip(), page: t3.page(), pageSize: t3.pageSize(), sort: t3._sort, filter: t3._filter, group: t3._group, aggregate: t3._aggregate, groupPaging: !!t3._groupPaging }, e3);
          return t3.options.serverPaging || (delete n3.take, delete n3.skip, delete n3.page, delete n3.pageSize), t3.options.serverGrouping ? t3.reader.model && n3.group && (n3.group = je(n3.group, t3.reader.model)) : delete n3.group, t3.options.serverFiltering ? t3.reader.model && n3.filter && (n3.filter = We(n3.filter, t3.reader.model)) : delete n3.filter, t3.options.serverSorting ? t3.reader.model && n3.sort && (n3.sort = je(n3.sort, t3.reader.model)) : delete n3.sort, t3.options.serverAggregates ? t3.reader.model && n3.aggregate && (n3.aggregate = je(n3.aggregate, t3.reader.model)) : delete n3.aggregate, t3.options.groupPaging || delete n3.groupPaging, n3;
        }, _queueRequest: function(e3, n3) {
          var i3 = this;
          i3._requestInProgress ? i3._pending = { callback: n3.bind(i3), options: e3 } : (i3._requestInProgress = true, i3._pending = t2, n3());
        }, _dequeueRequest: function() {
          var e3 = this;
          e3._requestInProgress = false, e3._pending && e3._queueRequest(e3._pending.options, e3._pending.callback);
        }, _handleCustomErrors: function(e3) {
          if (this.reader.errors) {
            var t3 = this.reader.errors(e3);
            if (t3) return this.trigger(C, { xhr: null, status: "customerror", errorThrown: "custom error", errors: t3 }), true;
          }
          return false;
        }, _shouldWrap: function(e3) {
          var t3 = this.reader.model;
          return !(!t3 || !e3.length) && !(e3[0] instanceof t3);
        }, _observe: function(e3) {
          var t3 = this, n3 = t3.reader.model;
          (t3._shouldDetachObservableParents = true, e3 instanceof G) ? (t3._shouldDetachObservableParents = false, t3._shouldWrap(e3) && (e3.type = t3.reader.model, e3.wrapAll(e3, e3))) : (e3 = new (t3.pageSize() && !t3.options.serverPaging ? K : G)(e3, t3.reader.model)).parent = function() {
            return t3.parent();
          };
          return t3._isServerGrouped() && He(e3, n3), !(t3._changeHandler && t3._data && t3._data instanceof G) || t3.options.useRanges && t3.options.serverPaging ? t3._changeHandler = t3._change.bind(t3) : t3._data.unbind(w, t3._changeHandler), e3.bind(w, t3._changeHandler);
        }, _updateTotalForAction: function(e3, t3) {
          var n3 = this, i3 = parseInt(n3._total, 10);
          _e(n3._total) || (i3 = parseInt(n3._pristineTotal, 10)), "add" === e3 ? i3 += t3.length : "remove" === e3 ? i3 -= t3.length : "itemchange" === e3 || "sync" === e3 || n3.options.serverPaging ? "sync" === e3 && (i3 = n3._pristineTotal = parseInt(n3._total, 10)) : i3 = n3._pristineTotal, n3._total = i3;
        }, _pushInDestroyed: function(e3) {
          this._destroyed.find(function(t3) {
            return t3.uid === e3.uid;
          }) || this._destroyed.push(e3);
        }, _change: function(e3) {
          var t3, n3, i3 = this, a3 = e3 ? e3.action : "";
          if ("remove" === a3) for (t3 = 0, n3 = e3.items.length; t3 < n3; t3++) e3.items[t3].isNew && e3.items[t3].isNew() || i3._pushInDestroyed(e3.items[t3]);
          if (!i3.options.autoSync || "add" !== a3 && "remove" !== a3 && "itemchange" !== a3) i3._updateTotalForAction(a3, e3 ? e3.items : []), i3._process(i3._data, e3);
          else {
            var r3 = function(t4) {
              "sync" === t4.action && (i3.unbind("change", r3), i3._updateTotalForAction(a3, e3.items));
            };
            i3.first("change", r3), i3.sync();
          }
        }, _calculateAggregates: function(e3, t3) {
          t3 = t3 || {};
          var n3 = new ae(e3), i3 = t3.aggregate, a3 = t3.filter;
          return a3 && (n3 = n3.filter(a3)), n3.aggregate(i3);
        }, _process: function(e3, n3) {
          var i3, a3 = this, r3 = {};
          if (true !== a3.options.serverPaging && (r3.skip = a3._skip, r3.take = a3._take || a3._pageSize, r3.skip === t2 && a3._page !== t2 && a3._pageSize !== t2 && (r3.skip = (a3._page - 1) * a3._pageSize), a3.options.useRanges && (r3.skip = a3.currentRangeStart())), true !== a3.options.serverSorting && (r3.sort = a3._sort), true !== a3.options.serverFiltering && (r3.filter = a3._filter), true !== a3.options.serverGrouping && (r3.group = a3._group), true !== a3.options.serverAggregates && (r3.aggregate = a3._aggregate), a3.options.serverGrouping && a3._clearEmptyGroups(e3), r3.groupPaging = a3._groupPaging, i3 = a3._isGroupPaged() && n3 && ("page" === n3.action || "expandGroup" === n3.action || "collapseGroup" === n3.action) ? a3._queryProcess(e3, { aggregate: a3._aggregate }) : a3._queryProcess(e3, r3), a3._filter && n3 && "add" === n3.action) {
            var o3 = n3.items[0];
            i3.data.find(function(e4) {
              return e4.uid === o3.uid;
            }) || (i3.data.splice(o3.index, 0, a3._isGrouped() ? a3._wrapInEmptyGroup(o3) : o3), i3.total++);
          }
          true !== a3.options.serverAggregates && (a3._aggregateResult = a3._calculateAggregates(i3.dataToAggregate || e3, r3)), a3._setView(i3, r3, n3), a3._setFilterTotal(i3.total, false), (n3 = n3 || {}).items = n3.items || a3._view, a3.trigger(w, n3);
        }, _setView: function(e3, t3, n3) {
          var i3 = this;
          if (i3._isGroupPaged() && !i3._isServerGrouped()) if (!n3 || "page" !== n3.action && "expandGroup" !== n3.action && "collapseGroup" !== n3.action) {
            i3._ranges = [];
            var a3 = new ae(e3.data);
            i3._addRange(i3._observe(e3.data)), t3.skip + t3.take > e3.data.length && (t3.skip = e3.data.length - t3.take), i3.view(a3.range(t3.skip, t3.take).toArray());
          } else i3.view(e3.data), i3._updateOuterRangesLength();
          else i3.view(e3.data);
        }, _clearEmptyGroups: function(e3) {
          for (var t3 = e3.length - 1; t3 >= 0; t3--) {
            var n3 = e3[t3];
            n3.hasSubgroups && this._clearEmptyGroups(n3.items), !n3.items || n3.items.length || n3.itemCount || M.apply(n3.parent(), [t3, 1]);
          }
        }, _queryProcess: function(e3, t3) {
          return this.options.inPlaceSort ? ae.process(e3, t3, this.options.inPlaceSort) : ae.process(e3, t3);
        }, _mergeState: function(n3) {
          var i3, a3 = this;
          return n3 !== t2 && (a3._pageSize = n3.pageSize, a3._page = n3.page, a3._sort = n3.sort, a3._filter = n3.filter, a3._group = n3.group, a3._aggregate = n3.aggregate, a3._skip = a3._currentRangeStart = n3.skip, a3._take = n3.take, a3._skip === t2 && (a3._skip = a3._currentRangeStart = a3.skip(), n3.skip = a3.skip()), a3._take === t2 && a3._pageSize !== t2 && (a3._take = a3._pageSize, n3.take = a3._take), a3.options.virtual && (n3.virtual = a3.options.virtual), n3.sort && (a3._sort = n3.sort = re(n3.sort), a3._sortFields = oe(n3.sort)), n3.filter && (a3._filter = n3.filter = a3.options.accentFoldingFiltering && !e2.isEmptyObject(n3.filter) ? e2.extend({}, de(n3.filter), { accentFoldingFiltering: a3.options.accentFoldingFiltering }) : de(n3.filter)), n3.group && (a3._group = n3.group = he(n3.group)), n3.aggregate && (a3._aggregate = n3.aggregate = (i3 = n3.aggregate, o2(i3) ? i3 : [i3]))), n3;
        }, query: function(n3) {
          var i3;
          if (this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates || (this._data === t2 || 0 === this._data.length) && !this._destroyed.length) {
            if (this.options.endless) {
              var a3 = n3.pageSize - this.pageSize();
              a3 > 0 ? (a3 = this.pageSize(), n3.page = n3.pageSize / a3, n3.pageSize = a3) : (n3.page = 1, this.options.endless = false);
            }
            return this.read(this._mergeState(n3));
          }
          var r3 = this.trigger(T, { type: "read" });
          return r3 || (this.trigger(S), n3 && (n3.groupPaging = this._groupPaging), i3 = this._queryProcess(this._data, this._mergeState(n3)), this._setFilterTotal(i3.total, true), this._aggregateResult = this._calculateAggregates(i3.dataToAggregate || this._data, n3), this._setView(i3, n3), this.trigger(I, { type: "read" }), this.trigger(w, { items: i3.data, action: n3 ? n3.action : "" })), e2.Deferred().resolve(r3).promise();
        }, _hasExpandedSubGroups: function(e3) {
          var t3 = false, n3 = e3.items ? e3.items.length : 0;
          if (!e3.hasSubgroups) return false;
          for (var i3 = 0; i3 < n3; i3++) if (this._groupsState[e3.items[i3].uid]) {
            t3 = true;
            break;
          }
          return t3;
        }, _findGroupedRange: function(e3, t3, n3, i3, a3) {
          for (var r3, o3, s3, l3, d3, u3 = this, c3 = e3.length, p3 = 0; p3 < c3 && (r3 = e3[p3], !(n3.taken >= n3.take)); p3++) if (u3._getGroupByUid(r3.uid) || u3._groupsFlat.push(r3), u3._groupsState[r3.uid]) {
            if (u3._isServerGroupPaged()) {
              if (u3._fetchGroupItems(r3, n3, i3, a3)) return void (u3._fetchingGroupItems = true);
              if (l3 = (r3.subgroupCount || r3.itemCount) + 1, d3 = n3.skip - n3.skipped, !u3._hasExpandedSubGroups(r3) && d3 > l3) {
                n3.skipped += l3;
                continue;
              }
            }
            if (n3.includeParents && n3.skipped < n3.skip ? (n3.skipped++, r3.excludeHeader = true) : n3.includeParents && (n3.taken++, r3.excludeHeader = false), r3.hasSubgroups && r3.items && r3.items.length) r3.currentItems = [], i3 || (i3 = []), i3.push(r3), u3._findGroupedRange(r3.items, r3.currentItems, n3, i3, a3), i3.pop(), r3.currentItems.length || n3.taken > 0 ? t3.push(r3) : r3.excludeHeader = false;
            else {
              o3 = [], s3 = r3.items.length;
              for (var h3 = 0; h3 < s3; h3++) if (n3.skipped < n3.skip) n3.skipped++;
              else {
                if (n3.taken >= n3.take) break;
                o3.push(r3.items[h3]), n3.taken++;
              }
              o3.length || n3.taken > 0 ? (r3.currentItems = o3, t3.push(r3)) : r3.excludeHeader = false;
            }
          } else {
            if (n3.skipped < n3.skip) {
              n3.skipped++;
              continue;
            }
            t3.push(r3), n3.taken++;
          }
        }, _expandedSubGroupItemsCount: function(e3, t3, n3) {
          var i3, a3, r3 = this, o3 = 0, s3 = "number" == typeof t3, l3 = s3 ? t3 : e3.subgroupCount;
          if (!e3.hasSubgroups) return o3;
          for (var d3 = 0; d3 < l3 && (i3 = e3.items[d3]); d3++) if (i3.hasSubgroups && r3._groupsState[e3.uid] ? (o3 += a3 = r3._expandedSubGroupItemsCount(i3, l3, true), s3 && (l3 -= a3)) : !i3.hasSubgroups && r3._groupsState[i3.uid] && (o3 += a3 = i3.items ? i3.items.length : 0, s3 && (l3 -= a3)), n3 && (o3 += 1, s3 && (l3 -= 1)), s3 && o3 > l3) return o3;
          return o3;
        }, _fetchGroupItems: function(e3, t3, n3, i3) {
          var a3, r3, o3, s3, l3 = this, d3 = e3.hasSubgroups ? e3.subgroupCount : e3.itemCount, u3 = t3.take, c3 = t3.skipped, p3 = l3.take();
          return t3.includeParents && (c3 < t3.skip ? c3 += 1 : u3 -= 1), !e3.items || e3.items && !e3.items.length ? (l3.getGroupItems(e3, t3, n3, i3, 0), true) : (s3 = this._expandedSubGroupItemsCount(e3, t3.skip - c3), !((a3 = Math.max(t3.skip - (c3 + s3), 0)) >= d3) && (r3 = e3.items[a3], o3 = e3.items[Math.min(a3 + u3, d3 - 1)], r3.notFetched ? (l3.getGroupItems(e3, t3, n3, i3, H.max(H.floor(a3 / p3), 0) * p3, H.round((a3 + p3) / p3)), true) : o3.notFetched ? (l3.getGroupItems(e3, t3, n3, i3, H.max(H.floor((a3 + p3) / p3), 0) * p3, H.round((a3 + p3) / p3)), true) : void 0));
        }, getGroupItems: function(e3, t3, n3, i3, a3, r3) {
          var o3, s3, l3, d3, u3 = this;
          e3.items || (e3.items = []), o3 = u3.take(), s3 = this._composeItemsFilter(e3, n3), l3 = { page: r3 || 1, pageSize: o3, skip: a3, take: o3, filter: s3, aggregate: u3._aggregate, sort: u3._sort }, (d3 = u3.findSubgroups(e3)) && d3.length && (l3.group = d3, l3.groupPaging = true), clearTimeout(u3._timeout), u3._timeout = setTimeout(function() {
            u3._queueRequest(l3, function() {
              u3.trigger(T, { type: "read" }) ? u3._dequeueRequest() : u3.transport.read({ data: l3, success: u3._groupItemsSuccessHandler(e3, t3.skip, u3.take(), i3, a3), error: function() {
                var e4 = L.call(arguments);
                u3.error.apply(u3, e4);
              } });
            });
          }, 100);
        }, _groupItemsSuccessHandler: function(e3, t3, n3, i3, a3) {
          var r3 = this, o3 = r3._timeStamp();
          i3 = p2(i3) ? i3 : u2;
          var s3 = r3.options.schema && r3.options.schema.total ? r3.options.schema.total : "Total";
          return function(l3) {
            var d3, u3, c3 = ee.define(r3.options.schema.model);
            r3._dequeueRequest(), r3.trigger(I, { response: l3, type: "read" }), u3 = p2(s3) ? s3(l3) : l3[s3], l3 = r3.reader.parse(l3), e3.hasSubgroups ? (d3 = r3.reader.groups(l3), e3.subgroupCount = u3) : d3 = (d3 = r3.reader.data(l3)).map(function(e4) {
              return new c3(e4);
            }), e3.items.omitChangeEvent = true;
            for (var h3 = 0; h3 < u3; h3++) h3 >= a3 && h3 < a3 + n3 ? e3.items.splice(h3, 1, d3[h3 - a3]) : e3.items[h3] || e3.items.splice(h3, 0, { notFetched: true });
            e3.items.omitChangeEvent = false, r3._updateRangePristineData(e3), r3._fetchingGroupItems = false, e3.countAdded || (r3._serverGroupsTotal += u3, e3.countAdded = true), r3.range(t3, n3, i3, "expandGroup"), (o3 >= r3._currentRequestTimeStamp || !r3._skipRequestsInProgress) && r3.trigger(w, {});
          };
        }, findSubgroups: function(e3) {
          var t3 = this._group.map(function(e4) {
            return e4.field;
          }).indexOf(e3.field);
          return this._group.slice(t3 + 1, this._group.length);
        }, _composeItemsFilter: function(e3, t3) {
          var n3 = this.filter() || { logic: "and", filters: [] };
          if (n3.logic = "and", (n3 = i2(true, {}, n3)).filters.push({ field: e3.field, operator: "eq", value: e3.value }), t3) for (var a3 = 0; a3 < t3.length; a3++) n3.filters.push({ field: t3[a3].field, operator: "eq", value: t3[a3].value });
          return n3;
        }, _updateRangePristineData: function(e3) {
          for (var t3, n3, i3, a3, r3, o3 = this, s3 = o3._ranges, l3 = s3.length, d3 = 0; d3 < l3; d3++) {
            a3 = (i3 = s3[d3]).data.length, r3 = [], t3 = null;
            for (var u3 = 0; u3 < a3 && (n3 = i3.data[u3], r3.push(u3), !(n3.uid === e3.uid || n3.hasSubgroups && n3.items.length && o3._containsSubGroup(n3, e3, r3))); u3++) r3.pop();
            if (r3.length) {
              for (t3 = s3[d3].pristineData; r3.length > 1; ) t3 = t3[r3.splice(0, 1)[0]].items;
              t3[r3[0]] = o3._cloneGroup(e3);
              break;
            }
          }
        }, _containsSubGroup: function(e3, t3, n3) {
          var i3, a3 = e3.items.length;
          if (e3.hasSubgroups && a3) for (var r3 = 0; r3 < a3; r3++) {
            if (i3 = e3.items[r3], n3.push(r3), i3.uid === t3.uid || i3.hasSubgroups && i3.items.length && this._containsSubGroup(i3, t3, n3)) return true;
            n3.pop();
          }
        }, _cloneGroup: function(e3) {
          var t3 = this;
          return (e3 = "function" == typeof e3.toJSON ? e3.toJSON() : e3).items && e3.items.length && (e3.items = e3.items.map(function(e4) {
            return t3._cloneGroup(e4);
          })), e3;
        }, _setFilterTotal: function(e3, n3) {
          var i3 = this;
          i3.options.serverFiltering || (e3 !== t2 ? i3._total = e3 : n3 && (i3._total = i3._data.length));
        }, fetch: function(e3) {
          var t3 = this;
          return this._query().done(function(n3) {
            true !== n3 && p2(e3) && e3.call(t3);
          });
        }, _query: function(e3) {
          var t3 = this;
          return t3.query(i2({}, { page: t3.page(), pageSize: t3.pageSize(), sort: t3.sort(), filter: t3.filter(), group: t3.group(), aggregate: t3.aggregate() }, e3));
        }, next: function(e3) {
          var t3 = this, n3 = t3.page(), i3 = t3.total();
          if (e3 = e3 || {}, n3 && !(i3 && n3 + 1 > t3.totalPages())) return t3._skip = t3._currentRangeStart = n3 * t3.take(), n3 += 1, e3.page = n3, t3._query(e3), n3;
        }, prev: function(e3) {
          var t3 = this, n3 = t3.page();
          if (e3 = e3 || {}, n3 && 1 !== n3) return t3._skip = t3._currentRangeStart = t3._skip - t3.take(), n3 -= 1, e3.page = n3, t3._query(e3), n3;
        }, page: function(e3) {
          var n3, i3 = this;
          if (e3 !== t2) {
            e3 = H.max(H.min(H.max(e3, 1), i3.totalPages()), 1);
            var a3 = i3.take();
            return i3._isGroupPaged() ? (e3 -= 1, void i3.range(e3 * a3, a3, null, "page")) : void i3._query(i3._pageableQueryOptions({ page: e3 }));
          }
          return (n3 = i3.skip()) !== t2 ? H.round((n3 || 0) / (i3.take() || 1)) + 1 : t2;
        }, pageSize: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3.take();
          n3._query(n3._pageableQueryOptions({ pageSize: e3, page: 1 }));
        }, sort: function(e3) {
          var n3 = this;
          return e3 !== t2 ? (n3.trigger("sort"), void n3._query({ sort: e3 })) : n3._sort;
        }, filter: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3._filter;
          n3.trigger("reset"), n3._query({ filter: e3, page: 1 });
        }, group: function(e3) {
          var n3 = this, i3 = { group: e3 };
          if (n3._groupPaging && (e3 === t2 || e3 && e3.length || (n3._ranges = []), i3.page = 1), e3 === t2) return n3._group;
          n3._query(i3);
        }, getGroupsFlat: function(e3) {
          var t3, n3, i3 = [];
          for (t3 = 0, n3 = e3.length; t3 < n3; t3++) {
            var a3 = e3[t3];
            a3.hasSubgroups && (i3 = i3.concat(this.getGroupsFlat(a3.items))), i3.push(a3);
          }
          return i3;
        }, total: function() {
          return parseInt(this._total || 0, 10);
        }, groupsTotal: function(e3) {
          var t3 = this;
          return t3._group.length ? t3._isServerGrouped() ? (t3._serverGroupsTotal || (t3._serverGroupsTotal = t3.total()), t3._serverGroupsTotal) : t3._calculateGroupsTotal(t3._ranges.length ? t3._ranges[0].data : [], e3) : t3.total();
        }, _calculateGroupsTotal: function(e3, t3, n3, i3) {
          var a3, r3, o3 = this;
          if (n3 = n3 || "items", o3._group.length && e3) {
            a3 = 0, r3 = e3.length;
            for (var s3 = 0; s3 < r3; s3++) a3 += o3.groupCount(e3[s3], t3, n3, i3);
            return o3._groupsTotal = a3, a3;
          }
          return o3._groupsTotal = o3._data.length, o3._groupsTotal;
        }, groupCount: function(e3, t3, n3, i3) {
          var a3 = this, r3 = 0;
          return e3.hasSubgroups && a3._groupsState[e3.uid] ? ((t3 && !e3.excludeHeader || i3) && (r3 += 1), e3[n3].forEach(function(e4) {
            r3 += a3.groupCount(e4, t3, n3, i3);
          })) : a3._groupsState[e3.uid] ? ((t3 && !e3.excludeHeader || i3) && r3++, r3 += e3[n3] ? e3[n3].length : 0) : r3++, r3;
        }, countGroupRange: function(e3) {
          for (var t3 = 0, n3 = e3.length, i3 = 0; i3 < n3; i3++) t3 += this.groupCount(e3[i3], true);
          return t3;
        }, aggregate: function(e3) {
          if (e3 === t2) return this._aggregate;
          this._query({ aggregate: e3 });
        }, aggregates: function() {
          var e3 = this._aggregateResult;
          return r2(e3) && (e3 = this._emptyAggregates(this.aggregate())), e3;
        }, _emptyAggregates: function(e3) {
          var t3 = {};
          if (!r2(e3)) {
            var n3 = {};
            o2(e3) || (e3 = [e3]);
            for (var i3 = 0; i3 < e3.length; i3++) n3[e3[i3].aggregate] = 0, t3[e3[i3].field] = n3;
          }
          return t3;
        }, _pageableQueryOptions: function(e3) {
          return e3;
        }, _wrapInEmptyGroup: function(e3) {
          var t3, n3, i3, a3 = this.group();
          for (i3 = a3.length - 1, 0; i3 >= 0; i3--) n3 = a3[i3], t3 = { value: e3.get ? e3.get(n3.field) : e3[n3.field], field: n3.field, items: t3 ? [t3] : [e3], hasSubgroups: !!t3, aggregates: this._emptyAggregates(n3.aggregates) };
          return t3;
        }, totalPages: function() {
          var e3 = this, t3 = e3.pageSize() || e3.total(), n3 = e3._isGroupPaged() ? e3.groupsTotal(true) : e3.total();
          return H.ceil((n3 || 0) / t3);
        }, inRange: function(e3, t3) {
          var n3 = this, i3 = H.min(e3 + t3, n3.total());
          return !n3.options.serverPaging && n3._data.length > 0 || n3._findRange(e3, i3).length > 0;
        }, lastRange: function() {
          var e3 = this._ranges;
          return e3[e3.length - 1] || { start: 0, end: 0, data: [] };
        }, firstItemUid: function() {
          var e3 = this._ranges;
          return e3.length && e3[0].data.length && e3[0].data[0].uid;
        }, enableRequestsInProgress: function() {
          this._skipRequestsInProgress = false;
        }, _timeStamp: function() {
          return (/* @__PURE__ */ new Date()).getTime();
        }, range: function(e3, n3, i3, a3) {
          this._currentRequestTimeStamp = this._timeStamp(), this._skipRequestsInProgress = true;
          var r3 = this._isGroupPaged() ? this.groupsTotal(true) : this.total();
          "expandGroup" !== a3 && "collapseGroup" !== a3 || this._updateOuterRangesLength(), e3 = H.min(e3 || 0, r3), i3 = p2(i3) ? i3 : u2;
          var o3, s3 = this, l3 = H.max(H.floor(e3 / n3), 0) * n3, d3 = H.min(l3 + n3, r3);
          if (((o3 = s3._findRange(e3, H.min(e3 + n3, r3), i3)).length || 0 === r3) && !s3._fetchingGroupItems) return s3._processRangeData(o3, e3, n3, s3._originalPageSkip || l3, s3._originalSize || d3, { action: a3 }), s3._originalPageSkip = null, s3._originalSize = null, void i3();
          s3._isGroupPaged() && (s3._originalPageSkip = l3, s3._originalSize = d3, l3 = H.max(H.floor(s3._adjustPageSkip(e3, n3) / n3), 0) * n3, d3 = H.min(l3 + n3, r3)), n3 === t2 || s3._fetchingGroupItems || (s3._isGroupPaged() && !s3._groupRangeExists(l3, n3) || !s3._rangeExists(l3, d3) ? s3.prefetch(l3, n3, function() {
            e3 > l3 && d3 < s3.total() && !s3._rangeExists(d3, H.min(d3 + n3, s3.total())) ? s3.prefetch(d3, n3, function() {
              s3.range(e3, n3, i3);
            }) : s3.range(e3, n3, i3);
          }) : l3 < e3 && s3.prefetch(d3, n3, function() {
            s3.range(e3, n3, i3);
          }));
        }, _findRange: function(e3, n3, i3) {
          var a3, r3, o3, s3, l3, d3, u3, c3, p3, h3, f3, m3, g3 = this, v3 = g3._ranges, _3 = [], b3 = g3.options, k3 = b3.serverSorting || b3.serverPaging || b3.serverFiltering || b3.serverGrouping || b3.serverAggregates, w2 = { take: n3 - e3, skip: e3, skipped: 0, taken: 0, includeParents: true }, y2 = g3._isGroupPaged(), x2 = y2 ? "outerStart" : "start", C2 = y2 ? "outerEnd" : "end";
          for (r3 = 0, f3 = v3.length; r3 < f3; r3++) {
            if (a3 = v3[r3], y2) {
              if (a3.outerStart >= n3) return [];
              if (e3 > a3.outerEnd) {
                w2.skipped += a3.outerEnd - (m3 || 0), m3 = a3.outerEnd;
                continue;
              }
              if (void 0 !== m3 && m3 != a3.outerStart && (w2.skipped += a3.outerStart - m3), w2.skipped > w2.skip) return [];
              for (void 0 === m3 && e3 > 0 && a3.start > 0 && (w2.skipped = a3.outerStart), o3 = r3; ; ) {
                if (this._findGroupedRange(a3.data, _3, w2, null, i3), g3._calculateGroupsTotal(_3, true, "currentItems") >= w2.take) return _3;
                if (g3._fetchingGroupItems) return [];
                if (!v3[++o3] || v3[o3].outerStart !== a3.outerEnd) break;
                a3 = v3[o3];
              }
            } else if (e3 >= a3[x2] && e3 <= a3[C2]) {
              for (h3 = 0, o3 = r3; o3 < f3; o3++) if (a3 = v3[o3], (p3 = g3._flatData(a3.data, true)).length && e3 + h3 >= a3.start) {
                if (d3 = a3.data, u3 = a3.end, !k3) {
                  if (b3.inPlaceSort) c3 = g3._queryProcess(a3.data, { filter: g3.filter() });
                  else {
                    var T2 = fe(g3.group() || []).concat(re(g3.sort() || []));
                    c3 = g3._queryProcess(a3.data, { sort: T2, filter: g3.filter() });
                  }
                  p3 = d3 = c3.data, c3.total !== t2 && (u3 = c3.total);
                }
                if (s3 = 0, e3 + h3 > a3.start && (s3 = e3 + h3 - a3.start), l3 = p3.length, u3 > n3 && (l3 -= u3 - n3), h3 += l3 - s3, _3 = g3._mergeGroups(_3, d3, s3, l3), n3 <= a3.end && h3 == n3 - e3) return _3;
              }
              break;
            }
            m3 = a3.outerEnd;
          }
          return [];
        }, _getRangesMismatch: function(e3) {
          for (var t3 = this._ranges, n3 = 0, i3 = 0; ; ) {
            var a3 = t3[i3];
            if (!a3 || a3.outerStart > e3) break;
            a3.outerEnd != a3.end && (n3 = a3.outerEnd - a3.end), i3++;
          }
          return n3;
        }, _mergeGroups: function(e3, t3, n3, i3) {
          if (this._isServerGrouped()) {
            var a3, r3 = t3.toJSON();
            return e3.length && (a3 = e3[e3.length - 1]), Fe(a3, r3, n3, i3), e3.concat(r3);
          }
          return e3.concat(t3.slice(n3, i3));
        }, _processRangeData: function(e3, n3, i3, a3, r3, o3) {
          var s3 = this;
          s3._pending = t2, s3._skip = n3 > s3.skip() && !s3._omitPrefetch ? H.min(r3, (s3.totalPages() - 1) * s3.take()) : a3, s3._currentRangeStart = n3, s3._take = i3;
          var l3 = s3.options.serverPaging, d3 = s3.options.serverSorting, u3 = s3.options.serverFiltering, c3 = s3.options.serverAggregates;
          try {
            s3.options.serverPaging = true, s3._isServerGrouped() || s3.group() && s3.group().length || (s3.options.serverSorting = true), s3.options.serverFiltering = true, s3.options.serverPaging = true, s3.options.serverAggregates = true, l3 && (s3._detachObservableParents(), s3._data = e3 = s3._observe(e3)), s3._process(e3, o3);
          } finally {
            s3.options.serverPaging = l3, s3.options.serverSorting = d3, s3.options.serverFiltering = u3, s3.options.serverAggregates = c3;
          }
        }, skip: function() {
          var e3 = this;
          return e3._skip === t2 ? e3._page !== t2 ? (e3._page - 1) * (e3.take() || 1) : t2 : e3._skip;
        }, currentRangeStart: function() {
          return this._currentRangeStart || 0;
        }, take: function() {
          return this._take || this._pageSize;
        }, _prefetchSuccessHandler: function(e3, t3, n3, i3) {
          var a3 = this, r3 = a3._timeStamp();
          return function(o3) {
            var s3, l3, d3, u3 = false, c3 = { start: e3, end: t3, data: [], timestamp: a3._timeStamp() };
            if (a3._dequeueRequest(), a3.trigger(I, { response: o3, type: "read" }), o3 = a3.reader.parse(o3), (d3 = a3._readData(o3)).length) {
              for (s3 = 0, l3 = a3._ranges.length; s3 < l3; s3++) if (a3._ranges[s3].start === e3) {
                u3 = true, c3 = a3._ranges[s3], a3._isGroupPaged() || (c3.pristineData = d3, c3.data = a3._observe(d3), c3.end = c3.start + a3._flatData(c3.data, true).length, a3._sortRanges());
                break;
              }
              u3 || a3._addRange(a3._observe(d3), e3);
            }
            a3._total = a3.reader.total(o3), (i3 || r3 >= a3._currentRequestTimeStamp || !a3._skipRequestsInProgress) && (n3 && d3.length ? n3() : a3.trigger(w, {}));
          };
        }, prefetch: function(e3, t3, n3) {
          var i3 = this, a3 = H.min(e3 + t3, i3.total()), r3 = { take: t3, skip: e3, page: e3 / t3 + 1, pageSize: t3, sort: i3._sort, filter: i3._filter, group: i3._group, aggregate: i3._aggregate };
          i3._isGroupPaged() && !i3._isServerGrouped() && i3._groupRangeExists(e3, a3) ? n3 && n3() : i3._isServerGroupPaged() && !i3._groupRangeExists(e3, a3) || !i3._rangeExists(e3, a3) ? (clearTimeout(i3._timeout), i3._timeout = setTimeout(function() {
            i3._queueRequest(r3, function() {
              i3.trigger(T, { type: "read" }) ? i3._dequeueRequest() : (i3._omitPrefetch && i3.trigger(S), i3.transport.read({ data: i3._params(r3), success: i3._prefetchSuccessHandler(e3, a3, n3), error: function() {
                var e4 = L.call(arguments);
                i3.error.apply(i3, e4);
              } }));
            });
          }, 100)) : n3 && n3();
        }, _multiplePrefetch: function(e3, t3, n3) {
          var i3 = this, a3 = H.min(e3 + t3, i3.total()), r3 = { take: t3, skip: e3, page: e3 / t3 + 1, pageSize: t3, sort: i3._sort, filter: i3._filter, group: i3._group, aggregate: i3._aggregate };
          i3._rangeExists(e3, a3) ? n3 && n3() : i3.trigger(T, { type: "read" }) || i3.transport.read({ data: i3._params(r3), success: i3._prefetchSuccessHandler(e3, a3, n3, true) });
        }, _adjustPageSkip: function(e3, t3) {
          var n3, i3, a3 = this, r3 = a3._getPrevRange(e3), o3 = a3.total();
          if (r3) {
            if (!(i3 = a3._getRangesMismatch(e3))) return e3;
            e3 -= i3;
          }
          if ((n3 = H.max(H.floor(e3 / t3), 0) * t3) > o3) for (; !((n3 -= t3) < o3); ) ;
          return n3;
        }, _getNextRange: function(e3) {
          var t3, n3, i3 = this._ranges;
          for (t3 = 0, n3 = i3.length; t3 < n3; t3++) if (i3[t3].start <= e3 && i3[t3].end >= e3) return i3[t3];
        }, _getPrevRange: function(e3) {
          var t3, n3, i3 = this._ranges;
          for (t3 = i3.length - 1; t3 >= 0; t3--) if (i3[t3].outerStart <= e3) {
            n3 = i3[t3];
            break;
          }
          return n3;
        }, _rangeExists: function(e3, t3) {
          var n3, i3, a3 = this._ranges;
          for (n3 = 0, i3 = a3.length; n3 < i3; n3++) if (a3[n3].start <= e3 && a3[n3].end >= t3) return true;
          return false;
        }, _groupRangeExists: function(e3, t3) {
          var n3, i3, a3 = this, r3 = a3._ranges, o3 = 0, s3 = a3.groupsTotal(true);
          for (t3 > s3 && !a3._isServerGrouped() && (t3 = s3), n3 = 0, i3 = r3.length; n3 < i3; n3++) {
            var l3 = r3[n3];
            l3.outerStart <= e3 && l3.outerEnd >= e3 ? o3 += l3.outerEnd - e3 : l3.outerStart <= t3 && l3.outerEnd >= t3 && (o3 += t3 - l3.outerStart);
          }
          return o3 >= t3 - e3;
        }, _getCurrentRangeSpan: function() {
          var e3, t3, n3 = this, i3 = n3._ranges, a3 = n3.currentRangeStart(), r3 = a3 + (n3.take() || 0), o3 = [], s3 = i3.length;
          for (t3 = 0; t3 < s3; t3++) ((e3 = i3[t3]).start <= a3 && e3.end >= a3 || e3.start >= a3 && e3.start <= r3) && o3.push(e3);
          return o3;
        }, _removeModelFromRanges: function(e3) {
          for (var t3, n3 = 0, i3 = this._ranges.length; n3 < i3; n3++) t3 = this._ranges[n3], this._removeModelFromRange(t3, e3);
          this._updateRangesLength();
        }, _removeModelFromRange: function(e3, t3) {
          this._eachItem(e3.data, function(e4) {
            if (e4) for (var n3 = 0; n3 < e4.length; n3++) {
              var i3 = e4[n3];
              if (i3.uid && i3.uid == t3.uid) {
                [].splice.call(e4, n3, 1);
                break;
              }
            }
          });
        }, _insertModelInRange: function(e3, t3) {
          var n3, i3, a3 = this, r3 = a3._ranges || [], o3 = r3.length;
          for (i3 = 0; i3 < o3; i3++) if ((n3 = r3[i3]).start <= e3 && n3.end >= e3) {
            a3._getByUid(t3.uid, n3.data) || (a3._isServerGrouped() ? n3.data.splice(e3, 0, a3._wrapInEmptyGroup(t3)) : n3.data.splice(e3, 0, t3));
            break;
          }
          a3._updateRangesLength();
        }, _updateRangesLength: function() {
          var e3, t3, n3 = this, i3 = n3._ranges || [], a3 = i3.length, r3 = false, o3 = 0, s3 = 0;
          for (t3 = 0; t3 < a3; t3++) e3 = i3[t3], s3 = (n3._isGroupPaged() ? e3.data.length : n3._flatData(e3.data, true).length) - H.abs(e3.end - e3.start), r3 || 0 === s3 ? r3 && (e3.start += o3, e3.end += o3) : (r3 = true, o3 = s3, e3.end += o3);
        }, _updateOuterRangesLength: function() {
          var e3, t3, n3, i3, a3 = this, r3 = a3._ranges || [], o3 = r3.length, s3 = 0;
          for (t3 = 0; t3 < o3; t3++) e3 = r3[t3], i3 = a3._isGroupPaged() ? a3._calculateGroupsTotal(e3.data, true, "items", true) : a3._flatData(e3.data, true).length, n3 ? (n3.end != e3.start && (s3 = e3.start - n3.end), e3.outerStart = n3.outerEnd + s3, s3 = 0) : e3.outerStart = e3.start, e3.outerEnd = e3.outerStart + i3, n3 = e3;
        } }), Ge = {};
        Ge.create = function(t3, n3, r3) {
          var o3, s3 = t3.transport ? e2.extend({}, t3.transport) : null;
          return s3 ? (s3.read = typeof s3.read === m2 ? { url: s3.read } : s3.read, "jsdo" === t3.type && (s3.dataSource = r3), t3.type && (c2.data.transports = c2.data.transports || {}, c2.data.schemas = c2.data.schemas || {}, c2.data.transports[t3.type] ? a2(c2.data.transports[t3.type]) ? s3 = i2(true, {}, c2.data.transports[t3.type], s3) : o3 = new c2.data.transports[t3.type](i2(s3, { data: n3 })) : c2.logToConsole("Unknown DataSource transport type '" + t3.type + "'.\nVerify that registration scripts for this type are included after Kendo UI on the page.", "warn"), t3.schema = i2(true, {}, c2.data.schemas[t3.type], t3.schema)), o3 || (o3 = p2(s3.read) ? s3 : new ye(s3))) : o3 = new we({ data: t3.data || [] }), o3;
        }, qe.create = function(n3) {
          (o2(n3) || n3 instanceof G) && (n3 = { data: n3 });
          var a3, s3, l3, d3 = n3 || {}, u3 = d3.data, p3 = d3.fields, h3 = d3.table, f3 = d3.select, m3 = {};
          if (u3 || !p3 || d3.transport || (h3 ? u3 = function(t3, n4) {
            var i3, a4, r3, o3, s4, l4, d4, u4 = e2(t3)[0].tBodies[0], c3 = u4 ? u4.rows : [], p4 = n4.length, h4 = [];
            for (i3 = 0, a4 = c3.length; i3 < a4; i3++) {
              for (s4 = {}, d4 = true, o3 = c3[i3].cells, r3 = 0; r3 < p4; r3++) "th" !== (l4 = o3[r3]).nodeName.toLowerCase() && (d4 = false, s4[n4[r3].field] = l4.innerHTML);
              d4 || h4.push(s4);
            }
            return h4;
          }(h3, p3) : f3 && (u3 = function(t3, n4) {
            var i3, a4, r3, o3, s4, l4, d4 = (t3 = e2(t3)[0]).options, u4 = n4[0], c3 = n4[1], p4 = [];
            for (i3 = 0, a4 = d4.length; i3 < a4; i3++) s4 = {}, (r3 = (o3 = d4[i3]).parentNode) === t3 && (r3 = null), o3.disabled || r3 && r3.disabled || (r3 && (s4.optgroup = r3.label), s4[u4.field] = o3.text, l4 = (l4 = o3.attributes.value) && l4.specified ? o3.value : o3.text, s4[c3.field] = l4, p4.push(s4));
            return p4;
          }(f3, p3), d3.group === t2 && u3[0] && u3[0].optgroup !== t2 && (d3.group = "optgroup"))), c2.data.Model && p3 && (!d3.schema || !d3.schema.model)) {
            for (a3 = 0, s3 = p3.length; a3 < s3; a3++) (l3 = p3[a3]).type && (m3[l3.field] = l3);
            r2(m3) || (d3.schema = i2(true, d3.schema, { model: { fields: m3 } }));
          }
          return d3.data = u3, f3 = null, d3.select = null, h3 = null, d3.table = null, d3 instanceof qe ? d3 : new qe(d3);
        };
        var Ke = ee.define({ idField: "id", init: function(e3) {
          var t3 = this, n3 = t3.hasChildren || e3 && e3.hasChildren, a3 = "items", r3 = {};
          if (c2.data.Model.fn.init.call(t3, e3), typeof t3.children === m2 && (a3 = t3.children), r3 = { schema: { data: a3, model: { hasChildren: n3, id: t3.idField, fields: t3.fields } } }, typeof t3.children !== m2 && i2(r3, t3.children), r3.data = e3, n3 || (n3 = r3.schema.data), typeof n3 === m2 && (n3 = c2.getter(n3)), p2(n3)) {
            var o3 = n3.call(t3, t3);
            o3 && 0 === o3.length ? t3.hasChildren = false : t3.hasChildren = !!o3;
          }
          t3._childrenOptions = r3, t3.hasChildren && t3._initChildren(), t3._loaded = !(!e3 || !e3._loaded);
        }, _initChildren: function() {
          var e3, t3, n3, i3 = this;
          i3.children instanceof Ye || (t3 = (e3 = i3.children = new Ye(i3._childrenOptions)).transport, n3 = t3.parameterMap, t3.parameterMap = function(e4, t4) {
            return e4[i3.idField || "id"] = i3.id, n3 && (e4 = n3.call(i3, e4, t4)), e4;
          }, e3.parent = function() {
            return i3;
          }, e3.bind(w, function(e4) {
            e4.node = e4.node || i3, i3.trigger(w, e4);
          }), e3.bind(C, function(e4) {
            var t4 = i3.parent();
            t4 && (e4.node = e4.node || i3, t4.trigger(C, e4));
          }), e3.bind(D, function(e4) {
            var t4 = i3.parent();
            t4 && t4.trigger(D, e4);
          }), i3._updateChildrenField());
        }, append: function(e3) {
          this._initChildren(), this.loaded(true), this.children.add(e3);
        }, hasChildren: false, level: function() {
          for (var e3 = this.parentNode(), t3 = 0; e3 && e3.parentNode; ) t3++, e3 = e3.parentNode ? e3.parentNode() : null;
          return t3;
        }, _updateChildrenField: function() {
          this[this._childrenOptions.schema.data || "items"] = this.children.data();
        }, _childrenLoaded: function() {
          this._loaded = true, this._updateChildrenField();
        }, load: function() {
          var n3, i3, a3 = {}, r3 = "_query";
          return this.hasChildren ? (this._initChildren(), n3 = this.children, a3[this.idField || "id"] = this.id, this._loaded || (n3._data = t2, r3 = "read"), n3.one(w, this._childrenLoaded.bind(this)), this._matchFilter && (a3.filter = { field: "_matchFilter", operator: "eq", value: true }), i3 = n3[r3](a3), this._loaded || this.trigger(E, { promise: i3, node: this })) : this.loaded(true), i3 || e2.Deferred().resolve().promise();
        }, parentNode: function() {
          return this.parent().parent();
        }, loaded: function(e3) {
          if (e3 === t2) return this._loaded;
          this._loaded = e3;
        }, shouldSerialize: function(e3) {
          return ee.fn.shouldSerialize.call(this, e3) && "children" !== e3 && "_loaded" !== e3 && "hasChildren" !== e3 && "_childrenOptions" !== e3;
        } });
        function $e(e3) {
          return function() {
            var t3 = this._data, n3 = qe.fn[e3].apply(this, L.call(arguments));
            return this._data != t3 && this._attachBubbleHandlers(), n3;
          };
        }
        var Ye = qe.extend({ init: function(e3) {
          var t3 = Ke.define({ children: e3 });
          e3.filter && !e3.serverFiltering && (this._hierarchicalFilter = e3.filter, e3.filter = null), qe.fn.init.call(this, i2(true, {}, { schema: { modelBase: t3, model: t3 } }, e3)), this._attachBubbleHandlers();
        }, _attachBubbleHandlers: function() {
          var e3 = this;
          e3._data.bind(C, function(t3) {
            e3.trigger(C, t3);
          }), e3._data.bind(D, function(t3) {
            e3.trigger(D, t3);
          });
        }, loading: function() {
          return !!this._data && (this._data.loading() || this._childrenLoading());
        }, _childrenLoading: function() {
          var e3 = false;
          return this._data.forEach(function(t3) {
            t3.hasChildren && t3.children.loading() && (e3 = true);
          }), e3;
        }, read: function(e3) {
          var t3 = qe.fn.read.call(this, e3);
          return this._hierarchicalFilter && (this._data && this._data.length > 0 ? this.filter(this._hierarchicalFilter) : (this.options.filter = this._hierarchicalFilter, this._filter = de(this.options.filter), this._hierarchicalFilter = null)), t3;
        }, remove: function(e3) {
          var t3, n3 = e3.parentNode(), i3 = this;
          return n3 && n3._initChildren && (i3 = n3.children), t3 = qe.fn.remove.call(i3, e3), n3 && !i3.data().length && (n3.hasChildren = false), t3;
        }, success: $e("success"), data: $e("data"), insert: function(e3, t3) {
          var n3 = this.parent();
          return n3 && n3._initChildren && (n3.hasChildren = true, n3._initChildren()), qe.fn.insert.call(this, e3, t3);
        }, filter: function(e3) {
          if (e3 === t2) return this._filter;
          !this.options.serverFiltering && this._markHierarchicalQuery(e3) && (e3 = { logic: "or", filters: [e3, { field: "_matchFilter", operator: "equals", value: true }] }), this.trigger("reset"), this._query({ filter: e3, page: 1 });
        }, _markHierarchicalQuery: function(t3) {
          var n3, i3, a3, r3, o3, s3 = this.options.accentFoldingFiltering;
          return (t3 = s3 ? e2.extend({}, de(t3), { accentFoldingFiltering: s3 }) : de(t3)) && 0 !== t3.filters.length ? (n3 = ae.filterExpr(t3), a3 = n3.fields, r3 = n3.operators, i3 = o3 = new Function("d, __f, __o", "return " + n3.expression), (a3.length || r3.length) && (o3 = function(e3) {
            return i3(e3, a3, r3);
          }), this._updateHierarchicalFilter(o3), true) : (this._updateHierarchicalFilter(function() {
            return true;
          }), false);
        }, _updateHierarchicalFilter: function(e3) {
          for (var t3, n3 = this._data, i3 = false, a3 = 0; a3 < n3.length; a3++) (t3 = n3[a3]).hasChildren ? (t3._matchFilter = t3.children._updateHierarchicalFilter(e3), t3._matchFilter || (t3._matchFilter = e3(t3))) : t3._matchFilter = e3(t3), t3._matchFilter && (i3 = true);
          return i3;
        }, _find: function(e3, t3) {
          var n3, i3, a3, r3, o3 = this._data;
          if (o3) {
            if (a3 = qe.fn[e3].call(this, t3)) return a3;
            for (n3 = 0, i3 = (o3 = this._flatData(this._data)).length; n3 < i3; n3++) if ((r3 = o3[n3].children) instanceof Ye && (a3 = r3[e3](t3))) return a3;
          }
        }, get: function(e3) {
          return this._find("get", e3);
        }, getByUid: function(e3) {
          return this._find("getByUid", e3);
        } });
        function Qe(t3, n3) {
          var i3, a3, r3, o3, s3, l3, d3, u3, p3 = e2(t3).children(), h3 = [], f3 = n3[0].field, m3 = n3[1] && n3[1].field, g3 = n3[2] && n3[2].field, v3 = n3[3] && n3[3].field;
          function _3(e3, t4) {
            return e3.filter(t4).add(e3.find(t4));
          }
          for (i3 = 0, a3 = p3.length; i3 < a3; i3++) r3 = { _loaded: true }, l3 = (o3 = p3.eq(i3))[0].firstChild, t3 = (u3 = o3.children()).filter("ul"), u3 = u3.filter(":not(ul)"), (s3 = o3.attr("data-id")) && (r3.id = s3), l3 && (r3[f3] = 3 == l3.nodeType ? l3.nodeValue : u3.text()), m3 && (r3[m3] = _3(u3, "a").attr("href")), v3 && (r3[v3] = _3(u3, "img").attr("src")), g3 && (d3 = _3(u3, ".k-sprite").prop("className"), r3[g3] = d3 && c2.trim(d3.replace("k-sprite", ""))), t3.length && (r3.items = Qe(t3.eq(0), n3)), "true" == o3.attr("data-hasChildren") && (r3.hasChildren = true), h3.push(r3);
          return h3;
        }
        Ye.create = function(e3) {
          var t3 = (e3 = e3 && e3.push ? { data: e3 } : e3) || {}, n3 = t3.data, i3 = t3.fields, a3 = t3.list;
          return n3 && n3._dataSource ? n3._dataSource : (n3 || !i3 || t3.transport || a3 && (n3 = Qe(a3, i3)), t3.data = n3, t3 instanceof Ye ? t3 : new Ye(t3));
        };
        var Xe = c2.Observable.extend({ init: function(e3, t3, n3) {
          c2.Observable.fn.init.call(this), this._prefetching = false, this.dataSource = e3, this.prefetch = !n3;
          var i3 = this;
          e3.bind("change", function() {
            i3._change();
          }), e3.bind("reset", function() {
            i3._reset();
          }), this._syncWithDataSource(), this.setViewSize(t3);
        }, setViewSize: function(e3) {
          this.viewSize = e3, this._recalculate();
        }, at: function(e3) {
          var t3 = this.pageSize, n3 = true;
          return e3 >= this.total() ? (this.trigger("endreached", { index: e3 }), null) : this.useRanges ? this.useRanges ? ((e3 < this.dataOffset || e3 >= this.skip + t3) && (n3 = this.range(Math.floor(e3 / t3) * t3)), e3 === this.prefetchThreshold && this._prefetch(), e3 === this.midPageThreshold ? this.range(this.nextMidRange, true) : e3 === this.nextPageThreshold ? this.range(this.nextFullRange) : e3 === this.pullBackThreshold && (this.offset === this.skip ? this.range(this.previousMidRange) : this.range(this.previousFullRange)), n3 ? this.dataSource.at(e3 - this.dataOffset) : (this.trigger("endreached", { index: e3 }), null)) : void 0 : this.dataSource.view()[e3];
        }, indexOf: function(e3) {
          return this.dataSource.data().indexOf(e3) + this.dataOffset;
        }, total: function() {
          return parseInt(this.dataSource.total(), 10);
        }, next: function() {
          var e3 = this, t3 = e3.pageSize, n3 = e3.skip - e3.viewSize + t3, i3 = H.max(H.floor(n3 / t3), 0) * t3;
          this.offset = n3, this.dataSource.prefetch(i3, t3, function() {
            e3._goToRange(n3, true);
          });
        }, range: function(e3, t3) {
          if (this.offset === e3) return true;
          var n3 = this, i3 = this.pageSize, a3 = H.max(H.floor(e3 / i3), 0) * i3, r3 = this.dataSource;
          return t3 && (a3 += i3), r3.inRange(e3, i3) ? (this.offset = e3, this._recalculate(), this._goToRange(e3), true) : !this.prefetch || (r3.prefetch(a3, i3, function() {
            n3.offset = e3, n3._recalculate(), n3._goToRange(e3, true);
          }), false);
        }, syncDataSource: function() {
          var e3 = this.offset;
          this.offset = null, this.range(e3);
        }, destroy: function() {
          this.unbind();
        }, _prefetch: function() {
          var e3 = this, t3 = this.pageSize, n3 = this.skip + t3, i3 = this.dataSource;
          i3.inRange(n3, t3) || this._prefetching || !this.prefetch || (this._prefetching = true, this.trigger("prefetching", { skip: n3, take: t3 }), i3.prefetch(n3, t3, function() {
            e3._prefetching = false, e3.trigger("prefetched", { skip: n3, take: t3 });
          }));
        }, _goToRange: function(e3, t3) {
          this.offset === e3 && (this.dataOffset = e3, this._expanding = t3, this.dataSource.range(e3, this.pageSize), this.dataSource.enableRequestsInProgress());
        }, _reset: function() {
          this._syncPending = true;
        }, _change: function() {
          var e3 = this.dataSource;
          this.length = this.useRanges ? e3.lastRange().end : e3.view().length, this._syncPending && (this._syncWithDataSource(), this._recalculate(), this._syncPending = false, this.trigger("reset", { offset: this.offset })), this.trigger("resize"), this._expanding && this.trigger("expand"), delete this._expanding;
        }, _syncWithDataSource: function() {
          var e3 = this.dataSource;
          this._firstItemUid = e3.firstItemUid(), this.dataOffset = this.offset = e3.skip() || 0, this.pageSize = e3.pageSize(), this.useRanges = e3.options.serverPaging;
        }, _recalculate: function() {
          var e3 = this.pageSize, t3 = this.offset, n3 = this.viewSize, i3 = Math.ceil(t3 / e3) * e3;
          this.skip = i3, this.midPageThreshold = i3 + e3 - 1, this.nextPageThreshold = i3 + n3 - 1, this.prefetchThreshold = i3 + Math.floor(e3 / 3 * 2), this.pullBackThreshold = this.offset - 1, this.nextMidRange = i3 + e3 - n3, this.nextFullRange = i3, this.previousMidRange = t3 - n3, this.previousFullRange = i3 - e3;
        } }), Je = c2.Observable.extend({ init: function(e3, t3) {
          var n3 = this;
          c2.Observable.fn.init.call(n3), this.dataSource = e3, this.batchSize = t3, this._total = 0, this.buffer = new Xe(e3, 3 * t3), this.buffer.bind({ endreached: function(e4) {
            n3.trigger("endreached", { index: e4.index });
          }, prefetching: function(e4) {
            n3.trigger("prefetching", { skip: e4.skip, take: e4.take });
          }, prefetched: function(e4) {
            n3.trigger("prefetched", { skip: e4.skip, take: e4.take });
          }, reset: function() {
            n3._total = 0, n3.trigger("reset");
          }, resize: function() {
            n3._total = Math.ceil(this.length / n3.batchSize), n3.trigger("resize", { total: n3.total(), offset: this.offset });
          } });
        }, syncDataSource: function() {
          this.buffer.syncDataSource();
        }, at: function(e3) {
          var t3, n3 = this.buffer, i3 = e3 * this.batchSize, a3 = this.batchSize, r3 = [];
          n3.offset > i3 && n3.at(n3.offset - 1);
          for (var o3 = 0; o3 < a3 && null !== (t3 = n3.at(i3 + o3)); o3++) r3.push(t3);
          return r3;
        }, total: function() {
          return this._total;
        }, destroy: function() {
          this.buffer.destroy(), this.unbind();
        } });
        i2(true, c2.data, { readers: { json: Ee }, Query: ae, DataSource: qe, HierarchicalDataSource: Ye, Node: Ke, Comparer: te, ObservableObject: Q, ObservableArray: G, LazyObservableArray: K, LocalTransport: we, RemoteTransport: ye, Cache: xe, DataReader: Ee, Model: ee, Buffer: Xe, BatchBuffer: Je });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.Class, o2 = n2.support, s2 = n2.getOffset, l2 = n2._outerWidth, d2 = n2._outerHeight, u2 = "open", c2 = "close", p2 = "deactivate", h2 = "activate", f2 = "center", m2 = "right", g2 = "top", v2 = "bottom", _2 = "absolute", b2 = "hidden", k2 = "body", w = "location", y = "position", x = "visible", C = "effects", T = "k-active", S = "k-state-border", I = /k-state-border-(\w+)/, D = ".k-picker-wrap, .k-dropdown-wrap, .k-link", E = e2(document.documentElement), A = e2(window), F = "scroll", z = o2.transitions.css + "transform", P = e2.extend, H = ".kendoPopup", N = ["font-size", "font-family", "font-stretch", "font-style", "font-weight", "line-height"];
        function R(t3, n3) {
          return !(!t3 || !n3) && (t3 === n3 || e2.contains(t3, n3));
        }
        var O = a2.extend({ init: function(t3, i3) {
          var r3, s3 = this;
          (i3 = i3 || {}).isRtl && (i3.origin = i3.origin || "bottom right", i3.position = i3.position || "top right"), a2.fn.init.call(s3, t3, i3), t3 = s3.element, i3 = s3.options, s3.collisions = i3.collision ? i3.collision.split(" ") : [], s3.downEvent = n2.applyEventMap("down", n2.guid()), 1 === s3.collisions.length && s3.collisions.push(s3.collisions[0]), r3 = e2(s3.options.anchor).closest(".k-popup,.k-group").filter(":not([class^=km-])"), i3.appendTo = e2(e2(i3.appendTo)[0] || r3[0] || document.body), s3.element.hide().addClass("k-popup k-group k-reset").toggleClass("k-rtl", !!i3.isRtl).css({ position: _2 }).appendTo(i3.appendTo).attr("aria-hidden", true).on("mouseenter" + H, function() {
            s3._hovered = true;
          }).on("wheel" + H, function(t4) {
            var n3 = e2(t4.target).find(".k-list"), i4 = n3.parent();
            n3.length && n3.is(":visible") && (0 === i4.scrollTop() && t4.originalEvent.deltaY < 0 || i4.scrollTop() === i4.prop("scrollHeight") - i4.prop("offsetHeight") && t4.originalEvent.deltaY > 0) && t4.preventDefault();
          }).on("mouseleave" + H, function() {
            s3._hovered = false;
          }), s3.wrapper = e2(), false === i3.animation && (i3.animation = { open: { effects: {} }, close: { hide: true, effects: {} } }), P(i3.animation.open, { complete: function() {
            s3.wrapper.css({ overflow: x }), s3._activated = true, s3._trigger(h2);
          } }), P(i3.animation.close, { complete: function() {
            s3._animationClose();
          } }), s3._mousedownProxy = function(e3) {
            s3._mousedown(e3);
          }, o2.mobileOS.android ? s3._resizeProxy = function(e3) {
            setTimeout(function() {
              s3._resize(e3);
            }, 600);
          } : s3._resizeProxy = function(e3) {
            s3._resize(e3);
          }, i3.toggleTarget && e2(i3.toggleTarget).on(i3.toggleEvent + H, s3.toggle.bind(s3));
        }, events: [u2, h2, c2, p2], options: { name: "Popup", toggleEvent: "click", origin: "bottom left", position: "top left", anchor: k2, appendTo: null, collision: "flip fit", viewport: window, copyAnchorStyles: true, autosize: false, modal: false, adjustSize: { width: 0, height: 0 }, animation: { open: { effects: "slideIn:down", transition: true, duration: 200 }, close: { duration: 100, hide: true } }, omitOriginOffsets: false }, _animationClose: function() {
          var e3 = this, t3 = e3.wrapper.data(w);
          e3.wrapper.hide(), t3 && e3.wrapper.css(t3), e3.options.anchor != k2 && e3._hideDirClass(), e3._closing = false, e3._trigger(p2);
        }, destroy: function() {
          var t3, i3 = this, r3 = i3.options, o3 = i3.element.off(H);
          a2.fn.destroy.call(i3), r3.toggleTarget && e2(r3.toggleTarget).off(H), r3.modal || (E.off(i3.downEvent, i3._mousedownProxy), i3._toggleResize(false)), n2.destroy(i3.element.children()), o3.removeData(), r3.appendTo[0] === document.body && ((t3 = o3.parent(".k-animation-container"))[0] ? t3.remove() : o3.remove());
        }, open: function(i3, a3) {
          var r3, s3, l3 = this, d3 = { isFixed: !isNaN(parseInt(a3, 10)), x: i3, y: a3 }, c3 = l3.element, p3 = l3.options, h3 = e2(p3.anchor), f3 = c3[0] && c3.hasClass("km-widget"), m3 = c3.find("[role='listbox']");
          if (!l3.visible()) {
            if (p3.copyAnchorStyles && (f3 && "font-size" == N[0] && N.shift(), c3.css(n2.getComputedStyles(h3[0], N))), c3.data("animating") || l3._trigger(u2)) return;
            l3._activated = false, p3.modal || (E.off(l3.downEvent, l3._mousedownProxy).on(l3.downEvent, l3._mousedownProxy), l3._toggleResize(false), l3._toggleResize(true)), l3.wrapper = s3 = n2.wrap(c3, p3.autosize).css({ overflow: b2, display: "block", position: _2 }).attr("aria-hidden", false), m3.attr("aria-label") ? s3.attr("aria-label", m3.attr("aria-label")) : m3.attr("aria-labelledby") && s3.attr("aria-labelledby", m3.attr("aria-labelledby")), o2.mobileOS.android && s3.css(z, "translatez(0)"), s3.css(y), e2(p3.appendTo)[0] == document.body && s3.css(g2, "-10000px"), l3.flipped = l3._position(d3), r3 = l3._openAnimation(), p3.anchor != k2 && l3._showDirClass(r3), c3.is(":visible") || c3.data("olddisplay") !== t2 || (c3.show(), c3.data("olddisplay", c3.css("display")), c3.hide()), c3.data(C, r3.effects).kendoStop(true).kendoAnimate(r3).attr("aria-hidden", false);
          }
        }, _location: function(t3) {
          var i3, a3 = this, r3 = a3.element, s3 = a3.options, l3 = e2(s3.anchor), d3 = r3[0] && r3.hasClass("km-widget");
          s3.copyAnchorStyles && (d3 && "font-size" == N[0] && N.shift(), r3.css(n2.getComputedStyles(l3[0], N))), a3.wrapper = i3 = n2.wrap(r3, s3.autosize).css({ overflow: b2, display: "block", position: _2 }), o2.mobileOS.android && i3.css(z, "translatez(0)"), i3.css(y), e2(s3.appendTo)[0] == document.body && i3.css(g2, "-10000px"), a3._position(t3 || {});
          var u3 = i3.offset();
          return { width: n2._outerWidth(i3), height: n2._outerHeight(i3), left: u3.left, top: u3.top };
        }, _openAnimation: function() {
          var e3 = P(true, {}, this.options.animation.open);
          return e3.effects = n2.parseEffects(e3.effects, this.flipped), e3;
        }, _hideDirClass: function() {
          var t3 = e2(this.options.anchor), i3 = ((t3.attr("class") || "").match(I) || ["", "down"])[1], a3 = S + "-" + i3;
          t3.removeClass(a3).children(D).removeClass(T).removeClass(a3), this.element.removeClass(S + "-" + n2.directions[i3].reverse);
        }, _showDirClass: function(t3) {
          var i3 = t3.effects.slideIn ? t3.effects.slideIn.direction : "down", a3 = S + "-" + i3;
          e2(this.options.anchor).addClass(a3).children(D).addClass(T).addClass(a3), this.element.addClass(S + "-" + n2.directions[i3].reverse);
        }, position: function() {
          this.visible() && (this.flipped = this._position());
        }, toggle: function() {
          this[this.visible() ? c2 : u2]();
        }, visible: function() {
          return this.element.is(":visible");
        }, close: function(t3) {
          var i3, a3, r3, o3, s3 = this, l3 = s3.options;
          if (s3.visible()) {
            if (i3 = s3.wrapper[0] ? s3.wrapper : n2.wrap(s3.element).hide(), s3._toggleResize(false), s3._closing || s3._trigger(c2)) return void s3._toggleResize(true);
            s3.element.find(".k-popup").each(function() {
              var n3 = e2(this).data("kendoPopup");
              n3 && n3.close(t3);
            }), E.off(s3.downEvent, s3._mousedownProxy), t3 ? a3 = { hide: true, effects: {} } : (a3 = P(true, {}, l3.animation.close), r3 = s3.element.data(C), !(o3 = a3.effects) && !n2.size(o3) && r3 && n2.size(r3) && (a3.effects = r3, a3.reverse = true), s3._closing = true), s3.element.kendoStop(true).attr("aria-hidden", true), i3.css({ overflow: b2 }).attr("aria-hidden", true), s3.element.kendoAnimate(a3), t3 && s3._animationClose();
          }
        }, _trigger: function(e3) {
          return this.trigger(e3, { type: e3 });
        }, _resize: function(e3) {
          var t3 = this;
          -1 !== o2.resize.indexOf(e3.type) ? (clearTimeout(t3._resizeTimeout), t3._resizeTimeout = setTimeout(function() {
            t3._position(), t3._resizeTimeout = null;
          }, 50)) : (!t3._hovered || t3._activated && t3.element.find(".k-list").length > 0) && t3.close();
        }, _toggleResize: function(e3) {
          var t3 = e3 ? "on" : "off", n3 = o2.resize;
          o2.mobileOS.ios || o2.mobileOS.android || o2.browser.safari || (n3 += " scroll"), e3 && !this.scrollableParents && (this.scrollableParents = this._scrollableParents()), this.scrollableParents && this.scrollableParents.length && this.scrollableParents[t3](F, this._resizeProxy), A[t3](n3, this._resizeProxy);
        }, _mousedown: function(t3) {
          var i3 = this, a3 = i3.element[0], r3 = i3.options, o3 = e2(r3.anchor)[0], s3 = r3.toggleTarget, l3 = n2.eventTarget(t3), d3 = e2(l3).closest(".k-popup"), u3 = d3.parent().parent(".km-shim").length;
          d3 = d3[0], !u3 && d3 && d3 !== i3.element[0] || "popover" !== e2(t3.target).closest("a").data("rel") && (R(a3, l3) || R(o3, l3) || s3 && R(e2(s3)[0], l3) || i3.close());
        }, _fit: function(e3, t3, n3) {
          var i3 = 0;
          return e3 + t3 > n3 && (i3 = n3 - (e3 + t3)), e3 < 0 && (i3 = -e3), i3;
        }, _flip: function(e3, t3, n3, i3, a3, r3, o3) {
          var s3 = 0;
          return o3 = o3 || t3, r3 !== a3 && r3 !== f2 && a3 !== f2 && (e3 + o3 > i3 && (s3 += -(n3 + t3)), e3 + s3 < 0 && (s3 += n3 + t3)), s3;
        }, _scrollableParents: function() {
          return e2(this.options.anchor).parentsUntil("body").filter(function(e3, t3) {
            return n2.isScrollable(t3);
          });
        }, _position: function(t3) {
          var i3, a3, r3, u3, c3, p3, h3, f3 = this, m3 = f3.element, g3 = f3.wrapper, v3 = f3.options, b3 = e2(v3.viewport), k3 = o2.zoomLevel(), x2 = !!(b3[0] == window && window.innerWidth && k3 <= 1.02), C2 = e2(v3.anchor), T2 = v3.origin.toLowerCase().split(" "), S2 = v3.position.toLowerCase().split(" "), I2 = f3.collisions, D2 = 10002, E2 = 0, A2 = document.documentElement;
          (c3 = v3.viewport === window ? { top: window.pageYOffset || document.documentElement.scrollTop || 0, left: window.pageXOffset || document.documentElement.scrollLeft || 0 } : b3.offset(), x2 ? (p3 = window.innerWidth, h3 = window.innerHeight) : (p3 = b3.width(), h3 = b3.height()), x2 && A2.scrollHeight - A2.clientHeight > 0) && (p3 -= (v3.isRtl ? -1 : 1) * n2.support.scrollbar());
          if ((i3 = C2.parents().filter(g3.siblings()))[0]) if (r3 = Math.max(Number(i3.css("zIndex")), 0)) D2 = r3 + 10;
          else for (u3 = (a3 = C2.parentsUntil(i3)).length; E2 < u3; E2++) (r3 = Number(e2(a3[E2]).css("zIndex"))) && D2 < r3 && (D2 = r3 + 10);
          g3.css("zIndex", D2), t3 && t3.isFixed ? g3.css({ left: t3.x, top: t3.y }) : g3.css(f3._align(T2, S2));
          var F2 = s2(g3, y, C2[0] === g3.offsetParent()[0]), z2 = s2(g3);
          C2.offsetParent().parent(".k-animation-container,.k-popup,.k-group").length && (F2 = s2(g3, y, true), z2 = s2(g3)), z2.top -= c3.top, z2.left -= c3.left, f3.wrapper.data(w) || g3.data(w, P({}, F2));
          var H2 = P({}, z2), N2 = P({}, F2), R2 = v3.adjustSize;
          "fit" === I2[0] && (N2.top += f3._fit(H2.top, d2(g3) + R2.height, h3 / k3)), "fit" === I2[1] && (N2.left += f3._fit(H2.left, l2(g3) + R2.width, p3 / k3));
          var O2 = P({}, N2), M2 = d2(m3), B2 = d2(g3);
          return !g3.height() && M2 && (B2 += M2), "flip" === I2[0] && (N2.top += f3._flip(H2.top, M2, d2(C2), h3 / k3, T2[0], S2[0], B2)), "flip" === I2[1] && (N2.left += f3._flip(H2.left, l2(m3), l2(C2), p3 / k3, T2[1], S2[1], l2(g3))), m3.css(y, _2), g3.css(N2), N2.left != O2.left || N2.top != O2.top;
        }, _align: function(t3, n3) {
          var i3, a3 = this, r3 = a3.wrapper, o3 = e2(a3.options.anchor), u3 = t3[0], c3 = t3[1], p3 = n3[0], h3 = n3[1], g3 = s2(o3), _3 = e2(a3.options.appendTo), b3 = l2(r3), k3 = d2(r3) || d2(r3.children().first()), w2 = l2(o3), y2 = d2(o3), x2 = a3.options.omitOriginOffsets ? 0 : g3.top, C2 = a3.options.omitOriginOffsets ? 0 : g3.left, T2 = Math.round;
          return _3[0] != document.body && (x2 -= (i3 = s2(_3)).top, C2 -= i3.left), u3 === v2 && (x2 += y2), u3 === f2 && (x2 += T2(y2 / 2)), p3 === v2 && (x2 -= k3), p3 === f2 && (x2 -= T2(k3 / 2)), c3 === m2 && (C2 += w2), c3 === f2 && (C2 += T2(w2 / 2)), h3 === m2 && (C2 -= b3), h3 === f2 && (C2 -= T2(b3 / 2)), { top: x2, left: C2 };
        } });
        i2.plugin(O);
        var M = n2.support.stableSort, B = "kendoTabKeyTrap", L = r2.extend({ init: function(t3) {
          this.element = e2(t3), this.element.autoApplyNS(B);
        }, trap: function() {
          this.element.on("keydown", this._keepInTrap.bind(this));
        }, removeTrap: function() {
          this.element.kendoDestroy(B);
        }, destroy: function() {
          this.element.kendoDestroy(B), this.element = t2;
        }, shouldTrap: function() {
          return true;
        }, _keepInTrap: function(e3) {
          if (9 === e3.which && this.shouldTrap() && !e3.isDefaultPrevented()) {
            var t3 = this._focusableElements(), n3 = this._sortFocusableElements(t3), i3 = this._nextFocusable(e3, n3);
            this._focus(i3), e3.preventDefault();
          }
        }, _focusableElements: function() {
          var t3 = this.element.find("a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex], *[contenteditable]").filter(function(t4, n3) {
            return n3.tabIndex >= 0 && e2(n3).is(":visible") && !e2(n3).is("[disabled]");
          });
          return this.element.is("[tabindex]") && t3.push(this.element[0]), t3;
        }, _sortFocusableElements: function(e3) {
          var t3;
          if (M) t3 = e3.sort(function(e4, t4) {
            return e4.tabIndex - t4.tabIndex;
          });
          else {
            var n3 = "__k_index";
            e3.each(function(e4, t4) {
              t4.setAttribute(n3, e4);
            }), t3 = e3.sort(function(e4, t4) {
              return e4.tabIndex === t4.tabIndex ? parseInt(e4.getAttribute(n3), 10) - parseInt(t4.getAttribute(n3), 10) : e4.tabIndex - t4.tabIndex;
            }), e3.removeAttr(n3);
          }
          return t3;
        }, _nextFocusable: function(e3, t3) {
          var n3 = t3.length, i3 = t3.index(e3.target);
          return t3.get((i3 + (e3.shiftKey ? -1 : 1)) % n3);
        }, _focus: function(e3) {
          "IFRAME" != e3.nodeName ? (e3.focus(), "INPUT" == e3.nodeName && e3.setSelectionRange && this._haveSelectionRange(e3) && e3.setSelectionRange(0, e3.value.length)) : e3.contentWindow.document.body.focus();
        }, _haveSelectionRange: function(e3) {
          var t3 = e3.type.toLowerCase();
          return "text" === t3 || "search" === t3 || "url" === t3 || "tel" === t3 || "password" === t3;
        } });
        i2.Popup.TabKeyTrap = L;
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.ui, r2 = ".kendoFloatingLabel", o2 = "k-empty", s2 = "k-focus", l2 = "k-disabled", d2 = "k-no-click", u2 = "k-readonly", c2 = i2.extend({ init: function(a3, r3) {
          var o3 = this;
          i2.fn.init.call(o3, a3, r3), r3 = e2.extend(true, {}, r3), o3.widget = o3.options.widget, o3.widgetWrapper = o3.widget.wrapper[0], o3.refresh(), o3._editable({ readonly: o3.options.widget.options.readonly !== t2 && o3.options.widget.options.readonly, disable: o3.options.widget.options.enable !== t2 && !o3.options.widget.options.enable }), o3.widgetWrapper.style.width && (o3.element.css("width", o3.widgetWrapper.style.width), o3.widgetWrapper.style.width = "100%"), o3.element.addClass("k-floating-label-container"), n2.notify(o3);
        }, options: { name: "FloatingLabel", widget: null, useReadOnlyClass: false, floatCheck: function(e3) {
          return !e3.element.val();
        } }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false });
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) });
        }, refresh: function() {
          var e3 = this, t3 = e3.element;
          t3.removeClass(o2).removeClass(s2), e3.options.floatCheck({ element: e3.options.widget.element, floating: e3.element }) && t3.addClass(o2), (document.activeElement === e3.options.widget.element[0] || e3.options.widget.input && document.activeElement === e3.options.widget.input[0]) && t3.addClass(s2);
        }, destroy: function() {
          this.element.off(r2), i2.fn.destroy.call(this);
        }, _editable: function(e3) {
          var t3 = this, n3 = t3.element, i3 = e3.disable, a3 = e3.readonly;
          n3.off(r2), a3 || i3 ? n3.toggleClass(l2, i3).toggleClass(t3.options.useReadOnlyClass ? u2 : d2, a3) : (n3.removeClass(l2).removeClass(t3.options.useReadOnlyClass ? u2 : d2), n3.on("focusin" + r2, t3.refresh.bind(t3)), n3.on("focusout" + r2, t3.refresh.bind(t3)));
        } });
        a2.plugin(c2);
      }(window.kendo.jQuery);
      var t = window.kendo, n = t.jQuery, i = t.ui.Widget, a = t.isFunction, r = i.extend({ options: { name: "Label", widget: null }, init: function(e2, t2) {
        var a2 = this;
        e2 = e2 || n("<label></label>"), i.fn.init.call(a2, e2, t2), t2 = n.extend(true, {}, t2), a2.widget = t2.widget, t2.floating && a2._floatingLabel(), a2._label();
      }, destroy: function() {
        this.floatingLabel && this.floatingLabel.destroy(), i.fn.destroy.call(this);
      }, _unwrapFloating: function() {
        var e2 = this;
        e2.floatingLabel && (e2.floatingLabel.destroy(), e2.widget.wrapper.unwrap(e2._floatingLabelContainer));
      }, setOptions: function(e2) {
        var t2 = this, a2 = false;
        ("string" == typeof e2 || n.isPlainObject(e2) && false === e2.floating) && (a2 = true), e2 = n.isPlainObject(e2) ? e2 : { content: e2 }, i.fn.setOptions.call(t2, e2), a2 && t2.floatingLabel ? (t2._unwrapFloating(), t2.floatingLabel.destroy(), delete t2.floatingLabel) : true !== e2.floating || t2.floatingLabel || (t2.element.remove(), t2._floatingLabel()), t2._label(), t2.floatingLabel && t2.floatingLabel.refresh();
      }, _label: function() {
        var e2 = this, n2 = e2.widget.element, i2 = e2.options, r2 = n2.attr("id"), o2 = i2.content;
        a(o2) && (o2 = o2.call(e2)), o2 || (o2 = ""), r2 || (r2 = i2.name + "_" + t.guid(), n2.attr("id", r2)), e2.element.addClass("k-label k-input-label").attr("for", r2).text(o2).insertBefore(e2.options.beforeElm || e2.widget.wrapper);
      }, _floatingLabel: function() {
        var e2 = this, i2 = n.extend({}, e2.options);
        delete i2.name, (i2.floating || false) && (e2._floatingLabelContainer = e2.widget.wrapper.wrap("<span></span>").parent(), e2.floatingLabel = new t.ui.FloatingLabel(e2._floatingLabelContainer, n.extend({}, i2)));
      } });
      t.ui.plugin(r);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2._outerHeight, r2 = /^\d+(\.\d+)?%$/i, o2 = i2.Widget, s2 = n2.keys, l2 = n2.support, d2 = n2.htmlEncode, u2 = n2._activeElement, c2 = n2._outerWidth, p2 = n2.data.ObservableArray, h2 = "id", f2 = "change", m2 = "k-focus", g2 = "k-hover", v2 = "k-selected", _2 = "k-i-loading k-input-loading-icon", b2 = "k-list-ul", k2 = ".k-list-group-sticky-header", w = ".k-list-item", y = "open", x = "close", C = "cascade", T = "select", S = "click", I = "mouseenter", D = "activate", E = "deactivate", A = "dataBinding", F = "dataBound", z = "selectedItemChange", P = "selected", H = "requestStart", N = "requestEnd", R = "focus", O = e2.extend, M = Array.isArray, B = l2.browser, L = "k-hidden", V = "width", U = "text", W = B.msie, j = /"/g, q = { ComboBox: ["DropDownList", "MultiColumnComboBox"], DropDownList: ["ComboBox", "MultiColumnComboBox"], MultiColumnComboBox: ["ComboBox", "DropDownList"] }, G = "aria-labelledby", K = "aria-label", $ = "aria-activedescendant", Y = "aria-expanded", Q = "aria-hidden", X = "aria-busy", J = "aria-selected", Z = ".k-table-group-row", ee = n2.ui.DataBoundWidget.extend({ init: function(t3, i3) {
          var a3, r3 = this;
          o2.fn.init.call(r3, t3, i3), t3 = r3.element, i3 = r3.options, r3._isSelect = t3.is(T), r3._isSelect && r3.element[0].length && (i3.dataSource || (i3.dataTextField = i3.dataTextField || U, i3.dataValueField = i3.dataValueField || "value")), r3._listSize = n2.cssProperties.getValidClass({ widget: "List", propName: "size", value: i3.size }), r3.ul = e2('<ul unselectable="on"/>').attr({ tabIndex: -1, "aria-hidden": true }), r3.list = e2("<div class='k-list'/>").addClass(r3._listSize).append(r3.ul), (a3 = t3.attr(h2)) || (a3 = n2.guid()), r3.list.attr(h2, a3 + "-list"), r3.ul.attr(h2, a3 + "_listbox"), i3.columns && i3.columns.length && (r3.list.removeClass("k-list").addClass("k-data-table"), r3.list.removeClass(r3._listSize).addClass("k-table-md"), r3.ul.removeClass(b2).addClass("k-table"), r3._columnsHeader()), r3._header(), r3._noData(), r3._footer(), r3._accessors(), r3._initValue();
        }, options: { valuePrimitive: false, footerTemplate: "", headerTemplate: "", noDataTemplate: true, size: "medium", messages: { noData: "No data found.", clear: "clear" } }, setOptions: function(e3) {
          o2.fn.setOptions.call(this, e3), e3 && e3.enable !== t2 && (e3.enabled = e3.enable), e3.columns && e3.columns.length && this._columnsHeader(), this._header(), this._noData(), this._footer(), this._renderFooter(), this._renderNoData(), e3.label && this._inputLabel ? this.label.setOptions(e3.label) : false === e3.label ? (this.label._unwrapFloating(), this._inputLabel.remove(), delete this._inputLabel) : e3.label && this._label();
        }, focus: function() {
          this._focused.trigger(R);
        }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false }), this.label && this.label.floatingLabel && this.label.floatingLabel.readonly(e3 === t2 || e3);
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this.label && this.label.floatingLabel && this.label.floatingLabel.enable(e3 = e3 === t2 || e3);
        }, _label: function() {
          var t3 = this, i3 = t3.options, a3 = e2.isPlainObject(i3.label) ? i3.label : { content: i3.label };
          t3.label = new n2.ui.Label(null, e2.extend({}, a3, { widget: t3, floatCheck: t3._floatCheck.bind(t3) })), t3._inputLabel = t3.label.element;
        }, _floatCheck: function() {
          return !this.listView || !(this.value() || !!this.text && this.text()) && !this.popup.visible();
        }, _refreshFloatingLabel: function() {
          var e3 = this;
          e3.label && e3.label.floatingLabel && e3.label.floatingLabel.refresh();
        }, _header: function() {
          var t3 = this, i3 = e2(t3.header), a3 = t3.options.headerTemplate;
          if (this._angularElement(i3, "cleanup"), n2.destroy(i3), i3.remove(), a3) {
            var r3 = "function" != typeof a3 ? n2.template(a3) : a3;
            i3 = e2(r3({})), t3.header = i3[0] ? i3 : null, t3.list.parent.length > 0 && t3.list.before(i3), this._angularElement(t3.header, "compile");
          } else t3.header = null;
        }, _columnsHeader: function() {
          var t3 = this, i3 = e2(t3.columnsHeader);
          this._angularElement(i3, "cleanup"), n2.destroy(i3), i3.remove();
          for (var a3 = "<div class='k-table-header'><div class='k-table-header-wrap'><table class='k-table' role='presentation'>", o3 = "<colgroup>", s3 = "<tr class='k-table-row'>", l3 = 0; l3 < this.options.columns.length; l3++) {
            var d3 = this.options.columns[l3], u3 = d3.title || d3.field || "", c3 = d3.headerTemplate || u3, p3 = "function" != typeof c3 ? n2.template(c3) : c3, h3 = d3.width, f3 = parseInt(h3, 10), m3 = "";
            h3 && !isNaN(f3) && (m3 += "style='width:", m3 += f3, m3 += r2.test(h3) ? "%" : "px", m3 += ";'"), o3 += "<col " + m3 + "/>", s3 += "<th class='k-table-th'>", s3 += p3(d3), s3 += "</th>";
          }
          a3 += o3 += "</colgroup>", a3 += "<thead class='k-table-thead'>", a3 += s3 += "</tr>", a3 += "</thead></table></div></div>", t3.columnsHeader = i3 = e2(a3), t3.list.prepend(i3), this._angularElement(t3.columnsHeader, "compile");
        }, _noData: function() {
          var t3 = this, i3 = e2(t3.noData), a3 = true === t3.options.noDataTemplate ? t3.options.messages.noData : t3.options.noDataTemplate;
          t3.angular("cleanup", function() {
            return { elements: i3 };
          }), n2.destroy(i3), i3.remove(), a3 ? (t3.noData = e2('<div class="k-no-data" style="display: none;"></div>').appendTo(t3.list), t3.noDataTemplate = "function" != typeof a3 ? n2.template(a3) : a3) : t3.noData = null;
        }, _footer: function() {
          var t3 = this, i3 = e2(t3.footer), a3 = t3.options.footerTemplate, r3 = this.options.columns && this.options.columns.length ? '<div class="k-table-footer"><span class="k-table-td"></span></div>' : '<div class="k-list-footer"></div>';
          this._angularElement(i3, "cleanup"), n2.destroy(i3), i3.remove(), a3 ? (t3.footer = e2(r3).appendTo(t3.list), t3.footerTemplate = "function" != typeof a3 ? n2.template(a3) : a3) : t3.footer = null;
        }, _listOptions: function(t3) {
          var i3 = this, a3 = i3.options, r3 = a3.virtual, o3 = { change: i3._listChange.bind(i3) }, s3 = i3._listBound.bind(i3), l3 = i3._focused, d3 = i3.element.attr("id"), u3 = e2('label[for="' + i3.element.attr("id") + '"]'), c3 = l3.attr(G);
          return !c3 && u3.length && (c3 = u3.attr("id") || i3._generateLabelId(u3, d3 || n2.guid())), r3 = "object" == typeof r3 ? r3 : {}, (t3 = e2.extend({ autoBind: false, selectable: true, dataSource: i3.dataSource, click: i3._click.bind(i3), activate: i3._activateItem.bind(i3), columns: a3.columns, deactivate: i3._deactivateItem.bind(i3), dataBinding: function() {
            i3.trigger(A);
          }, dataBound: s3, height: a3.height, dataValueField: a3.dataValueField, dataTextField: a3.dataTextField, groupTemplate: a3.groupTemplate, fixedGroupTemplate: a3.fixedGroupTemplate, template: a3.template, ariaLabel: l3.attr(K), ariaLabelledBy: c3, listSize: i3._listSize }, t3, r3, o3)).template || (t3.template = "#:" + n2.expr(t3.dataTextField, "data") + "#"), a3.$angular && (t3.$angular = a3.$angular), t3;
        }, _initList: function() {
          var e3 = this, t3 = e3._listOptions({ selectedItemChange: e3._listChange.bind(e3) });
          e3.options.virtual ? (e3.listView = new n2.ui.VirtualList(e3.ul, t3), e3.list.addClass("k-virtual-list")) : e3.listView = new n2.ui.StaticList(e3.ul, t3), e3.listView.bind("listBound", e3._listBound.bind(e3)), e3._setListValue();
        }, _setListValue: function(e3) {
          (e3 = e3 || this.options.value) !== t2 && this.listView.value(e3).done(this._updateSelectionState.bind(this));
        }, _updateSelectionState: e2.noop, _listMousedown: function(e3) {
          this.filterInput && this.filterInput[0] === e3.target || e3.preventDefault();
        }, _isFilterEnabled: function() {
          var e3 = this.options.filter;
          return e3 && "none" !== e3;
        }, _hideClear: function() {
          this._clear && this._clear.addClass(L);
        }, _showClear: function() {
          this._clear && this._clear.removeClass(L);
        }, _clearValue: function() {
          this._clearText(), this._accessor(""), this.listView.value([]), this._isSelect && (this._customOption = t2), this._isFilterEnabled() && !this.options.enforceMinLength && (this._filter({ word: "", open: false }), this.options.highlightFirst && this.listView.focus(0)), this._change();
        }, _clearText: function() {
          this.text("");
        }, _clearFilter: function() {
          this.options.virtual || this.listView.bound(false), this._filterSource();
        }, _filterSource: function(t3, n3) {
          var i3 = this, a3 = i3.options, r3 = a3.filterFields && t3 && t3.logic && t3.filters && t3.filters.length, o3 = i3.dataSource, s3 = O({}, o3.filter() || {}), l3 = t3 || s3.filters && s3.filters.length && !t3, d3 = se(s3, a3.dataTextField);
          if (this._clearFilterExpressions(s3), (t3 || d3) && i3.trigger("filtering", { filter: t3 })) return e2.Deferred().reject().promise();
          var u3 = { filters: [], logic: "and" };
          r3 ? u3.filters.push(t3) : this._pushFilterExpression(u3, t3), oe(s3) && (u3.logic === s3.logic ? u3.filters = u3.filters.concat(s3.filters) : u3.filters.push(s3)), i3._cascading && this.listView.setDSFilter(u3);
          var c3 = O({}, { page: l3 ? 1 : o3.page(), pageSize: l3 ? o3.options.pageSize : o3.pageSize(), sort: o3.sort(), filter: o3.filter(), group: o3.group(), aggregate: o3.aggregate() }, { filter: u3 });
          return o3[n3 ? "read" : "query"](o3._mergeState(c3));
        }, _pushFilterExpression: function(e3, t3) {
          oe(t3) && "" !== t3.value && e3.filters.push(t3);
        }, _clearFilterExpressions: function(e3) {
          if (e3.filters) {
            for (var t3, n3 = 0; n3 < e3.filters.length; n3++) "fromFilter" in e3.filters[n3] && (t3 = n3);
            isNaN(t3) || e3.filters.splice(t3, 1);
          }
        }, _angularElement: function(e3, t3) {
          e3 && this.angular(t3, function() {
            return { elements: e3 };
          });
        }, _renderNoData: function() {
          var e3 = this, t3 = e3.noData;
          t3 && (this._angularElement(t3, "cleanup"), t3.html(e3.noDataTemplate({ instance: e3 })), this._angularElement(t3, "compile"));
        }, _toggleNoData: function(t3) {
          e2(this.noData).toggle(t3);
        }, _toggleHeader: function(e3) {
          this.listView.content.prev(k2).toggle(e3);
        }, _renderFooter: function() {
          var e3 = this, t3 = e3.footer ? this.options.columns && this.options.columns.length ? e3.footer.children().first() : e3.footer : null;
          t3 && (this._angularElement(t3, "cleanup"), t3.html(e3.footerTemplate({ instance: e3 })), this._angularElement(t3, "compile"));
        }, _allowOpening: function() {
          return this.options.noDataTemplate || this.dataSource.flatView().length;
        }, _initValue: function() {
          var e3 = this, t3 = e3.options.value;
          null !== t3 ? e3.element.val(t3) : (t3 = e3._accessor(), e3.options.value = t3), e3._old = t3;
        }, _ignoreCase: function() {
          var e3, t3 = this, n3 = t3.dataSource.reader.model;
          n3 && n3.fields && (e3 = n3.fields[t3.options.dataTextField]) && e3.type && "string" !== e3.type && (t3.options.ignoreCase = false);
        }, _focus: function(e3) {
          return this.listView.focus(e3);
        }, _filter: function(e3) {
          var t3, n3 = this, i3 = n3.options, a3 = e3.word, r3 = i3.filterFields, o3 = i3.dataTextField;
          if (r3 && r3.length) {
            t3 = { logic: "or", filters: [], fromFilter: true };
            for (var s3 = 0; s3 < r3.length; s3++) this._pushFilterExpression(t3, n3._buildExpression(a3, r3[s3]));
          } else t3 = n3._buildExpression(a3, o3);
          n3._open = e3.open, n3._filterSource(t3);
        }, _buildExpression: function(e3, t3) {
          var n3 = this.options, i3 = n3.ignoreCase, a3 = this.dataSource.options.accentFoldingFiltering;
          return { value: i3 ? a3 ? e3.toLocaleLowerCase(a3) : e3.toLowerCase() : e3, field: t3, operator: n3.filter, ignoreCase: i3 };
        }, _clearButton: function() {
          var t3 = this, n3 = t3.options.messages.clear;
          t3._clear || (t3._clear = e2('<span unselectable="on" class="k-clear-value" title="' + n3 + '"><span class="k-icon k-i-x"></span></span>').attr({ role: "button", tabIndex: -1 })), t3.options.clearButton || t3._clear.remove(), this._hideClear();
        }, search: function(e3) {
          var t3 = this.options;
          e3 = "string" == typeof e3 ? e3 : this._inputValue(), clearTimeout(this._typingTimeout), (!t3.enforceMinLength && !e3.length || e3.length >= t3.minLength) && (this._state = "filter", this.listView && (this.listView._emptySearch = !n2.trim(e3).length), this._isFilterEnabled() ? this._filter({ word: e3, open: true }) : this._searchByWord(e3));
        }, current: function(e3) {
          return this._focus(e3);
        }, items: function() {
          return this.ul[0].children;
        }, destroy: function() {
          var e3 = this, t3 = e3.ns;
          o2.fn.destroy.call(e3), e3._unbindDataSource(), e3.listView.destroy(), e3.list.off(t3), e3.popup.destroy(), e3._form && e3._form.off("reset", e3._resetHandler), e3.label && e3.label.destroy();
        }, dataItem: function(n3) {
          var i3 = this;
          if (n3 === t2) return i3.listView.selectedDataItems()[0];
          if ("number" != typeof n3) {
            if (i3.options.virtual) return i3.dataSource.getByUid(e2(n3).data("uid"));
            n3 = e2(i3.items()).index(n3);
          }
          return i3.dataSource.flatView()[n3];
        }, _activateItem: function() {
          var e3 = this.listView.focus();
          e3 && this.popup.visible() && this._focused.add(this.filterInput).attr($, e3.attr("id"));
        }, _deactivateItem: function() {
          this._focused.add(this.filterInput).removeAttr($);
        }, _accessors: function() {
          var e3 = this, t3 = e3.element, i3 = e3.options, a3 = n2.getter, r3 = t3.attr(n2.attr("text-field")), o3 = t3.attr(n2.attr("value-field"));
          !i3.dataTextField && r3 && (i3.dataTextField = r3), !i3.dataValueField && o3 && (i3.dataValueField = o3), e3._text = a3(i3.dataTextField), e3._value = a3(i3.dataValueField);
        }, _aria: function(e3) {
          var n3, i3 = this, a3 = i3.options, r3 = i3._focused;
          a3.suggest !== t2 && (n3 = "none" === a3.filter ? true === a3.suggest ? "inline" : "none" : true === a3.suggest ? "both" : "list", r3.attr("aria-autocomplete", n3)), e3 = e3 ? e3 + " " + i3.ul[0].id : i3.ul[0].id, r3.attr({ "aria-controls": e3 }), i3.filterInput && i3.filterInput.length > 0 && i3.filterInput.attr("aria-controls", e3), i3.ul.attr("aria-live", i3._isFilterEnabled() ? "polite" : "off"), i3._ariaLabel(i3._focused);
        }, _blur: function() {
          var e3 = this;
          e3._change(), e3.close(), e3._userTriggered = false;
        }, _isValueChanged: function(e3) {
          return e3 !== te(this._old, typeof e3);
        }, _change: function() {
          var e3, n3 = this, i3 = n3.selectedIndex, a3 = n3.options.value, r3 = n3.value();
          n3._isSelect && !n3.listView.bound() && a3 && (r3 = a3), n3._isValueChanged(r3) || n3._valueBeforeCascade !== t2 && n3._valueBeforeCascade !== te(n3._old, typeof n3._valueBeforeCascade) && n3._userTriggered ? e3 = true : i3 === t2 || i3 === n3._oldIndex || n3.listView.isFiltered() || (e3 = true), e3 && (null === n3._old || "" === n3._old || "" === r3 ? n3._valueBeforeCascade = n3._old = r3 : n3.dataItem() ? n3._valueBeforeCascade = n3._old = n3.options.dataValueField ? n3.dataItem()[n3.options.dataValueField] : n3.dataItem() : n3._valueBeforeCascade = n3._old = null, n3._oldIndex = i3, n3._typing || n3.element.trigger(f2), n3.trigger(f2)), n3.typing = false;
        }, _data: function() {
          return this.dataSource.view();
        }, _enable: function() {
          var e3 = this, n3 = e3.options, i3 = e3.element.is("[disabled]");
          n3.enable !== t2 && (n3.enabled = n3.enable), !n3.enabled || i3 ? e3.enable(false) : e3.readonly(e3.element.is("[readonly]"));
        }, _dataValue: function(e3) {
          var n3 = this._value(e3);
          return n3 === t2 && (n3 = this._text(e3)), n3;
        }, _offsetHeight: function() {
          var t3 = 0;
          return this.listView.content.parent().prevAll(":visible").each(function() {
            var n3 = e2(this);
            t3 += a2(n3, true);
          }), t3;
        }, _height: function(t3) {
          var n3, i3 = this, r3 = i3.list, o3 = i3.options.height, s3 = i3.popup.visible(), l3 = this.options.columns && this.options.columns.length;
          if (t3 || i3.options.noDataTemplate) {
            if (n3 = r3.parent().add(r3.closest(".k-animation-container")).show(), !r3.parent().is(":visible")) return void n3.hide();
            o3 = i3.listView.content[0].scrollHeight > o3 ? o3 : "auto", n3.height(o3), "auto" !== o3 && (o3 -= i3._offsetHeight(), l3 && (o3 = o3 - (a2(e2(i3.footer)) || 0) - (a2(e2(i3.columnsHeader)) || 0))), l3 ? i3.listView.content.outerHeight(o3) : i3.listView.content.parent().outerHeight(o3), s3 || r3.parent().hide();
          }
          return o3;
        }, _openHandler: function(e3) {
          var t3;
          this._adjustListWidth(), this.trigger(y) ? e3.preventDefault() : (this._focused.attr(Y, true), this.ul.attr(Q, false), (t3 = this.listView.focus()) && this._focused.add(this.filterInput).attr($, t3.attr("id")));
        }, _adjustListWidth: function() {
          var e3, t3, n3 = this, i3 = n3.list.parent(), a3 = i3[0].style.width, r3 = n3.wrapper;
          if (i3.data(V) || !a3) return e3 = window.getComputedStyle ? window.getComputedStyle(r3[0], null) : 0, t3 = parseFloat(e3 && e3.width) || c2(r3), e3 && B.msie && (t3 += parseFloat(e3.paddingLeft) + parseFloat(e3.paddingRight) + parseFloat(e3.borderLeftWidth) + parseFloat(e3.borderRightWidth)), a3 = "border-box" !== i3.css("box-sizing") ? t3 - (c2(i3) - i3.width()) : t3, i3.css({ fontFamily: r3.css("font-family"), width: n3.options.autoWidth ? "auto" : a3, minWidth: a3, whiteSpace: n3.options.autoWidth ? "nowrap" : "normal" }).data(V, a3), true;
        }, _closeHandler: function(e3) {
          this.trigger(x) ? e3.preventDefault() : (this._focused.attr(Y, false), this.ul.attr(Q, true), this._focused.add(this.filterInput).removeAttr($));
        }, _focusItem: function() {
          var e3 = this.listView, n3 = !e3.focus(), i3 = ae(e3.select());
          i3 === t2 && this.options.highlightFirst && n3 && (i3 = 0), i3 !== t2 ? e3.focus(i3) : n3 && e3.scrollToIndex(0);
        }, _calculateGroupPadding: function(e3) {
          var t3 = this.ul.children(".k-first").first(), i3 = this.listView.content.prev(k2), a3 = 0, r3 = "right";
          i3[0] && "none" !== i3[0].style.display && ("auto" !== e3 && (a3 = n2.support.scrollbar()), this.element.parents(".k-rtl").length && (r3 = "left"), a3 += parseFloat(t3.css("border-" + r3 + "-width"), 10) + parseFloat(t3.children(".k-list-item-group-label").css("padding-" + r3), 10), i3.css("padding-" + r3, a3));
        }, _calculatePopupHeight: function(e3) {
          var t3 = this._height(this.dataSource.flatView().length || e3);
          this._calculateGroupPadding(t3), this._calculateColumnsHeaderPadding(t3);
        }, _calculateColumnsHeaderPadding: function(e3) {
          if (this.options.columns && this.options.columns.length) {
            var t3 = l2.isRtl(this.wrapper), i3 = n2.support.scrollbar();
            this.columnsHeader.css(t3 ? "padding-left" : "padding-right", "auto" !== e3 ? i3 : 0);
          }
        }, _refreshScroll: function() {
          var e3 = this.listView, t3 = e3.element.height() > e3.content.height();
          this.options.autoWidth && e3.content.css({ overflowX: "hidden", overflowY: t3 ? "scroll" : "auto" });
        }, _resizePopup: function(e3) {
          this.options.virtual || (this.popup.element.is(":visible") ? this._calculatePopupHeight(e3) : (this.popup.one("open", function(e4) {
            return function() {
              this._calculatePopupHeight(e4);
            }.bind(this);
          }.call(this, e3)), this.popup.one(D, this._refreshScroll.bind(this))));
        }, _popup: function() {
          var e3 = this, t3 = this;
          t3.list.wrap("<div>"), t3.popup = new i2.Popup(t3.list.parent(), O({}, t3.options.popup, { anchor: t3.wrapper, open: t3._openHandler.bind(t3), close: t3._closeHandler.bind(t3), animation: t3.options.animation, isRtl: l2.isRtl(t3.wrapper), autosize: t3.options.autoWidth, activate: function() {
            e3._refreshFloatingLabel();
          }, deactivate: function() {
            e3._refreshFloatingLabel();
          } })), t3.popup.element.prepend(t3.header).on("mousedown" + this.ns, this._listMousedown.bind(this));
        }, _toggleHover: function(t3) {
          e2(t3.currentTarget).toggleClass(g2, t3.type === I);
        }, _toggle: function(e3, n3) {
          var i3 = this, a3 = l2.mobileOS && (l2.touch || l2.MSPointers || l2.pointers);
          e3 = e3 !== t2 ? e3 : !i3.popup.visible(), n3 || a3 || i3._focused[0] === u2() || (i3._prevent = true, i3._focused.trigger(R), i3._prevent = false), i3[e3 ? y : x]();
        }, _triggerCascade: function() {
          var e3 = this;
          e3._cascadeTriggered && e3.value() === te(e3._cascadedValue, typeof e3.value()) || (e3._cascadedValue = e3.value(), e3._cascadeTriggered = true, e3.trigger(C, { userTriggered: e3._userTriggered }));
        }, _triggerChange: function() {
          this._valueBeforeCascade !== this.value() && this.trigger(f2);
        }, _unbindDataSource: function() {
          var e3 = this;
          e3.dataSource.unbind(H, e3._requestStartHandler).unbind(N, e3._requestEndHandler).unbind("error", e3._errorHandler);
        }, requireValueMapper: function(e3, t3) {
          if (((e3.value instanceof Array ? e3.value.length : e3.value) || (t3 instanceof Array ? t3.length : t3)) && e3.virtual && "function" != typeof e3.virtual.valueMapper) throw new Error("ValueMapper is not provided while the value is being set. See http://docs.telerik.com/kendo-ui/controls/editors/combobox/virtualization#the-valuemapper-function");
        } });
        function te(e3, n3) {
          return e3 !== t2 && "" !== e3 && null !== e3 && ("boolean" === n3 ? ("boolean" != typeof e3 && (e3 = "true" === e3.toString().toLowerCase()), e3 = Boolean(e3)) : "number" === n3 ? e3 = Number(e3) : "string" === n3 && (e3 = e3.toString())), e3;
        }
        O(ee, { inArray: function(e3, t3) {
          var n3, i3, a3 = t3.children;
          if (!e3 || e3.parentNode !== t3) return -1;
          for (n3 = 0, i3 = a3.length; n3 < i3; n3++) if (e3 === a3[n3]) return n3;
          return -1;
        }, unifyType: te }), n2.ui.List = ee, i2.Select = ee.extend({ init: function(e3, t3) {
          ee.fn.init.call(this, e3, t3), this._initial = this.element.val();
        }, setDataSource: function(e3) {
          var t3, n3 = this;
          n3.options.dataSource = e3, n3._dataSource(), n3.listView.bound() && (n3._initialIndex = null, n3.listView._current = null), n3.listView.setDataSource(n3.dataSource), n3.options.autoBind && n3.dataSource.fetch(), (t3 = n3._parentWidget()) && n3._cascadeSelect(t3);
        }, close: function() {
          this.popup.close();
        }, select: function(e3) {
          var n3 = this;
          return e3 === t2 ? n3.selectedIndex : n3._select(e3).done(function() {
            n3._cascadeValue = n3._old = n3._accessor(), n3._oldIndex = n3.selectedIndex, n3._refreshFloatingLabel();
          });
        }, _accessor: function(e3, t3) {
          return this[this._isSelect ? "_accessorSelect" : "_accessorInput"](e3, t3);
        }, _accessorInput: function(e3) {
          var n3 = this.element[0];
          if (e3 === t2) return n3.value;
          null === e3 && (e3 = ""), n3.value = e3;
        }, _accessorSelect: function(e3, n3) {
          var i3 = this.element[0];
          if (e3 === t2) return re(i3).value || "";
          re(i3).selected = false, n3 === t2 && (n3 = -1), null !== e3 && "" !== e3 && -1 == n3 ? this._custom(e3) : e3 ? i3.value = e3 : i3.selectedIndex = n3;
        }, _syncValueAndText: function() {
          return true;
        }, _custom: function(t3) {
          var n3 = this, i3 = n3.element, a3 = n3._customOption;
          a3 || (a3 = e2("<option/>"), n3._customOption = a3, i3.append(a3)), a3.text(t3), a3[0].selected = true;
        }, _hideBusy: function() {
          var e3 = this;
          clearTimeout(e3._busy), e3._arrowIcon.removeClass(_2), e3._focused.attr(X, false), e3._busy = null, e3._showClear();
        }, _showBusy: function(e3) {
          var t3 = this;
          e3.isDefaultPrevented() || (t3._request = true, t3._busy || (t3._busy = setTimeout(function() {
            t3._arrowIcon && (t3._focused.attr(X, true), t3._arrowIcon.addClass(_2), t3._hideClear());
          }, 100)));
        }, _requestEnd: function() {
          this._request = false, this._hideBusy();
        }, _dataSource: function() {
          var e3, t3 = this, i3 = t3.element, a3 = t3.options, r3 = a3.dataSource || {};
          r3 = Array.isArray(r3) ? { data: r3 } : r3, t3._isSelect && ((e3 = i3[0].selectedIndex) > -1 && (a3.index = e3), r3.select = i3, r3.fields = [{ field: a3.dataTextField }, { field: a3.dataValueField }]), t3.dataSource ? t3._unbindDataSource() : (t3._requestStartHandler = t3._showBusy.bind(t3), t3._requestEndHandler = t3._requestEnd.bind(t3), t3._errorHandler = t3._hideBusy.bind(t3)), t3.dataSource = n2.data.DataSource.create(r3).bind(H, t3._requestStartHandler).bind(N, t3._requestEndHandler).bind("error", t3._errorHandler);
        }, _firstItem: function() {
          this.listView.focusFirst();
        }, _lastItem: function() {
          this.listView.focusLast();
        }, _nextItem: function() {
          return this.listView.focusNext();
        }, _prevItem: function() {
          return this.listView.focusPrev();
        }, _getNormalizedDataItem: function(e3) {
          var t3, n3 = this, i3 = n3.listView, a3 = "number" == typeof e3, r3 = n3.optionLabel && n3.optionLabel.length;
          return t3 = a3 ? r3 ? --e3 : e3 : i3.getElementIndex(e3), i3.dataItemByIndex(t3);
        }, _getNormalizedSelectCandidate: function(e3) {
          var t3 = e3;
          return this.optionLabel && this.optionLabel.length && "number" == typeof e3 && t3++, t3;
        }, _move: function(e3) {
          var t3, n3, i3, a3, r3, o3 = this, l3 = o3.listView, d3 = e3.keyCode, c3 = d3 === s2.DOWN, p3 = o3.options.virtual;
          if (d3 === s2.UP || c3) {
            if (e3.altKey) o3.toggle(c3);
            else {
              if (!l3.bound() && !o3.ul[0].firstChild) return o3._fetch || (o3.dataSource.one(f2, function() {
                o3._fetch = false, o3._move(e3);
              }), o3._fetch = true, o3._filterSource()), e3.preventDefault(), true;
              i3 = o3._focus(), o3._fetch || i3 && !i3.hasClass(v2) || (c3 ? (a3 = o3._nextItem(), (p3 && a3 <= 0 || !o3._focus() && !a3) && o3._lastItem()) : (a3 = o3._prevItem(), (p3 && a3 >= l3.dataSource.total() - 1 || !o3._focus() && !a3) && o3._firstItem())), r3 = o3._getNormalizedSelectCandidate(o3._get(o3._focus()) || a3 || 0), o3._select(r3, true).done(function() {
                var e4 = function() {
                  o3.popup.visible() || o3._blur(), null === o3._cascadedValue ? o3._cascadedValue = o3.value() : o3._cascadedValue = o3.dataItem() ? o3.dataItem()[o3.options.dataValueField] || o3.dataItem() : null;
                };
                o3.trigger(T, { dataItem: o3._getNormalizedDataItem(r3), item: o3._focus() }) ? o3._select(i3).done(e4) : e4();
              });
            }
            e3.preventDefault(), n3 = true;
          } else if (d3 === s2.ENTER || d3 === s2.TAB) {
            o3.popup.visible() && e3.preventDefault(), i3 = o3._focus(), t3 = o3.dataItem(), o3.popup.visible() || t3 && o3.text() === o3._text(t3) || (i3 = null);
            var h3, m3 = o3.filterInput && o3.filterInput[0] === u2();
            if (i3) {
              var g3 = true;
              if ((t3 = l3.dataItemByIndex(l3.getElementIndex(i3))) && (g3 = o3._value(t3) !== ee.unifyType(o3.value(), typeof o3._value(t3))), g3 && o3.trigger(T, { dataItem: t3, item: i3 })) return;
              h3 = o3._select(i3);
            } else o3.input && ((o3._syncValueAndText() || o3._isSelect) && o3._accessor(o3.input.val()), o3.listView.value(o3.input.val()));
            o3._focusElement && o3._focusElement(o3.wrapper), m3 && d3 === s2.TAB ? o3.wrapper.focusout() : h3 && "function" == typeof h3.done ? h3.done(function() {
              o3._blur();
            }) : o3._blur(), o3.close(), n3 = true;
          } else if (d3 === s2.ESC) o3.popup.visible() && e3.preventDefault(), o3.close(), n3 = true;
          else if (o3.popup.visible() && (d3 === s2.PAGEDOWN || d3 === s2.PAGEUP)) {
            e3.preventDefault();
            var _3 = d3 === s2.PAGEDOWN ? 1 : -1;
            l3.scrollWith(_3 * l3.screenHeight()), n3 = true;
          }
          return n3;
        }, _fetchData: function() {
          var e3 = this, t3 = !!e3.dataSource.view().length;
          e3._request || e3.options.cascadeFrom || e3.listView.bound() || e3._fetch || t3 || (e3._fetch = true, e3.dataSource.fetch().done(function() {
            e3._fetch = false;
          }));
        }, _options: function(e3, n3, i3) {
          var a3, r3, o3, s3, l3 = this, u3 = l3.element, c3 = u3[0], p3 = e3.length, h3 = "", f3 = 0;
          for (n3 && (h3 = n3); f3 < p3; f3++) a3 = "<option", r3 = e3[f3], o3 = l3._text(r3), (s3 = l3._value(r3)) !== t2 && (-1 !== (s3 += "").indexOf('"') && (s3 = s3.replace(j, "&quot;")), a3 += ' value="' + s3 + '"'), a3 += ">", o3 !== t2 && (a3 += d2(o3)), h3 += a3 += "</option>";
          u3.html(h3), i3 !== t2 && (c3.value = i3, c3.value && !i3 && (c3.selectedIndex = -1)), -1 !== c3.selectedIndex && (a3 = re(c3)) && a3.setAttribute(P, P);
        }, _reset: function() {
          var t3 = this, n3 = t3.element, i3 = n3.attr("form"), a3 = i3 ? e2("#" + i3) : n3.closest("form");
          a3[0] && (t3._resetHandler = function() {
            setTimeout(function() {
              t3.value(t3._initial);
            });
          }, t3._form = a3.on("reset", t3._resetHandler));
        }, _parentWidget: function() {
          var t3 = this.options.name;
          if (this.options.cascadeFrom) {
            var n3 = e2("#" + this.options.cascadeFrom), i3 = n3.data("kendo" + t3);
            if (!i3) for (var a3 = 0; a3 < q[t3].length && !(i3 = n3.data("kendo" + q[t3][a3])); a3 += 1) ;
            return i3;
          }
        }, _cascade: function() {
          var e3, t3 = this, n3 = t3.options;
          if (n3.cascadeFrom) {
            if (!(e3 = t3._parentWidget())) return;
            t3._cascadeHandlerProxy = t3._cascadeHandler.bind(t3), t3._cascadeFilterRequests = [], n3.autoBind = false, e3.bind("set", function() {
              t3.one("set", function(e4) {
                t3._selectedValue = e4.value || t3._accessor();
              });
            }), e3.first(C, t3._cascadeHandlerProxy), e3.listView.bound() ? (t3._toggleCascadeOnFocus(), t3._cascadeSelect(e3)) : (e3.one(F, function() {
              t3._toggleCascadeOnFocus(), e3.popup.visible() && e3._focused.trigger(R);
            }), e3.value() || t3.enable(false));
          }
        }, _toggleCascadeOnFocus: function() {
          var e3 = this, t3 = e3._parentWidget(), n3 = W && t3 instanceof i2.DropDownList ? "blur" : "focusout";
          t3._focused.add(t3.filterInput).on(R, function() {
            t3.unbind(C, e3._cascadeHandlerProxy), t3.unbind(f2, e3._cascadeHandlerProxy), t3.first(f2, e3._cascadeHandlerProxy);
          }), t3._focused.add(t3.filterInput).on(n3, function() {
            t3.unbind(f2, e3._cascadeHandlerProxy), t3.unbind(C, e3._cascadeHandlerProxy), t3.first(C, e3._cascadeHandlerProxy);
          });
        }, _cascadeHandler: function(e3) {
          var t3 = this._parentWidget(), n3 = this.value();
          this._userTriggered = e3.userTriggered || t3._userTriggered, this.listView.bound() && this._clearSelection(t3, true), this._cascadeSelect(t3, n3);
        }, _cascadeChange: function(e3) {
          var t3 = this, n3 = t3._accessor() || t3._selectedValue;
          t3._cascadeFilterRequests.length || (t3._selectedValue = null), t3._userTriggered ? t3._clearSelection(e3, true) : n3 ? (n3 !== te(t3.listView.value()[0], typeof n3) && t3.value(n3), t3.dataSource.view()[0] && -1 !== t3.selectedIndex || t3._clearSelection(e3, true)) : t3.dataSource.flatView().length && t3.select(t3.options.index), t3.enable(), t3._triggerCascade(), t3._triggerChange(), t3._userTriggered = false;
        }, _cascadeSelect: function(e3, n3) {
          var i3 = this, a3 = e3.dataItem(), r3 = a3 ? a3[i3.options.cascadeFromParentField] || e3._value(a3) : null, o3 = i3.options.cascadeFromField || e3.options.dataValueField;
          if (i3._valueBeforeCascade = n3 !== t2 ? n3 : i3.value(), r3 || 0 === r3) {
            se(i3.dataSource.filter() || {}, o3);
            var s3 = function() {
              var t3 = i3._cascadeFilterRequests.shift();
              t3 && i3.unbind("dataBound", t3), (t3 = i3._cascadeFilterRequests[0]) && i3.first("dataBound", t3), i3._cascadeChange(e3);
            };
            i3._cascadeFilterRequests.push(s3), 1 === i3._cascadeFilterRequests.length && i3.first("dataBound", s3), i3._cascading = true, i3._filterSource({ field: o3, operator: "eq", value: r3 }), i3._cascading = false;
          } else i3.enable(false), i3._clearSelection(e3), i3._triggerCascade(), i3._triggerChange(), i3._userTriggered = false;
          i3._refreshFloatingLabel();
        } });
        var ne = ".StaticList", ie = n2.ui.DataBoundWidget.extend({ init: function(t3, i3) {
          if (o2.fn.init.call(this, t3, i3), this.element.attr("role", "listbox").on("click.StaticList", "li", this._click.bind(this)).on("mouseenter.StaticList", "li", function() {
            e2(this).addClass(g2);
          }).on("mouseleave.StaticList", "li", function() {
            e2(this).removeClass(g2);
          }), i3 && i3.ariaLabel ? this.element.attr(K, i3.ariaLabel) : i3 && i3.ariaLabelledBy && this.element.attr(G, i3.ariaLabelledBy), l2.touch && this._touchHandlers(), "multiple" === this.options.selectable && this.element.attr("aria-multiselectable", true), this.options.columns && this.options.columns.length) {
            var a3 = this.element.parent().find(".k-table-thead"), r3 = e2('<tr class="k-table-group-row"><th class="k-table-th" colspan="' + this.options.columns.length + '"></th></tr>');
            a3.append(r3), this.header = r3.find(".k-table-th"), this.content = this.element.wrap("<div class='k-table-body k-table-scroller' unselectable='on'></div>").parent(), this.element.addClass("k-table-list");
          } else this.content = this.element.wrap("<div class='k-list-content k-list-scroller' unselectable='on'></div>").parent(), this.header = this.content.before('<div class="k-list-group-sticky-header" style="display:none"></div>').prev(), this.element.addClass(b2);
          this.bound(false), this._optionID = n2.guid(), this._selectedIndices = [], this._view = [], this._dataItems = [], this._values = [];
          var s3 = this.options.value;
          s3 && (this._values = Array.isArray(s3) ? s3.slice(0) : [s3]), this._getter(), this._templates(), this.setDataSource(this.options.dataSource), this._createOnScrollProxy();
        }, options: { name: "StaticList", dataValueField: null, valuePrimitive: false, selectable: true, template: null, groupTemplate: null, fixedGroupTemplate: null, ariaLabel: null, ariaLabelledBy: null }, events: [S, f2, D, E, A, F, z], setDataSource: function(e3) {
          var t3, i3 = this, a3 = e3 || {};
          a3 = Array.isArray(a3) ? { data: a3 } : a3, a3 = n2.data.DataSource.create(a3), i3.dataSource ? (i3.dataSource.unbind(f2, i3._refreshHandler), t3 = i3.value(), i3.value([]), i3.bound(false), i3.value(t3)) : i3._refreshHandler = i3.refresh.bind(i3), i3.setDSFilter(a3.filter()), i3.dataSource = a3.bind(f2, i3._refreshHandler), i3._fixedHeader();
        }, _touchHandlers: function() {
          var t3, n3, i3 = this, a3 = this.options.columns && this.options.columns.length ? ".k-table-row" : w, r3 = function(e3) {
            return (e3.originalEvent || e3).changedTouches[0].pageY;
          };
          i3.element.on("touchstart.StaticList", function(e3) {
            t3 = r3(e3);
          }), i3.element.on("touchend.StaticList", function(o3) {
            o3.isDefaultPrevented() || (n3 = r3(o3), Math.abs(n3 - t3) < 10 && (i3._touchTriggered = true, i3._triggerClick(e2(o3.target).closest(a3).get(0))));
          });
        }, skip: function() {
          return this.dataSource.skip();
        }, setOptions: function(e3) {
          o2.fn.setOptions.call(this, e3), this._getter(), this._templates(), this._render(), e3.label ? this.label.setOptions(e3.label) : false === e3.label && (this.label._unwrapFloating(), this._inputLabel.remove(), delete this._inputLabel);
        }, destroy: function() {
          this.element.off(ne), this._refreshHandler && this.dataSource.unbind(f2, this._refreshHandler), clearTimeout(this._scrollId), o2.fn.destroy.call(this);
        }, dataItemByIndex: function(e3) {
          return this.dataSource.flatView()[e3];
        }, screenHeight: function() {
          return this.content[0].clientHeight;
        }, scrollToIndex: function(e3) {
          var t3 = this.element[0].children[e3];
          t3 && this.scroll(t3);
        }, scrollWith: function(e3) {
          this.content.scrollTop(this.content.scrollTop() + e3);
        }, scroll: function(e3) {
          if (e3) {
            e3[0] && (e3 = e3[0]);
            var t3 = this.content[0], n3 = e3.offsetTop, i3 = e3.offsetHeight, a3 = t3.scrollTop, r3 = t3.clientHeight, o3 = n3 + i3;
            a3 > n3 ? a3 = n3 : o3 > a3 + r3 && (a3 = o3 - r3), t3.scrollTop = a3;
          }
        }, selectedDataItems: function(e3) {
          if (e3 === t2) return this._dataItems.slice();
          this._dataItems = e3, this._values = this._getValues(e3);
        }, _getValues: function(t3) {
          var n3 = this._valueGetter;
          return e2.map(t3, function(e3) {
            return n3(e3);
          });
        }, focusNext: function() {
          var e3 = this.focus();
          e3 = e3 ? e3.next() : 0, this.focus(e3);
        }, focusPrev: function() {
          var e3 = this.focus();
          e3 = e3 ? e3.prev() : this.element[0].children.length - 1, this.focus(e3);
        }, focusFirst: function() {
          this.focus(this.element[0].children[0]);
        }, focusLast: function() {
          this.focus(ae(this.element[0].children));
        }, focus: function(n3) {
          var i3, a3 = this, r3 = a3._optionID;
          if (n3 === t2) return a3._current;
          n3 = ae(a3._get(n3)), n3 = e2(this.element[0].children[n3]), a3._current && (a3._current.removeClass(m2).removeAttr(h2), a3.trigger(E)), (i3 = !!n3[0]) && (n3.addClass(m2), a3.scroll(n3), n3.attr("id", r3)), a3._current = i3 ? n3 : null, a3.trigger(D);
        }, focusIndex: function() {
          return this.focus() ? this.focus().index() : t2;
        }, skipUpdate: function(e3) {
          this._skipUpdate = e3;
        }, select: function(n3) {
          var i3, a3, r3 = this, o3 = r3.options.selectable, s3 = "multiple" !== o3 && false !== o3, l3 = r3._selectedIndices, d3 = [this.element.find(".k-selected").index()], u3 = [];
          if (n3 === t2) return l3.slice();
          1 === (n3 = r3._get(n3)).length && -1 === n3[0] && (n3 = []);
          var c3 = e2.Deferred().resolve(), p3 = r3.isFiltered();
          return p3 && !s3 && r3._deselectFiltered(n3) ? c3 : s3 && !p3 && -1 !== e2.inArray(ae(n3), l3) && -1 !== e2.inArray(ae(n3), d3) ? (r3._dataItems.length && r3._view.length && (r3._dataItems = [r3._view[l3[0]].item]), c3) : (i3 = (a3 = r3._deselect(n3)).removed, (n3 = a3.indices).length && (s3 && (n3 = [ae(n3)]), u3 = r3._select(n3)), (u3.length || i3.length) && (r3._valueComparer = null, r3.trigger(f2, { added: u3, removed: i3 })), c3);
        }, removeAt: function(e3) {
          return this._selectedIndices.splice(e3, 1), this._values.splice(e3, 1), this._valueComparer = null, { position: e3, dataItem: this._dataItems.splice(e3, 1)[0] };
        }, setValue: function(e3) {
          e3 = Array.isArray(e3) || e3 instanceof p2 ? e3.slice(0) : [e3], this._values = e3, this._valueComparer = null;
        }, value: function(n3) {
          var i3, a3 = this, r3 = a3._valueDeferred;
          return n3 === t2 ? a3._values.slice() : (a3.setValue(n3), r3 && "resolved" !== r3.state() || (a3._valueDeferred = r3 = e2.Deferred()), a3.bound() && (i3 = a3._valueIndices(a3._values), "multiple" === a3.options.selectable && a3.select(-1), a3.select(i3), r3.resolve()), a3._skipUpdate = false, r3);
        }, items: function() {
          return this.element.children(w);
        }, _click: function(e3) {
          this._touchTriggered ? this._touchTriggered = false : e3.isDefaultPrevented() || this._triggerClick(e3.currentTarget);
        }, _createOnScrollProxy: function() {
          this._onScroll = function() {
            var e3 = this;
            clearTimeout(e3._scrollId), e3._scrollId = setTimeout(function() {
              e3._renderHeader();
            }, 50);
          }.bind(this);
        }, _triggerClick: function(t3) {
          this.trigger(S, { item: e2(t3) }) || this.select(t3);
        }, _valueExpr: function(e3, t3) {
          var n3, i3, a3 = this, r3 = 0, o3 = [];
          if (!a3._valueComparer || a3._valueType !== e3) {
            for (a3._valueType = e3; r3 < t3.length; r3++) o3.push(te(t3[r3], e3));
            n3 = "for (var idx = 0; idx < " + o3.length + "; idx++) { if (current === values[idx]) {   return idx; }} return -1;", i3 = new Function("current", "values", n3), a3._valueComparer = function(e4) {
              return i3(e4, o3);
            };
          }
          return a3._valueComparer;
        }, _dataItemPosition: function(e3, t3) {
          var n3 = this._valueGetter(e3);
          return this._valueExpr(typeof n3, t3)(n3);
        }, _getter: function() {
          this._valueGetter = n2.getter(this.options.dataValueField);
        }, _deselect: function(t3) {
          var n3, i3, a3, r3 = this, o3 = r3.element[0].children, s3 = r3.options.selectable, l3 = r3._selectedIndices, d3 = r3._dataItems, u3 = r3._values, c3 = [], p3 = 0;
          if (t3 = t3.slice(), true !== s3 && t3.length) {
            if ("multiple" === s3) {
              for (; p3 < t3.length; p3++) if (i3 = t3[p3], e2(o3[i3]).hasClass(v2)) {
                for (n3 = 0; n3 < l3.length; n3++) if ((a3 = l3[n3]) === i3) {
                  e2(o3[a3]).removeClass(v2).attr(J, false);
                  var h3 = this._view[i3].item, f3 = this._dataItemPosition(h3, this._values);
                  c3.push({ position: f3, dataItem: h3 }), d3.splice(n3, 1), l3.splice(n3, 1), t3.splice(p3, 1), u3.splice(n3, 1), 1, p3 -= 1, n3 -= 1;
                  break;
                }
              }
            }
          } else {
            for (; p3 < l3.length; p3++) e2(o3[l3[p3]]).removeClass(v2).attr(J, false), c3.push({ position: p3, dataItem: d3[p3] });
            r3._values = [], r3._dataItems = [], r3._selectedIndices = [];
          }
          return { indices: t3, removed: c3 };
        }, _deselectFiltered: function(t3) {
          for (var n3, i3, a3, r3 = this.element[0].children, o3 = [], s3 = 0; s3 < t3.length; s3++) i3 = t3[s3], n3 = this._view[i3].item, (a3 = this._dataItemPosition(n3, this._values)) > -1 && (o3.push(this.removeAt(a3)), e2(r3[i3]).removeClass(v2));
          return !!o3.length && (this.trigger(f2, { added: [], removed: o3 }), true);
        }, _select: function(t3) {
          var n3, i3, a3 = this, r3 = a3.element[0].children, o3 = a3._view, s3 = [], l3 = 0;
          for (-1 !== ae(t3) && a3.focus(t3); l3 < t3.length; l3++) n3 = o3[i3 = t3[l3]], -1 !== i3 && n3 && (n3 = n3.item, a3._selectedIndices.push(i3), a3._dataItems.push(n3), a3._values.push(a3._valueGetter(n3)), e2(r3[i3]).addClass(v2).attr(J, true), s3.push({ dataItem: n3 }));
          return s3;
        }, getElementIndex: function(t3) {
          return e2(t3).data("offset-index");
        }, _get: function(e3) {
          return "number" == typeof e3 ? e3 = [e3] : M(e3) || (e3 = [(e3 = this.getElementIndex(e3)) !== t2 ? e3 : -1]), e3;
        }, _template: function() {
          var e3 = this.options, t3 = e3.template;
          return t3 ? (t3 = n2.template(t3), t3 = function(e4) {
            return '<li tabindex="-1" role="option" unselectable="on" class="k-list-item">' + t3(e4) + "</li>";
          }) : t3 = n2.template('<li tabindex="-1" role="option" unselectable="on" class="k-list-item"><span class="k-list-item-text">${' + n2.expr(e3.dataTextField, "data") + "}</span></li>", { useWithBlock: false }), t3;
        }, _templates: function() {
          var e3, t3 = this.options, i3 = { template: t3.template, groupTemplate: t3.groupTemplate, fixedGroupTemplate: t3.fixedGroupTemplate };
          if (t3.columns) for (var a3 = 0; a3 < t3.columns.length; a3++) {
            var r3 = t3.columns[a3], o3 = r3.field ? r3.field.toString() : U;
            i3["column" + a3] = r3.template || "#: " + o3 + "#";
          }
          for (var s3 in i3) (e3 = i3[s3]) && "function" != typeof e3 && (i3[s3] = n2.template(e3));
          this.templates = i3;
        }, _normalizeIndices: function(e3) {
          for (var n3 = [], i3 = 0; i3 < e3.length; i3++) e3[i3] !== t2 && n3.push(e3[i3]);
          return n3;
        }, _valueIndices: function(e3, t3) {
          var n3, i3 = this._view, a3 = 0;
          if (t3 = t3 ? t3.slice() : [], !e3.length) return [];
          for (; a3 < i3.length; a3++) -1 !== (n3 = this._dataItemPosition(i3[a3].item, e3)) && (t3[n3] = a3);
          return this._normalizeIndices(t3);
        }, _firstVisibleItem: function() {
          for (var t3 = this.element[0], n3 = this.content[0].scrollTop, i3 = e2(t3.children[0]).height(), a3 = Math.floor(n3 / i3) || 0, r3 = t3.children[a3] || t3.lastChild, o3 = r3.offsetTop < n3; r3; ) if (o3) {
            if (r3.offsetTop + i3 > n3 || !r3.nextSibling) break;
            r3 = r3.nextSibling;
          } else {
            if (r3.offsetTop <= n3 || !r3.previousSibling) break;
            r3 = r3.previousSibling;
          }
          return this._view[e2(r3).data("offset-index")];
        }, _fixedHeader: function() {
          this.isGrouped() && this.templates.fixedGroupTemplate ? (this.header.closest(Z).length ? this.header.closest(Z).show() : this.header.show(), this.content.scroll(this._onScroll)) : (this.header.closest(Z).length ? this.header.closest(Z).hide() : this.header.hide(), this.content.off("scroll", this._onScroll));
        }, _renderHeader: function() {
          var e3 = this.templates.fixedGroupTemplate;
          if (e3) {
            var t3 = this._firstVisibleItem();
            t3 && t3.group.toString().length && this.header.html(e3(t3.group));
          }
        }, _renderItem: function(e3) {
          var t3 = '<li tabindex="-1" role="option" unselectable="on" ', n3 = e3.item, i3 = 0 !== e3.index, a3 = e3.selected, r3 = this.isGrouped(), o3 = this.options.columns && this.options.columns.length, s3 = e3.index % 2 == 1 ? " k-table-alt-row" : "";
          return t3 += o3 ? 'class="k-table-row' + s3 : 'class="k-list-item', i3 && e3.newGroup && (t3 += " k-first"), e3.isLastGroupedItem && o3 && (t3 += " k-last"), a3 && (t3 += " k-selected"), t3 += '" aria-selected="' + (a3 ? "true" : "false") + '" data-offset-index="' + e3.index + '">', o3 ? t3 += this._renderColumns(n3) : (t3 += '<span class="k-list-item-text">', t3 += this.templates.template(n3), t3 += "</span>"), i3 && e3.newGroup ? t3 += o3 ? '<span class="k-table-td k-table-group-td"><span>' + this.templates.groupTemplate(e3.group) + "</span></span>" : '<div class="k-list-item-group-label">' + this.templates.groupTemplate(e3.group) + "</div>" : r3 && o3 && (t3 += '<span class="k-table-td k-table-spacer-td"></span>'), t3 + "</li>";
        }, _renderColumns: function(e3) {
          for (var t3 = "", n3 = 0; n3 < this.options.columns.length; n3++) {
            var i3 = this.options.columns[n3].width, a3 = parseInt(i3, 10), o3 = "";
            i3 && !isNaN(a3) && (o3 += "style='width:", o3 += a3, o3 += r2.test(i3) ? "%" : "px", o3 += ";'"), t3 += "<span class='k-table-td' " + o3 + ">", t3 += this.templates["column" + n3](e3), t3 += "</span>";
          }
          return t3;
        }, _render: function() {
          var e3, t3, n3, i3, a3 = "", r3 = 0, o3 = 0, s3 = [], l3 = this.dataSource.view(), d3 = this.value(), u3 = this.isGrouped();
          if (u3) for (r3 = 0; r3 < l3.length; r3++) for (t3 = l3[r3], n3 = true, i3 = 0; i3 < t3.items.length; i3++) e3 = { selected: this._selected(t3.items[i3], d3), item: t3.items[i3], group: t3.value, newGroup: n3, isLastGroupedItem: i3 === t3.items.length - 1, index: o3 }, s3[o3] = e3, o3 += 1, a3 += this._renderItem(e3), n3 = false;
          else for (r3 = 0; r3 < l3.length; r3++) e3 = { selected: this._selected(l3[r3], d3), item: l3[r3], index: r3 }, s3[r3] = e3, a3 += this._renderItem(e3);
          this._view = s3, this.element[0].innerHTML = a3, u3 && s3.length && this._renderHeader();
        }, _selected: function(e3, t3) {
          return (!this.isFiltered() || "multiple" === this.options.selectable) && -1 !== this._dataItemPosition(e3, t3);
        }, setDSFilter: function(e3) {
          this._lastDSFilter = O({}, e3);
        }, isFiltered: function() {
          return this._lastDSFilter || this.setDSFilter(this.dataSource.filter()), !n2.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);
        }, refresh: function(e3) {
          var t3, n3 = this, i3 = e3 && e3.action, a3 = n3.options.skipUpdateOnBind, r3 = "itemchange" === i3;
          n3.trigger(A), n3._angularItems("cleanup"), n3._fixedHeader(), n3._render(), n3.bound(true), r3 || "remove" === i3 ? (t3 = function(e4, t4) {
            var n4, i4, a4, r4, o3 = t4.length, s3 = e4.length, l3 = [], d3 = [];
            if (s3) for (a4 = 0; a4 < s3; a4++) {
              for (n4 = e4[a4], i4 = false, r4 = 0; r4 < o3; r4++) if (n4 === t4[r4]) {
                i4 = true, l3.push({ index: a4, item: n4 });
                break;
              }
              i4 || d3.push(n4);
            }
            return { changed: l3, unchanged: d3 };
          }(n3._dataItems, e3.items)).changed.length && (r3 ? n3.trigger(z, { items: t3.changed }) : n3.value(n3._getValues(t3.unchanged))) : n3.isFiltered() || n3._skipUpdate || n3._emptySearch ? (n3.focus(0), n3._skipUpdate && (n3._skipUpdate = false, n3._selectedIndices = n3._valueIndices(n3._values, n3._selectedIndices))) : a3 || i3 && "add" !== i3 || n3.value(n3._values), n3._valueDeferred && n3._valueDeferred.resolve(), n3._angularItems("compile"), n3.trigger(F);
        }, bound: function(e3) {
          if (e3 === t2) return this._bound;
          this._bound = e3;
        }, isGrouped: function() {
          return (this.dataSource.group() || []).length;
        } });
        function ae(e3) {
          return e3[e3.length - 1];
        }
        function re(e3) {
          var t3 = e3.selectedIndex;
          return t3 > -1 ? e3.options[t3] : {};
        }
        function oe(t3) {
          return !(!t3 || e2.isEmptyObject(t3)) && !(t3.filters && !t3.filters.length);
        }
        function se(t3, n3) {
          var i3, a3 = false;
          return t3.filters && (i3 = e2.grep(t3.filters, function(e3) {
            return a3 = se(e3, n3), e3.filters ? e3.filters.length : e3.field != n3;
          }), a3 || t3.filters.length === i3.length || (a3 = true), t3.filters = i3), a3;
        }
        i2.plugin(ie), n2.cssProperties.registerPrefix("List", "k-list-");
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.effects, a2 = e2.each, r2 = e2.extend, o2 = n2.support, s2 = o2.browser, l2 = o2.transforms, d2 = o2.transitions, u2 = { scale: 0, scalex: 0, scaley: 0, scale3d: 0 }, c2 = { translate: 0, translatex: 0, translatey: 0, translate3d: 0 }, p2 = void 0 !== document.documentElement.style.zoom && !l2, h2 = /matrix3?d?\s*\(.*,\s*([\d\.\-]+)\w*?,\s*([\d\.\-]+)\w*?,\s*([\d\.\-]+)\w*?,\s*([\d\.\-]+)\w*?/i, f2 = /^(-?[\d\.\-]+)?[\w\s]*,?\s*(-?[\d\.\-]+)?[\w\s]*/i, m2 = /translatex?$/i, g2 = /(zoom|fade|expand)(\w+)/, v2 = /(zoom|fade|expand)/, _2 = /[xy]$/i, b2 = ["perspective", "rotate", "rotatex", "rotatey", "rotatez", "rotate3d", "scale", "scalex", "scaley", "scalez", "scale3d", "skew", "skewx", "skewy", "translate", "translatex", "translatey", "translatez", "translate3d", "matrix", "matrix3d"], k2 = ["rotate", "scale", "scalex", "scaley", "skew", "skewx", "skewy", "translate", "translatex", "translatey", "matrix"], w = { rotate: "deg", scale: "", skew: "px", translate: "px" }, y = l2.css, x = Math.round, C = "px", T = "auto", S = "width", I = "height", D = "hidden", E = "origin", A = "abortId", F = "overflow", z = "translate", P = "position", H = "completeCallback", N = y + "transition", R = y + "transform", O = y + "backface-visibility", M = y + "perspective", B = "1500px", L = "perspective(1500px)", V = { left: { reverse: "right", property: "left", transition: "translatex", vertical: false, modifier: -1 }, right: { reverse: "left", property: "left", transition: "translatex", vertical: false, modifier: 1 }, down: { reverse: "up", property: "top", transition: "translatey", vertical: true, modifier: 1 }, up: { reverse: "down", property: "top", transition: "translatey", vertical: true, modifier: -1 }, top: { reverse: "bottom" }, bottom: { reverse: "top" }, in: { reverse: "out", modifier: -1 }, out: { reverse: "in", modifier: 1 }, vertical: { reverse: "vertical" }, horizontal: { reverse: "horizontal" } };
        if (n2.directions = V, r2(e2.fn, { kendoStop: function(e3, t3) {
          return d2 ? i2.stopQueue(this, e3 || false, t3 || false) : this.stop(e3, t3);
        } }), l2 && !d2) {
          a2(k2, function(t3, n3) {
            e2.fn[n3] = function(t4) {
              if (void 0 === t4) return K(this, n3);
              var i3 = e2(this)[0], a3 = n3 + "(" + t4 + w[n3.replace(_2, "")] + ")";
              return -1 == i3.style.cssText.indexOf(R) ? e2(this).css(R, a3) : i3.style.cssText = i3.style.cssText.replace(new RegExp(n3 + "\\(.*?\\)", "i"), a3), this;
            }, e2.fx.step[n3] = function(t4) {
              e2(t4.elem)[n3](t4.now);
            };
          });
          var U = e2.fx.prototype.cur;
          e2.fx.prototype.cur = function() {
            return -1 != k2.indexOf(this.prop) ? parseFloat(e2(this.elem)[this.prop]()) : U.apply(this, arguments);
          };
        }
        function W(e3) {
          return parseInt(e3, 10);
        }
        function j(e3, t3) {
          return W(e3.css(t3));
        }
        function q(e3) {
          for (var t3 in e3) -1 != b2.indexOf(t3) && -1 == k2.indexOf(t3) && delete e3[t3];
          return e3;
        }
        function G(e3, t3) {
          var n3, i3, a3, r3, s3 = [], d3 = {};
          for (i3 in t3) n3 = i3.toLowerCase(), r3 = l2 && -1 != b2.indexOf(n3), !o2.hasHW3D && r3 && -1 == k2.indexOf(n3) ? delete t3[i3] : (a3 = t3[i3], r3 ? s3.push(i3 + "(" + a3 + ")") : d3[i3] = a3);
          return s3.length && (d3[R] = s3.join(" ")), d3;
        }
        function K(e3, t3) {
          if (l2) {
            var n3 = e3.css(R);
            if ("none" == n3) return "scale" == t3 ? 1 : 0;
            var i3 = n3.match(new RegExp(t3 + "\\s*\\(([\\d\\w\\.]+)")), a3 = 0;
            return i3 ? a3 = W(i3[1]) : (i3 = n3.match(h2) || [0, 0, 0, 0, 0], t3 = t3.toLowerCase(), m2.test(t3) ? a3 = parseFloat(i3[3] / i3[2]) : "translatey" == t3 ? a3 = parseFloat(i3[4] / i3[2]) : "scale" == t3 ? a3 = parseFloat(i3[2]) : "rotate" == t3 && (a3 = parseFloat(Math.atan2(i3[2], i3[1])))), a3;
          }
          return parseFloat(e3.css(t3));
        }
        n2.toggleClass = function(e3, t3, n3, i3) {
          return t3 && (t3 = t3.split(" "), d2 && (n3 = r2({ exclusive: "all", duration: 400, ease: "ease-out" }, n3), e3.css(N, n3.exclusive + " " + n3.duration + "ms " + n3.ease), setTimeout(function() {
            e3.css(N, "").css(I);
          }, n3.duration)), a2(t3, function(t4, n4) {
            e3.toggleClass(n4, i3);
          })), e3;
        }, n2.parseEffects = function(e3, t3) {
          var n3 = {};
          return "string" == typeof e3 ? a2(e3.split(" "), function(e4, i3) {
            var a3 = !v2.test(i3), r3 = i3.replace(g2, function(e5, t4, n4) {
              return t4 + ":" + n4.toLowerCase();
            }).split(":"), o3 = r3[1], s3 = {};
            r3.length > 1 && (s3.direction = t3 && a3 ? V[o3].reverse : o3), n3[r3[0]] = s3;
          }) : a2(e3, function(e4) {
            var i3 = this.direction;
            i3 && t3 && !v2.test(e4) && (this.direction = V[i3].reverse), n3[e4] = this;
          }), n3;
        }, d2 && r2(i2, { transition: function(t3, n3, i3) {
          var a3, o3, s3 = 0, l3 = t3.data("keys") || [];
          i3 = r2({ duration: 200, ease: "ease-out", complete: null, exclusive: "all" }, i3);
          var u3 = false, c3 = function() {
            u3 || (u3 = true, o3 && (clearTimeout(o3), o3 = null), t3.removeData(A).dequeue().css(N, "").css(N), i3.complete.call(t3));
          };
          i3.duration = e2.fx && e2.fx.speeds[i3.duration] || i3.duration, a3 = G(0, n3), e2.merge(l3, function(e3) {
            var t4 = [];
            for (var n4 in e3) t4.push(n4);
            return t4;
          }(a3)), e2.hasOwnProperty("uniqueSort") ? t3.data("keys", e2.uniqueSort(l3)).height() : t3.data("keys", e2.unique(l3)).height(), t3.css(N, i3.exclusive + " " + i3.duration + "ms " + i3.ease).css(N), t3.css(a3).css(R), d2.event && (t3.one(d2.event, c3), 0 !== i3.duration && (s3 = 500)), o3 = setTimeout(c3, i3.duration + s3), t3.data(A, o3), t3.data(H, c3);
        }, stopQueue: function(e3, t3, i3) {
          var a3, r3 = e3.data("keys"), o3 = !i3 && r3, s3 = e3.data(H);
          return o3 && (a3 = n2.getComputedStyles(e3[0], r3)), s3 && s3(), o3 && e3.css(a3), e3.removeData("keys").stop(t3);
        } });
        var $ = n2.Class.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.element = e3, n3.effects = [], n3.options = t3, n3.restore = [];
        }, run: function(t3) {
          var n3, a3, o3, s3, u3, c3, p3 = this, h3 = t3.length, f3 = p3.element, m3 = p3.options, g3 = e2.Deferred(), v3 = {}, _3 = {};
          for (p3.effects = t3, g3.done(p3.complete.bind(p3)), f3.data("animating", true), a3 = 0; a3 < h3; a3++) for ((n3 = t3[a3]).setReverse(m3.reverse), n3.setOptions(m3), p3.addRestoreProperties(n3.restore), n3.prepare(v3, _3), o3 = 0, c3 = (u3 = n3.children()).length; o3 < c3; o3++) u3[o3].duration(m3.duration).run();
          for (var b3 in m3.effects) r2(_3, m3.effects[b3].properties);
          for (f3.is(":visible") || r2(v3, { display: f3.data("olddisplay") || "block" }), l2 && !m3.reset && (s3 = f3.data("targetTransform")) && (v3 = r2(s3, v3)), v3 = G(0, v3), l2 && !d2 && (v3 = q(v3)), f3.css(v3).css(R), a3 = 0; a3 < h3; a3++) t3[a3].setup();
          return m3.init && m3.init(), f3.data("targetTransform", _3), i2.animate(f3, _3, r2({}, m3, { complete: g3.resolve })), g3.promise();
        }, stop: function() {
          e2(this.element).kendoStop(true, true);
        }, addRestoreProperties: function(e3) {
          for (var t3, n3 = this.element, i3 = 0, a3 = e3.length; i3 < a3; i3++) t3 = e3[i3], this.restore.push(t3), n3.data(t3) || n3.data(t3, n3.css(t3));
        }, restoreCallback: function() {
          for (var e3 = this.element, t3 = 0, n3 = this.restore.length; t3 < n3; t3++) {
            var i3 = this.restore[t3];
            e3.css(i3, e3.data(i3));
          }
        }, complete: function() {
          var e3 = this, t3 = 0, n3 = e3.element, i3 = e3.options, a3 = e3.effects, r3 = a3.length;
          for (n3.removeData("animating").dequeue(), i3.hide && n3.data("olddisplay", n3.css("display")).hide(), this.restoreCallback(), p2 && !l2 && setTimeout(this.restoreCallback.bind(this), 0); t3 < r3; t3++) a3[t3].teardown();
          i3.completeCallback && i3.completeCallback(n3);
        } });
        i2.promise = function(e3, t3) {
          var a3, r3, o3 = [], s3 = new $(e3, t3), l3 = n2.parseEffects(t3.effects);
          for (var d3 in t3.effects = l3, l3) (a3 = i2[Q(d3)]) && (r3 = new a3(e3, l3[d3].direction), o3.push(r3));
          o3[0] ? s3.run(o3) : (e3.is(":visible") || e3.css({ display: e3.data("olddisplay") || "block" }).css("display"), t3.init && t3.init(), e3.dequeue(), s3.complete());
        }, r2(i2, { animate: function(n3, o3, p3) {
          var h3 = false !== p3.transition;
          delete p3.transition, d2 && "transition" in i2 && h3 ? i2.transition(n3, o3, p3) : l2 ? n3.animate(q(o3), { queue: false, show: false, hide: false, duration: p3.duration, complete: p3.complete }) : n3.each(function() {
            var n4 = e2(this), i3 = {};
            a2(b2, function(e3, a3) {
              var s3, d3 = o3 ? o3[a3] + " " : null;
              if (d3) {
                var p4 = o3;
                if (a3 in u2 && o3[a3] !== t2) s3 = d3.match(f2), l2 && r2(p4, { scale: +s3[0] });
                else if (a3 in c2 && o3[a3] !== t2) {
                  var h4 = n4.css(P), m3 = "absolute" == h4 || "fixed" == h4;
                  n4.data(z) || (m3 ? n4.data(z, { top: j(n4, "top") || 0, left: j(n4, "left") || 0, bottom: j(n4, "bottom"), right: j(n4, "right") }) : n4.data(z, { top: j(n4, "marginTop") || 0, left: j(n4, "marginLeft") || 0 }));
                  var g3 = n4.data(z);
                  if (s3 = d3.match(f2)) {
                    var v3 = "translatey" == a3 ? 0 : +s3[1], _3 = "translatey" == a3 ? +s3[1] : +s3[2];
                    m3 ? (isNaN(g3.right) ? isNaN(v3) || r2(p4, { left: g3.left + v3 }) : isNaN(v3) || r2(p4, { right: g3.right - v3 }), isNaN(g3.bottom) ? isNaN(_3) || r2(p4, { top: g3.top + _3 }) : isNaN(_3) || r2(p4, { bottom: g3.bottom - _3 })) : (isNaN(v3) || r2(p4, { marginLeft: g3.left + v3 }), isNaN(_3) || r2(p4, { marginTop: g3.top + _3 }));
                  }
                }
                !l2 && "scale" != a3 && a3 in p4 && delete p4[a3], p4 && r2(i3, p4);
              }
            }), s2.msie && delete i3.scale, n4.animate(i3, { queue: false, show: false, hide: false, duration: p3.duration, complete: p3.complete });
          });
        } }), i2.animatedPromise = i2.promise;
        var Y = n2.Class.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.element = e3, n3._direction = t3, n3.options = {}, n3._additionalEffects = [], n3.restore || (n3.restore = []);
        }, reverse: function() {
          return this._reverse = true, this.run();
        }, play: function() {
          return this._reverse = false, this.run();
        }, add: function(e3) {
          return this._additionalEffects.push(e3), this;
        }, direction: function(e3) {
          return this._direction = e3, this;
        }, duration: function(e3) {
          return this._duration = e3, this;
        }, compositeRun: function() {
          var e3 = this, t3 = new $(e3.element, { reverse: e3._reverse, duration: e3._duration }), n3 = e3._additionalEffects.concat([e3]);
          return t3.run(n3);
        }, run: function() {
          if (this._additionalEffects && this._additionalEffects[0]) return this.compositeRun();
          var t3, n3, a3 = this, o3 = a3.element, s3 = 0, u3 = a3.restore, c3 = u3.length, p3 = e2.Deferred(), h3 = {}, f3 = {}, m3 = a3.children(), g3 = m3.length;
          for (p3.done(a3._complete.bind(a3)), o3.data("animating", true), s3 = 0; s3 < c3; s3++) t3 = u3[s3], o3.data(t3) || o3.data(t3, o3.css(t3));
          for (s3 = 0; s3 < g3; s3++) m3[s3].duration(a3._duration).run();
          return a3.prepare(h3, f3), o3.is(":visible") || r2(h3, { display: o3.data("olddisplay") || "block" }), l2 && (n3 = o3.data("targetTransform")) && (h3 = r2(n3, h3)), h3 = G(0, h3), l2 && !d2 && (h3 = q(h3)), o3.css(h3).css(R), a3.setup(), o3.data("targetTransform", f3), i2.animate(o3, f3, { duration: a3._duration, complete: p3.resolve }), p3.promise();
        }, stop: function() {
          var t3 = 0, n3 = this.children(), i3 = n3.length;
          for (t3 = 0; t3 < i3; t3++) n3[t3].stop();
          return e2(this.element).kendoStop(true, true), this;
        }, restoreCallback: function() {
          for (var e3 = this.element, t3 = 0, n3 = this.restore.length; t3 < n3; t3++) {
            var i3 = this.restore[t3];
            e3.css(i3, e3.data(i3));
          }
        }, _complete: function() {
          var e3 = this, t3 = e3.element;
          t3.removeData("animating").dequeue(), e3.restoreCallback(), e3.shouldHide() && t3.data("olddisplay", t3.css("display")).hide(), p2 && !l2 && setTimeout(e3.restoreCallback.bind(e3), 0), e3.teardown();
        }, setOptions: function(e3) {
          r2(true, this.options, e3);
        }, children: function() {
          return [];
        }, shouldHide: e2.noop, setup: e2.noop, prepare: e2.noop, teardown: e2.noop, directions: [], setReverse: function(e3) {
          return this._reverse = e3, this;
        } });
        function Q(e3) {
          return e3.charAt(0).toUpperCase() + e3.substring(1);
        }
        function X(e3, t3) {
          var n3 = Y.extend(t3), r3 = n3.prototype.directions;
          i2[Q(e3)] = n3, i2.Element.prototype[e3] = function(e4, t4, i3, a3) {
            return new n3(this.element, e4, t4, i3, a3);
          }, a2(r3, function(t4, a3) {
            i2.Element.prototype[e3 + Q(a3)] = function(e4, t5, i3) {
              return new n3(this.element, a3, e4, t5, i3);
            };
          });
        }
        var J = ["left", "right", "up", "down"], Z = ["in", "out"];
        function ee(e3, t3, n3, i3) {
          X(e3, { directions: Z, startValue: function(e4) {
            return this._startValue = e4, this;
          }, endValue: function(e4) {
            return this._endValue = e4, this;
          }, shouldHide: function() {
            return this._shouldHide;
          }, prepare: function(e4, a3) {
            var r3, o3, s3 = "out" === this._direction, l3 = this.element.data(t3);
            r3 = !(isNaN(l3) || l3 == n3) ? l3 : void 0 !== this._startValue ? this._startValue : s3 ? n3 : i3, o3 = void 0 !== this._endValue ? this._endValue : s3 ? i3 : n3, this._reverse ? (e4[t3] = o3, a3[t3] = r3) : (e4[t3] = r3, a3[t3] = o3), this._shouldHide = a3[t3] === i3;
          } });
        }
        X("slideIn", { directions: J, divisor: function(e3) {
          return this.options.divisor = e3, this;
        }, prepare: function(e3, t3) {
          var i3, a3 = this, r3 = a3.element, o3 = n2._outerWidth, s3 = n2._outerHeight, d3 = V[a3._direction], u3 = -d3.modifier * (d3.vertical ? s3(r3) : o3(r3)) / (a3.options && a3.options.divisor || 1) + C;
          a3._reverse && (i3 = e3, e3 = t3, t3 = i3), l2 ? (e3[d3.transition] = u3, t3[d3.transition] = "0px") : (e3[d3.property] = u3, t3[d3.property] = "0px");
        } }), X("tile", { directions: J, init: function(e3, t3, n3) {
          Y.prototype.init.call(this, e3, t3), this.options = { previous: n3 };
        }, previousDivisor: function(e3) {
          return this.options.previousDivisor = e3, this;
        }, children: function() {
          var e3 = this, t3 = e3._reverse, i3 = e3.options.previous, a3 = e3.options.previousDivisor || 1, r3 = e3._direction, o3 = [n2.fx(e3.element).slideIn(r3).setReverse(t3)];
          return i3 && o3.push(n2.fx(i3).slideIn(V[r3].reverse).divisor(a3).setReverse(!t3)), o3;
        } }), ee("fade", "opacity", 1, 0), ee("zoom", "scale", 1, 0.01), X("slideMargin", { prepare: function(e3, t3) {
          var n3, i3 = this, a3 = i3.element, r3 = i3.options, o3 = a3.data(E), s3 = r3.offset, l3 = i3._reverse;
          l3 || null !== o3 || a3.data(E, parseFloat(a3.css("margin-" + r3.axis))), n3 = a3.data(E) || 0, t3["margin-" + r3.axis] = l3 ? n3 : n3 + s3;
        } }), X("slideTo", { prepare: function(e3, t3) {
          var n3 = this, i3 = n3.element, a3 = n3.options.offset.split(","), r3 = n3._reverse;
          l2 ? (t3.translatex = r3 ? 0 : a3[0], t3.translatey = r3 ? 0 : a3[1]) : (t3.left = r3 ? 0 : a3[0], t3.top = r3 ? 0 : a3[1]), i3.css("left");
        } }), X("expand", { directions: ["horizontal", "vertical"], restore: [F], prepare: function(e3, n3) {
          var i3 = this, a3 = i3.element, r3 = i3.options, o3 = i3._reverse, s3 = "vertical" === i3._direction ? I : S, l3 = a3[0].style[s3], d3 = a3.data(s3), u3 = parseFloat(d3 || l3), c3 = x(a3.css(s3, T)[s3]());
          e3.overflow = D, u3 = r3 && r3.reset ? c3 || u3 : u3 || c3, n3[s3] = (o3 ? 0 : u3) + C, e3[s3] = (o3 ? u3 : 0) + C, d3 === t2 && a3.data(s3, l3);
        }, shouldHide: function() {
          return this._reverse;
        }, teardown: function() {
          var e3 = this.element, t3 = "vertical" === this._direction ? I : S, n3 = e3.data(t3);
          n3 != T && "" !== n3 || setTimeout(function() {
            e3.css(t3, T).css(t3);
          }, 0);
        } });
        var te = { position: "absolute", marginLeft: 0, marginTop: 0, scale: 1 };
        X("transfer", { init: function(e3, t3) {
          this.element = e3, this.options = { target: t3 }, this.restore = [];
        }, setup: function() {
          this.element.appendTo(document.body);
        }, prepare: function(e3, t3) {
          var n3 = this, a3 = n3.element, o3 = i2.box(a3), s3 = i2.box(n3.options.target), l3 = K(a3, "scale"), d3 = i2.fillScale(s3, o3), u3 = i2.transformOrigin(s3, o3);
          r2(e3, te), t3.scale = 1, a3.css(R, "scale(1)").css(R), a3.css(R, "scale(" + l3 + ")"), e3.top = o3.top, e3.left = o3.left, e3.transformOrigin = u3.x + C + " " + u3.y + C, n3._reverse ? e3.scale = d3 : t3.scale = d3;
        } });
        var ne = { top: "rect(auto auto $size auto)", bottom: "rect($size auto auto auto)", left: "rect(auto $size auto auto)", right: "rect(auto auto auto $size)" }, ie = { top: { start: "rotatex(0deg)", end: "rotatex(180deg)" }, bottom: { start: "rotatex(-180deg)", end: "rotatex(0deg)" }, left: { start: "rotatey(0deg)", end: "rotatey(-180deg)" }, right: { start: "rotatey(180deg)", end: "rotatey(0deg)" } };
        function ae(e3, t3) {
          var i3 = e3[n2.directions[t3].vertical ? I : S]() / 2 + "px";
          return ne[t3].replace("$size", i3);
        }
        X("turningPage", { directions: J, init: function(e3, t3, n3) {
          Y.prototype.init.call(this, e3, t3), this._container = n3;
        }, prepare: function(e3, t3) {
          var i3 = this, a3 = i3._reverse, r3 = a3 ? V[i3._direction].reverse : i3._direction, o3 = ie[r3];
          e3.zIndex = 1, i3._clipInHalf && (e3.clip = ae(i3._container, n2.directions[r3].reverse)), e3[O] = D, t3[R] = L + (a3 ? o3.start : o3.end), e3[R] = L + (a3 ? o3.end : o3.start);
        }, setup: function() {
          this._container.append(this.element);
        }, face: function(e3) {
          return this._face = e3, this;
        }, shouldHide: function() {
          var e3 = this._reverse, t3 = this._face;
          return e3 && !t3 || !e3 && t3;
        }, clipInHalf: function(e3) {
          return this._clipInHalf = e3, this;
        }, temporary: function() {
          return this.element.addClass("temp-page"), this;
        } }), X("staticPage", { directions: J, init: function(e3, t3, n3) {
          Y.prototype.init.call(this, e3, t3), this._container = n3;
        }, restore: ["clip"], prepare: function(e3, t3) {
          var n3 = this, i3 = n3._reverse ? V[n3._direction].reverse : n3._direction;
          e3.clip = ae(n3._container, i3), e3.opacity = 0.999, t3.opacity = 1;
        }, shouldHide: function() {
          var e3 = this._reverse, t3 = this._face;
          return e3 && !t3 || !e3 && t3;
        }, face: function(e3) {
          return this._face = e3, this;
        } }), X("pageturn", { directions: ["horizontal", "vertical"], init: function(e3, t3, n3, i3) {
          Y.prototype.init.call(this, e3, t3), this.options = {}, this.options.face = n3, this.options.back = i3;
        }, children: function() {
          var e3, t3 = this, i3 = t3.options, a3 = "horizontal" === t3._direction ? "left" : "top", r3 = n2.directions[a3].reverse, o3 = t3._reverse, s3 = i3.face.clone(true).removeAttr("id"), l3 = i3.back.clone(true).removeAttr("id"), d3 = t3.element;
          return o3 && (e3 = a3, a3 = r3, r3 = e3), [n2.fx(i3.face).staticPage(a3, d3).face(true).setReverse(o3), n2.fx(i3.back).staticPage(r3, d3).setReverse(o3), n2.fx(s3).turningPage(a3, d3).face(true).clipInHalf(true).temporary().setReverse(o3), n2.fx(l3).turningPage(r3, d3).clipInHalf(true).temporary().setReverse(o3)];
        }, prepare: function(e3, t3) {
          e3[M] = B, e3.transformStyle = "preserve-3d", e3.opacity = 0.999, t3.opacity = 1;
        }, teardown: function() {
          this.element.find(".temp-page").remove();
        } }), X("flip", { directions: ["horizontal", "vertical"], init: function(e3, t3, n3, i3) {
          Y.prototype.init.call(this, e3, t3), this.options = {}, this.options.face = n3, this.options.back = i3;
        }, children: function() {
          var e3, t3 = this, i3 = t3.options, a3 = "horizontal" === t3._direction ? "left" : "top", r3 = n2.directions[a3].reverse, o3 = t3._reverse, s3 = t3.element;
          return o3 && (e3 = a3, a3 = r3, r3 = e3), [n2.fx(i3.face).turningPage(a3, s3).face(true).setReverse(o3), n2.fx(i3.back).turningPage(r3, s3).setReverse(o3)];
        }, prepare: function(e3) {
          e3[M] = B, e3.transformStyle = "preserve-3d";
        } });
        var re = !o2.mobileOS.android;
        X("replace", { _before: e2.noop, _after: e2.noop, init: function(t3, n3, i3) {
          Y.prototype.init.call(this, t3), this._previous = e2(n3), this._transitionClass = i3;
        }, duration: function() {
          throw new Error("The replace effect does not support duration setting; the effect duration may be customized through the transition class rule");
        }, beforeTransition: function(e3) {
          return this._before = e3, this;
        }, afterTransition: function(e3) {
          return this._after = e3, this;
        }, _both: function() {
          return e2().add(this._element).add(this._previous);
        }, _containerClass: function() {
          var e3 = this._direction, t3 = "k-fx k-fx-start k-fx-" + this._transitionClass;
          return e3 && (t3 += " k-fx-" + e3), this._reverse && (t3 += " k-fx-reverse"), t3;
        }, complete: function(t3) {
          if (!(!this.deferred || t3 && e2(t3.target).is(".km-touch-scrollbar, .km-actionsheet-wrapper"))) {
            var n3 = this.container;
            n3.removeClass("k-fx-end").removeClass(this._containerClass()).off(d2.event, this.completeProxy), this._previous.hide().removeClass("k-fx-current"), this.element.removeClass("k-fx-next"), re && n3.css(F, ""), this.isAbsolute || this._both().css(P, ""), this.deferred.resolve(), delete this.deferred;
          }
        }, run: function() {
          if (this._additionalEffects && this._additionalEffects[0]) return this.compositeRun();
          var t3 = this, i3 = t3.element, a3 = t3._previous, r3 = i3.parents().filter(a3.parents()).first(), o3 = t3._both(), s3 = e2.Deferred(), l3 = i3.css(P);
          return r3.length || (r3 = i3.parent()), this.container = r3, this.deferred = s3, this.isAbsolute = "absolute" == l3, this.isAbsolute || o3.css(P, "absolute"), re && (r3.css(F), r3.css(F, "hidden")), d2 ? (i3.addClass("k-fx-hidden"), r3.addClass(this._containerClass()), this.completeProxy = this.complete.bind(this), r3.on(d2.event, this.completeProxy), n2.animationFrame(function() {
            i3.removeClass("k-fx-hidden").addClass("k-fx-next"), a3.css("display", "").addClass("k-fx-current"), t3._before(a3, i3), n2.animationFrame(function() {
              r3.removeClass("k-fx-start").addClass("k-fx-end"), t3._after(a3, i3);
            });
          })) : this.complete(), s3.promise();
        }, stop: function() {
          this.complete();
        } });
        var oe = n2.Class.extend({ init: function() {
          var e3 = this;
          e3._tickProxy = e3._tick.bind(e3), e3._started = false;
        }, tick: e2.noop, done: e2.noop, onEnd: e2.noop, onCancel: e2.noop, start: function() {
          this.enabled() && (this.done() ? this.onEnd() : (this._started = true, n2.animationFrame(this._tickProxy)));
        }, enabled: function() {
          return true;
        }, cancel: function() {
          this._started = false, this.onCancel();
        }, _tick: function() {
          var e3 = this;
          e3._started && (e3.tick(), e3.done() ? (e3._started = false, e3.onEnd()) : n2.animationFrame(e3._tickProxy));
        } }), se = oe.extend({ init: function(e3) {
          r2(this, e3), oe.fn.init.call(this);
        }, done: function() {
          return this.timePassed() >= this.duration;
        }, timePassed: function() {
          return Math.min(this.duration, /* @__PURE__ */ new Date() - this.startDate);
        }, moveTo: function(e3) {
          var t3 = this, n3 = t3.movable;
          t3.initial = n3[t3.axis], t3.delta = e3.location - t3.initial, t3.duration = "number" == typeof e3.duration ? e3.duration : 300, t3.tick = t3._easeProxy(e3.ease), t3.startDate = /* @__PURE__ */ new Date(), t3.start();
        }, _easeProxy: function(e3) {
          var t3 = this;
          return function() {
            t3.movable.moveAxis(t3.axis, e3(t3.timePassed(), t3.initial, t3.delta, t3.duration));
          };
        } });
        r2(se, { easeOutExpo: function(e3, t3, n3, i3) {
          return e3 == i3 ? t3 + n3 : n3 * (1 - Math.pow(2, -10 * e3 / i3)) + t3;
        }, easeOutBack: function(e3, t3, n3, i3, a3) {
          return n3 * ((e3 = e3 / i3 - 1) * e3 * (((a3 = 1.70158) + 1) * e3 + a3) + 1) + t3;
        } }), i2.Animation = oe, i2.Transition = se, i2.createEffect = X, i2.box = function(t3) {
          var i3 = (t3 = e2(t3)).offset();
          return i3.width = n2._outerWidth(t3), i3.height = n2._outerHeight(t3), i3;
        }, i2.transformOrigin = function(e3, t3) {
          var n3 = (e3.left - t3.left) * t3.width / (t3.width - e3.width), i3 = (e3.top - t3.top) * t3.height / (t3.height - e3.height);
          return { x: isNaN(n3) ? 0 : n3, y: isNaN(i3) ? 0 : i3 };
        }, i2.fillScale = function(e3, t3) {
          return Math.min(e3.width / t3.width, e3.height / t3.height);
        }, i2.fitScale = function(e3, t3) {
          return Math.max(e3.width / t3.width, e3.height / t3.height);
        };
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.support, a2 = n2.Class, r2 = n2.Observable, o2 = Date.now, s2 = e2.extend, l2 = i2.mobileOS, d2 = l2 && l2.android, u2 = 800, c2 = i2.browser.msie ? 5 : 0, p2 = "press", h2 = "hold", f2 = "select", m2 = "start", g2 = "move", v2 = "end", _2 = "cancel", b2 = "tap", k2 = "doubleTap", w = "release", y = "gesturechange", x = "gestureend", C = "gesturetap", T = { api: 0, touch: 0, mouse: 9, pointer: 9 }, S = !i2.touch || i2.mouseAndTouchPresent;
        function I(e3, t3) {
          var n3 = e3.x.location, i3 = e3.y.location, a3 = t3.x.location, r3 = t3.y.location, o3 = n3 - a3, s3 = i3 - r3;
          return { center: { x: (n3 + a3) / 2, y: (i3 + r3) / 2 }, distance: Math.sqrt(o3 * o3 + s3 * s3) };
        }
        function D(e3) {
          var t3, n3, a3, r3 = [], o3 = e3.originalEvent, s3 = e3.currentTarget, l3 = 0;
          if (e3.api) r3.push({ id: 2, event: e3, target: e3.target, currentTarget: e3.target, location: e3, type: "api" });
          else if (e3.type.match(/touch/)) for (t3 = (n3 = o3 ? o3.changedTouches : []).length; l3 < t3; l3++) a3 = n3[l3], r3.push({ location: a3, event: e3, target: a3.target, currentTarget: s3, id: a3.identifier, type: "touch" });
          else i2.pointers || i2.msPointers ? r3.push({ location: o3, event: e3, target: e3.target, currentTarget: s3, id: o3.pointerId, type: "pointer" }) : r3.push({ id: 1, event: e3, target: e3.target, currentTarget: s3, location: e3, type: "mouse" });
          return r3;
        }
        var E = a2.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.axis = e3, n3._updateLocationData(t3), n3.startLocation = n3.location, n3.velocity = n3.delta = 0, n3.timeStamp = o2();
        }, move: function(e3) {
          var t3 = this, n3 = e3["page" + t3.axis], i3 = o2(), a3 = i3 - t3.timeStamp || 1;
          !n3 && d2 || (t3.delta = n3 - t3.location, t3._updateLocationData(e3), t3.initialDelta = n3 - t3.startLocation, t3.velocity = t3.delta / a3, t3.timeStamp = i3);
        }, _updateLocationData: function(e3) {
          var t3 = this, n3 = t3.axis;
          t3.location = e3["page" + n3], t3.client = e3["client" + n3], t3.screen = e3["screen" + n3];
        } }), A = a2.extend({ init: function(e3, t3, n3) {
          s2(this, { x: new E("X", n3.location), y: new E("Y", n3.location), type: n3.type, useClickAsTap: e3.useClickAsTap, threshold: e3.threshold || T[n3.type], userEvents: e3, target: t3, currentTarget: n3.currentTarget, initialTouch: n3.target, id: n3.id, pressEvent: n3, _clicks: e3._clicks, supportDoubleTap: e3.supportDoubleTap, _moved: false, _finished: false });
        }, press: function() {
          this._holdTimeout = setTimeout(this._hold.bind(this), this.userEvents.minHold), this._trigger(p2, this.pressEvent);
        }, _tap: function(e3) {
          var t3 = this;
          t3.userEvents._clicks++, 1 == t3.userEvents._clicks && (t3._clickTimeout = setTimeout(function() {
            1 == t3.userEvents._clicks ? t3._trigger(b2, e3) : t3._trigger(k2, e3), t3.userEvents._clicks = 0;
          }, 300));
        }, _hold: function() {
          this._trigger(h2, this.pressEvent);
        }, move: function(e3) {
          var t3 = this, n3 = "api" !== e3.type && t3.userEvents._shouldNotMove;
          if (!t3._finished && !n3) {
            if (t3.x.move(e3.location), t3.y.move(e3.location), !t3._moved) {
              if (t3._withinIgnoreThreshold()) return;
              if (z.current && z.current !== t3.userEvents) return t3.dispose();
              t3._start(e3);
            }
            t3._finished || t3._trigger(g2, e3);
          }
        }, end: function(e3) {
          this.endTime = o2(), this._finished || (this._finished = true, this._trigger(w, e3), this._moved ? this._trigger(v2, e3) : this.useClickAsTap || (this.supportDoubleTap ? this._tap(e3) : this._trigger(b2, e3)), clearTimeout(this._holdTimeout), this.dispose());
        }, dispose: function() {
          var t3 = this.userEvents.touches;
          this._finished = true, this.pressEvent = null, clearTimeout(this._holdTimeout), t3.splice(e2.inArray(this, t3), 1);
        }, skip: function() {
          this.dispose();
        }, cancel: function() {
          this.dispose();
        }, isMoved: function() {
          return this._moved;
        }, _start: function(e3) {
          clearTimeout(this._holdTimeout), this.startTime = o2(), this._moved = true, this._trigger(m2, e3);
        }, _trigger: function(e3, t3) {
          var n3 = this, i3 = t3.event, a3 = { touch: n3, x: n3.x, y: n3.y, target: n3.target, event: i3 };
          n3.userEvents.notify(e3, a3) && i3.preventDefault();
        }, _withinIgnoreThreshold: function() {
          var e3 = this.x.initialDelta, t3 = this.y.initialDelta;
          return Math.sqrt(e3 * e3 + t3 * t3) <= this.threshold;
        } });
        function F(e3) {
          for (var t3 = n2.eventMap.up.split(" "), i3 = 0, a3 = t3.length; i3 < a3; i3++) e3(t3[i3]);
        }
        var z = r2.extend({ init: function(t3, a3) {
          var o3, l3 = this, d3 = n2.guid();
          if (a3 = a3 || {}, o3 = l3.filter = a3.filter, l3.threshold = a3.threshold || c2, l3.minHold = a3.minHold || u2, l3.touches = [], l3._maxTouches = a3.multiTouch ? 2 : 1, l3.allowSelection = a3.allowSelection, l3.captureUpIfMoved = a3.captureUpIfMoved, l3.useClickAsTap = !a3.fastTap && !i2.delayedClick(), l3.eventNS = d3, l3._clicks = 0, l3.supportDoubleTap = a3.supportDoubleTap, t3 = e2(t3).handler(l3), r2.fn.init.call(l3), s2(l3, { element: t3, surface: a3.global && S ? e2(t3[0].ownerDocument.documentElement) : e2(a3.surface || t3), stopPropagation: a3.stopPropagation, pressed: false }), l3.surface.handler(l3).on(n2.applyEventMap("move", d3), "_move").on(n2.applyEventMap("up cancel", d3), "_end"), t3.on(n2.applyEventMap("down", d3), o3, "_start"), l3.useClickAsTap && t3.on(n2.applyEventMap("click", d3), o3, "_click"), i2.pointers || i2.msPointers) if (i2.browser.version < 11) {
            var T2 = "pinch-zoom double-tap-zoom";
            t3.css("-ms-touch-action", a3.touchAction && "none" != a3.touchAction ? T2 + " " + a3.touchAction : T2);
          } else t3.css("touch-action", a3.touchAction || "none");
          if (a3.preventDragEvent && t3.on(n2.applyEventMap("dragstart", d3), n2.preventDefault), t3.on(n2.applyEventMap("mousedown", d3), o3, { root: t3 }, "_select"), l3.captureUpIfMoved && i2.eventCapture) {
            var I2 = l3.surface[0], D2 = l3.preventIfMoving.bind(l3);
            F(function(e3) {
              I2.addEventListener(e3, D2, true);
            });
          }
          l3.bind([p2, h2, b2, k2, m2, g2, v2, w, _2, "gesturestart", y, x, C, f2], a3);
        }, preventIfMoving: function(e3) {
          this._isMoved() && e3.preventDefault();
        }, destroy: function() {
          var e3 = this;
          if (!e3._destroyed) {
            if (e3._destroyed = true, e3.captureUpIfMoved && i2.eventCapture) {
              var t3 = e3.surface[0];
              F(function(n3) {
                t3.removeEventListener(n3, e3.preventIfMoving);
              });
            }
            e3.element.kendoDestroy(e3.eventNS), e3.surface.kendoDestroy(e3.eventNS), e3.element.removeData("handler"), e3.surface.removeData("handler"), e3._disposeAll(), e3.unbind(), delete e3.surface, delete e3.element, delete e3.currentTarget;
          }
        }, capture: function() {
          z.current = this;
        }, cancel: function() {
          this._disposeAll(), this.trigger(_2);
        }, notify: function(e3, t3) {
          var n3 = this.touches;
          if (this._isMultiTouch()) {
            switch (e3) {
              case g2:
                e3 = y;
                break;
              case v2:
                e3 = x;
                break;
              case b2:
                e3 = C;
            }
            s2(t3, { touches: n3 }, I(n3[0], n3[1]));
          }
          return this.trigger(e3, s2(t3, { type: e3 }));
        }, press: function(e3, t3, n3) {
          this._apiCall("_start", e3, t3, n3);
        }, move: function(e3, t3) {
          this._apiCall("_move", e3, t3);
        }, end: function(e3, t3) {
          this._apiCall("_end", e3, t3);
        }, _isMultiTouch: function() {
          return this.touches.length > 1;
        }, _maxTouchesReached: function() {
          return this.touches.length >= this._maxTouches;
        }, _disposeAll: function() {
          for (var e3 = this.touches; e3.length > 0; ) e3.pop().dispose();
        }, _isMoved: function() {
          return e2.grep(this.touches, function(e3) {
            return e3.isMoved();
          }).length;
        }, _select: function(e3) {
          this.allowSelection && !this.trigger(f2, { event: e3 }) || e3.preventDefault();
        }, _start: function(t3) {
          var n3, i3, a3 = this, r3 = 0, o3 = a3.filter, s3 = D(t3), l3 = s3.length, d3 = t3.which;
          if (!(d3 && d3 > 1 || a3._maxTouchesReached())) for (z.current = null, a3.currentTarget = t3.currentTarget, a3.stopPropagation && t3.stopPropagation(); r3 < l3 && !a3._maxTouchesReached(); r3++) i3 = s3[r3], (n3 = o3 ? e2(i3.currentTarget) : a3.element).length && (i3 = new A(a3, n3, i3), a3.touches.push(i3), i3.press(), a3._isMultiTouch() && a3.notify("gesturestart", {}));
        }, _move: function(e3) {
          this._eachTouch("move", e3);
        }, _end: function(e3) {
          this._eachTouch("end", e3);
        }, _click: function(t3) {
          var n3 = { touch: { initialTouch: t3.target, target: e2(t3.currentTarget), endTime: o2(), x: { location: t3.pageX, client: t3.clientX }, y: { location: t3.pageY, client: t3.clientY } }, x: t3.pageX, y: t3.pageY, target: e2(t3.currentTarget), event: t3, type: "tap" };
          this.trigger("tap", n3) && t3.preventDefault();
        }, _eachTouch: function(e3, t3) {
          var n3, i3, a3, r3, o3 = {}, s3 = D(t3), l3 = this.touches;
          for (n3 = 0; n3 < l3.length; n3++) o3[(i3 = l3[n3]).id] = i3;
          for (n3 = 0; n3 < s3.length; n3++) (r3 = o3[(a3 = s3[n3]).id]) && r3[e3](a3);
        }, _apiCall: function(t3, n3, i3, a3) {
          this[t3]({ api: true, pageX: n3, pageY: i3, clientX: n3, clientY: i3, target: e2(a3 || this.element)[0], stopPropagation: e2.noop, preventDefault: e2.noop });
        } });
        z.defaultThreshold = function(e3) {
          c2 = e3;
        }, z.minHold = function(e3) {
          u2 = e3;
        }, n2.getTouches = D, n2.touchDelta = I, n2.UserEvents = z;
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2, i2 = window.kendo, a2 = i2.support, r2 = window.document, o2 = e2(window), s2 = i2.Class, l2 = i2.ui.Widget, d2 = i2.Observable, u2 = i2.UserEvents, c2 = e2.extend, p2 = i2.getOffset, h2 = {}, f2 = {}, m2 = {}, g2 = i2.elementUnderCursor, v2 = "keyup", _2 = "change", b2 = "dragstart", k2 = "hold", w = "drag", y = "dragend", x = "dragcancel", C = "hintDestroyed", T = "dragenter", S = "dragleave", I = "drop";
        function D(e3, t3) {
          return parseInt(e3.css(t3), 10) || 0;
        }
        function E(e3, t3) {
          return Math.min(Math.max(e3, t3.min), t3.max);
        }
        function A(e3, t3) {
          var n3 = p2(e3), a3 = i2._outerWidth, r3 = i2._outerHeight, o3 = n3.left + D(e3, "borderLeftWidth") + D(e3, "paddingLeft"), s3 = n3.top + D(e3, "borderTopWidth") + D(e3, "paddingTop");
          return { x: { min: o3, max: o3 + e3.width() - a3(t3, true) }, y: { min: s3, max: s3 + e3.height() - r3(t3, true) } };
        }
        var F, z = d2.extend({ init: function(t3, n3) {
          var a3 = this, r3 = t3[0];
          a3.capture = false, r3.addEventListener ? (e2.each(i2.eventMap.down.split(" "), function() {
            r3.addEventListener(this, a3._press.bind(a3), true);
          }), e2.each(i2.eventMap.up.split(" "), function() {
            r3.addEventListener(this, a3._release.bind(a3), true);
          })) : (e2.each(i2.eventMap.down.split(" "), function() {
            r3.attachEvent(this, a3._press.bind(a3));
          }), e2.each(i2.eventMap.up.split(" "), function() {
            r3.attachEvent(this, a3._release.bind(a3));
          })), d2.fn.init.call(a3), a3.bind(["press", "release"], n3 || {});
        }, captureNext: function() {
          this.capture = true;
        }, cancelCapture: function() {
          this.capture = false;
        }, _press: function(e3) {
          this.trigger("press"), this.capture && e3.preventDefault();
        }, _release: function(e3) {
          var t3 = this;
          t3.trigger("release"), t3.capture && (e3.preventDefault(), t3.cancelCapture());
        } }), P = d2.extend({ init: function(t3) {
          var n3 = this;
          d2.fn.init.call(n3), n3.forcedEnabled = false, e2.extend(n3, t3), n3.scale = 1, n3.horizontal ? (n3.measure = "offsetWidth", n3.scrollSize = "scrollWidth", n3.axis = "x") : (n3.measure = "offsetHeight", n3.scrollSize = "scrollHeight", n3.axis = "y");
        }, makeVirtual: function() {
          e2.extend(this, { virtual: true, forcedEnabled: true, _virtualMin: 0, _virtualMax: 0 });
        }, virtualSize: function(e3, t3) {
          this._virtualMin === e3 && this._virtualMax === t3 || (this._virtualMin = e3, this._virtualMax = t3, this.update());
        }, outOfBounds: function(e3) {
          return e3 > this.max || e3 < this.min;
        }, forceEnabled: function() {
          this.forcedEnabled = true;
        }, getSize: function() {
          return this.container[0][this.measure];
        }, getTotal: function() {
          return this.element[0][this.scrollSize];
        }, rescale: function(e3) {
          this.scale = e3;
        }, update: function(e3) {
          var t3 = this, n3 = t3.virtual ? t3._virtualMax : t3.getTotal(), i3 = n3 * t3.scale, a3 = t3.getSize();
          (0 !== n3 || t3.forcedEnabled) && (t3.max = t3.virtual ? -t3._virtualMin : 0, t3.size = a3, t3.total = i3, t3.min = Math.min(t3.max, a3 - i3), t3.minScale = a3 / n3, t3.centerOffset = (i3 - a3) / 2, t3.enabled = t3.forcedEnabled || i3 > a3, e3 || t3.trigger(_2, t3));
        } }), H = d2.extend({ init: function(e3) {
          var t3 = this;
          d2.fn.init.call(t3), t3.x = new P(c2({ horizontal: true }, e3)), t3.y = new P(c2({ horizontal: false }, e3)), t3.container = e3.container, t3.forcedMinScale = e3.minScale, t3.maxScale = e3.maxScale || 100, t3.bind(_2, e3);
        }, rescale: function(e3) {
          this.x.rescale(e3), this.y.rescale(e3), this.refresh();
        }, centerCoordinates: function() {
          return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };
        }, refresh: function() {
          var e3 = this;
          e3.x.update(), e3.y.update(), e3.enabled = e3.x.enabled || e3.y.enabled, e3.minScale = e3.forcedMinScale || Math.min(e3.x.minScale, e3.y.minScale), e3.fitScale = Math.max(e3.x.minScale, e3.y.minScale), e3.trigger(_2);
        } }), N = d2.extend({ init: function(e3) {
          c2(this, e3), d2.fn.init.call(this);
        }, outOfBounds: function() {
          return this.dimension.outOfBounds(this.movable[this.axis]);
        }, dragMove: function(e3) {
          var t3 = this, n3 = t3.dimension, i3 = t3.axis, a3 = t3.movable, r3 = a3[i3] + e3;
          n3.enabled && ((r3 < n3.min && e3 < 0 || r3 > n3.max && e3 > 0) && (e3 *= t3.resistance), a3.translateAxis(i3, e3), t3.trigger(_2, t3));
        } }), R = s2.extend({ init: function(t3) {
          var n3, i3, a3, r3, o3 = this;
          c2(o3, { elastic: true }, t3), a3 = o3.elastic ? 0.5 : 0, r3 = o3.movable, o3.x = n3 = new N({ axis: "x", dimension: o3.dimensions.x, resistance: a3, movable: r3 }), o3.y = i3 = new N({ axis: "y", dimension: o3.dimensions.y, resistance: a3, movable: r3 }), o3.userEvents.bind(["press", "move", "end", "gesturestart", "gesturechange"], { gesturestart: function(e3) {
            o3.gesture = e3, o3.offset = o3.dimensions.container.offset();
          }, press: function(t4) {
            e2(t4.event.target).closest("a").is("[data-navigate-on-press=true]") && t4.sender.cancel();
          }, gesturechange: function(e3) {
            var t4, a4 = o3.gesture, s3 = a4.center, l3 = e3.center, d3 = e3.distance / a4.distance, u3 = o3.dimensions.minScale, c3 = o3.dimensions.maxScale;
            r3.scale <= u3 && d3 < 1 && (d3 += 0.8 * (1 - d3)), r3.scale * d3 >= c3 && (d3 = c3 / r3.scale);
            var p3 = r3.x + o3.offset.left, h3 = r3.y + o3.offset.top;
            t4 = { x: (p3 - s3.x) * d3 + l3.x - p3, y: (h3 - s3.y) * d3 + l3.y - h3 }, r3.scaleWith(d3), n3.dragMove(t4.x), i3.dragMove(t4.y), o3.dimensions.rescale(r3.scale), o3.gesture = e3, e3.preventDefault();
          }, move: function(e3) {
            e3.event.target.tagName.match(/textarea|input/i) || (n3.dimension.enabled || i3.dimension.enabled ? (n3.dragMove(e3.x.delta), i3.dragMove(e3.y.delta), e3.preventDefault()) : e3.touch.skip());
          }, end: function(e3) {
            e3.preventDefault();
          } });
        } }), O = a2.transitions.prefix + "Transform";
        F = a2.hasHW3D ? function(e3, t3, n3) {
          return "translate3d(" + e3 + "px," + t3 + "px,0) scale(" + n3 + ")";
        } : function(e3, t3, n3) {
          return "translate(" + e3 + "px," + t3 + "px) scale(" + n3 + ")";
        };
        var M = d2.extend({ init: function(t3) {
          var n3 = this;
          d2.fn.init.call(n3), n3.element = e2(t3), n3.element[0].style.webkitTransformOrigin = "left top", n3.x = 0, n3.y = 0, n3.scale = 1, n3._saveCoordinates(F(n3.x, n3.y, n3.scale));
        }, translateAxis: function(e3, t3) {
          this[e3] += t3, this.refresh();
        }, scaleTo: function(e3) {
          this.scale = e3, this.refresh();
        }, scaleWith: function(e3) {
          this.scale *= e3, this.refresh();
        }, translate: function(e3) {
          this.x += e3.x, this.y += e3.y, this.refresh();
        }, moveAxis: function(e3, t3) {
          this[e3] = t3, this.refresh();
        }, moveTo: function(e3) {
          c2(this, e3), this.refresh();
        }, refresh: function() {
          var e3, t3 = this, n3 = t3.x, a3 = t3.y;
          t3.round && (n3 = Math.round(n3), a3 = Math.round(a3)), (e3 = F(n3, a3, t3.scale)) != t3.coordinates && (i2.support.browser.msie && i2.support.browser.version < 10 ? (t3.element[0].style.position = "absolute", t3.element[0].style.left = t3.x + "px", t3.element[0].style.top = t3.y + "px") : t3.element[0].style[O] = e3, t3._saveCoordinates(e3), t3.trigger(_2));
        }, _saveCoordinates: function(e3) {
          this.coordinates = e3;
        } });
        function B(e3, t3) {
          var n3, i3 = t3.options.group, a3 = e3[i3];
          if (l2.fn.destroy.call(t3), a3.length > 1) {
            for (n3 = 0; n3 < a3.length; n3++) if (a3[n3] == t3) {
              a3.splice(n3, 1);
              break;
            }
          } else a3.length = 0, delete e3[i3];
        }
        var L = l2.extend({ init: function(e3, t3) {
          var n3 = this;
          l2.fn.init.call(n3, e3, t3);
          var i3 = n3.options.group;
          i3 in f2 ? f2[i3].push(n3) : f2[i3] = [n3];
        }, events: [T, S, I], options: { name: "DropTarget", group: "default" }, destroy: function() {
          B(f2, this);
        }, _trigger: function(e3, t3) {
          var n3 = h2[this.options.group];
          if (n3) return this.trigger(e3, c2({}, t3.event, { draggable: n3, dropTarget: t3.dropTarget }));
        }, _over: function(e3) {
          this._trigger(T, e3);
        }, _out: function(e3) {
          this._trigger(S, e3);
        }, _drop: function(e3) {
          var t3 = h2[this.options.group];
          t3 && (t3.dropped = !this._trigger(I, e3));
        } });
        L.destroyGroup = function(e3) {
          var t3, n3 = f2[e3] || m2[e3];
          if (n3) {
            for (t3 = 0; t3 < n3.length; t3++) l2.fn.destroy.call(n3[t3]);
            n3.length = 0, delete f2[e3], delete m2[e3];
          }
        }, L._cache = f2;
        var V = L.extend({ init: function(e3, t3) {
          var n3 = this;
          l2.fn.init.call(n3, e3, t3);
          var i3 = n3.options.group;
          i3 in m2 ? m2[i3].push(n3) : m2[i3] = [n3];
        }, destroy: function() {
          B(m2, this);
        }, options: { name: "DropTargetArea", group: "default", filter: null } }), U = l2.extend({ init: function(e3, t3) {
          var n3 = this;
          l2.fn.init.call(n3, e3, t3), n3._activated = false, n3.userEvents = new u2(n3.element, { global: true, allowSelection: true, filter: n3.options.filter, threshold: n3.options.distance, start: n3._start.bind(n3), hold: n3._hold.bind(n3), move: n3._drag.bind(n3), end: n3._end.bind(n3), cancel: n3._cancel.bind(n3), select: n3._select.bind(n3) }), i2.support.touch && n3.element.find(n3.options.filter).css("touch-action", "none"), n3._afterEndHandler = n3._afterEnd.bind(n3), n3._captureEscape = n3._captureEscape.bind(n3);
        }, events: [k2, b2, w, y, x, C], options: { name: "Draggable", distance: i2.support.touch ? 0 : 5, group: "default", cursorOffset: null, axis: null, container: null, filter: null, ignore: null, holdToDrag: false, autoScroll: false, dropped: false }, cancelHold: function() {
          this._activated = false;
        }, _captureEscape: function(e3) {
          e3.keyCode === i2.keys.ESC && (this._trigger(x, { event: e3 }), this.userEvents.cancel());
        }, _updateHint: function(t3) {
          var n3, i3 = this, a3 = i3.options, r3 = i3.boundaries, o3 = a3.axis, s3 = i3.options.cursorOffset;
          s3 ? n3 = { left: t3.x.location + s3.left, top: t3.y.location + s3.top } : (i3.hintOffset.left += t3.x.delta, i3.hintOffset.top += t3.y.delta, n3 = e2.extend({}, i3.hintOffset)), r3 && (n3.top = E(n3.top, r3.y), n3.left = E(n3.left, r3.x)), "x" === o3 ? delete n3.top : "y" === o3 && delete n3.left, i3.hint.css(n3);
        }, _shouldIgnoreTarget: function(t3) {
          var n3 = this.options.ignore;
          return n3 && e2(t3).is(n3);
        }, _select: function(e3) {
          this._shouldIgnoreTarget(e3.event.target) || e3.preventDefault();
        }, _start: function(t3) {
          var n3 = this, a3 = n3.options, o3 = a3.container ? e2(a3.container) : null, s3 = a3.hint;
          if (this._shouldIgnoreTarget(t3.touch.initialTouch) || a3.holdToDrag && !n3._activated) n3.userEvents.cancel();
          else {
            if (n3.currentTarget = t3.target, n3.currentTargetOffset = p2(n3.currentTarget), s3) {
              n3.hint && n3.hint.stop(true, true).remove(), n3.hint = i2.isFunction(s3) ? e2(s3.call(n3, n3.currentTarget)) : s3;
              var l3 = p2(n3.currentTarget);
              n3.hintOffset = l3, n3.hint.css({ position: "absolute", zIndex: 2e4, left: l3.left, top: l3.top }).appendTo(r2.body), n3.angular("compile", function() {
                n3.hint.removeAttr("ng-repeat");
                for (var i3 = e2(t3.target); !i3.data("$$kendoScope") && i3.length; ) i3 = i3.parent();
                return { elements: n3.hint.get(), scopeFrom: i3.data("$$kendoScope") };
              });
            }
            h2[a3.group] = n3, n3.dropped = false, o3 && (n3.boundaries = A(o3, n3.hint)), e2(r2).on(v2, n3._captureEscape), n3._trigger(b2, t3) && (n3.userEvents.cancel(), n3._afterEnd()), n3.userEvents.capture();
          }
        }, _hold: function(e3) {
          this.currentTarget = e3.target, this._trigger(k2, e3) ? this.userEvents.cancel() : this._activated = true;
        }, _drag: function(t3) {
          t3.preventDefault();
          var n3 = this._elementUnderCursor(t3);
          if (this.options.autoScroll && this._cursorElement !== n3 && (this._scrollableParent = q(n3), this._cursorElement = n3), this._lastEvent = t3, this._processMovement(t3, n3), this.options.autoScroll && this._scrollableParent[0]) {
            var i3 = G(t3.x.location, t3.y.location, W(this._scrollableParent));
            this._scrollCompenstation = e2.extend({}, this.hintOffset), this._scrollVelocity = i3, 0 === i3.y && 0 === i3.x ? (clearInterval(this._scrollInterval), this._scrollInterval = null) : this._scrollInterval || (this._scrollInterval = setInterval(this._autoScroll.bind(this), 50));
          }
          this.hint && this._updateHint(t3);
        }, _processMovement: function(t3, i3) {
          this._withDropTarget(i3, function(i4, a3) {
            if (i4) {
              if (n2) {
                if (a3 === n2.targetElement) return;
                n2._trigger(S, c2(t3, { dropTarget: e2(n2.targetElement) }));
              }
              i4._trigger(T, c2(t3, { dropTarget: e2(a3) })), n2 = c2(i4, { targetElement: a3 });
            } else n2 && (n2._trigger(S, c2(t3, { dropTarget: e2(n2.targetElement) })), n2 = null);
          }), this._trigger(w, c2(t3, { dropTarget: n2, elementUnderCursor: i3 }));
        }, _autoScroll: function() {
          var e3 = this._scrollableParent[0], t3 = this._scrollVelocity, n3 = this._scrollCompenstation;
          if (e3) {
            var i3, a3, s3 = this._elementUnderCursor(this._lastEvent);
            this._processMovement(this._lastEvent, s3);
            var l3 = e3 === j()[0];
            l3 ? (i3 = r2.body.scrollHeight > o2.height(), a3 = r2.body.scrollWidth > o2.width()) : (i3 = e3.offsetHeight <= e3.scrollHeight, a3 = e3.offsetWidth <= e3.scrollWidth);
            var d3 = e3.scrollTop + t3.y, u3 = i3 && d3 > 0 && d3 < e3.scrollHeight, c3 = e3.scrollLeft + t3.x, p3 = a3 && c3 > 0 && c3 < e3.scrollWidth;
            u3 ? e3.scrollTop += t3.y : i3 && d3 < 0 && (e3.scrollTop = 0), p3 ? e3.scrollLeft += t3.x : a3 && c3 < 0 && (e3.scrollLeft = 0), this.hint && l3 && (p3 || u3) && (u3 && (n3.top += t3.y), p3 && (n3.left += t3.x), this.hint.css(n3));
          }
        }, _end: function(t3) {
          this._withDropTarget(this._elementUnderCursor(t3), function(i3, a3) {
            i3 && (i3._drop(c2({}, t3, { dropTarget: e2(a3) })), n2 = null);
          }), clearInterval(this._scrollInterval), this._scrollInterval = null, this._cancel(this._trigger(y, t3));
        }, _cancel: function(e3) {
          var t3 = this;
          t3._scrollableParent = null, this._cursorElement = null, clearInterval(this._scrollInterval), t3._activated = false, t3.hint && !t3.dropped ? setTimeout(function() {
            t3.hint.stop(true, true), e3 ? t3._afterEndHandler() : t3.hint.animate(t3.currentTargetOffset, "fast", t3._afterEndHandler);
          }, 0) : t3._afterEnd();
        }, _trigger: function(e3, t3) {
          return this.trigger(e3, c2({}, t3.event, { x: t3.x, y: t3.y, currentTarget: this.currentTarget, initialTarget: t3.touch ? t3.touch.initialTouch : null, dropTarget: t3.dropTarget, elementUnderCursor: t3.elementUnderCursor }));
        }, _elementUnderCursor: function(t3) {
          var n3 = g2(t3), i3 = this.hint;
          return i3 && function(t4, n4) {
            try {
              return e2.contains(t4, n4) || t4 == n4;
            } catch (e3) {
              return false;
            }
          }(i3[0], n3) && (i3.hide(), (n3 = g2(t3)) || (n3 = g2(t3)), i3.show()), n3;
        }, _withDropTarget: function(t3, n3) {
          var i3, r3 = this.options.group, o3 = f2[r3], s3 = m2[r3];
          (o3 && o3.length || s3 && s3.length) && (i3 = function(t4, n4, i4) {
            for (var r4, o4, s4 = 0, l3 = n4 && n4.length, d3 = i4 && i4.length; t4 && t4.parentNode; ) {
              for (s4 = 0; s4 < l3; s4++) if ((r4 = n4[s4]).element[0] === t4) return { target: r4, targetElement: t4 };
              for (s4 = 0; s4 < d3; s4++) if (o4 = i4[s4], e2.contains(o4.element[0], t4) && a2.matchesSelector.call(t4, o4.options.filter)) return { target: o4, targetElement: t4 };
              t4 = t4.parentNode;
            }
          }(t3, o3, s3), i3 ? n3(i3.target, i3.targetElement) : n3());
        }, destroy: function() {
          var e3 = this;
          l2.fn.destroy.call(e3), e3._afterEnd(), e3.userEvents.destroy(), this._scrollableParent = null, this._cursorElement = null, clearInterval(this._scrollInterval), e3.currentTarget = null;
        }, _afterEnd: function() {
          var t3 = this;
          t3.hint && t3.hint.remove(), delete h2[t3.options.group], t3.trigger("destroy"), t3.trigger(C), e2(r2).off(v2, t3._captureEscape);
        } });
        function W(e3) {
          var t3, n3, i3, a3 = j()[0];
          return e3[0] === a3 ? { top: n3 = a3.scrollTop, left: i3 = a3.scrollLeft, bottom: n3 + o2.height(), right: i3 + o2.width() } : ((t3 = e3.offset()).bottom = t3.top + e3.height(), t3.right = t3.left + e3.width(), t3);
        }
        function j() {
          return e2(i2.support.browser.edge || i2.support.browser.safari ? r2.body : r2.documentElement);
        }
        function q(t3) {
          var n3 = j();
          if (!t3 || t3 === r2.body || t3 === r2.documentElement) return n3;
          for (var a3 = e2(t3)[0]; a3 && !i2.isScrollable(a3) && a3 !== r2.body; ) a3 = a3.parentNode;
          return a3 === r2.body ? n3 : e2(a3);
        }
        function G(e3, t3, n3) {
          var i3 = { x: 0, y: 0 }, a3 = 50;
          return e3 - n3.left < a3 ? i3.x = -(a3 - (e3 - n3.left)) : n3.right - e3 < a3 && (i3.x = a3 - (n3.right - e3)), t3 - n3.top < a3 ? i3.y = -(a3 - (t3 - n3.top)) : n3.bottom - t3 < a3 && (i3.y = a3 - (n3.bottom - t3)), i3;
        }
        i2.ui.plugin(L), i2.ui.plugin(V), i2.ui.plugin(U), i2.TapCapture = z, i2.containerBoundaries = A, c2(i2.ui, { Pane: R, PaneDimensions: H, Movable: M }), i2.ui.Draggable.utils = { autoScrollVelocity: G, scrollableViewPort: W, findScrollableParent: q };
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.mobile, a2 = n2.effects, r2 = i2.ui, o2 = e2.extend, s2 = r2.Widget, l2 = n2.Class, d2 = n2.ui.Movable, u2 = n2.ui.Pane, c2 = n2.ui.PaneDimensions, p2 = a2.Transition, h2 = a2.Animation, f2 = Math.abs, m2 = "km-scroller-release", g2 = "km-scroller-refresh", v2 = "change", _2 = "scroll", b2 = h2.extend({ init: function(e3) {
          var t3 = this;
          h2.fn.init.call(t3), o2(t3, e3), t3.userEvents.bind("gestureend", t3.start.bind(t3)), t3.tapCapture.bind("press", t3.cancel.bind(t3));
        }, enabled: function() {
          return this.movable.scale < this.dimensions.minScale;
        }, done: function() {
          return this.dimensions.minScale - this.movable.scale < 0.01;
        }, tick: function() {
          var e3 = this.movable;
          e3.scaleWith(1.1), this.dimensions.rescale(e3.scale);
        }, onEnd: function() {
          var e3 = this.movable;
          e3.scaleTo(this.dimensions.minScale), this.dimensions.rescale(e3.scale);
        } }), k2 = h2.extend({ init: function(e3) {
          var t3 = this;
          h2.fn.init.call(t3), o2(t3, e3, { transition: new p2({ axis: e3.axis, movable: e3.movable, onEnd: function() {
            t3._end();
          } }) }), t3.tapCapture.bind("press", function() {
            t3.cancel();
          }), t3.userEvents.bind("end", t3.start.bind(t3)), t3.userEvents.bind("gestureend", t3.start.bind(t3)), t3.userEvents.bind("tap", t3.onEnd.bind(t3));
        }, onCancel: function() {
          this.transition.cancel();
        }, freeze: function(e3) {
          this.cancel(), this._moveTo(e3);
        }, onEnd: function() {
          var e3 = this;
          e3.paneAxis.outOfBounds() ? e3._snapBack() : e3._end();
        }, done: function() {
          return f2(this.velocity) < 1;
        }, start: function(e3) {
          var t3, n3 = this;
          n3.dimension.enabled && (n3.paneAxis.outOfBounds() ? n3.transition._started ? (n3.transition.cancel(), n3.velocity = Math.min(e3.touch[n3.axis].velocity * n3.velocityMultiplier, 55), h2.fn.start.call(n3)) : n3._snapBack() : (t3 = 2 === e3.touch.id ? 0 : e3.touch[n3.axis].velocity, n3.velocity = Math.max(Math.min(t3 * n3.velocityMultiplier, 55), -55), n3.tapCapture.captureNext(), h2.fn.start.call(n3)));
        }, tick: function() {
          var e3 = this, t3 = e3.dimension, n3 = e3.paneAxis.outOfBounds() ? 0.5 : e3.friction, i3 = e3.velocity *= n3, a3 = e3.movable[e3.axis] + i3;
          !e3.elastic && t3.outOfBounds(a3) && (a3 = Math.max(Math.min(a3, t3.max), t3.min), e3.velocity = 0), e3.movable.moveAxis(e3.axis, a3);
        }, _end: function() {
          this.tapCapture.cancelCapture(), this.end();
        }, _snapBack: function() {
          var e3 = this, t3 = e3.dimension, n3 = e3.movable[e3.axis] > t3.max ? t3.max : t3.min;
          e3._moveTo(n3);
        }, _moveTo: function(e3) {
          this.transition.moveTo({ location: e3, duration: 500, ease: p2.easeOutExpo });
        } }), w = h2.extend({ init: function(e3) {
          n2.effects.Animation.fn.init.call(this), o2(this, e3, { origin: {}, destination: {}, offset: {} });
        }, tick: function() {
          this._updateCoordinates(), this.moveTo(this.origin);
        }, done: function() {
          return f2(this.offset.y) < 5 && f2(this.offset.x) < 5;
        }, onEnd: function() {
          this.moveTo(this.destination), this.callback && this.callback.call();
        }, setCoordinates: function(e3, t3) {
          this.offset = {}, this.origin = e3, this.destination = t3;
        }, setCallback: function(e3) {
          e3 && n2.isFunction(e3) ? this.callback = e3 : e3 = void 0;
        }, _updateCoordinates: function() {
          this.offset = { x: (this.destination.x - this.origin.x) / 4, y: (this.destination.y - this.origin.y) / 4 }, this.origin = { y: this.origin.y + this.offset.y, x: this.origin.x + this.offset.x };
        } }), y = l2.extend({ init: function(t3) {
          var n3 = this, i3 = "x" === t3.axis, a3 = e2('<div role="scrollbar" aria-controls="' + t3.controlsId + '" class="km-touch-scrollbar km-' + (i3 ? "horizontal" : "vertical") + '-scrollbar" />');
          i3 && a3.attr("aria-orientation", "horizontal"), o2(n3, t3, { element: a3, elementSize: 0, movable: new d2(a3), scrollMovable: t3.movable, alwaysVisible: t3.alwaysVisible, size: i3 ? "width" : "height" }), n3.scrollMovable.bind(v2, n3.refresh.bind(n3)), n3.container.append(a3), t3.alwaysVisible && n3.show();
        }, refresh: function() {
          var e3 = this, t3 = e3.axis, n3 = e3.dimension, i3 = n3.size, a3 = e3.scrollMovable, r3 = i3 / n3.total, o3 = Math.round(-a3[t3] * r3), s3 = Math.round(i3 * r3);
          r3 >= 1 ? this.element.css("display", "none") : this.element.css("display", ""), o3 + s3 > i3 ? s3 = i3 - o3 : o3 < 0 && (s3 += o3, o3 = 0), e3.elementSize != s3 && (e3.element.css(e3.size, s3 + "px"), e3.elementSize = s3), e3._ariaValue(o3, n3.size - e3.elementSize), e3.movable.moveAxis(t3, o3);
        }, show: function() {
          this.element.css({ opacity: 0.7, visibility: "visible" });
        }, hide: function() {
          this.alwaysVisible || this.element.css({ opacity: 0 });
        }, _ariaValue: function(e3, t3) {
          var n3 = this.element;
          e3 > t3 && (e3 = t3), n3.attr("aria-valuemax", t3), n3.attr("aria-valuenow", e3);
        } }), x = s2.extend({ init: function(t3, i3) {
          var a3 = this;
          if (s2.fn.init.call(a3, t3, i3), t3 = a3.element, a3._native = a3.options.useNative && n2.support.hasNativeScrolling, a3._native) return t3.addClass("km-native-scroller").prepend('<div class="km-scroll-header"/>'), void o2(a3, { scrollElement: t3, fixedContainer: t3.children().first() });
          t3.css("overflow", "hidden").addClass("km-scroll-wrapper").wrapInner('<div class="km-scroll-container"/>').prepend('<div class="km-scroll-header"/>');
          var r3 = t3.children().eq(1), l3 = new n2.TapCapture(t3), p3 = new d2(r3), h3 = new c2({ element: r3, container: t3, forcedEnabled: a3.options.zoom }), m3 = this.options.avoidScrolling, g3 = new n2.UserEvents(t3, { touchAction: "pan-y", fastTap: true, allowSelection: true, preventDragEvent: true, captureUpIfMoved: true, multiTouch: a3.options.zoom, supportDoubleTap: a3.options.supportDoubleTap, start: function(t4) {
            h3.refresh();
            var n3 = f2(t4.x.velocity), i4 = f2(t4.y.velocity), r4 = 2 * n3 >= i4, o3 = 2 * i4 >= n3;
            !e2.contains(a3.fixedContainer[0], t4.event.target) && !m3(t4) && a3.enabled && (h3.x.enabled && r4 || h3.y.enabled && o3) ? g3.capture() : g3.cancel();
          } }), k3 = new u2({ movable: p3, dimensions: h3, userEvents: g3, elastic: a3.options.elastic }), y2 = new b2({ movable: p3, dimensions: h3, userEvents: g3, tapCapture: l3 }), x2 = new w({ moveTo: function(e3) {
            a3.scrollTo(e3.x, e3.y);
          } });
          p3.bind(v2, function() {
            a3.scrollTop = -p3.y, a3.scrollLeft = -p3.x, a3.trigger(_2, { scrollTop: a3.scrollTop, scrollLeft: a3.scrollLeft });
          }), a3.options.mousewheelScrolling && t3.on("DOMMouseScroll mousewheel", this._wheelScroll.bind(this)), o2(a3, { movable: p3, dimensions: h3, zoomSnapBack: y2, animatedScroller: x2, userEvents: g3, pane: k3, tapCapture: l3, pulled: false, enabled: true, scrollElement: r3, scrollTop: 0, scrollLeft: 0, fixedContainer: t3.children().first() }), a3._initAxis("x"), a3._initAxis("y"), a3._wheelEnd = function() {
            a3._wheel = false, a3.userEvents.end(0, a3._wheelY);
          }, h3.refresh(), a3.options.pullToRefresh && a3._initPullToRefresh();
        }, _wheelScroll: function(e3) {
          if (!e3.ctrlKey) {
            this._wheel || (this._wheel = true, this._wheelY = 0, this.userEvents.press(0, this._wheelY)), clearTimeout(this._wheelTimeout), this._wheelTimeout = setTimeout(this._wheelEnd, 50);
            var t3 = n2.wheelDeltaY(e3);
            t3 && (this._wheelY += t3, this.userEvents.move(0, this._wheelY)), e3.preventDefault();
          }
        }, makeVirtual: function() {
          this.dimensions.y.makeVirtual();
        }, virtualSize: function(e3, t3) {
          this.dimensions.y.virtualSize(e3, t3);
        }, height: function() {
          return this.dimensions.y.size;
        }, scrollHeight: function() {
          return this.scrollElement[0].scrollHeight;
        }, scrollWidth: function() {
          return this.scrollElement[0].scrollWidth;
        }, options: { name: "Scroller", zoom: false, pullOffset: 140, visibleScrollHints: false, elastic: true, useNative: false, mousewheelScrolling: true, avoidScrolling: function() {
          return false;
        }, pullToRefresh: false, messages: { pullTemplate: "Pull to refresh", releaseTemplate: "Release to refresh", refreshTemplate: "Refreshing" } }, events: ["pull", _2, "resize"], _resize: function() {
          this._native || this.contentResized();
        }, setOptions: function(e3) {
          s2.fn.setOptions.call(this, e3), e3.pullToRefresh && this._initPullToRefresh();
        }, reset: function() {
          this._native ? this.scrollElement.scrollTop(0) : (this.movable.moveTo({ x: 0, y: 0 }), this._scale(1));
        }, contentResized: function() {
          this.dimensions.refresh(), this.pane.x.outOfBounds() && this.movable.moveAxis("x", this.dimensions.x.min), this.pane.y.outOfBounds() && this.movable.moveAxis("y", this.dimensions.y.min);
        }, zoomOut: function() {
          var e3 = this.dimensions;
          e3.refresh(), this._scale(e3.fitScale), this.movable.moveTo(e3.centerCoordinates());
        }, enable: function() {
          this.enabled = true;
        }, disable: function() {
          this.enabled = false;
        }, scrollTo: function(e3, t3) {
          this._native ? (n2.scrollLeft(this.scrollElement, f2(e3)), this.scrollElement.scrollTop(f2(t3))) : (this.dimensions.refresh(), this.movable.moveTo({ x: e3, y: t3 }));
        }, animatedScrollTo: function(e3, t3, n3) {
          var i3, a3;
          this._native ? this.scrollTo(e3, t3) : (i3 = { x: this.movable.x, y: this.movable.y }, a3 = { x: e3, y: t3 }, this.animatedScroller.setCoordinates(i3, a3), this.animatedScroller.setCallback(n3), this.animatedScroller.start());
        }, pullHandled: function() {
          var e3 = this;
          e3.refreshHint.removeClass(g2), e3.hintContainer.html(e3.pullTemplate({})), e3.yinertia.onEnd(), e3.xinertia.onEnd(), e3.userEvents.cancel();
        }, destroy: function() {
          s2.fn.destroy.call(this), this.userEvents && this.userEvents.destroy();
        }, _scale: function(e3) {
          this.dimensions.rescale(e3), this.movable.scaleTo(e3);
        }, _initPullToRefresh: function() {
          var e3 = this;
          e3.dimensions.y.forceEnabled(), e3.pullTemplate = n2.template(e3.options.messages.pullTemplate), e3.releaseTemplate = n2.template(e3.options.messages.releaseTemplate), e3.refreshTemplate = n2.template(e3.options.messages.refreshTemplate), e3.scrollElement.prepend('<span class="km-scroller-pull"><span class="km-icon"></span><span class="km-loading-left"></span><span class="km-loading-right"></span><span class="km-template">' + e3.pullTemplate({}) + "</span></span>"), e3.refreshHint = e3.scrollElement.children().first(), e3.hintContainer = e3.refreshHint.children(".km-template"), e3.pane.y.bind("change", e3._paneChange.bind(e3)), e3.userEvents.bind("end", e3._dragEnd.bind(e3));
        }, _dragEnd: function() {
          var e3 = this;
          e3.pulled && (e3.pulled = false, e3.refreshHint.removeClass(m2).addClass(g2), e3.hintContainer.html(e3.refreshTemplate({})), e3.yinertia.freeze(e3.options.pullOffset / 2), e3.trigger("pull"));
        }, _paneChange: function() {
          var e3 = this;
          e3.movable.y / 0.5 > e3.options.pullOffset ? e3.pulled || (e3.pulled = true, e3.refreshHint.removeClass(g2).addClass(m2), e3.hintContainer.html(e3.releaseTemplate({}))) : e3.pulled && (e3.pulled = false, e3.refreshHint.removeClass(m2), e3.hintContainer.html(e3.pullTemplate({})));
        }, _initAxis: function(e3) {
          var t3, i3 = this, a3 = i3.element.attr("id"), r3 = i3.movable, o3 = i3.dimensions[e3], s3 = i3.tapCapture, l3 = i3.pane[e3];
          a3 || (a3 = n2.guid(), i3.element.attr("id", a3)), t3 = new y({ axis: e3, movable: r3, dimension: o3, container: i3.element, alwaysVisible: i3.options.visibleScrollHints, controlsId: a3 }), o3.bind(v2, function() {
            t3.refresh();
          }), l3.bind(v2, function() {
            t3.show();
          }), i3[e3 + "inertia"] = new k2({ axis: e3, paneAxis: l3, movable: r3, tapCapture: s3, userEvents: i3.userEvents, dimension: o3, elastic: i3.options.elastic, friction: i3.options.friction || 0.96, velocityMultiplier: i3.options.velocityMultiplier || 10, end: function() {
            t3.hide(), i3.trigger("scrollEnd", { axis: e3, scrollTop: i3.scrollTop, scrollLeft: i3.scrollLeft });
          } });
        } });
        r2.plugin(x);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = i2.DataBoundWidget, o2 = /^\d+(\.\d+)?%$/i, s2 = "k-list-item", l2 = "k-table-row", d2 = "k-list-item-group-label", u2 = "k-selected", c2 = "k-focus", p2 = "k-hover", h2 = "change", f2 = "click", m2 = "listBound", g2 = "itemChange", v2 = "activate", _2 = "deactivate", b2 = ".k-table-group-row", k2 = ".VirtualList";
        function w(e3) {
          return e3[e3.length - 1];
        }
        function y(e3) {
          return e3 instanceof Array ? e3 : [e3];
        }
        function x(e3) {
          return "string" == typeof e3 || "number" == typeof e3 || "boolean" == typeof e3;
        }
        function C(e3, t3, n3) {
          var i3 = document.createElement(n3 || "div");
          return t3 && (i3.className = t3), e3.appendChild(i3), i3;
        }
        function T(n3, i3, a3) {
          var r3 = a3.template, s3 = this.options.columns && this.options.columns.length, l3 = i3.index % 2 == 1 ? "k-table-alt-row" : "";
          n3 = e2(n3), i3.item || (r3 = a3.placeholderTemplate), 0 === i3.index && this.header && i3.group && this.header.html(a3.fixedGroupTemplate(i3.group)), this.angular("cleanup", function() {
            return { elements: [n3] };
          }), n3.attr("data-uid", i3.item ? i3.item.uid : "").attr("data-offset-index", i3.index), s3 && i3.item ? (l3.length > 0 ? n3.addClass(l3) : n3.removeClass("k-table-alt-row"), n3.html(function(e3, t3, n4) {
            for (var i4 = "", a4 = 0; a4 < e3.columns.length; a4++) {
              var r4 = e3.columns[a4].width, s4 = parseInt(r4, 10), l4 = "";
              r4 && (l4 += "style='width:", l4 += s4, l4 += o2.test(r4) ? "%" : "px", l4 += ";'"), i4 += "<span class='k-table-td' " + l4 + ">", i4 += n4["column" + a4](t3), i4 += "</span>";
            }
            return i4;
          }(this.options, i3.item, a3))) : (n3.find("." + d2).remove(), n3.find(".k-list-item-text").html(r3(i3.item || {}))), n3.toggleClass(c2, i3.current), n3.toggleClass(u2, i3.selected), n3.toggleClass("k-first", i3.newGroup), n3.toggleClass("k-last", i3.isLastGroupedItem), n3.toggleClass("k-loading-item", !i3.item), 0 !== i3.index && i3.newGroup ? s3 ? e2('<span class="k-table-td k-table-group-td"><span>' + a3.groupTemplate(i3.group) + "</span></span>").appendTo(n3) : e2("<div class=" + d2 + "></div>").appendTo(n3).html(a3.groupTemplate(i3.group)) : i3.group && s3 && n3.append(e2('<span class="k-table-td k-table-spacer-td"></span>')), i3.top !== t2 && function(e3, t3) {
            e3.style.webkitTransform = "translateY(" + t3 + "px)", e3.style.transform = "translateY(" + t3 + "px)";
          }(n3[0], i3.top), this.angular("compile", function() {
            return { elements: [n3], data: [{ dataItem: i3.item, group: i3.group, newGroup: i3.newGroup }] };
          });
        }
        function S(e3) {
          return e3 && "resolved" !== e3.state();
        }
        var I = r2.extend({ init: function(t3, i3) {
          var r3, o3, s3, l3 = this, d3 = i3.columns && i3.columns.length ? "k-table-body k-table-scroller" : "k-list-content k-virtual-content";
          if (l3.bound(false), l3._fetching = false, a2.fn.init.call(l3, t3, i3), l3.options.itemHeight || (l3.options.itemHeight = (r3 = i3.listSize, (s3 = e2('<div class="k-list ' + r3 + ' k-virtual-list"><div class="k-list-content k-virtual-content"><ul class="k-list-ul"><li class="k-list-item"><span class="k-list-item-text">test</span></li></ul></div></div>')).css({ position: "absolute", left: "-200000px", visibility: "hidden" }), s3.appendTo(document.body), o3 = parseFloat(n2.getComputedStyles(s3.find(".k-list-item")[0], ["height"]).height), s3.remove(), o3)), i3 = l3.options, l3.element.attr("role", "listbox"), l3.content = l3.wrapper = l3.element.wrap("<div unselectable='on' class='" + d3 + "'></div>").parent(), l3.options.columns && l3.options.columns.length) {
            var u3 = l3.element.closest(".k-data-table").find(".k-table-thead"), c3 = e2('<tr class="k-table-group-row"><th class="k-table-th" colspan="' + l3.options.columns.length + '"></th></tr>');
            u3.append(c3), l3.header = c3.find(".k-table-th"), l3.element.addClass("k-table-list k-virtual-table");
          } else l3.header = l3.content.before("<div class='k-list-group-sticky-header'></div>").prev(), l3.element.addClass("k-list-ul");
          i3.ariaLabel ? this.element.attr("aria-label", i3.ariaLabel) : i3.ariaLabelledBy && this.element.attr("aria-labelledby", i3.ariaLabelledBy), l3.element.on("mouseenter.VirtualList", "li:not(.k-loading-item)", function() {
            e2(this).addClass(p2);
          }).on("mouseleave.VirtualList", "li", function() {
            e2(this).removeClass(p2);
          }), l3._values = y(l3.options.value), l3._selectedDataItems = [], l3._selectedIndexes = [], l3._rangesList = {}, l3._promisesList = [], l3._optionID = n2.guid(), l3._templates(), l3.setDataSource(i3.dataSource), l3.content.on("scroll.VirtualList", n2.throttle(function() {
            l3._renderItems(), l3._triggerListBound();
          }, i3.delay)), l3._selectable();
        }, options: { name: "VirtualList", autoBind: true, delay: 100, height: null, listScreens: 4, threshold: 0.5, itemHeight: null, oppositeBuffer: 1, type: "flat", selectable: false, value: [], dataValueField: null, template: "#:data#", placeholderTemplate: "loading...", groupTemplate: "#:data#", fixedGroupTemplate: "#:data#", mapValueTo: "index", valueMapper: null, ariaLabel: null, ariaLabelledBy: null }, events: [h2, f2, m2, g2, v2, _2], setOptions: function(e3) {
          var t3 = this.options.columns && this.options.columns.length ? l2 : s2;
          a2.fn.setOptions.call(this, e3), this._selectProxy && false === this.options.selectable ? this.element.off(f2, "." + t3, this._selectProxy) : !this._selectProxy && this.options.selectable && this._selectable(), this._templates(), this.refresh();
        }, items: function() {
          return e2(this._items);
        }, destroy: function() {
          this.wrapper.off(k2), this.dataSource.unbind(h2, this._refreshHandler), a2.fn.destroy.call(this);
        }, setDataSource: function(e3) {
          var t3, i3 = this, a3 = e3 || {};
          a3 = Array.isArray(a3) ? { data: a3 } : a3, a3 = n2.data.DataSource.create(a3), i3.dataSource ? (i3.dataSource.unbind(h2, i3._refreshHandler), i3._clean(), i3.bound(false), i3._deferValueSet = true, t3 = i3.value(), i3.value([]), i3.mute(function() {
            i3.value(t3);
          })) : i3._refreshHandler = i3.refresh.bind(i3), i3.dataSource = a3.bind(h2, i3._refreshHandler), i3.setDSFilter(a3.filter()), 0 !== a3.view().length ? i3.refresh() : i3.options.autoBind && a3.fetch();
        }, skip: function() {
          return this.dataSource.currentRangeStart();
        }, _triggerListBound: function() {
          var e3 = this, t3 = e3.skip();
          e3.bound() && !e3._selectingValue && e3._skip !== t3 && (e3._skip = t3, e3.trigger(m2));
        }, _getValues: function(t3) {
          var n3 = this._valueGetter;
          return e2.map(t3, function(e3) {
            return n3(e3);
          });
        }, _highlightSelectedItems: function() {
          for (var e3 = 0; e3 < this._selectedDataItems.length; e3++) {
            var t3 = this._getElementByDataItem(this._selectedDataItems[e3]);
            t3.length && t3.addClass(u2);
          }
        }, refresh: function(e3) {
          var t3, n3 = this, i3 = e3 && e3.action, a3 = "itemchange" === i3, r3 = this.isFiltered();
          n3._mute || (n3._deferValueSet = false, n3._fetching ? (n3._renderItems && n3._renderItems(true), n3._triggerListBound()) : (r3 && n3.focus(0), n3._createList(), i3 || !n3._values.length || r3 || n3.options.skipUpdateOnBind || n3._emptySearch ? (n3.bound(true), n3._highlightSelectedItems(), n3._triggerListBound()) : (n3._selectingValue = true, n3.bound(true), n3.value(n3._values, true).done(function() {
            n3._selectingValue = false, n3._triggerListBound();
          }))), (a3 || "remove" === i3) && (t3 = function(e4, t4) {
            var n4, i4, a4, r4, o3 = t4.length, s3 = e4.length, l3 = [], d3 = [];
            if (s3) for (a4 = 0; a4 < s3; a4++) {
              for (n4 = e4[a4], i4 = false, r4 = 0; r4 < o3; r4++) if (n4 === t4[r4]) {
                i4 = true, l3.push({ index: a4, item: n4 });
                break;
              }
              i4 || d3.push(n4);
            }
            return { changed: l3, unchanged: d3 };
          }(n3._selectedDataItems, e3.items)).changed.length && (a3 ? n3.trigger("selectedItemChange", { items: t3.changed }) : n3.value(n3._getValues(t3.unchanged))), n3._fetching = false);
        }, removeAt: function(e3) {
          var t3 = this._values.splice(e3, 1)[0];
          return { position: e3, dataItem: this._removeSelectedDataItem(t3) };
        }, _removeSelectedDataItem: function(e3) {
          var t3 = this, n3 = t3._valueGetter;
          for (var i3 in t3._selectedDataItems) if (n3(t3._selectedDataItems[i3]) === e3) return t3._selectedIndexes.splice(i3, 1), t3._selectedDataItems.splice(i3, 1)[0];
        }, setValue: function(e3) {
          this._values = y(e3);
        }, value: function(n3, i3) {
          var a3 = this;
          return n3 === t2 ? a3._values.slice() : (null === n3 && (n3 = []), n3 = y(n3), a3._valueDeferred && "resolved" !== a3._valueDeferred.state() || (a3._valueDeferred = e2.Deferred()), !("multiple" === a3.options.selectable && a3.select().length && n3.length) && n3.length || a3.select(-1), a3._values = n3, (a3.bound() && !a3._mute && !a3._deferValueSet || i3) && a3._prefetchByValue(n3), a3._valueDeferred);
        }, _checkValuesOrder: function(e3) {
          if (this._removedAddedIndexes && this._removedAddedIndexes.length === e3.length) {
            var t3 = this._removedAddedIndexes.slice();
            return this._removedAddedIndexes = null, t3;
          }
          return e3;
        }, _prefetchByValue: function(e3) {
          for (var t3, n3 = this, i3 = n3._dataView, a3 = n3._valueGetter, r3 = n3.options.mapValueTo, o3 = [], s3 = 0; s3 < e3.length; s3++) for (var l3 = 0; l3 < i3.length; l3++) (t3 = i3[l3].item) && (x(t3) ? e3[s3] === t3 : e3[s3] === a3(t3)) && o3.push(i3[l3].index);
          if (o3.length === e3.length) return n3._values = [], void n3.select(o3);
          "function" == typeof n3.options.valueMapper ? n3.options.valueMapper({ value: "multiple" === this.options.selectable ? e3 : e3[0], success: function(e4) {
            "index" === r3 ? n3.mapValueToIndex(e4) : "dataItem" === r3 && n3.mapValueToDataItem(e4);
          } }) : n3.value()[0] ? (n3._selectingValue = false, n3._triggerListBound()) : n3.select([-1]);
        }, mapValueToIndex: function(e3) {
          if ((e3 = e3 === t2 || -1 === e3 || null === e3 ? [] : y(e3)).length) {
            var n3 = this._deselect([]).removed;
            n3.length && this._triggerChange(n3, []);
          } else e3 = [-1];
          this.select(e3);
        }, mapValueToDataItem: function(n3) {
          var i3, a3;
          if ((n3 = n3 === t2 || null === n3 ? [] : y(n3)).length) {
            i3 = e2.map(this._selectedDataItems, function(e3, t3) {
              return { index: t3, dataItem: e3 };
            }), a3 = e2.map(n3, function(e3, t3) {
              return { index: t3, dataItem: e3 };
            }), this._selectedDataItems = n3, this._selectedIndexes = [];
            for (var r3 = 0; r3 < this._selectedDataItems.length; r3++) {
              var o3 = this._getElementByDataItem(this._selectedDataItems[r3]);
              this._selectedIndexes.push(this._getIndecies(o3)[0]), o3.addClass(u2);
            }
            this._triggerChange(i3, a3), this._valueDeferred && this._valueDeferred.resolve();
          } else this.select([-1]);
        }, deferredRange: function(t3) {
          var n3 = this.dataSource, i3 = this.itemCount, a3 = this._rangesList, r3 = e2.Deferred(), o3 = [], s3 = Math.floor(t3 / i3) * i3, l3 = Math.ceil(t3 / i3) * i3, d3 = l3 === s3 ? [l3] : [s3, l3];
          return e2.each(d3, function(t4, r4) {
            var s4, l4 = r4 + i3, d4 = a3[r4];
            d4 && d4.end === l4 ? s4 = d4.deferred : (s4 = e2.Deferred(), a3[r4] = { end: l4, deferred: s4 }, n3._multiplePrefetch(r4, i3, function() {
              s4.resolve();
            })), o3.push(s4);
          }), e2.when.apply(e2, o3).then(function() {
            r3.resolve();
          }), r3;
        }, prefetch: function(t3) {
          var n3 = this, i3 = this.itemCount, a3 = !n3._promisesList.length;
          return S(n3._activeDeferred) || (n3._activeDeferred = e2.Deferred(), n3._promisesList = []), e2.each(t3, function(e3, t4) {
            n3._promisesList.push(n3.deferredRange(n3._getSkip(t4, i3)));
          }), a3 && e2.when.apply(e2, n3._promisesList).done(function() {
            n3._promisesList = [], n3._activeDeferred.resolve();
          }), n3._activeDeferred;
        }, _findDataItem: function(e3, t3) {
          var n3;
          if ("group" === this.options.type) for (var i3 = 0; i3 < e3.length; i3++) {
            if (!((n3 = e3[i3].items).length <= t3)) return n3[t3];
            t3 -= n3.length;
          }
          return e3[t3];
        }, _getRange: function(e3, t3) {
          return this.dataSource._findRange(e3, Math.min(e3 + t3, this.dataSource.total()));
        }, dataItemByIndex: function(t3) {
          var i3 = this, a3 = i3.itemCount, r3 = i3._getSkip(t3, a3), o3 = this._getRange(r3, a3);
          return i3._getRange(r3, a3).length ? ("group" === i3.options.type && (n2.ui.progress(e2(i3.wrapper), true), i3.mute(function() {
            i3.dataSource.range(r3, a3, function() {
              n2.ui.progress(e2(i3.wrapper), false);
            }), o3 = i3.dataSource.view();
          })), i3._findDataItem(o3, [t3 - r3])) : null;
        }, selectedDataItems: function() {
          return this._selectedDataItems.slice();
        }, scrollWith: function(e3) {
          this.content.scrollTop(this.content.scrollTop() + e3);
        }, scrollTo: function(e3) {
          this.content.scrollTop(e3);
        }, scrollToIndex: function(e3) {
          this.scrollTo(e3 * this.options.itemHeight);
        }, focus: function(n3) {
          var i3, a3, r3, o3, s3 = this.options.itemHeight, l3 = this._optionID, d3 = true;
          if (n3 === t2) return (o3 = this.element.find(".k-focus")).length ? o3 : null;
          if ("function" == typeof n3) {
            r3 = this.dataSource.flatView();
            for (var u3 = 0; u3 < r3.length; u3++) if (n3(r3[u3])) {
              n3 = u3;
              break;
            }
          }
          if (n3 instanceof Array && (n3 = w(n3)), isNaN(n3) ? (i3 = e2(n3), a3 = parseInt(e2(i3).attr("data-offset-index"), 10)) : (a3 = n3, i3 = this._getElementByIndex(a3)), -1 === a3) return this.element.find(".k-focus").removeClass(c2), void (this._focusedIndex = t2);
          if (i3.length) {
            i3.hasClass(c2) && (d3 = false), this._focusedIndex !== t2 && ((o3 = this._getElementByIndex(this._focusedIndex)).removeClass(c2).removeAttr("id"), d3 && this.trigger(_2)), this._focusedIndex = a3, i3.addClass(c2).attr("id", l3);
            var p3 = this._getElementLocation(a3);
            "top" === p3 ? this.scrollTo(a3 * s3) : "bottom" === p3 ? this.scrollTo(a3 * s3 + s3 - this._screenHeight) : "outScreen" === p3 && this.scrollTo(a3 * s3), d3 && this.trigger(v2);
          } else this._focusedIndex = a3, this.items().removeClass(c2), this.scrollToIndex(a3);
        }, focusIndex: function() {
          return this._focusedIndex;
        }, focusFirst: function() {
          this.scrollTo(0), this.focus(0);
        }, focusLast: function() {
          var e3 = this.dataSource.total();
          this.scrollTo(this.heightContainer.offsetHeight), this.focus(e3 - 1);
        }, focusPrev: function() {
          var e3, t3 = this._focusedIndex;
          return !isNaN(t3) && t3 > 0 ? (t3 -= 1, this.focus(t3), (e3 = this.focus()) && e3.hasClass("k-loading-item") && (t3 += 1, this.focus(t3)), t3) : (t3 = this.dataSource.total() - 1, this.focus(t3), t3);
        }, focusNext: function() {
          var e3, t3 = this._focusedIndex, n3 = this.dataSource.total() - 1;
          return !isNaN(t3) && t3 < n3 ? (t3 += 1, this.focus(t3), (e3 = this.focus()) && e3.hasClass("k-loading-item") && (t3 -= 1, this.focus(t3)), t3) : (t3 = 0, this.focus(t3), t3);
        }, _triggerChange: function(e3, t3) {
          t3 = t3 || [], ((e3 = e3 || []).length || t3.length) && this.trigger(h2, { removed: e3, added: t3 });
        }, select: function(n3) {
          var i3, a3, r3, o3, s3, l3 = this, d3 = "multiple" !== l3.options.selectable, u3 = S(l3._activeDeferred), c3 = this.isFiltered(), p3 = [];
          if (n3 === t2) return l3._selectedIndexes.slice();
          if (l3._selectDeferred && "resolved" !== l3._selectDeferred.state() || (l3._selectDeferred = e2.Deferred()), i3 = l3._getIndecies(n3), r3 = d3 && !c3 && w(i3) === w(this._selectedIndexes), (p3 = l3._deselectCurrentValues(i3)).length || !i3.length || r3) return l3._triggerChange(p3), l3._valueDeferred && l3._valueDeferred.resolve().promise(), l3._selectDeferred.resolve().promise();
          1 === i3.length && -1 === i3[0] && (i3 = []), a3 = i3, s3 = l3._deselect(i3), p3 = s3.removed, i3 = s3.indices, d3 && (u3 = false, i3.length && (i3 = [w(i3)]));
          var h3 = function() {
            var e3 = l3._select(i3);
            (a3.length === i3.length || d3) && l3.focus(i3), l3._triggerChange(p3, e3), l3._valueDeferred && l3._valueDeferred.resolve(), l3._selectDeferred.resolve();
          };
          return o3 = l3.prefetch(i3), u3 || (o3 ? o3.done(h3) : h3()), l3._selectDeferred.promise();
        }, bound: function(e3) {
          if (e3 === t2) return this._listCreated;
          this._listCreated = e3;
        }, mute: function(e3) {
          this._mute = true, e3(), this._mute = false;
        }, setDSFilter: function(t3) {
          this._lastDSFilter = e2.extend({}, t3);
        }, isFiltered: function() {
          return this._lastDSFilter || this.setDSFilter(this.dataSource.filter()), !n2.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);
        }, skipUpdate: e2.noop, _getElementByIndex: function(t3) {
          return this.items().filter(function(n3, i3) {
            return t3 === parseInt(e2(i3).attr("data-offset-index"), 10);
          });
        }, _getElementByDataItem: function(t3) {
          for (var n3, i3 = this._dataView, a3 = this._valueGetter, r3 = 0; r3 < i3.length; r3++) if (i3[r3].item && x(i3[r3].item) ? i3[r3].item === t3 : i3[r3].item && t3 && a3(i3[r3].item) == a3(t3)) {
            n3 = i3[r3];
            break;
          }
          return n3 ? this._getElementByIndex(n3.index) : e2();
        }, _clean: function() {
          this.result = t2, this._lastScrollTop = t2, this._skip = t2, e2(this.heightContainer).remove(), this.heightContainer = t2, this.element.empty();
        }, _height: function() {
          var e3 = !!this.dataSource.view().length, t3 = this.options.height, n3 = this.options.itemHeight, i3 = this.dataSource.total();
          return e3 ? t3 / n3 > i3 && (t3 = i3 * n3) : t3 = 0, t3;
        }, setScreenHeight: function() {
          var e3 = this._height();
          this.content.height(e3), this._screenHeight = e3;
        }, screenHeight: function() {
          return this._screenHeight;
        }, _getElementLocation: function(e3) {
          var t3 = this.content.scrollTop(), n3 = this._screenHeight, i3 = this.options.itemHeight, a3 = e3 * i3, r3 = a3 + i3, o3 = t3 + n3;
          return a3 === t3 - i3 || r3 > t3 && a3 < t3 ? "top" : a3 === o3 || a3 < o3 && o3 < r3 ? "bottom" : a3 >= t3 && a3 <= t3 + (n3 - i3) ? "inScreen" : "outScreen";
        }, _templates: function() {
          var e3 = this.options, t3 = { template: e3.template, placeholderTemplate: e3.placeholderTemplate, groupTemplate: e3.groupTemplate, fixedGroupTemplate: e3.fixedGroupTemplate };
          if (e3.columns) for (var i3 = 0; i3 < e3.columns.length; i3++) {
            var a3 = e3.columns[i3], r3 = a3.field ? a3.field.toString() : "text";
            t3["column" + i3] = a3.template || "#: " + r3 + "#";
          }
          for (var o3 in t3) "function" != typeof t3[o3] && (t3[o3] = n2.template(t3[o3] || ""));
          this.templates = t3;
        }, _generateItems: function(e3, t3) {
          for (var n3, i3, a3 = [], r3 = this.options.itemHeight + "px", o3 = this.options.columns && this.options.columns.length ? l2 : s2; t3-- > 0; ) (i3 = document.createElement("span")).className = "k-list-item-text", (n3 = document.createElement("li")).tabIndex = -1, n3.className = o3, n3.setAttribute("role", "option"), n3.style.height = r3, n3.style.minHeight = r3, n3.appendChild(i3), e3.appendChild(n3), a3.push(n3);
          return a3;
        }, _saveInitialRanges: function() {
          var t3 = this.dataSource._ranges, n3 = e2.Deferred();
          n3.resolve(), this._rangesList = {};
          for (var i3 = 0; i3 < t3.length; i3++) this._rangesList[t3[i3].start] = { end: t3[i3].end, deferred: n3 };
        }, _createList: function() {
          var e3, t3, n3, i3, a3, r3, o3 = this, s3 = o3.content.get(0), l3 = o3.options, d3 = o3.dataSource;
          o3.bound() && o3._clean(), o3._saveInitialRanges(), o3._buildValueGetter(), o3.setScreenHeight(), o3.itemCount = (e3 = o3._screenHeight, t3 = l3.listScreens, n3 = l3.itemHeight, Math.ceil(e3 * t3 / n3)), o3.itemCount > d3.total() && (o3.itemCount = d3.total()), o3._items = o3._generateItems(o3.element[0], o3.itemCount), o3._setHeight(l3.itemHeight * d3.total()), o3.options.type = (d3.group() || []).length ? "group" : "flat", "flat" === o3.options.type ? o3.header.closest(b2).length ? o3.header.closest(b2).hide() : o3.header.hide() : o3.header.closest(b2).length ? o3.header.closest(b2).show() : o3.header.show(), o3.getter = o3._getter(function() {
            o3._renderItems(true);
          }), o3._onScroll = function(e4, t4) {
            var n4 = o3._listItems(o3.getter);
            return o3._fixedHeader(e4, n4(e4, t4));
          }, o3._renderItems = o3._whenChanged((a3 = s3, r3 = o3._onScroll, function(e4) {
            return r3(a3.scrollTop, e4);
          }), (i3 = o3._reorderList(o3._items, T.bind(o3)), function(e4, t4) {
            return i3(e4.items, e4.index, t4), e4;
          })), o3._renderItems(), o3._calculateGroupPadding(o3._screenHeight), o3._calculateColumnsHeaderPadding();
        }, _setHeight: function(e3) {
          var t3, n3 = this.heightContainer;
          if (n3 ? t3 = n3.offsetHeight : n3 = this.heightContainer = C(this.content[0], "k-height-container"), e3 !== t3) for (n3.innerHTML = ""; e3 > 0; ) {
            var i3 = Math.min(e3, 25e4);
            C(n3).style.height = i3 + "px", e3 -= i3;
          }
        }, _getter: function() {
          var e3 = null, t3 = this.dataSource, n3 = t3.skip(), i3 = this.options.type, a3 = this.itemCount, r3 = {};
          return t3.pageSize() < a3 && this.mute(function() {
            t3.pageSize(a3);
          }), function(o3, s3) {
            var l3 = this;
            if (t3.inRange(s3, a3)) {
              var d3;
              if (n3 !== s3 && this.mute(function() {
                t3.range(s3, a3), n3 = s3;
              }), "group" === i3) {
                if (!r3[s3]) for (var u3 = r3[s3] = [], c3 = t3.view(), p3 = 0, h3 = c3.length; p3 < h3; p3++) for (var f3 = c3[p3], m3 = 0, g3 = f3.items.length; m3 < g3; m3++) u3.push({ item: f3.items[m3], group: f3.value });
                d3 = r3[s3][o3 - s3];
              } else d3 = t3.view()[o3 - s3];
              return d3;
            }
            return e3 !== s3 && (e3 = s3, n3 = s3, l3._getterDeferred && l3._getterDeferred.reject(), l3._getterDeferred = l3.deferredRange(s3), l3._getterDeferred.then(function() {
              var e4 = l3._indexConstraint(l3.content[0].scrollTop);
              l3._getterDeferred = null, s3 <= e4 && e4 <= s3 + a3 && (l3._fetching = true, t3.range(s3, a3));
            })), null;
          };
        }, _fixedHeader: function(e3, t3) {
          var n3 = this.currentVisibleGroup, i3 = this.options.itemHeight, a3 = Math.floor((e3 - t3.top) / i3), r3 = t3.items[a3];
          if (r3 && r3.item) {
            var o3 = r3.group;
            if (o3 !== n3) {
              var s3 = o3 || "";
              this.header.html(this.templates.fixedGroupTemplate(s3)), this.currentVisibleGroup = o3;
            }
          }
          return t3;
        }, _itemMapper: function(e3, t3, n3) {
          var i3 = this.options.type, a3 = this.options.itemHeight, r3 = this._focusedIndex, o3 = false, s3 = false, l3 = false, d3 = null, u3 = this._valueGetter;
          if ("group" === i3 && (e3 && (l3 = 0 === t3 || false !== this._currentGroup && this._currentGroup !== e3.group, this._currentGroup = e3.group), d3 = e3 ? e3.group : null, e3 = e3 ? e3.item : null), "dataItem" === this.options.mapValueTo && this._selectedDataItems.length && e3) {
            for (var c3 = 0; c3 < this._selectedDataItems.length; c3++) if (u3(this._selectedDataItems[c3]) === u3(e3)) {
              o3 = true;
              break;
            }
          } else if (!this.isFiltered() && n3.length && e3) {
            for (var p3 = 0; p3 < n3.length; p3++) if (x(e3) ? n3[p3] === e3 : n3[p3] === u3(e3)) {
              n3.splice(p3, 1), o3 = true;
              break;
            }
          }
          return r3 === t3 && (s3 = true), { item: e3 || null, group: d3, newGroup: l3, selected: o3, current: s3, index: t3, top: t3 * a3 };
        }, _range: function(e3) {
          var t3, n3 = this.itemCount, i3 = this._values.slice(), a3 = [];
          this._view = {}, this._currentGroup = false;
          for (var r3 = e3, o3 = e3 + n3; r3 < o3; r3++) t3 = this._itemMapper(this.getter(r3, e3), r3, i3), a3[a3.length - 1] && (a3[a3.length - 1].isLastGroupedItem = t3.newGroup), a3.push(t3), this._view[t3.index] = t3;
          return this._dataView = a3, a3;
        }, _getDataItemsCollection: function(e3, t3) {
          var n3 = this._range(this._listIndex(e3, t3));
          return { index: n3.length ? n3[0].index : 0, top: n3.length ? n3[0].top : 0, items: n3 };
        }, _listItems: function() {
          var e3 = this._screenHeight, t3 = function(e4, t4) {
            var n3 = (e4.listScreens - 1 - e4.threshold) * t4, i3 = e4.threshold * t4;
            return function(e5, t5, a3) {
              return t5 > a3 ? t5 - e5.top < n3 : 0 === e5.top || t5 - e5.top > i3;
            };
          }(this.options, e3);
          return function(e4, n3) {
            var i3 = this.result, a3 = this._lastScrollTop;
            return !n3 && i3 && t3(i3, e4, a3) || (i3 = this._getDataItemsCollection(e4, a3)), this._lastScrollTop = e4, this.result = i3, i3;
          }.bind(this);
        }, _whenChanged: function(e3, t3) {
          var n3;
          return function(i3) {
            var a3 = e3(i3);
            a3 !== n3 && (n3 = a3, t3(a3, i3));
          };
        }, _reorderList: function(t3, i3) {
          var a3, r3, o3 = this, s3 = t3.length, l3 = -1 / 0;
          return i3 = (a3 = i3, r3 = this.templates, function(t4, i4) {
            for (var o4 = 0, s4 = t4.length; o4 < s4; o4++) a3(t4[o4], i4[o4], r3), i4[o4].item && this.trigger(g2, { item: e2(t4[o4]), data: i4[o4].item, ns: n2.ui });
          }).bind(this), function(e3, n3, a4) {
            var r4, d3, u3 = n3 - l3;
            a4 || Math.abs(u3) >= s3 ? (r4 = t3, d3 = e3) : (r4 = function(e4, t4) {
              var n4;
              return t4 > 0 ? (n4 = e4.splice(0, t4), e4.push.apply(e4, n4)) : (n4 = e4.splice(t4, -t4), e4.unshift.apply(e4, n4)), n4;
            }(t3, u3), d3 = u3 > 0 ? e3.slice(-u3) : e3.slice(0, -u3)), i3(r4, d3, o3.bound()), l3 = n3;
          };
        }, _bufferSizes: function() {
          var e3, t3, n3, i3 = this.options;
          return e3 = this._screenHeight, t3 = i3.listScreens, n3 = i3.oppositeBuffer, { down: e3 * n3, up: e3 * (t3 - 1 - n3) };
        }, _indexConstraint: function(e3) {
          var t3 = this.itemCount, n3 = this.options.itemHeight, i3 = this.dataSource.total();
          return Math.min(Math.max(i3 - t3, 0), Math.max(0, Math.floor(e3 / n3)));
        }, _listIndex: function(e3, t3) {
          var n3, i3 = this._bufferSizes();
          return n3 = e3 - (e3 > t3 ? i3.down : i3.up), this._indexConstraint(n3);
        }, _selectable: function() {
          var e3 = this.options.columns && this.options.columns.length ? l2 : s2;
          this.options.selectable && (this._selectProxy = this._clickHandler.bind(this), this.element.on("click.VirtualList", "." + e3, this._selectProxy));
        }, getElementIndex: function(e3) {
          return e3 instanceof jQuery2 ? parseInt(e3.attr("data-offset-index"), 10) : t2;
        }, _getIndecies: function(e3) {
          var t3, n3 = [];
          if ("function" == typeof e3) {
            t3 = this.dataSource.flatView();
            for (var i3 = 0; i3 < t3.length; i3++) if (e3(t3[i3])) {
              n3.push(i3);
              break;
            }
          }
          "number" == typeof e3 && n3.push(e3);
          var a3 = this.getElementIndex(e3);
          return isNaN(a3) || n3.push(a3), e3 instanceof Array && (n3 = e3), n3;
        }, _deselect: function(n3) {
          var i3, a3, r3, o3 = [], s3 = this._selectedIndexes, l3 = this._selectedDataItems, d3 = 0, c3 = this.options.selectable, p3 = 0, h3 = this._valueGetter, f3 = null;
          if (n3 = n3.slice(), true !== c3 && n3.length) {
            if ("multiple" === c3) for (var m3 = 0; m3 < n3.length; m3++) {
              if (f3 = null, d3 = e2.inArray(n3[m3], s3), a3 = this.dataItemByIndex(n3[m3]), -1 === d3 && a3) for (var g3 = 0; g3 < l3.length; g3++) (x(a3) ? l3[g3] === a3 : h3(l3[g3]) === h3(a3)) && (r3 = this._getElementByIndex(n3[m3]), f3 = this._deselectSingleItem(r3, g3, n3[m3], p3));
              else (i3 = s3[d3]) !== t2 && (r3 = this._getElementByIndex(i3), f3 = this._deselectSingleItem(r3, d3, i3, p3));
              f3 && (n3.splice(m3, 1), o3.push(f3), p3++, m3--);
            }
          } else {
            for (var v3 = 0; v3 < s3.length; v3++) s3[v3] !== t2 ? this._getElementByIndex(s3[v3]).removeClass(u2) : l3[v3] && this._getElementByDataItem(l3[v3]).removeClass(u2), o3.push({ index: s3[v3], position: v3, dataItem: l3[v3] });
            this._values = [], this._selectedDataItems = [], this._selectedIndexes = [];
          }
          return { indices: n3, removed: o3 };
        }, _deselectSingleItem: function(e3, t3, n3, i3) {
          if (e3.hasClass(u2)) return e3.removeClass(u2), this._values.splice(t3, 1), this._selectedIndexes.splice(t3, 1), { index: n3, position: t3 + i3, dataItem: this._selectedDataItems.splice(t3, 1)[0] };
        }, _deselectCurrentValues: function(t3) {
          var n3, i3, a3, r3, o3 = this.element[0].children, s3 = this._values, l3 = [], d3 = 0;
          if ("multiple" !== this.options.selectable || !this.isFiltered()) return [];
          if (-1 === t3[0]) return e2(o3).removeClass(u2), l3 = e2.map(this._selectedDataItems.slice(0), function(e3, t4) {
            return { dataItem: e3, position: t4 };
          }), this._selectedIndexes = [], this._selectedDataItems = [], this._values = [], l3;
          for (; d3 < t3.length; d3++) {
            for (a3 = -1, i3 = t3[d3], this.dataItemByIndex(i3) && (n3 = this._valueGetter(this.dataItemByIndex(i3))), r3 = 0; r3 < s3.length; r3++) if (n3 == s3[r3]) {
              a3 = r3;
              break;
            }
            a3 > -1 && (l3.push(this.removeAt(a3)), e2(o3[i3]).removeClass(u2));
          }
          return l3;
        }, _getSkip: function(e3, t3) {
          return ((e3 < t3 ? 1 : Math.floor(e3 / t3) + 1) - 1) * t3;
        }, _select: function(t3) {
          var n3, i3, a3 = this, r3 = "multiple" !== this.options.selectable, o3 = this.dataSource, s3 = this.itemCount, l3 = this._valueGetter, d3 = [];
          return r3 && (a3._selectedIndexes = [], a3._selectedDataItems = [], a3._values = []), i3 = o3.skip(), e2.each(t3, function(e3, t4) {
            var r4 = a3._getSkip(t4, s3);
            a3.mute(function() {
              o3.range(r4, s3), n3 = a3._findDataItem(o3.view(), [t4 - r4]), a3._selectedIndexes.push(t4), a3._selectedDataItems.push(n3), a3._values.push(x(n3) ? n3 : l3(n3)), d3.push({ index: t4, dataItem: n3 }), a3._getElementByIndex(t4).addClass(u2), o3.range(i3, s3);
            });
          }), a3._values = a3._checkValuesOrder(a3._values), d3;
        }, _clickHandler: function(t3) {
          var n3 = e2(t3.currentTarget);
          !t3.isDefaultPrevented() && n3.attr("data-uid") && this.trigger(f2, { item: n3 });
        }, _buildValueGetter: function() {
          this._valueGetter = n2.getter(this.options.dataValueField);
        }, _calculateGroupPadding: function(e3) {
          var t3 = this.items().first(), i3 = this.header, a3 = 0;
          i3[0] && "none" !== i3[0].style.display && ("auto" !== e3 && (a3 = n2.support.scrollbar()), a3 += parseFloat(t3.css("border-right-width"), 10) + parseFloat(t3.children(".k-group").css("right"), 10), i3.css("padding-right", a3));
        }, _calculateColumnsHeaderPadding: function() {
          if (this.options.columns && this.options.columns.length) {
            var e3 = n2.support.isRtl(this.wrapper), t3 = n2.support.scrollbar(), i3 = this.content.parent().parent().find(".k-table-header"), a3 = this.dataSource.total();
            i3.css(e3 ? "padding-left" : "padding-right", a3 ? t3 : 0);
          }
        } });
        n2.ui.VirtualList = I, n2.ui.plugin(I);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class;
        n2.html = n2.html || {};
        var a2 = i2.extend({ init: function(t3, n3) {
          this.element = e2(t3), delete (n3 = n3 || {}).name, this._initOptions(n3);
        }, options: { stylingOptions: [] }, _addClasses: function() {
          var e3 = this, t3 = e3.options, i3 = t3.stylingOptions, a3 = e3.wrapper.data("added-classes");
          i3 = i3.map(function(e4) {
            var i4;
            return "themeColor" !== e4 || (i4 = n2.cssProperties.getValidClass({ widget: t3.name, propName: "fillMode", value: t3.fillMode })) && 0 !== i4.length ? n2.cssProperties.getValidClass({ widget: t3.name, propName: e4, value: t3[e4], fill: t3.fillMode }) : "";
          }), a3 && e3.wrapper.removeClass(a3.join(" ")), e3.wrapper.data("added-classes", i3), e3.wrapper.addClass(i3.join(" "));
        }, html: function() {
          return this.wrapper[0].outerHTML;
        } });
        e2.extend(n2.html, { HTMLBase: a2 });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.html.HTMLBase, a2 = "k-button-icon", r2 = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          i2.fn.init.call(n3, e3, t3), n3.wrapper = n3.element.addClass("k-button"), n3.element.attr("type") || n3.element.attr("type", n3.options.type), n3._addClasses(), n3.iconElement(), n3._textElement();
        }, options: { name: "HTMLButton", type: "button", icon: "", iconClass: "", spriteCssClass: "", imageUrl: "", size: "medium", rounded: "medium", fillMode: "solid", themeColor: "base", stylingOptions: ["size", "rounded", "fillMode", "themeColor"] }, iconElement: function() {
          var t3, i3, r3, o2 = this, s2 = o2.element, l2 = o2.options, d2 = l2.icon, u2 = l2.iconClass, c2 = l2.spriteCssClass, p2 = l2.imageUrl;
          (c2 || p2 || d2 || u2) && (r3 = true, s2.contents().filter(function() {
            return !e2(this).hasClass("k-sprite") && !e2(this).hasClass("k-icon") && !e2(this).hasClass("k-image");
          }).each(function(e3, t4) {
            (1 == t4.nodeType || 3 == t4.nodeType && n2.trim(t4.nodeValue).length > 0) && (r3 = false);
          })), r3 && o2.element.addClass("k-icon-button"), p2 ? ((i3 = s2.children("img.k-image").first())[0] || (i3 = e2('<img alt="icon" class="k-image" />').prependTo(s2)), i3.attr("src", p2), i3.addClass(a2)) : d2 || u2 ? ((t3 = s2.children("span.k-icon").first())[0] || (t3 = e2("<span></span>").prependTo(s2)), t3.attr("class", d2 ? "k-icon k-i-" + d2 : u2), t3.addClass(a2)) : c2 && ((t3 = s2.children("span.k-sprite").first())[0] || (t3 = e2('<span class="k-sprite"></span>').prependTo(s2)), t3.addClass(c2 + " " + a2));
        }, _textElement: function() {
          this.element.contents().filter(function() {
            return !(e2(this).hasClass(a2) || e2(this).hasClass("k-sprite") || e2(this).hasClass("k-icon") || e2(this).hasClass("k-image"));
          }).each(function(e3, t3) {
            if (1 == t3.nodeType || 3 == t3.nodeType && n2.trim(t3.nodeValue).length > 0) {
              if (3 === t3.nodeType) {
                var i3 = document.createElement("span");
                t3.parentNode.insertBefore(i3, t3), i3.appendChild(t3), t3 = i3;
              }
              t3.classList.add("k-button-text");
            }
          });
        } });
        e2.extend(n2.html, { renderButton: function(n3, i3) {
          return (arguments[0] === t2 || e2.isPlainObject(arguments[0])) && (i3 = n3, n3 = e2("<button></button>")), new r2(n3, i3).html();
        }, HTMLButton: r2 }), n2.cssProperties.registerPrefix("HTMLButton", "k-button-"), n2.cssProperties.registerValues("HTMLButton", [{ prop: "fillMode", values: n2.cssProperties.fillModeValues.concat(["link"]) }, { prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.html, r2 = i2.List, o2 = i2.Select, s2 = n2.caret, l2 = n2.support, d2 = l2.placeholder, u2 = n2._activeElement, c2 = n2.keys, p2 = ".kendoComboBox", h2 = p2 + "FocusEvent", f2 = "click" + p2, m2 = "mousedown" + p2, g2 = "disabled", v2 = "readonly", _2 = "change", b2 = "k-focus", k2 = "k-disabled", w = "aria-disabled", y = "aria-readonly", x = "filter", C = "accept", T = "rebind", S = /(\r\n|\n|\r)/gm, I = [16, 17, 18, 19, 20, 33, 34, 37, 39, 45, 91, 92, 144, 145], D = o2.extend({ init: function(t3, i3) {
          var a3, r3 = this;
          r3.ns = p2, i3 = Array.isArray(i3) ? { dataSource: i3 } : i3, o2.fn.init.call(r3, t3, i3), i3 = r3.options, t3 = r3.element.on("focus" + p2, r3._focusHandler.bind(r3)), i3.placeholder = i3.placeholder || t3.attr("placeholder"), r3._reset(), r3._wrapper(), r3._input(), r3._clearButton(), r3._tabindex(r3.input), r3._popup(), r3._dataSource(), r3._ignoreCase(), r3._enable(), r3._attachFocusEvents(), r3._oldIndex = r3.selectedIndex = -1, r3._initialIndex = i3.index, r3.requireValueMapper(r3.options), r3._initList(), r3._cascade(), i3.autoBind ? r3._filterSource() : (!(a3 = i3.text) && r3._isSelect && (a3 = t3.children(":selected").text()), a3 && r3._setText(a3)), a3 || r3._placeholder(), e2(r3.element).parents("fieldset").is(":disabled") && r3.enable(false), n2.notify(r3), r3._toggleCloseVisibility(), r3._applyCssClasses(), i3.label && r3._label(), r3._aria();
        }, options: { name: "ComboBox", enabled: true, index: -1, text: null, value: null, autoBind: true, delay: 200, dataTextField: "", dataValueField: "", minLength: 1, enforceMinLength: false, height: 200, highlightFirst: true, filter: "none", placeholder: "", suggest: false, cascadeFrom: "", cascadeFromField: "", cascadeFromParentField: "", ignoreCase: true, animation: {}, virtual: false, template: null, groupTemplate: "#:data#", fixedGroupTemplate: "#:data#", clearButton: true, syncValueAndText: true, autoWidth: false, popup: null, size: "medium", fillMode: "solid", rounded: "medium", label: null }, events: ["open", "close", _2, "select", "filtering", "dataBinding", "dataBound", "cascade", "set"], setOptions: function(e3) {
          var t3 = this._listOptions(e3);
          o2.fn.setOptions.call(this, e3), this.listView.setOptions(t3), this._accessors(), this._aria(), this._clearButton();
        }, destroy: function() {
          var e3 = this;
          e3.input.off(p2), e3.input.off(h2), e3.element.off(p2), e3.wrapper.off(p2), clearTimeout(e3._pasteTimeout), e3._arrow.off(f2 + " " + m2), e3._clear.off(f2 + " " + m2), o2.fn.destroy.call(e3);
        }, _isValueChanged: function(e3) {
          return e3 !== r2.unifyType(this._old, typeof e3) && e3 !== r2.unifyType(this._oldText, typeof e3);
        }, _change: function() {
          var e3 = this, t3 = e3.text(), n3 = t3 && t3 !== e3._oldText && t3 !== e3.options.placeholder, i3 = e3.selectedIndex, a3 = -1 === i3;
          if (!e3.options.syncValueAndText && !e3.value() && a3 && n3) return e3._old = "", e3._oldIndex = i3, e3._oldText = t3, e3._typing || e3.element.trigger(_2), e3.trigger(_2), void (e3._typing = false);
          o2.fn._change.call(e3), e3._oldText = e3.text && e3.text(), e3._toggleCloseVisibility();
        }, _attachFocusEvents: function() {
          var e3 = this;
          e3.input.on("focus" + h2, e3._inputFocus.bind(e3)).on("focusout" + h2, e3._inputFocusout.bind(e3));
        }, _focusHandler: function(e3) {
          e3.target === this.element[0] && this.input.trigger("focus");
        }, _arrowClick: function() {
          this._toggle();
        }, _inputFocus: function() {
          this.wrapper.addClass(b2), this._placeholder(false);
        }, _inputFocusout: function(t3) {
          var n3 = this, i3 = n3.value(), a3 = !e2(t3.relatedTarget).closest(".k-clear-value").length;
          n3._userTriggered = true, n3.wrapper.removeClass(b2), clearTimeout(n3._typingTimeout), n3._typingTimeout = null, a3 && n3.text(n3.text());
          var r3 = n3._focus(), o3 = this.listView.dataItemByIndex(this.listView.getElementIndex(r3));
          i3 !== n3.value() && n3.trigger("select", { dataItem: o3, item: r3 }) ? n3.value(i3) : (n3._placeholder(), n3._valueBeforeCascade = n3._old, a3 && (n3._blur(), n3.element.trigger("blur")));
        }, _inputPaste: function() {
          var e3 = this;
          clearTimeout(e3._pasteTimeout), e3._pasteTimeout = null, e3._pasteTimeout = setTimeout(function() {
            e3.search();
          });
        }, _editable: function(e3) {
          var t3 = this, n3 = e3.disable, i3 = e3.readonly, a3 = t3.wrapper.off(p2), r3 = t3.element.add(t3.input.off(p2)), o3 = t3._arrow.off(f2 + " " + m2), s3 = t3._clear;
          i3 || n3 ? (a3.addClass(n3 ? k2 : "").removeClass(n3 ? "" : k2), r3.attr(g2, n3).attr(v2, i3).attr(w, n3).attr(y, i3)) : (a3.removeClass(k2).on("mouseenter.kendoComboBox mouseleave.kendoComboBox", t3._toggleHover), r3.prop(g2, false).prop(v2, false).attr(w, false).attr(y, false), o3.on(f2, t3._arrowClick.bind(t3)).on(m2, function(e4) {
            e4.preventDefault();
          }), s3.on(f2 + " touchend" + p2, t3._clearValue.bind(t3)), t3.input.on("keydown" + p2, t3._keydown.bind(t3)).on("input" + p2, t3._search.bind(t3)).on("paste" + p2, t3._inputPaste.bind(t3)), t3.wrapper.on(f2 + p2, t3._focusHandler.bind(t3))), t3._toggleCloseVisibility();
        }, open: function() {
          var e3 = this, t3 = e3._state, n3 = !!e3.dataSource.filter() && e3.dataSource.filter().filters.length > 0, i3 = !e3.ul.find(e3.listView.focus()).length;
          e3.popup.visible() || (!e3.listView.bound() && t3 !== x || t3 === C ? (e3._open = true, e3._state = T, 1 !== e3.options.minLength && !n3 || n3 && e3.value() && -1 === e3.selectedIndex ? (e3.refresh(), e3._openPopup(), this.options.virtual || e3.listView.bound(false)) : e3._filterSource()) : e3._allowOpening() && (e3.popup._hovered = true, e3._openPopup(), e3.options.virtual ? e3._focusItem() : i3 && e3.options.highlightFirst && e3.listView.focus(0)));
        }, _scrollToFocusedItem: function() {
          var e3 = this.listView;
          e3.scrollToIndex(e3.getElementIndex(e3.focus()));
        }, _openPopup: function() {
          this.popup.one("activate", this._scrollToFocusedItem.bind(this)), this.popup.open();
        }, _updateSelectionState: function() {
          var e3 = this, n3 = e3.options.text, i3 = e3.options.value;
          e3.listView.isFiltered() || (-1 === e3.selectedIndex ? (n3 !== t2 && null !== n3 || (n3 = i3), e3._accessor(i3), e3.input.val(n3 || e3.input.val()), e3._placeholder()) : -1 === e3._oldIndex && (e3._oldIndex = e3.selectedIndex));
        }, _buildOptions: function(e3) {
          var n3 = this;
          if (n3._isSelect) {
            var i3 = n3._customOption;
            n3._state === T && (n3._state = ""), n3._customOption = t2, n3._options(e3, "", n3.value()), i3 && i3[0].selected && !n3.listView._emptySearch && n3._custom(i3.val());
          }
        }, _updateSelection: function() {
          var t3 = this, n3 = t3.listView, i3 = t3._initialIndex, a3 = null !== i3 && i3 > -1;
          if (t3._state === x) e2(n3.focus()).removeClass("k-selected");
          else if (!t3._fetch) {
            n3.value().length || (a3 ? t3.select(i3) : t3._accessor() && n3.value(t3._accessor())), t3._initialIndex = null;
            var r3 = n3.selectedDataItems()[0];
            r3 && (t3._value(r3) !== t3.value() ? t3._custom(t3._value(r3)) : t3._value(r3) !== t3.element[0].value && t3._accessor(t3._value(r3)), t3.text() && t3.text() !== t3._text(r3) && t3._selectValue(r3));
          }
        }, _updateItemFocus: function() {
          var e3 = this.listView;
          this.options.highlightFirst ? e3.focus() || e3.focusIndex() || e3.focus(0) : e3.focus(-1);
        }, _listBound: function() {
          var e3 = this, n3 = e3.input[0] === u2(), i3 = e3.dataSource.flatView(), a3 = e3.listView.skip(), r3 = i3.length, o3 = e3.dataSource._group ? e3.dataSource._group.length : 0, s3 = a3 === t2 || 0 === a3;
          e3._presetValue = false, e3._renderFooter(), e3._renderNoData(), e3._toggleNoData(!r3), e3._toggleHeader(!!o3 && !!r3), e3._resizePopup(), e3.popup.position(), e3._buildOptions(i3), e3._updateSelection(), i3.length && s3 && (e3._updateItemFocus(), e3.options.suggest && n3 && e3.input.val() && e3.suggest(i3[0])), e3._open && (e3._open = false, e3._typingTimeout && !n3 ? e3.popup.close() : e3.toggle(e3._allowOpening()), e3._typingTimeout = null), e3._hideBusy(), e3.trigger("dataBound");
        }, _listChange: function() {
          this._selectValue(this.listView.selectedDataItems()[0]), this._presetValue && (this._oldIndex = this.selectedIndex);
        }, _get: function(e3) {
          var t3, n3, i3;
          if ("function" == typeof e3) {
            for (t3 = this.dataSource.flatView(), i3 = 0; i3 < t3.length; i3++) if (e3(t3[i3])) {
              e3 = i3, n3 = true;
              break;
            }
            n3 || (e3 = -1);
          }
          return this.dataSource.total() || e3 || (e3 = -1), e3;
        }, _select: function(e3, t3) {
          var n3 = this;
          return -1 === (e3 = n3._get(e3)) && (n3.input[0].value = "", n3._accessor("")), n3.listView.select(e3).done(function() {
            t3 || n3._state !== x || (n3._state = C), n3._toggleCloseVisibility();
          });
        }, _selectValue: function(e3) {
          var n3 = this.listView.select(), i3 = "", a3 = "";
          (n3 = n3[n3.length - 1]) === t2 && (n3 = -1), this.selectedIndex = n3, this.listView.isFiltered() && -1 !== n3 && (this._valueBeforeCascade = this._old), -1 !== n3 || e3 ? ((e3 || 0 === e3) && (i3 = this._dataValue(e3), a3 = this._text(e3)), null === i3 && (i3 = "")) : (this.options.syncValueAndText ? i3 = a3 = this.options.dataTextField === this.options.dataValueField ? this._accessor() : this.input[0].value : a3 = this.text(), this.listView.focus(-1)), this._setDomInputValue(a3), this._accessor(i3 !== t2 ? i3 : a3, n3), this._placeholder(), this._triggerCascade();
        }, _setDomInputValue: function(e3) {
          var t3, n3 = this, i3 = s2(this.input);
          if (i3 && i3.length && (t3 = i3[0]), this._prev = this.input[0].value = e3, t3 && -1 === this.selectedIndex) {
            var a3 = l2.mobileOS;
            a3.wp || a3.android ? setTimeout(function() {
              n3.input[0].setSelectionRange(t3, t3);
            }, 0) : this.input[0].setSelectionRange(t3, t3);
          }
        }, refresh: function() {
          this.listView.refresh();
        }, _toggleCloseVisibility: function() {
          var e3 = this.element.is(":disabled") || this.element.is("[readonly]");
          this.text() && !e3 ? this._showClear() : this._hideClear();
        }, suggest: function(e3) {
          var n3, i3 = this, a3 = i3.input[0], o3 = i3.text(), l3 = s2(a3)[0], d3 = i3._last, p3 = i3.dataSource.options.accentFoldingFiltering;
          d3 != c2.BACKSPACE && d3 != c2.DELETE ? ("string" != typeof (e3 = e3 || "") && (e3[0] && (e3 = i3.dataSource.view()[r2.inArray(e3[0], i3.ul[0])]), e3 = e3 ? i3._text(e3) : ""), l3 <= 0 && (l3 = (p3 ? o3.toLocaleLowerCase(p3) : o3.toLowerCase()).indexOf(p3 ? e3.toLocaleLowerCase(p3) : e3.toLowerCase()) + 1), e3 ? (e3 = e3.toString(), (n3 = (p3 ? e3.toLocaleLowerCase(p3) : e3.toLowerCase()).indexOf(p3 ? o3.toLocaleLowerCase(p3) : o3.toLowerCase())) > -1 && (o3 += e3.substring(n3 + o3.length))) : o3 = o3.substring(0, l3), o3.length === l3 && e3 || (a3.value = o3, a3 === u2() && s2(a3, l3, o3.length))) : i3._last = t2;
        }, text: function(e3) {
          e3 = null === e3 ? "" : e3;
          var n3, i3, a3 = this, o3 = a3.input[0], s3 = a3.options.ignoreCase, l3 = e3;
          if (e3 === t2) return o3.value;
          false !== a3.options.autoBind || a3.listView.bound() ? (n3 = a3.dataItem()) && a3._text(n3).replace && a3._text(n3).replace(S, "") === e3 && (i3 = a3._value(n3)) === r2.unifyType(a3._old, typeof i3) ? a3._triggerCascade() : (s3 && (l3 = l3.toLowerCase()), a3.dataItem() && a3._text(a3.dataItem()) === e3 || (a3._select(function(e4) {
            return e4 = a3._text(e4), s3 && (e4 = (e4 + "").toLowerCase()), e4 === l3;
          }).done(function() {
            a3.selectedIndex < 0 && (o3.value = e3, a3.options.syncValueAndText && a3._accessor(e3), a3._cascadeTriggered = true, a3._triggerCascade(), a3._refreshFloatingLabel()), a3._prev = o3.value;
          }), a3._toggleCloseVisibility())) : a3._setText(e3);
        }, toggle: function(e3) {
          this._toggle(e3, true);
        }, value: function(e3) {
          var n3 = this, i3 = n3.options, a3 = n3.listView;
          if (e3 === t2) return (e3 = n3._accessor() || n3.listView.value()[0]) === t2 || null === e3 ? "" : e3;
          n3.requireValueMapper(n3.options, e3), n3.trigger("set", { value: e3 }), (e3 !== i3.value || n3.input.val() !== i3.text || n3.options.cascadeFrom) && (n3._accessor(e3), n3._isFilterEnabled() && a3.bound() && a3.isFiltered() ? n3._clearFilter() : n3._fetchData(), a3.value(e3).done(function() {
            -1 !== n3.selectedIndex || a3._selectedDataItems && a3._selectedDataItems.length || (n3._accessor(e3), n3.input.val(e3), n3._placeholder(true)), n3._userTriggered ? n3._old = n3._accessor() : n3._old = n3._valueBeforeCascade = n3._accessor(), n3._oldIndex = n3.selectedIndex, n3._prev = n3._oldText = n3.input.val(), n3._state === x && (n3._state = C), n3._toggleCloseVisibility(), n3._refreshFloatingLabel();
          }));
        }, _hideBusy: function() {
          var e3 = this;
          clearTimeout(e3._busy), e3._arrowIcon.removeClass("k-i-loading k-input-loading-icon"), e3._focused.attr("aria-busy", false), e3._busy = null, e3._toggleCloseVisibility();
        }, _click: function(e3) {
          var t3 = this, n3 = e3.item, i3 = t3.listView.dataItemByIndex(t3.listView.getElementIndex(n3)), a3 = true;
          e3.preventDefault(), i3 && ((a3 = t3._value(i3) !== r2.unifyType(t3.value(), typeof t3._value(i3))) || t3.input.val(t3._text(i3))), a3 && t3.trigger("select", { dataItem: i3, item: n3 }) ? t3.close() : (t3._userTriggered = true, t3._select(n3).done(function() {
            t3._blur();
          }));
        }, _syncValueAndText: function() {
          return this.options.syncValueAndText;
        }, _inputValue: function() {
          return this.text();
        }, _searchByWord: function(e3) {
          var n3 = this, i3 = n3.options, a3 = n3.dataSource, r3 = i3.ignoreCase;
          if (r3 && (e3 = e3.toLowerCase()), n3.ul[0].firstChild) {
            this.listView.focus(this._get(function(i4) {
              var a4 = n3._text(i4);
              if (a4 !== t2) return ("" == (a4 += "") || "" !== e3) && (r3 && (a4 = a4.toLowerCase()), 0 === a4.indexOf(e3));
            }));
            var o3 = this.listView.focus();
            o3 && (i3.suggest && n3.suggest(o3), this.open()), this.options.highlightFirst && !e3 && this.listView.focusFirst();
          } else a3.one(_2, function() {
            a3.view()[0] && n3.search(e3);
          }).fetch();
        }, _input: function() {
          var e3, t3, n3, i3 = this, r3 = i3.element.removeClass("k-input-inner")[0], o3 = r3.accessKey, s3 = i3.wrapper, l3 = "input.k-input-inner", u3 = r3.name || "", c3 = i3.options;
          u3 && (u3 = 'name="' + u3 + '_input" '), (e3 = s3.find(l3))[0] || (n3 = a2.renderButton('<button type="button" class="k-input-button" aria-label="expand combobox"></button>', { icon: "arrow-s", size: c3.size, fillMode: c3.fillMode, shape: "none", rounded: "none" }), s3.append("<input " + u3 + 'class="k-input-inner" type="text" autocomplete="off"/>').append(n3).append(i3.element), e3 = s3.find(l3)), e3[0].style.cssText = r3.style.cssText, e3[0].title = r3.title, (t3 = parseInt(this.element.prop("maxlength") || this.element.attr("maxlength"), 10)) > -1 && (e3[0].maxLength = t3), e3.addClass(r3.className).css({ width: "", height: r3.style.height, position: "" }).attr({ role: "combobox", "aria-expanded": false }).show(), d2 && e3.attr("placeholder", i3.options.placeholder), o3 && (r3.accessKey = "", e3[0].accessKey = o3), i3._focused = i3.input = e3, i3._arrow = s3.find(".k-input-button").attr({ role: "button", tabIndex: -1 }), i3._arrowIcon = i3._arrow.find(".k-icon");
        }, _clearButton: function() {
          r2.fn._clearButton.call(this), this.options.clearButton && (this._clear.insertAfter(this.input), this.wrapper.addClass("k-combobox-clearable"));
        }, _keydown: function(e3) {
          var t3 = this, n3 = e3.keyCode, i3 = t3.options.dataTextField || "text", a3 = n3 >= 112 && n3 <= 135, o3 = I.indexOf(n3) > -1;
          if (t3._last = n3, clearTimeout(t3._typingTimeout), t3._typingTimeout = null, n3 === c2.HOME) t3._firstItem();
          else if (n3 === c2.END) t3._lastItem();
          else if (n3 === c2.ENTER || n3 === c2.TAB && t3.popup.visible()) {
            var s3 = t3.listView.focus(), l3 = t3.dataItem(), d3 = true;
            if (t3.popup.visible() || l3 && t3.text() === t3._text(l3) || (s3 = null), s3) {
              if (t3.popup.visible() && e3.preventDefault(), (l3 = t3.listView.dataItemByIndex(t3.listView.getElementIndex(s3))) && (d3 = t3._value(l3) !== r2.unifyType(t3.value(), typeof t3._value(l3))), d3 && t3.trigger("select", { dataItem: l3, item: s3 })) return;
              t3._userTriggered = true, t3._select(s3).done(function() {
                t3._blur(), t3._valueBeforeCascade = t3._old = t3.value();
              });
            } else (t3._syncValueAndText() || t3._isSelect) && (t3.dataItem() && t3.dataItem()[i3] === t3.input.val() || t3._accessor(t3.input.val())), t3.options.highlightFirst ? (t3.listView.value(t3.input.val()), t3._blur()) : t3._oldText = t3.text();
          } else n3 == c2.TAB || t3._move(e3) || o3 || a3 || e3.ctrlKey ? n3 === c2.ESC && !t3.popup.visible() && t3.text() && t3._clearValue() : t3._search();
        }, _placeholder: function(e3) {
          if (!d2) {
            var n3, i3 = this, a3 = i3.input, r3 = i3.options.placeholder;
            if (r3) {
              if (n3 = i3.value(), e3 === t2 && (e3 = !n3), a3.toggleClass("k-readonly", e3), !e3) {
                if (n3) return;
                r3 = "";
              }
              a3.val(r3), r3 || a3[0] !== u2() || s2(a3[0], 0, 0);
            }
          }
        }, _search: function() {
          var e3 = this;
          clearTimeout(e3._typingTimeout), e3._typingTimeout = setTimeout(function() {
            var n3 = e3.text();
            "" !== n3 && e3._prev !== n3 ? (e3._prev = n3, "none" === e3.options.filter && e3.options.virtual && e3.listView.select(-1), e3.search(n3), e3._toggleCloseVisibility()) : "" === n3 && "" !== e3._prev && e3._prev !== t2 && (e3._clearValue(), e3._open = true, e3._state = T), e3._typingTimeout = null;
          }, e3.options.delay);
        }, _setText: function(e3) {
          this.input.val(e3), this._prev = e3;
        }, _wrapper: function() {
          var e3 = this.element, t3 = e3.parent();
          t3.is("span.k-input") || ((t3 = e3.hide().wrap("<span />").parent())[0].style.cssText = e3[0].style.cssText), this.wrapper = t3.addClass("k-input k-combobox").addClass(e3[0].className).removeClass("input-validation-error").css("display", "");
        }, _clearSelection: function(e3, t3) {
          var n3 = e3.value(), i3 = n3 && -1 === e3.selectedIndex;
          -1 == this.selectedIndex && this.value() || (t3 || !n3 || i3) && (this.options.value = "", this.value(""));
        }, _preselect: function(e3, t3) {
          this.input.val(t3), this._accessor(e3), this._old = this._accessor(), this._oldIndex = this.selectedIndex, this.listView.setValue(e3), this._placeholder(), this._initialIndex = null, this._presetValue = true, this._toggleCloseVisibility();
        }, _clearText: function() {
          this._old = this.value(), this.text("");
        }, _clearValue: function() {
          o2.fn._clearValue.call(this), this.input.trigger("focus");
        } });
        i2.plugin(D), n2.cssProperties.registerPrefix("ComboBox", "k-input-"), n2.cssProperties.registerValues("ComboBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = Math.abs, r2 = "aria-selected", o2 = "k-selected", s2 = "k-selecting", l2 = "k-selectable", d2 = "change", u2 = "unselect", c2 = "k-unselecting", p2 = n2.support.browser.msie, h2 = false, f2 = e2.extend;
        !function(e3) {
          e3('<div class="parent"><span></span></div>').on("click", ">*", function() {
            h2 = true;
          }).find("span").trigger("click").end().off();
        }(e2);
        var m2 = i2.extend({ init: function(t3, a3) {
          var r3, o3, s3 = this;
          i2.fn.init.call(s3, t3, a3), s3._marquee = e2("<div class='k-marquee'><div class='k-marquee-color'></div></div>"), s3._lastActive = null, s3.element.addClass(l2), s3.relatedTarget = s3.options.relatedTarget, r3 = s3.options.multiple, o3 = s3.options.dragToSelect, s3.userEvents = new n2.UserEvents(s3.element, { global: true, allowSelection: true, filter: (h2 ? "" : ".k-selectable ") + s3.options.filter, tap: s3._tap.bind(s3), touchAction: r3 ? "none" : "pan-x pan-y" }), r3 && (o3 && s3.userEvents.bind("start", s3._start.bind(s3)).bind("move", s3._move.bind(s3)).bind("end", s3._end.bind(s3)), s3.userEvents.bind("select", s3._select.bind(s3)));
        }, events: [d2, u2], options: { name: "Selectable", filter: ">*", inputSelectors: "input,a,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-arrow-60-down,span.k-icon.k-i-arrow-60-up,label.k-checkbox-label.k-no-text,.k-icon.k-i-collapse,.k-icon.k-i-expand,span.k-numeric-wrap,.k-focusable", multiple: false, dragToSelect: true, relatedTarget: e2.noop, ignoreOverlapped: false, addIdToRanges: false }, _isElement: function(e3) {
          var t3, n3 = this.element, i3 = n3.length, a3 = false;
          for (e3 = e3[0], t3 = 0; t3 < i3; t3++) if (n3[t3] === e3) {
            a3 = true;
            break;
          }
          return a3;
        }, _tap: function(t3) {
          var n3, i3 = e2(t3.target), a3 = this, r3 = t3.event.ctrlKey || t3.event.metaKey, s3 = a3.options.multiple, u3 = s3 && t3.event.shiftKey, c3 = a3.options.selectedClass || o2, p3 = t3.event.which, h3 = t3.event.button;
          !a3._isElement(i3.closest("." + l2)) || p3 && 3 == p3 || h3 && 2 == h3 || this._allowSelection(t3.event.target) && (n3 = i3.hasClass(c3), i3 = i3.add(a3.relatedTarget(i3)), s3 ? u3 ? (a3._lastRange && g2(a3._lastRange, i3) || (a3.selectRange(a3._firstSelectee(), i3, t3), a3._notify(d2, t3)), a3._lastRange = i3) : (a3._lastRange = null, n3 && r3 ? (a3._unselect(i3), a3._notify(d2, t3)) : r3 ? (a3.value(i3, t3), a3._notify(d2, t3)) : (!n3 || a3.value().length > 1) && (a3.clear(), a3.value(i3, t3), a3._notify(d2, t3)), a3._lastActive = a3._downTarget = i3) : n3 && r3 ? (a3._unselect(i3), a3._notify(d2, t3)) : n3 || (a3.clear(), a3.value(i3, t3), a3._notify(d2, t3)));
        }, _start: function(t3) {
          var n3, i3 = this, a3 = e2(t3.target), r3 = i3.options.selectedClass || o2, s3 = a3.hasClass(r3), d3 = t3.event.ctrlKey || t3.event.metaKey;
          this._allowSelection(t3.event.target) && (i3._downTarget = a3, i3._isElement(a3.closest("." + l2)) ? (i3.options.useAllItems ? i3._items = i3.element.find(i3.options.filter) : (n3 = a3.closest(i3.element), i3._items = n3.find(i3.options.filter)), t3.sender.capture(), i3._marquee.appendTo(document.body).css({ left: t3.x.client + 1, top: t3.y.client + 1, width: 0, height: 0 }), d3 || i3.clear(), a3 = a3.add(i3.relatedTarget(a3)), s3 && (i3._selectElement(a3, true), d3 && a3.addClass(c2))) : i3.userEvents.cancel());
        }, _move: function(e3) {
          var t3 = { left: e3.x.startLocation > e3.x.location ? e3.x.location : e3.x.startLocation, top: e3.y.startLocation > e3.y.location ? e3.y.location : e3.y.startLocation, width: a2(e3.x.initialDelta), height: a2(e3.y.initialDelta) };
          this._marquee.css(t3), this._invalidateSelectables(t3, e3.event.ctrlKey || e3.event.metaKey), e3.preventDefault();
        }, _end: function(t3) {
          var i3 = this, a3 = n2.attr("range-selected"), r3 = n2.guid();
          i3._marquee.remove(), i3._unselect(i3.element.find(i3.options.filter + "." + c2)).removeClass(c2);
          var o3 = i3.element.find(i3.options.filter + "." + s2);
          if (o3 = o3.add(i3.relatedTarget(o3)), i3.options.addIdToRanges) for (var l3 = 0; l3 < i3._currentlyActive.length; l3++) e2(i3._currentlyActive[l3]).attr(a3, r3);
          i3._lastRange && g2(i3._lastRange, o3) || (i3.value(o3, t3), i3._notify(d2, t3)), i3._lastRange = o3, i3._lastActive = i3._downTarget, i3._items = null;
        }, _invalidateSelectables: function(e3, t3) {
          var n3, i3, a3, r3, l3 = this._downTarget[0], d3 = this._items, u3 = this.options.selectedClass || o2;
          for (this._currentlyActive = [], n3 = 0, i3 = d3.length; n3 < i3; n3++) a3 = (r3 = d3.eq(n3)).add(this.relatedTarget(r3)), v2(r3, e3) ? (r3.hasClass(u3) ? t3 && l3 !== r3[0] && a3.removeClass(u3).addClass(c2) : r3.hasClass(s2) || r3.hasClass(c2) || this._collidesWithActiveElement(a3, e3) || a3.addClass(s2), this._currentlyActive.push(a3[0])) : r3.hasClass(s2) ? a3.removeClass(s2) : t3 && r3.hasClass(c2) && a3.removeClass(c2).addClass(u3);
        }, _collidesWithActiveElement: function(e3, t3) {
          if (!this.options.ignoreOverlapped) return false;
          var i3, a3 = this._currentlyActive, r3 = e3[0].getBoundingClientRect(), o3 = false, s3 = n2.support.isRtl(e3) ? "right" : "left", l3 = {};
          t3.right = t3.left + t3.width, t3.bottom = t3.top + t3.height;
          for (var d3 = 0; d3 < a3.length; d3++) if (_2(r3, i3 = a3[d3].getBoundingClientRect())) {
            if (l3[s3] = "left" === s3 ? i3.right : i3.left, (r3 = f2({}, r3, l3)).left > r3.right) return true;
            o3 = !_2(r3, t3);
          }
          return o3;
        }, value: function(e3) {
          var t3 = this, n3 = t3._selectElement.bind(t3);
          if (!e3) return t3.element.find(t3.options.filter + "." + (t3.options.selectedClass || o2));
          e3.each(function() {
            n3(this);
          });
        }, selectedRanges: function() {
          var t3 = n2.attr("range-selected"), i3 = {};
          return this.element.find("[" + t3 + "]").each(function(n3, a3) {
            var r3 = e2(a3).attr(t3), o3 = i3[r3];
            o3 || (o3 = i3[r3] = []), o3.push(e2(a3));
          }), i3;
        }, selectedSingleItems: function() {
          var t3 = this, i3 = n2.attr("range-selected");
          return t3.element.find(t3.options.filter + "." + (t3.options.selectedClass || o2) + ":not([" + i3 + "])").toArray().map(function(t4) {
            return e2(t4);
          });
        }, _firstSelectee: function() {
          var e3, t3 = this;
          return null !== t3._lastActive ? t3._lastActive : (e3 = t3.value()).length > 0 ? e3[0] : t3.element.find(t3.options.filter)[0];
        }, _selectElement: function(t3, n3) {
          var i3 = e2(t3), a3 = this.options.selectedClass || o2, l3 = !n3 && this._notify("select", { element: t3 });
          i3.removeClass(s2), l3 || (i3.addClass(a3), this.options.aria && i3.attr(r2, true));
        }, _notify: function(e3, t3) {
          return t3 = t3 || {}, this.trigger(e3, t3);
        }, _unselect: function(e3) {
          if (!this.trigger(u2, { element: e3 })) {
            var t3 = n2.attr("range-selected");
            return e3.removeClass(this.options.selectedClass || o2).removeAttr(t3), this.options.aria && e3.attr(r2, false), e3;
          }
        }, _select: function(t3) {
          this._allowSelection(t3.event.target) && (!p2 || p2 && !e2(n2._activeElement()).is(this.options.inputSelectors)) && t3.preventDefault();
        }, _allowSelection: function(t3) {
          return !e2(t3).is(this.options.inputSelectors) || (this.userEvents.cancel(), this._downTarget = null, false);
        }, resetTouchEvents: function() {
          this.userEvents.cancel();
        }, clear: function() {
          var e3 = this.element.find(this.options.filter + "." + (this.options.selectedClass || o2));
          this._unselect(e3);
        }, selectRange: function(t3, n3) {
          var i3, a3, r3, o3 = this;
          for (o3.clear(), o3.element.length > 1 && (r3 = o3.options.continuousItems()), r3 && r3.length || (r3 = o3.element.find(o3.options.filter)), (t3 = e2.inArray(e2(t3)[0], r3)) > (n3 = e2.inArray(e2(n3)[0], r3)) && (a3 = t3, t3 = n3, n3 = a3), o3.options.useAllItems || (n3 += o3.element.length - 1), i3 = t3; i3 <= n3; i3++) o3._selectElement(r3[i3], true);
        }, destroy: function() {
          var e3 = this;
          i2.fn.destroy.call(e3), e3.element.off(".kendoSelectable"), e3.userEvents.destroy(), e3._marquee = e3._lastActive = e3.element = e3.userEvents = null;
        } });
        function g2(e3, t3) {
          if (e3.length !== t3.length) return false;
          for (var n3 = 0; n3 < e3.length; n3++) if (e3[n3] !== t3[n3]) return false;
          return true;
        }
        function v2(e3, t3) {
          if (!e3.is(":visible")) return false;
          var i3 = n2.getOffset(e3), a3 = t3.left + t3.width, r3 = t3.top + t3.height;
          return i3.right = i3.left + n2._outerWidth(e3), i3.bottom = i3.top + n2._outerHeight(e3), !(i3.left > a3 || i3.right < t3.left || i3.top > r3 || i3.bottom < t3.top);
        }
        function _2(e3, t3) {
          return !(e3.right <= t3.left || e3.left >= t3.right || e3.bottom <= t3.top || e3.top >= t3.bottom);
        }
        m2.parseOptions = function(e3) {
          var t3 = e3.mode || e3, n3 = "string" == typeof t3 && t3.toLowerCase();
          return { multiple: n3 && n3.indexOf("multiple") > -1, cell: n3 && n3.indexOf("cell") > -1 };
        }, n2.ui.plugin(m2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.support, a2 = n2.ui, r2 = a2.Widget, o2 = n2.keys, s2 = n2.parseDate, l2 = n2.date.adjustDST, d2 = n2.date.weekInYear, u2 = n2.ui.Selectable, c2 = n2._extractFormat, p2 = n2.template, h2 = n2.getCulture, f2 = n2.support.transitions, m2 = f2 ? f2.css + "transform-origin" : "", g2 = p2('<td class="#=data.cssClass#" role="gridcell"><a tabindex="-1" class="k-link" href="\\#" data-#=data.ns#value="#=data.dateString#">#=data.value#</a></td>', { useWithBlock: false }), v2 = p2('<td role="gridcell" class="k-calendar-td k-out-of-range"><a class="k-link"></a></td>', { useWithBlock: false }), _2 = p2('<td role="gridcell" class="k-calendar-td k-out-of-range">&nbsp;</td>', { useWithBlock: false }), b2 = p2('<td class="k-calendar-td k-alt">#= data.weekNumber #</td>', { useWithBlock: false }), k2 = n2._outerWidth, w = ".kendoCalendar", y = "click" + w, x = "id", C = "slideIn", T = "month", S = "century", I = "change", D = "navigate", E = "value", A = "k-disabled", F = "k-focus", z = "k-other-month", P = "td:has(.k-link)", H = "td:has(.k-link):not(.k-disabled):not(.k-out-of-range)", N = "k-selected", R = "focus", O = i2.touch ? "touchstart" : "mouseenter", M = i2.touch ? "touchstart" + w : "mouseenter" + w, B = i2.touch ? "touchend" + w + " touchmove" + w : "mouseleave" + w, L = 864e5, V = "_prevArrow", U = "_nextArrow", W = "aria-disabled", j = "aria-selected", q = "aria-label", G = e2.extend, K = Date, $ = { month: 0, year: 1, decade: 2, century: 3 }, Y = ".k-header, .k-calendar-header", Q = r2.extend({ init: function(t3, i3) {
          var a3, o3 = this;
          (i3 = i3 || {}).componentType = i3.componentType || "classic", r2.fn.init.call(o3, t3, i3), t3 = o3.wrapper = o3.element, (i3 = o3.options).url = n2.unescape(i3.url), o3.options.disableDates = fe(o3.options.disableDates), o3._templates(), o3._selectable(), o3._header(), o3._viewWrapper(), o3.options.hasFooter ? o3._footer(o3.footer) : (o3._today = o3.element.find("a.k-nav-today"), o3._toggle()), t3.addClass("k-widget k-calendar " + (i3.weekNumber ? " k-week-number" : "")).on(M + " " + B, P, le).on("keydown.kendoCalendar", "table.k-content", o3._move.bind(o3)).on(y + " touchend", P, function(t4) {
            var n3 = t4.currentTarget.firstChild, a4 = ge(n3);
            -1 != n3.href.indexOf("#") && t4.preventDefault(), "month" == o3._view.name && o3.options.disableDates(a4) || "month" == o3._view.name && "single" != i3.selectable || o3._click(e2(n3));
          }).on("mouseup" + w, "table.k-content, .k-footer", function() {
            o3._focusView(false !== o3.options.focusOnNav);
          }).attr(x), o3._isMultipleSelection() && o3.options.weekNumber && t3.on(y, "td:not(:has(.k-link))", function(t4) {
            var n3 = e2(t4.currentTarget).closest("tr").find(H).first(), i4 = o3.selectable._lastActive = e2(t4.currentTarget).closest("tr").find(H).last();
            o3.selectable.selectRange(n3, i4), o3.selectable.trigger(I, { event: t4 }), o3._current = o3._value = ge(i4.find("a")), o3._setCurrent(o3._current);
          }), pe(i3), a3 = s2(i3.value, i3.format, i3.culture), o3._selectDates = [], o3._index = $[i3.start], o3._current = new K(+ne(a3, i3.min, i3.max)), o3._addClassProxy = function() {
            if (o3._active = true, o3._cell.hasClass(A)) {
              var e3 = o3._view.toDateString(te());
              o3._cell = o3._cellByDate(e3);
            }
            o3._cell.addClass(F);
          }, o3._removeClassProxy = function() {
            o3._active = false, o3._cell && o3._cell.removeClass(F);
          }, o3.value(a3), o3._isMultipleSelection() && i3.selectDates.length > 0 && o3.selectDates(i3.selectDates), n2.notify(o3);
        }, options: { name: "Calendar", value: null, min: new K(1900, 0, 1), max: new K(2099, 11, 31), dates: [], disableDates: null, url: "", culture: "", footer: "", format: "", month: {}, weekNumber: false, selectable: "single", selectDates: [], start: T, depth: T, size: "medium", animation: { horizontal: { effects: C, reverse: true, duration: 500, divisor: 2 }, vertical: { effects: "zoomIn", duration: 400 } }, messages: { weekColumnHeader: "", today: "Today", navigateTo: "Navigate to ", parentViews: { month: "year view", year: "decade view", decade: "century view" } }, componentType: "classic" }, events: [I, D], componentTypes: { classic: { header: { template: '<div class="k-header k-hstack"><a tabindex="-1" href="\\#" #=actionAttr#="prev" role="button" class="k-nav-prev k-button #=size# k-rounded-md k-button-flat k-button-flat-base k-icon-button" aria-label="Previous"><span class="k-button-icon k-icon k-i-arrow-60-left"></span></a><a tabindex="-1" href="\\#" #=actionAttr#="nav-up" role="button" id="nav-up" class="k-nav-fast k-button #=size# k-rounded-md k-button-flat k-button-flat-base  k-flex"></a><a tabindex="-1" href="\\#" #=actionAttr#="next" role="button" class="k-nav-next k-button #=size# k-rounded-md k-button-flat k-button-flat-base  k-icon-button" aria-label="Next"><span class="k-icon k-i-arrow-60-right"></span></a></div>' }, hasFooter: true, linksSelector: ".k-button", contentClasses: "k-calendar-table k-content" }, modern: { header: { template: '<div class="k-calendar-header k-hstack"><a href="\\#" #=actionAttr#="nav-up" id="nav-up" role="button" class="k-calendar-title k-title k-button #=size# k-rounded-md k-button-flat k-button-flat-base "></a><span class="k-spacer"></span><span class="k-calendar-nav k-hstack"><a tabindex="-1" #=actionAttr#="prev" class="k-button #=size# k-rounded-md k-button-flat k-button-flat-base  k-icon-button k-prev-view"><span class="k-button-icon k-icon k-i-arrow-60-left"></span></a><a tabindex="-1" #=actionAttr#="today" class="k-nav-today">#=messages.today#</a><a tabindex="-1" #=actionAttr#="next" class="k-button #=size# k-rounded-md k-button-flat k-button-flat-base  k-icon-button k-next-view"><span class="k-button-icon k-icon k-i-arrow-60-right"></span></a></span></div>' }, hasFooter: false, linksSelector: ".k-button", contentClasses: "k-calendar-table k-content k-calendar-content" } }, setOptions: function(t3) {
          var n3 = this;
          pe(t3), t3.disableDates = fe(t3.disableDates), n3._destroySelectable(), t3.messages && (t3.messages = e2.extend({}, true, n3.options.messages, t3.messages)), r2.fn.setOptions.call(n3, t3), n3._templates(), n3._selectable(), n3._viewWrapper(), n3.options.hasFooter ? n3._footer(n3.footer) : (n3.element.find(".k-footer").hide(), n3._toggle()), n3._index = $[n3.options.start], n3.navigate(), t3.weekNumber && n3.element.addClass("k-week-number");
        }, destroy: function() {
          var e3 = this, t3 = e3._today;
          e3.element.off(w), e3._title.off(w), e3._prevArrow.off(w), e3._nextArrow.off(w), e3._destroySelectable(), n2.destroy(e3._table), t3 && n2.destroy(t3.off(w)), r2.fn.destroy.call(e3);
        }, current: function() {
          return this._current;
        }, view: function() {
          return this._view;
        }, focus: function(e3) {
          e3 = e3 || this._table, this._bindTable(e3), e3.trigger("focus");
        }, min: function(e3) {
          return this._option("min", e3);
        }, max: function(e3) {
          return this._option("max", e3);
        }, navigateToPast: function() {
          this._navigate(V, -1);
        }, navigateToFuture: function() {
          this._navigate(U, 1);
        }, navigateUp: function() {
          var e3 = this, t3 = e3._index;
          e3._title.hasClass(A) || e3.navigate(e3._current, ++t3);
        }, navigateDown: function(e3) {
          var t3 = this, n3 = t3._index, i3 = t3.options.depth;
          e3 && (n3 !== $[i3] ? t3.navigate(e3, --n3) : me(t3._value, t3._current) && me(t3._value, e3) || (t3.value(e3), t3.trigger(I)));
        }, navigate: function(n3, i3) {
          i3 = isNaN(i3) ? $[i3] : i3;
          var a3, r3, o3, s3, l3 = this, d3 = l3.options, u3 = d3.culture, c3 = d3.min, p3 = d3.max, h3 = l3._title, f3 = l3._table, m3 = l3._oldTable, g3 = l3._current, v3 = n3 && +n3 > +g3, _3 = i3 !== t2 && i3 !== l3._index, b3 = l3.element.children(".k-calendar-view");
          if (n3 || (n3 = g3), l3._current = n3 = new K(+ne(n3, c3, p3)), i3 === t2 ? i3 = l3._index : l3._index = i3, l3._view = r3 = X.views[i3], o3 = r3.compare, s3 = i3 === $.century, h3.toggleClass(A, s3).attr(W, s3), s3 = o3(n3, c3) < 1, l3._prevArrow.toggleClass(A, s3).attr(W, s3), s3 = o3(n3, p3) > -1, l3._nextArrow.toggleClass(A, s3).attr(W, s3), f3 && m3 && m3.data("animating") && (m3.kendoStop(true, true), f3.kendoStop(true, true)), l3._oldTable = f3, !f3 || l3._changeView) {
            h3.html(r3.title(n3, c3, p3, u3)), l3.options.messages.parentViews && l3._view.name !== S ? h3.attr("title", l3.options.messages.navigateTo + l3.options.messages.parentViews[l3._view.name]) : h3.removeAttr("title"), l3._table = a3 = e2(r3.content(G({ min: c3, max: p3, date: n3, url: d3.url, dates: d3.dates, format: d3.format, otherMonth: true, culture: u3, disableDates: d3.disableDates, isWeekColumnVisible: d3.weekNumber, messages: d3.messages, contentClasses: l3.options.contentClasses }, l3[r3.name]))), l3._aria(), he(a3, r3.name);
            var k3 = f3 && f3.data("start") === a3.data("start");
            l3._animate({ from: f3, to: a3, vertical: _3, future: v3, replace: k3 }), b3.removeClass("k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview"), b3.addClass("k-calendar-" + r3.name + "view"), l3.trigger(D), l3._focus(n3);
          }
          i3 === $[d3.depth] && l3._selectDates.length > 0 && l3._visualizeSelectedDatesInView(), "single" === l3.options.selectable && i3 === $[d3.depth] && l3._value && !l3.options.disableDates(l3._value) && l3._selectCell(l3._value), l3._setCurrent(n3), !f3 && l3._cell && l3._cell.removeClass(F), l3._changeView = true;
        }, selectDates: function(n3) {
          var i3, a3, r3 = this;
          if (n3 === t2) return r3._selectDates;
          a3 = n3.map(function(e3) {
            return e3.getTime();
          }).filter(function(e3, t3, n4) {
            return n4.indexOf(e3) === t3;
          }).map(function(e3) {
            return new Date(e3);
          }), i3 = e2.grep(a3, function(e3) {
            if (e3) return +r3._validateValue(new Date(e3.setHours(0, 0, 0, 0))) == +e3;
          }), r3._selectDates = i3.length > 0 ? i3 : 0 === a3.length ? a3 : r3._selectDates, r3._visualizeSelectedDatesInView();
        }, value: function(e3) {
          var n3 = this, i3 = n3._view, a3 = n3._view;
          if (e3 === t2) return n3._value;
          if ((e3 = n3._validateValue(e3)) && n3._isMultipleSelection()) {
            var r3 = /* @__PURE__ */ new Date(+e3);
            r3.setHours(0, 0, 0, 0), n3._selectDates = [r3], n3.selectable._lastActive = null;
          }
          i3 && null === e3 && n3._cell ? n3._cell.removeClass(N) : (n3._changeView = !e3 || a3 && 0 !== a3.compare(e3, n3._current), n3.navigate(e3));
        }, _aria: function() {
          var e3 = this._table;
          e3.attr("aria-labelledby", this._title.attr("id")), "month" === this._view.name && "multiple" === this.options.selectable && e3.attr("aria-multiselectable", "true");
        }, _validateValue: function(e3) {
          var n3 = this, i3 = n3.options, a3 = i3.min, r3 = i3.max;
          return null === e3 && (n3._current = ue(n3._current.getFullYear(), n3._current.getMonth(), n3._current.getDate())), null !== (e3 = s2(e3, i3.format, i3.culture)) && (ie(e3 = new K(+e3), a3, r3) || (e3 = null)), null !== e3 && n3.options.disableDates(/* @__PURE__ */ new Date(+e3)) ? n3._value === t2 && (n3._value = null) : n3._value = e3, n3._value;
        }, _visualizeSelectedDatesInView: function() {
          var t3 = this, i3 = {};
          e2.each(t3._selectDates, function(e3, t4) {
            i3[n2.calendar.views[0].toDateString(t4)] = t4;
          }), t3.selectable.clear();
          var a3 = t3._table.find(P).filter(function(t4, a4) {
            return i3[e2(a4.firstChild).attr(n2.attr(E))];
          });
          a3.length > 0 && t3.selectable._selectElement(a3, true);
        }, _isMultipleSelection: function() {
          return "multiple" === this.options.selectable;
        }, _selectable: function() {
          var e3 = this;
          if (e3._isMultipleSelection()) {
            var t3 = e3.options.selectable, n3 = u2.parseOptions(t3);
            e3.selectable = new u2(e3.wrapper, { aria: true, inputSelectors: "input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-arrow-60-down,span.k-icon.k-i-arrow-60-up", multiple: n3.multiple, filter: "table.k-month:eq(0) " + H, change: e3._onSelect.bind(e3), relatedTarget: e3._onRelatedTarget.bind(e3) });
          }
        }, _onRelatedTarget: function(e3) {
          var t3 = this;
          t3.selectable.options.multiple && e3.is(H) && (t3._current = ge(e3.find("a")), t3._setCurrent(t3._current));
        }, _onSelect: function(t3) {
          var n3 = this, i3 = t3;
          u2.parseOptions(n3.options.selectable).multiple ? (i3.event.ctrlKey || i3.event.metaKey ? e2(i3.event.currentTarget).is(H) ? n3._toggleSelection(e2(i3.event.currentTarget)) : (n3._cellsBySelector(H).each(function(t4, i4) {
            var a3 = ge(e2(i4).find("a"));
            n3._deselect(a3);
          }), n3._addSelectedCellsToArray()) : i3.event.shiftKey ? n3._rangeSelection(n3._cell) : e2(i3.event.currentTarget).is(P) ? n3.value(ge(e2(i3.event.currentTarget).find("a"))) : (n3._selectDates = [], n3._addSelectedCellsToArray()), n3.trigger(I)) : e2(i3.event.currentTarget).is("td") && !e2(i3.event.currentTarget).hasClass("k-selected") ? e2(i3.event.currentTarget).addClass("k-selected") : n3._click(e2(i3.event.currentTarget).find("a"));
        }, _destroySelectable: function() {
          var e3 = this;
          e3.selectable && (e3.selectable.destroy(), e3.selectable = null);
        }, _toggleSelection: function(e3) {
          var t3 = ge(e3.find("a"));
          e3.hasClass("k-selected") ? this._selectDates.push(t3) : this._deselect(t3);
        }, _rangeSelection: function(e3, t3) {
          var n3, i3 = this, a3 = t3 || ge(i3.selectable.value().first().find("a")), r3 = ge(e3.find("a"));
          i3.selectable._lastActive || i3._value ? a3 = i3.selectable._lastActive ? ge(i3.selectable._lastActive.find("a")) : /* @__PURE__ */ new Date(+i3._value) : i3.selectable._lastActive = t3 ? i3._cellByDate(i3._view.toDateString(t3), H) : i3.selectable.value().first(), i3._selectDates = [], n3 = oe(a3, r3), se(i3._selectDates, n3, a3, i3.options.disableDates), i3._visualizeSelectedDatesInView();
        }, _cellsBySelector: function(e3) {
          return this._table.find(e3);
        }, _addSelectedCellsToArray: function() {
          var t3 = this;
          t3.selectable.value().each(function(n3, i3) {
            var a3 = ge(e2(i3.firstChild));
            t3.options.disableDates(a3) || t3._selectDates.push(a3);
          });
        }, _deselect: function(e3) {
          var t3 = this._selectDates.map(Number).indexOf(+e3);
          -1 != t3 && this._selectDates.splice(t3, 1);
        }, _dateInView: function(e3) {
          var t3 = ge(this._cellsBySelector(H).first().find("a"));
          return +e3 <= +ge(this._cellsBySelector(H).last().find("a")) && +e3 >= +t3;
        }, _isNavigatable: function(e3, t3) {
          var n3, i3 = this, a3 = i3.options.disableDates;
          return "month" == i3._view.name ? !a3(e3) : (n3 = i3.wrapper.find(".k-focus").index(), i3.wrapper.find(".k-content td").eq(n3 + t3).is(H) || !a3(e3));
        }, _move: function(i3) {
          var a3, r3, s3, l3, d3 = this, u3 = d3.options, c3 = i3.keyCode, p3 = d3._view, h3 = d3._index, f3 = d3.options.min, m3 = d3.options.max, g3 = new K(+d3._current), v3 = n2.support.isRtl(d3.wrapper), _3 = d3.options.disableDates;
          if (i3.target === d3._table[0] && (d3._active = true), c3 == o2.RIGHT && !v3 || c3 == o2.LEFT && v3 ? (a3 = 1, r3 = true) : c3 == o2.LEFT && !v3 || c3 == o2.RIGHT && v3 ? (a3 = -1, r3 = true) : c3 == o2.UP ? (a3 = 0 === h3 ? -7 : -4, r3 = true) : c3 == o2.DOWN ? (a3 = 0 === h3 ? 7 : 4, r3 = true) : c3 == o2.SPACEBAR ? (a3 = 0, r3 = true) : c3 == o2.HOME || c3 == o2.END ? (l3 = p3[s3 = c3 == o2.HOME ? "first" : "last"](g3), (g3 = new K(l3.getFullYear(), l3.getMonth(), l3.getDate(), g3.getHours(), g3.getMinutes(), g3.getSeconds(), g3.getMilliseconds())).setFullYear(l3.getFullYear()), r3 = true) : 84 === c3 && (d3._todayClick(i3), r3 = true), i3.ctrlKey || i3.metaKey) {
            if (c3 == o2.RIGHT && !v3 || c3 == o2.LEFT && v3) d3.navigateToFuture(), r3 = true;
            else if (c3 == o2.LEFT && !v3 || c3 == o2.RIGHT && v3) d3.navigateToPast(), r3 = true;
            else if (c3 == o2.UP) d3.navigateUp(), r3 = true;
            else if (c3 == o2.DOWN) d3._click(e2(d3._cell[0].firstChild)), r3 = true;
            else if ((c3 == o2.ENTER || c3 == o2.SPACEBAR) && d3._isMultipleSelection()) {
              d3._keyboardToggleSelection(i3);
              var b3 = ge(e2(d3._cell[0]).find("a"));
              d3._setCurrent(b3);
            }
          } else i3.shiftKey ? (a3 !== t2 || s3) && (s3 || p3.setDate(g3, a3), ie(g3, f3, m3) || (g3 = ne(g3, u3.min, u3.max)), _3(g3) && (g3 = d3._nextNavigatable(g3, a3)), f3 = ue(f3.getFullYear(), f3.getMonth(), f3.getDate()), d3._isMultipleSelection() ? d3._keyboardRangeSelection(i3, g3) : d3._focus(g3)) : (c3 == o2.ENTER || c3 == o2.SPACEBAR ? ("month" == p3.name && d3._isMultipleSelection() ? (d3.value(ge(e2(d3._cell.find("a")))), d3.selectable._lastActive = e2(d3._cell[0]), d3.trigger(I)) : d3._click(e2(d3._cell[0].firstChild)), r3 = true) : c3 == o2.PAGEUP ? (r3 = true, d3.navigateToPast()) : c3 == o2.PAGEDOWN && (r3 = true, d3.navigateToFuture()), (a3 || s3) && (s3 || p3.setDate(g3, a3), ie(g3, f3 = ue(f3.getFullYear(), f3.getMonth(), f3.getDate()), m3) || (g3 = ne(g3, u3.min, u3.max)), d3._isNavigatable(g3, a3) || (g3 = d3._nextNavigatable(g3, a3)), d3._isMultipleSelection() ? d3._dateInView(g3) ? (d3._current = g3, d3._setCurrent(g3)) : d3.navigate(g3) : d3._focus(g3)));
          return r3 && i3.preventDefault(), d3._current;
        }, _keyboardRangeSelection: function(e3, t3) {
          var n3, i3, a3 = this;
          if (!a3._dateInView(t3)) return a3._selectDates = [], i3 = oe(n3 = a3.selectable._lastActive ? ge(a3.selectable._lastActive.find("a")) : t3, /* @__PURE__ */ new Date(+t3)), se(a3._selectDates, i3, n3, a3.options.disableDates), a3.navigate(t3), a3._current = t3, a3.selectable._lastActive = a3.selectable._lastActive || a3._cellByDate(a3._view.toDateString(t3), H), void a3.trigger(I);
          a3.selectable.options.filter = a3.wrapper.find("table").length > 1 && +t3 > +a3._current ? "table.k-month:eq(1) " + H : "table.k-month:eq(0) " + H, a3._setCurrent(t3), a3._current = t3, a3._rangeSelection(a3._cellByDate(a3._view.toDateString(t3), H), t3), a3.trigger(I), a3.selectable.options.filter = "table.k-month:eq(0) " + H;
        }, _keyboardToggleSelection: function(t3) {
          var n3 = this;
          t3.currentTarget = n3._cell[0], n3.selectable._lastActive = e2(n3._cell[0]), e2(n3._cell[0]).hasClass(N) ? n3.selectable._unselect(e2(n3._cell[0])) : n3.selectable.value(e2(n3._cell[0])), n3.selectable.trigger(I, { event: t3 });
        }, _nextNavigatable: function(e3, t3) {
          var n3 = this, i3 = true, a3 = n3._view, r3 = n3.options.min, o3 = n3.options.max, s3 = n3.options.disableDates, l3 = new Date(e3.getTime());
          for (a3.setDate(l3, -t3); i3; ) {
            if (a3.setDate(e3, t3), !ie(e3, r3, o3)) {
              e3 = l3;
              break;
            }
            i3 = s3(e3);
          }
          return e3;
        }, _animate: function(e3) {
          var t3 = this, n3 = e3.from, i3 = e3.to, a3 = t3._active, r3 = t3.element.children(".k-calendar-view");
          n3 ? n3.parent().data("animating") ? (n3.off(w), n3.parent().kendoStop(true, true).remove(), n3.remove(), r3.append(i3), t3._focusView(a3)) : !n3.is(":visible") || false === t3.options.animation || e3.replace ? (i3.insertAfter(n3), n3.off(w).remove(), t3._focusView(a3)) : t3[e3.vertical ? "_vertical" : "_horizontal"](n3, i3, e3.future) : (r3.append(i3), t3._bindTable(i3));
        }, _horizontal: function(e3, t3, n3) {
          var i3 = this, a3 = i3._active, r3 = i3.options.animation.horizontal, o3 = r3.effects, s3 = k2(e3), l3 = k2(e3, true) - s3;
          o3 && -1 != o3.indexOf(C) && (e3.add(t3).css({ width: s3 }), e3.wrap("<div/>"), i3._focusView(a3, e3), e3.parent().css({ position: "relative", width: 2 * s3 + 2 * l3, display: "flex", "margin-left": n3 ? 0 : -s3 - l3 }), t3[n3 ? "insertAfter" : "insertBefore"](e3), G(r3, { effects: C + ":" + (n3 ? "right" : "left"), complete: function() {
            e3.off(w).remove(), i3._oldTable = null, t3.unwrap(), i3._focusView(a3);
          } }), e3.parent().kendoStop(true, true).kendoAnimate(r3));
        }, _vertical: function(e3, t3) {
          var n3, i3, a3 = this, r3 = a3.options.animation.vertical, o3 = r3.effects, s3 = a3._active;
          o3 && -1 != o3.indexOf("zoom") && (t3.insertBefore(e3), e3.css({ position: "absolute", width: t3.width() }), m2 && (i3 = (i3 = (n3 = a3._cellByDate(a3._view.toDateString(a3._current))).position()).left + parseInt(n3.width() / 2, 10) + "px " + (i3.top + parseInt(n3.height() / 2, 10)) + "px", t3.css(m2, i3)), e3.kendoStop(true, true).kendoAnimate({ effects: "fadeOut", duration: 600, complete: function() {
            e3.off(w).remove(), a3._oldTable = null, a3._focusView(s3);
          } }), t3.kendoStop(true, true).kendoAnimate(r3));
        }, _cellByDate: function(t3, i3) {
          return this._table.find(i3 || "td:not(.k-other-month)").filter(function() {
            return e2(this.firstChild).attr(n2.attr(E)) === t3;
          });
        }, _selectCell: function(e3) {
          var t3 = this, n3 = t3._selectedCell, i3 = t3._view.toDateString(e3);
          n3 && n3[0] && (n3[0].removeAttribute(j), n3.removeClass(N)), n3 = t3._cellByDate(i3, "multiple" == t3.options.selectable ? P : "td:not(.k-other-month)"), t3._selectedCell = n3, n3.addClass(N).attr(j, true);
        }, _setCurrent: function(e3) {
          var t3 = this, i3 = n2.guid(), a3 = t3._cell, r3 = t3._view.toDateString(e3);
          a3 && a3[0] && (a3.removeClass(F), a3[0].removeAttribute(q), a3[0].removeAttribute(x)), a3 = t3._cellByDate(r3, "multiple" == t3.options.selectable ? P : "td:not(.k-other-month)"), t3._cell = a3, a3.attr(x, i3).addClass(F), t3._table[0] && (t3._table[0].removeAttribute("aria-activedescendant"), t3._table.attr("aria-activedescendant", i3));
        }, _bindTable: function(e3) {
          e3.on("focus.kendoCalendar", this._addClassProxy).on("blur.kendoCalendar", this._removeClassProxy);
        }, _click: function(e3) {
          var t3 = this, n3 = t3.options, i3 = /* @__PURE__ */ new Date(+t3._current), a3 = ge(e3);
          l2(a3, 0), "month" == t3._view.name && t3.options.disableDates(a3) && (a3 = t3._value), t3._view.setDate(i3, a3), t3.navigateDown(ne(i3, n3.min, n3.max));
        }, _focus: function(e3) {
          var t3 = this;
          0 !== t3._view.compare(e3, t3._current) ? t3.navigate(e3) : (t3._current = e3, t3._setCurrent(e3));
        }, _focusView: function(e3, t3) {
          e3 && this.focus(t3);
        }, _viewWrapper: function() {
          var t3 = this.element, n3 = t3.children(".k-calendar-view");
          n3[0] || (n3 = e2("<div class='k-calendar-view' />").insertAfter(t3.find(Y)));
        }, _footer: function(t3) {
          var i3 = this, a3 = te(), r3 = i3.element, o3 = r3.find(".k-footer");
          if (!t3) return i3._toggle(false), void o3.hide();
          o3[0] || (o3 = e2('<div class="k-footer"><a tabindex="-1" href="#" class="k-link k-nav-today"></a></div>').appendTo(r3)), i3._today = o3.show().find(".k-link").html(t3(a3)).attr("title", n2.toString(a3, "D", i3.options.culture)), i3._toggle();
        }, _header: function() {
          var t3 = this, i3 = t3.element, a3 = t3.options.linksSelector;
          i3.find(Y)[0] || i3.html(n2.template(t3.options.header.template)(e2.extend(true, {}, t3.options, { actionAttr: n2.attr("action"), size: n2.getValidCssClass("k-button-", "size", t3.options.size) }))), i3.find(a3).on(y + " touchend" + w, function() {
            return false;
          }), t3._title = i3.find("[" + n2.attr("action") + '="nav-up"]').on(y + " touchend" + w, function() {
            t3._active = false !== t3.options.focusOnNav, t3.navigateUp();
          }), t3._prevArrow = i3.find("[" + n2.attr("action") + '="prev"]').on(y + " touchend" + w, function() {
            t3._active = false !== t3.options.focusOnNav, t3.navigateToPast();
          }), t3._nextArrow = i3.find("[" + n2.attr("action") + '="next"]').on(y + " touchend" + w, function() {
            t3._active = false !== t3.options.focusOnNav, t3.navigateToFuture();
          }), i3.find("[" + n2.attr("action") + '="today"]').on(y + " touchend" + w, t3._todayClick.bind(t3));
        }, _navigate: function(e3, t3) {
          var n3 = this, i3 = n3._index + 1, a3 = new K(+n3._current);
          n3._isMultipleSelection() && (a3 = ge(n3._table.find("td:not(.k-other-month):not(.k-out-of-range)").has(".k-link").first().find("a")), n3._current = /* @__PURE__ */ new Date(+a3));
          (e3 = n3[e3]).hasClass(A) || (i3 > 3 ? a3.setFullYear(a3.getFullYear() + 100 * t3) : X.views[i3].setDate(a3, t3), n3.navigate(a3));
        }, _option: function(e3, n3) {
          var i3, a3 = this, r3 = a3.options, o3 = a3._value || a3._current;
          if (n3 === t2) return r3[e3];
          (n3 = s2(n3, r3.format, r3.culture)) && (r3[e3] = new K(+n3), ((i3 = "min" === e3 ? n3 > o3 : o3 > n3) || function(e4, t3) {
            if (e4) return e4.getFullYear() === t3.getFullYear() && e4.getMonth() === t3.getMonth();
            return false;
          }(o3, n3)) && (i3 && (a3._value = null), a3._changeView = true), a3._changeView || (a3._changeView = !(!r3.month.content && !r3.month.empty)), a3.navigate(a3._value), a3._toggle());
        }, _toggle: function(e3) {
          var n3 = this, i3 = n3.options, a3 = n3.options.disableDates(te()), r3 = n3._today, o3 = n3._todayClass();
          e3 === t2 && (e3 = ie(te(), i3.min, i3.max)), r3 && (r3.off(y), e3 && !a3 ? r3.addClass(o3).removeClass(A).on(y, n3._todayClick.bind(n3)) : r3.removeClass(o3).addClass(A).on(y, de));
        }, _todayClass: function() {
          return "k-nav-today";
        }, _todayClick: function(e3) {
          var t3 = this, n3 = $[t3.options.depth], i3 = t3.options.disableDates, a3 = te();
          e3.preventDefault(), i3(a3) || (0 === t3._view.compare(t3._current, a3) && t3._index == n3 && (t3._changeView = false), t3._isMultipleSelection() && (t3._selectDates = [a3], t3.selectable._lastActive = null), t3._value = a3, t3.navigate(a3, n3), t3.trigger(I));
        }, _templates: function() {
          var e3 = this, t3 = e3.options, i3 = t3.footer, a3 = t3.month, r3 = a3.content, o3 = a3.weekNumber, s3 = a3.empty, l3 = '#= kendo.toString(data,"D","' + t3.culture + '") #';
          e3.month = { content: p2('<td class="#=data.cssClass#" role="gridcell"><a tabindex="-1" class="k-link#=data.linkClass#" href="#=data.url#" ' + n2.attr(E) + '="#=data.dateString#" title="#=data.title#">' + (r3 || "#=data.value#") + "</a></td>", { useWithBlock: !!r3 }), empty: p2('<td role="gridcell">' + (s3 || "&nbsp;") + "</td>", { useWithBlock: !!s3 }), weekNumber: p2('<td class="k-alt">' + (o3 || "#= data.weekNumber #") + "</td>", { useWithBlock: !!o3 }) }, e3.year = { content: p2('<td class="#=data.cssClass#" role="gridcell"><a tabindex="-1" class="k-link" href="\\#" data-#=data.ns#value="#=data.dateString#" aria-label="#=data.label#">#=data.value#</a></td>', { useWithBlock: false }) }, i3 && true !== i3 && (l3 = i3), e3.footer = false !== i3 ? p2(l3, { useWithBlock: false }) : null;
        }, _updateAria: function(e3, t3) {
          var i3, a3 = this, r3 = a3._cell, o3 = a3.view().valueType(), s3 = t3 || a3.current();
          return i3 = "month" === o3 ? n2.toString(s3, "MMMM") : "date" === o3 ? n2.toString(s3, "D") : r3.text(), r3.attr("aria-label", e3({ current: s3, valueType: o3, text: i3 })), r3.attr("id");
        } });
        a2.plugin(Q);
        var X = { firstDayOfMonth: function(e3) {
          return ue(e3.getFullYear(), e3.getMonth(), 1);
        }, firstVisibleDay: function(e3, t3) {
          var i3 = (t3 = t3 || n2.culture().calendar).firstDay, a3 = new K(e3.getFullYear(), e3.getMonth(), 1, e3.getHours(), e3.getMinutes(), e3.getSeconds(), e3.getMilliseconds());
          for (a3.setFullYear(e3.getFullYear()); a3.getDay() != i3; ) X.setTime(a3, -864e5);
          return a3;
        }, setTime: function(e3, t3) {
          var n3 = e3.getTimezoneOffset(), i3 = new K(e3.getTime() + t3), a3 = i3.getTimezoneOffset() - n3;
          e3.setTime(i3.getTime() + 6e4 * a3);
        }, views: [{ name: T, title: function(e3, t3, n3, i3) {
          return ce(i3).months.names[e3.getMonth()] + " " + e3.getFullYear();
        }, content: function(e3) {
          var t3 = this, i3 = 0, a3 = e3.min, r3 = e3.max, o3 = e3.date, s3 = e3.dates, u3 = e3.format, c3 = e3.culture, p3 = e3.url, h3 = e3.showHeader, f3 = e3.otherMonth, m3 = e3.isWeekColumnVisible, g3 = p3 && s3[0], v3 = ce(c3), _3 = v3.firstDay, b3 = v3.days, k3 = ae(b3.names, _3), w2 = ae(b3.namesShort, _3), y2 = X.firstVisibleDay(o3, v3), x2 = t3.first(o3), C2 = t3.last(o3), T2 = t3.toDateString, S2 = te(), I2 = '<table tabindex="0" role="grid" class="' + e3.contentClasses + '" cellspacing="0" data-start="' + T2(y2) + '">';
          for (h3 && (I2 += '<caption class="k-calendar-caption k-month-header">' + this.title(o3, a3, r3, c3) + "</caption>"), I2 += '<thead class="k-calendar-thead"><tr role="row" class="k-calendar-tr">', m3 && (I2 += '<th scope="col" class="k-calendar-th k-alt">' + e3.messages.weekColumnHeader + "</th>"); i3 < 7; i3++) I2 += '<th scope="col" class="k-calendar-th" aria-label="' + k3[i3] + '">' + w2[i3] + "</th>";
          return l2(S2, 0), S2 = +S2, Z({ cells: 42, perRow: 7, html: I2 += '</tr></thead><tbody class="k-calendar-tbody"><tr role="row" class="k-calendar-tr">', start: ue(y2.getFullYear(), y2.getMonth(), y2.getDate()), isWeekColumnVisible: m3, weekNumber: e3.weekNumber, min: ue(a3.getFullYear(), a3.getMonth(), a3.getDate()), max: ue(r3.getFullYear(), r3.getMonth(), r3.getDate()), otherMonth: f3, content: e3.content, lastDayOfMonth: C2, empty: e3.empty, setter: t3.setDate, disableDates: e3.disableDates, build: function(e4, t4, i4) {
            var a4 = ["k-calendar-td"], r4 = e4.getDay(), o4 = "", l3 = "#";
            return (e4 < x2 || e4 > C2) && a4.push(z), i4(e4) && a4.push(A), +e4 === S2 && a4.push("k-today"), 0 !== r4 && 6 !== r4 || a4.push("k-weekend"), g3 && function(e5, t5) {
              for (var n3 = 0, i5 = t5.length; n3 < i5; n3++) if (e5 === +t5[n3]) return true;
              return false;
            }(+e4, s3) && (l3 = p3.replace("{0}", n2.toString(e4, u3, c3)), o4 = " k-action-link"), { date: e4, dates: s3, ns: n2.ns, title: n2.toString(e4, "D", c3), value: e4.getDate(), dateString: T2(e4), cssClass: a4.join(" "), linkClass: o4, url: l3 };
          }, weekNumberBuild: function(e4) {
            return { weekNumber: d2(e4, n2.culture().calendar.firstDay), currentDate: e4 };
          } });
        }, first: function(e3) {
          return X.firstDayOfMonth(e3);
        }, last: function(e3) {
          var t3 = ue(e3.getFullYear(), e3.getMonth() + 1, 0), n3 = X.firstDayOfMonth(e3), i3 = Math.abs(t3.getTimezoneOffset() - n3.getTimezoneOffset());
          return i3 && t3.setHours(n3.getHours() + i3 / 60), t3;
        }, compare: function(e3, t3) {
          var n3 = e3.getMonth(), i3 = e3.getFullYear(), a3 = t3.getMonth(), r3 = t3.getFullYear();
          return i3 > r3 ? 1 : i3 < r3 ? -1 : n3 == a3 ? 0 : n3 > a3 ? 1 : -1;
        }, setDate: function(e3, t3) {
          var n3 = e3.getHours();
          t3 instanceof K ? e3.setFullYear(t3.getFullYear(), t3.getMonth(), t3.getDate()) : X.setTime(e3, t3 * L), l2(e3, n3);
        }, toDateString: function(e3) {
          return e3.getFullYear() + "/" + e3.getMonth() + "/" + e3.getDate();
        }, valueType: function() {
          return "date";
        } }, { name: "year", title: function(e3) {
          return e3.getFullYear();
        }, content: function(e3) {
          var t3 = ce(e3.culture).months, i3 = t3.namesAbbr, a3 = t3.names, r3 = this.toDateString, o3 = e3.min, s3 = e3.max, l3 = "";
          return e3.showHeader && (l3 += '<table tabindex="0" role="grid" class="k-calendar-table k-content k-meta-view" cellspacing="0">', l3 += '<caption class="k-calendar-caption k-meta-header">', l3 += this.title(e3.date), l3 += "</caption>", l3 += '<tbody class="k-calendar-tbody">', l3 += '<tr role="row" class="k-calendar-tr">'), Z({ min: ue(o3.getFullYear(), o3.getMonth(), 1), max: ue(s3.getFullYear(), s3.getMonth(), 1), start: ue(e3.date.getFullYear(), 0, 1), html: l3, setter: this.setDate, content: e3.content, build: function(e4) {
            return { value: i3[e4.getMonth()], label: a3[e4.getMonth()], ns: n2.ns, dateString: r3(e4), cssClass: ["k-calendar-td"].join(" ") };
          } });
        }, first: function(e3) {
          return ue(e3.getFullYear(), 0, e3.getDate());
        }, last: function(e3) {
          return ue(e3.getFullYear(), 11, e3.getDate());
        }, compare: function(e3, t3) {
          return ee(e3, t3);
        }, setDate: function(e3, t3) {
          var n3, i3 = e3.getHours();
          t3 instanceof K ? (n3 = t3.getMonth(), e3.setFullYear(t3.getFullYear(), n3, e3.getDate()), n3 !== e3.getMonth() && e3.setDate(0)) : (n3 = e3.getMonth() + t3, e3.setMonth(n3), n3 > 11 && (n3 -= 12), n3 > 0 && e3.getMonth() != n3 && e3.setDate(0)), l2(e3, i3);
        }, toDateString: function(e3) {
          return e3.getFullYear() + "/" + e3.getMonth() + "/1";
        }, valueType: function() {
          return "month";
        } }, { name: "decade", title: function(e3, t3, n3) {
          return J(e3, t3, n3, 10);
        }, content: function(e3) {
          var t3 = e3.date.getFullYear(), i3 = this.toDateString, a3 = "";
          return e3.showHeader && (a3 += '<table tabindex="0" role="grid" class="k-calendar-table k-content k-meta-view" cellspacing="0">', a3 += '<caption class="k-meta-header">', a3 += this.title(e3.date, e3.min, e3.max), a3 += "</caption>", a3 += '<tbody class="k-calendar-thead">', a3 += '<tr role="row" class="k-calendar-tr">'), Z({ start: ue(t3 - t3 % 10 - 1, 0, 1), min: ue(e3.min.getFullYear(), 0, 1), max: ue(e3.max.getFullYear(), 0, 1), otherMonth: e3.otherMonth, html: a3, setter: this.setDate, build: function(e4, t4) {
            var a4 = ["k-calendar-td"];
            return 0 !== t4 && 11 !== t4 || a4.push(z), { value: e4.getFullYear(), ns: n2.ns, dateString: i3(e4), cssClass: a4.join(" ") };
          } });
        }, first: function(e3) {
          var t3 = e3.getFullYear();
          return ue(t3 - t3 % 10, e3.getMonth(), e3.getDate());
        }, last: function(e3) {
          var t3 = e3.getFullYear();
          return ue(t3 - t3 % 10 + 9, e3.getMonth(), e3.getDate());
        }, compare: function(e3, t3) {
          return ee(e3, t3, 10);
        }, setDate: function(e3, t3) {
          re(e3, t3, 1);
        }, toDateString: function(e3) {
          return e3.getFullYear() + "/0/1";
        }, valueType: function() {
          return "year";
        } }, { name: S, title: function(e3, t3, n3) {
          return J(e3, t3, n3, 100);
        }, content: function(e3) {
          var t3 = e3.date.getFullYear(), i3 = e3.min.getFullYear(), a3 = e3.max.getFullYear(), r3 = this.toDateString, o3 = i3, s3 = a3, l3 = "";
          return (s3 -= s3 % 10) - (o3 -= o3 % 10) < 10 && (s3 = o3 + 9), e3.showHeader && (l3 += '<table tabindex="0" role="grid" class="k-calendar-table k-content k-meta-view" cellspacing="0">', l3 += '<caption class="k-calendar-caption k-meta-header">', l3 += this.title(e3.date, e3.min, e3.max), l3 += "</caption>", l3 += '<tbody class="k-calendar-tbody">', l3 += '<tr role="row" class="k-calendar-tr">'), Z({ start: ue(t3 - t3 % 100 - 10, 0, 1), min: ue(o3, 0, 1), max: ue(s3, 0, 1), otherMonth: e3.otherMonth, html: l3, setter: this.setDate, build: function(e4, t4) {
            var o4 = ["k-calendar-td"], s4 = e4.getFullYear(), l4 = s4 + 9;
            return 0 !== t4 && 11 !== t4 || o4.push(z), s4 < i3 && (s4 = i3), l4 > a3 && (l4 = a3), { ns: n2.ns, value: s4 + " - " + l4, dateString: r3(e4), cssClass: o4.join(" ") };
          } });
        }, first: function(e3) {
          var t3 = e3.getFullYear();
          return ue(t3 - t3 % 100, e3.getMonth(), e3.getDate());
        }, last: function(e3) {
          var t3 = e3.getFullYear();
          return ue(t3 - t3 % 100 + 99, e3.getMonth(), e3.getDate());
        }, compare: function(e3, t3) {
          return ee(e3, t3, 100);
        }, setDate: function(e3, t3) {
          re(e3, t3, 10);
        }, toDateString: function(e3) {
          var t3 = e3.getFullYear();
          return t3 - t3 % 10 + "/0/1";
        }, valueType: function() {
          return "decade";
        } }] };
        function J(e3, t3, n3, i3) {
          var a3, r3 = e3.getFullYear(), o3 = t3.getFullYear(), s3 = n3.getFullYear();
          return a3 = (r3 -= r3 % i3) + (i3 - 1), r3 < o3 && (r3 = o3), a3 > s3 && (a3 = s3), r3 + "-" + a3;
        }
        function Z(e3) {
          var t3, n3 = 0, i3 = e3.min, a3 = e3.max, r3 = e3.start, o3 = e3.setter, s3 = e3.build, d3 = e3.weekNumberBuild, u3 = e3.cells || 12, c3 = e3.isWeekColumnVisible, p3 = e3.perRow || 4, h3 = e3.otherMonth, f3 = e3.lastDayOfMonth, m3 = e3.weekNumber || b2, k3 = e3.content || g2, w2 = e3.empty || v2, y2 = e3.otherMonthCellTemplate || _2, x2 = e3.html || '<table tabindex="0" role="grid" class="k-calendar-table k-content k-meta-view" cellspacing="0"><tbody class="k-calendar-tbody"><tr role="row" class="k-calendar-tr">';
          for (c3 && (x2 += m3(d3(r3))); n3 < u3; n3++) n3 > 0 && n3 % p3 == 0 && (x2 += '</tr><tr role="row" class="k-calendar-tr">', c3 && (x2 += m3(h3 || +r3 <= +f3 ? d3(r3) : { weekNumber: "&nbsp;" }))), r3 = ue(r3.getFullYear(), r3.getMonth(), r3.getDate()), l2(r3, 0), x2 += -1 === (t3 = s3(r3, n3, e3.disableDates)).cssClass.indexOf(z) || h3 ? ie(r3, i3, a3) ? k3(t3) : w2(t3) : y2(t3), o3(r3, 1);
          return x2 + "</tr></tbody></table>";
        }
        function ee(e3, t3, n3) {
          var i3 = e3.getFullYear(), a3 = t3.getFullYear(), r3 = a3, o3 = 0;
          return n3 && (r3 = (a3 -= a3 % n3) - a3 % n3 + n3 - 1), i3 > r3 ? o3 = 1 : i3 < a3 && (o3 = -1), o3;
        }
        function te() {
          var e3 = new K();
          return new K(e3.getFullYear(), e3.getMonth(), e3.getDate());
        }
        function ne(e3, t3, n3) {
          var i3 = te();
          return e3 && (i3 = new K(+e3)), t3 > i3 ? i3 = new K(+t3) : n3 < i3 && (i3 = new K(+n3)), i3;
        }
        function ie(e3, t3, n3) {
          return +e3 >= +t3 && +e3 <= +n3;
        }
        function ae(e3, t3) {
          return e3.slice(t3).concat(e3.slice(0, t3));
        }
        function re(e3, t3, n3) {
          t3 = t3 instanceof K ? t3.getFullYear() : e3.getFullYear() + n3 * t3, e3.setFullYear(t3);
        }
        function oe(e3, t3) {
          if (+t3 < +e3) {
            var i3 = +e3;
            X.views[0].setDate(e3, t3), X.views[0].setDate(t3, new Date(i3));
          }
          var a3 = Date.UTC(e3.getFullYear(), e3.getMonth(), e3.getDate()), r3 = Date.UTC(t3.getFullYear(), t3.getMonth(), t3.getDate());
          return Math.ceil((+r3 - +a3) / n2.date.MS_PER_DAY);
        }
        function se(e3, t3, n3, i3) {
          for (var a3 = 0; a3 <= t3; a3++) {
            var r3 = new Date(n3.getTime());
            i3(r3 = new Date(r3.setDate(r3.getDate() + a3))) || e3.push(r3);
          }
        }
        function le(t3) {
          e2(this).hasClass("k-disabled") || e2(this).toggleClass("k-hover", O.indexOf(t3.type) > -1 || t3.type == R);
        }
        function de(e3) {
          e3.preventDefault();
        }
        function ue(e3, t3, n3) {
          var i3 = new K(e3, t3, n3);
          return i3.setFullYear(e3, t3, n3), i3;
        }
        function ce(e3) {
          return h2(e3).calendars.standard;
        }
        function pe(e3) {
          var n3 = $[e3.start], i3 = $[e3.depth], a3 = h2(e3.culture);
          e3.format = c2(e3.format || a3.calendars.standard.patterns.d), isNaN(n3) && (n3 = 0, e3.start = T), (i3 === t2 || i3 > n3) && (e3.depth = T), null === e3.dates && (e3.dates = []);
        }
        function he(e3, t3) {
          e3.addClass("k-" + t3);
        }
        function fe(t3) {
          return n2.isFunction(t3) ? t3 : Array.isArray(t3) ? function(t4) {
            var n3, i3 = [], a3 = ["su", "mo", "tu", "we", "th", "fr", "sa"], r3 = "if (found) { return true } else {return false}";
            if (t4[0] instanceof K) i3 = function(e3) {
              for (var t5 = [], n4 = 0; n4 < e3.length; n4++) t5.push(e3[n4].setHours(0, 0, 0, 0));
              return t5;
            }(t4), n3 = "var clonedDate = new Date(date); var found = date && window.kendo.jQuery.inArray(clonedDate.setHours(0, 0, 0, 0),[" + i3 + "]) > -1;" + r3;
            else {
              for (var o3 = 0; o3 < t4.length; o3++) {
                var s3 = t4[o3].slice(0, 2).toLowerCase(), l3 = e2.inArray(s3, a3);
                l3 > -1 && i3.push(l3);
              }
              n3 = "var clonedDate = new Date(date); var found = date && window.kendo.jQuery.inArray(clonedDate.getDay(),[" + i3 + "]) > -1;" + r3;
            }
            return new Function("date", n3);
          }(t3) : e2.noop;
        }
        function me(e3, t3) {
          return e3 instanceof Date && t3 instanceof Date && (e3 = e3.getTime(), t3 = t3.getTime()), e3 === t3;
        }
        function ge(t3) {
          var i3 = e2(t3).attr(n2.attr(E)).split("/");
          return i3 = ue(i3[0], i3[1], i3[2]);
        }
        X.isEqualDatePart = function(e3, t3) {
          return !!e3 && (e3.getFullYear() === t3.getFullYear() && e3.getMonth() === t3.getMonth() && e3.getDate() === t3.getDate());
        }, X.isEqualDate = me, X.restrictValue = ne, X.isInRange = ie, X.addClassToViewContainer = he, X.normalize = pe, X.viewsEnum = $, X.disabled = fe, X.toDateObject = ge, X.getToday = te, X.createDate = ue, n2.calendar = X;
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.caret, a2 = n2.ui, r2 = a2.Widget, o2 = n2.keys, s2 = ".kendoDateInput", l2 = {}.toString, d2 = e2.isPlainObject, u2 = (n2.support.propertyChangeEvent ? "propertychange.kendoDateInput input" : "input") + s2, c2 = "k-focus", p2 = "k-disabled", h2 = "k-invalid", f2 = "disabled", m2 = "readonly", g2 = "change", v2 = "dMyHhmftsz", _2 = r2.extend({ init: function(t3, i3) {
          var a3 = this;
          r2.fn.init.call(a3, t3, i3), t3 = a3.element, (i3 = a3.options).format = n2._extractFormat(i3.format || n2.getCulture(i3.culture).calendars.standard.patterns.d), i3.min = n2.parseDate(t3.attr("min")) || n2.parseDate(i3.min), i3.max = n2.parseDate(t3.attr("max")) || n2.parseDate(i3.max);
          var o3 = t3.parent().attr("class") || "", l3 = o3.indexOf("picker") >= 0 && o3.indexOf("rangepicker") < 0;
          l3 ? a3.wrapper = t3.parent() : (a3.wrapper = t3.wrap("<span class='k-dateinput k-input'></span>").parent(), a3.wrapper.addClass(t3[0].className).removeClass("input-validation-error"), a3.wrapper[0].style.cssText = t3[0].style.cssText, t3.css({ height: t3[0].style.height })), a3._validationIcon = e2("<span class='k-input-validation-icon k-icon k-i-warning k-hidden'></span>").insertAfter(t3), a3._form(), a3.element.addClass(l3 ? " " : "k-input-inner").attr("autocomplete", "off").on("focus" + s2, function() {
            a3.wrapper.addClass(c2);
          }).on("focusout" + s2, function() {
            a3.wrapper.removeClass(c2), a3._change();
          });
          try {
            t3[0].setAttribute("type", "text");
          } catch (e3) {
            t3[0].type = "text";
          }
          t3.is("[disabled]") || e2(a3.element).parents("fieldset").is(":disabled") ? a3.enable(false) : a3.readonly(t3.is("[readonly]")), a3.value(a3.options.value || t3.val()), a3._applyCssClasses(), i3.label && a3._label(), n2.notify(a3);
        }, options: { name: "DateInput", culture: "", value: "", format: "", min: new Date(1900, 0, 1), max: new Date(2099, 11, 31), messages: { year: "year", month: "month", day: "day", weekday: "day of the week", hour: "hours", minute: "minutes", second: "seconds", dayperiod: "AM/PM" }, size: "medium", fillMode: "solid", rounded: "medium", label: null }, events: [g2], min: function(e3) {
          if (e3 === t2) return this.options.min;
          this.options.min = e3;
        }, max: function(e3) {
          if (e3 === t2) return this.options.max;
          this.options.max = e3;
        }, setOptions: function(e3) {
          var t3 = this;
          r2.fn.setOptions.call(t3, e3), this._unbindInput(), this._bindInput(), this._updateElementValue(), e3.label && t3._inputLabel ? t3.label.setOptions(e3.label) : false === e3.label ? (t3.label._unwrapFloating(), t3._inputLabel.remove(), delete t3._inputLabel) : e3.label && t3._label();
        }, destroy: function() {
          var e3 = this;
          e3.element.off(s2), e3._formElement && e3._formElement.off("reset", e3._resetHandler), e3.label && e3.label.destroy(), r2.fn.destroy.call(e3);
        }, value: function(e3) {
          if (e3 === t2) return this._dateTime.getDateObject();
          null === e3 && (e3 = ""), "[object Date]" !== l2.call(e3) && (e3 = n2.parseDate(e3, this.options.format, this.options.culture)), e3 && !e3.getTime() && (e3 = null), this._dateTime = new b2(e3, this.options.format, this.options.culture, this.options.messages), this._updateElementValue(), this._oldValue = e3, this.label && this.label.floatingLabel && this.label.floatingLabel.refresh();
        }, _updateElementValue: function() {
          var e3 = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages);
          this.element.val(e3[0]), this._oldText = e3[0], this._format = e3[1];
        }, _toggleDateMask: function(e3) {
          e3 ? this._updateElementValue() : this.element.val("");
        }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false }), this.label && this.label.floatingLabel && this.label.floatingLabel.readonly(e3 === t2 || e3);
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this.label && this.label.floatingLabel && this.label.floatingLabel.enable(e3 = e3 === t2 || e3);
        }, _label: function() {
          var t3 = this, i3 = t3.options, a3 = d2(i3.label) ? i3.label : { content: i3.label };
          t3.label = new n2.ui.Label(null, e2.extend({}, a3, { widget: t3, floatCheck: function() {
            return t3._toggleDateMask(true), !t3.value() && document.activeElement !== t3.element[0] && (t3._toggleDateMask(false), true);
          } })), t3._inputLabel = t3.label.element;
        }, _bindInput: function() {
          var e3 = this;
          e3.element.on("focus" + s2, function() {
            e3.wrapper.addClass(c2);
          }).on("focusout" + s2, function() {
            e3.wrapper.removeClass(c2), e3._change();
          }).on("paste" + s2, e3._paste.bind(e3)).on("keydown" + s2, e3._keydown.bind(e3)).on(u2, e3._input.bind(e3)).on("mouseup" + s2, e3._mouseUp.bind(e3)).on("DOMMouseScroll" + s2 + " mousewheel" + s2, e3._scroll.bind(e3));
        }, _unbindInput: function() {
          this.element.off("keydown" + s2).off("paste" + s2).off("focus" + s2).off("focusout" + s2).off(u2).off("mouseup" + s2).off("DOMMouseScroll" + s2 + " mousewheel" + s2);
        }, _editable: function(e3) {
          var t3 = this, n3 = t3.element, i3 = e3.disable, a3 = e3.readonly, r3 = t3.wrapper;
          t3._unbindInput(), a3 || i3 ? (i3 && (r3.addClass(p2), n3.attr(f2, i3), n3 && n3.length && n3[0].removeAttribute(m2)), a3 && n3.attr(m2, a3)) : (r3.removeClass(p2), n3 && n3.length && (n3[0].removeAttribute(f2), n3[0].removeAttribute(m2)), t3._bindInput());
        }, _change: function() {
          var e3 = this, t3 = e3._oldValue, n3 = e3.value();
          n3 && e3.min() && n3 < e3.min() && (e3.value(e3.min()), n3 = e3.value()), n3 && e3.max() && n3 > e3.max() && (e3.value(e3.max()), n3 = e3.value()), (t3 && n3 && n3.getTime() !== t3.getTime() || t3 && !n3 || !t3 && n3) && (e3._oldValue = n3, e3.trigger(g2), e3.element.trigger(g2));
        }, _input: function() {
          var e3 = this, t3 = e3.element[0], a3 = false;
          if (n2._activeElement() === t3) {
            var r3 = function(e4, t4, n3, i3) {
              var a4 = e4[i3 + e4.length - n3.length];
              e4 = e4.substring(0, i3 + e4.length - n3.length), n3 = n3.substring(0, i3);
              var r4, o4 = [];
              if (e4 === n3 && i3 > 0) return o4.push([t4[i3 - 1], n3[i3 - 1]]), o4;
              if (0 === e4.indexOf(n3) && (0 === n3.length || t4[n3.length - 1] !== t4[n3.length])) {
                var s4 = "";
                for (r4 = n3.length; r4 < e4.length; r4++) t4[r4] !== s4 && v2.indexOf(t4[r4]) >= 0 && (s4 = t4[r4], o4.push([s4, ""]));
                return o4;
              }
              if (" " === n3[n3.length - 1] || n3[n3.length - 1] === a4) return [[t4[i3 - 1], " "]];
              if (0 === n3.indexOf(e4) || -1 === v2.indexOf(t4[i3 - 1])) {
                var l4 = t4[0];
                for (r4 = Math.max(0, e4.length - 1); r4 < t4.length; r4++) if (v2.indexOf(t4[r4]) >= 0) {
                  l4 = t4[r4];
                  break;
                }
                return [[l4, n3[i3 - 1]]];
              }
              return [[t4[i3 - 1], n3[i3 - 1]]];
            }(this._oldText, this._format, this.element[0].value, i2(this.element[0])[0]), o3 = 1 === r3.length && " " === r3[0][1];
            if (!o3) for (var s3 = 0; s3 < r3.length; s3++) {
              var l3 = this._dateTime.parsePart(r3[s3][0], r3[s3][1]);
              a3 = a3 || !l3;
            }
            if (this._updateElementValue(), r3.length && " " !== r3[0][0] && (this._selectSegment(r3[0][0]), !o3)) {
              var d3 = r3[0][0];
              setTimeout(function() {
                e3._selectSegment(d3);
              });
            }
            if (o3) {
              this._keydown({ keyCode: 39, preventDefault: function() {
              } });
            }
            a3 && e3._blinkInvalidState();
          }
        }, _blinkInvalidState: function() {
          var e3 = this;
          e3._addInvalidState(), clearTimeout(e3._invalidStateTimeout), e3._invalidStateTimeout = setTimeout(e3._removeInvalidState.bind(e3), 100);
        }, _addInvalidState: function() {
          this.wrapper.addClass(h2), this._validationIcon.removeClass("k-hidden");
        }, _removeInvalidState: function() {
          var e3 = this;
          e3.wrapper.removeClass(h2), e3._validationIcon.addClass("k-hidden"), e3._invalidStateTimeout = null;
        }, _mouseUp: function() {
          var e3 = i2(this.element[0]);
          e3[0] === e3[1] && this._selectNearestSegment();
        }, _scroll: function(e3) {
          if (n2._activeElement() === this.element[0] && !this.element.is("[readonly]")) {
            var t3 = { keyCode: 37, preventDefault: function() {
            } };
            (e3 = window.event || e3).shiftKey ? t3.keyCode = (e3.wheelDelta || -e3.detail) > 0 ? 37 : 39 : t3.keyCode = (e3.wheelDelta || -e3.detail) > 0 ? 38 : 40, this._keydown(t3), e3.returnValue = false, e3.preventDefault && e3.preventDefault(), e3.stopPropagation && e3.stopPropagation();
          }
        }, _form: function() {
          var t3 = this, n3 = t3.element, i3 = n3.attr("form"), a3 = i3 ? e2("#" + i3) : n3.closest("form"), r3 = n3[0].value;
          !r3 && t3.options.value && (r3 = t3.options.value), a3[0] && (t3._resetHandler = function() {
            setTimeout(function() {
              t3.value(r3);
            });
          }, t3._formElement = a3.on("reset", t3._resetHandler));
        }, _paste: function(e3) {
          e3.preventDefault();
        }, _keydown: function(e3) {
          var t3, a3 = e3.keyCode;
          if (37 == a3 || 39 == a3) {
            e3.preventDefault(), (t3 = i2(this.element[0]))[0] != t3[1] && this._selectNearestSegment();
            for (var r3 = 37 == a3 ? -1 : 1, s3 = -1 == r3 ? i2(this.element[0])[0] - 1 : i2(this.element[0])[1] + 1; s3 >= 0 && s3 < this._format.length; ) {
              if (v2.indexOf(this._format[s3]) >= 0) {
                this._selectSegment(this._format[s3]);
                break;
              }
              s3 += r3;
            }
          }
          if (38 == a3 || 40 == a3) {
            e3.preventDefault(), t3 = i2(this.element[0]);
            var l3 = this._format[t3[0]];
            if (v2.indexOf(l3) >= 0) {
              var d3 = 1;
              "m" == l3 && (d3 = this.options.interval || 1), this._dateTime.modifyPart(l3, 38 == a3 ? 1 * d3 : -1 * d3), this._updateElementValue(), this._selectSegment(l3), this.element.trigger(g2);
            }
          }
          if (n2.support.browser.msie && n2.support.browser.version < 10) {
            var u3 = e3.keyCode ? e3.keyCode : e3.which;
            if (8 === u3 || 46 === u3) {
              var c3 = this;
              setTimeout(function() {
                c3._input();
              }, 0);
            }
          }
          a3 === o2.ENTER && this._change();
        }, _selectNearestSegment: function() {
          for (var e3 = i2(this.element[0])[0], t3 = e3, n3 = e3 - 1; t3 < this._format.length || n3 >= 0; t3++, n3--) {
            if (t3 < this._format.length && -1 !== v2.indexOf(this._format[t3])) return void this._selectSegment(this._format[t3]);
            if (n3 >= 0 && -1 !== v2.indexOf(this._format[n3])) return void this._selectSegment(this._format[n3]);
          }
        }, _selectSegment: function(e3) {
          for (var t3 = -1, n3 = 0, a3 = 0; a3 < this._format.length; a3++) this._format[a3] === e3 && (n3 = a3 + 1, -1 === t3 && (t3 = a3));
          t3 < 0 && (t3 = 0), i2(this.element, t3, n3);
        } });
        n2.cssProperties.registerPrefix("DateInput", "k-input-"), n2.cssProperties.registerValues("DateInput", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), a2.plugin(_2);
        var b2 = function(e3, i3, a3, r3) {
          var o3 = null, s3 = true, l3 = true, d3 = true, u3 = true, c3 = true, p3 = true, h3 = "", f3 = "", m3 = {}, g3 = ["", "0", "00", "000", "0000"];
          function v3(e4, t3, n3) {
            return (n3 = (t3 = t3 || 2) - (e4 += "").length) ? g3[t3].substring(0, n3) + e4 : e4;
          }
          var _3 = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|"[^"]*"|'[^']*'/g, b3 = null, k2 = null, w = null, y = false, x = function(e4) {
            var n3, i4, a4;
            switch (e4) {
              case "d":
                a4 = d3 ? o3.getDate() : m3.day;
                break;
              case "dd":
                a4 = d3 ? v3(o3.getDate()) : m3.day;
                break;
              case "ddd":
                a4 = d3 && l3 && s3 ? w.namesAbbr[o3.getDay()] : m3.weekday;
                break;
              case "dddd":
                a4 = d3 && l3 && s3 ? w.names[o3.getDay()] : m3.weekday;
                break;
              case "M":
                a4 = l3 ? o3.getMonth() + 1 : m3.month;
                break;
              case "MM":
                a4 = l3 ? v3(o3.getMonth() + 1) : m3.month;
                break;
              case "MMM":
                a4 = l3 ? b3.namesAbbr[o3.getMonth()] : m3.month;
                break;
              case "MMMM":
                a4 = l3 ? b3.names[o3.getMonth()] : m3.month;
                break;
              case "yy":
                a4 = s3 ? v3(o3.getFullYear() % 100) : m3.year;
                break;
              case "yyyy":
                a4 = s3 ? v3(o3.getFullYear(), 4) : m3.year;
                break;
              case "h":
                a4 = u3 ? o3.getHours() % 12 || 12 : m3.hour;
                break;
              case "hh":
                a4 = u3 ? v3(o3.getHours() % 12 || 12) : m3.hour;
                break;
              case "H":
                a4 = u3 ? o3.getHours() : m3.hour;
                break;
              case "HH":
                a4 = u3 ? v3(o3.getHours()) : m3.hour;
                break;
              case "m":
                a4 = c3 ? o3.getMinutes() : m3.minute;
                break;
              case "mm":
                a4 = c3 ? v3(o3.getMinutes()) : m3.minute;
                break;
              case "s":
                a4 = p3 ? o3.getSeconds() : m3.second;
                break;
              case "ss":
                a4 = p3 ? v3(o3.getSeconds()) : m3.second;
                break;
              case "f":
                a4 = Math.floor(o3.getMilliseconds() / 100);
                break;
              case "ff":
                (a4 = o3.getMilliseconds()) > 99 && (a4 = Math.floor(a4 / 10)), a4 = v3(a4);
                break;
              case "fff":
                a4 = v3(o3.getMilliseconds(), 3);
                break;
              case "tt":
                a4 = u3 ? o3.getHours() < 12 ? k2.AM[0] : k2.PM[0] : m3.dayperiod;
                break;
              case "zzz":
                i4 = (n3 = o3.getTimezoneOffset()) < 0, a4 = Math.abs(n3 / 60).toString().split(".")[0], n3 = Math.abs(n3) - 60 * a4, a4 = (i4 ? "+" : "-") + v3(a4), a4 += ":" + v3(n3);
                break;
              case "z":
              case "zz":
                i4 = (a4 = o3.getTimezoneOffset() / 60) < 0, a4 = Math.abs(a4).toString().split(".")[0], a4 = (i4 ? "+" : "-") + ("zz" === e4 ? v3(a4) : a4);
            }
            if (a4 = a4 !== t2 ? a4 : e4.slice(1, e4.length - 1), y) {
              a4 = "" + a4;
              var r4 = "";
              "ddd" == e4 && (e4 = "EEE"), "dddd" == e4 && (e4 = "EEEE");
              for (var h4 = 0; h4 < a4.length; h4++) r4 += e4[0];
              return r4;
            }
            return a4;
          };
          function C(e4) {
            return y = e4, x;
          }
          function T(e4, t3) {
            switch (e4) {
              case "y":
                s3 = t3;
                break;
              case "M":
                l3 = t3, t3 || (o3.setMonth(0), h3 = "");
                break;
              case "d":
                d3 = t3;
                break;
              case "H":
              case "h":
                u3 = t3, t3 || (f3 = "");
                break;
              case "m":
                c3 = t3;
                break;
              case "s":
                p3 = t3;
                break;
              default:
                return;
            }
          }
          if (this.setValue = function(e4) {
            d3 = e4;
          }, this.getValue = function() {
            return d3;
          }, this.modifyPart = function(e4, t3) {
            var n3 = new Date(o3 && o3.getTime ? o3.getTime() : o3);
            switch (e4) {
              case "y":
                n3.setFullYear(n3.getFullYear() + t3);
                break;
              case "M":
                var i4 = n3.getMonth() + t3;
                n3.setMonth(i4), n3.getMonth() % 12 != (i4 + 12) % 12 && (n3.setDate(1), n3.setMonth(i4));
                break;
              case "d":
              case "E":
                n3.setDate(n3.getDate() + t3);
                break;
              case "H":
              case "h":
                n3.setHours(n3.getHours() + t3);
                break;
              case "m":
                n3.setMinutes(n3.getMinutes() + t3);
                break;
              case "s":
                n3.setSeconds(n3.getSeconds() + t3);
                break;
              case "t":
                n3.setHours((n3.getHours() + 12) % 24);
            }
            n3.getFullYear() > 0 && (T(e4, true), o3 = n3);
          }, this.parsePart = function(e4, t3) {
            if (!t3) return T(e4, false), true;
            var n3, i4 = new Date(o3 && o3.getTime ? o3.getTime() : o3), a4 = new Date(i4.getFullYear(), i4.getMonth() + 1, 0).getDate();
            switch (e4) {
              case "d":
                var r4 = (d3 ? 10 * i4.getDate() : 0) + parseInt(t3, 10);
                if (isNaN(r4)) return;
                for (; r4 > a4; ) r4 = parseInt(r4.toString().slice(1), 10);
                if (r4 < 1) d3 = false;
                else {
                  if (i4.setDate(r4), i4.getMonth() !== o3.getMonth()) return;
                  d3 = true;
                }
                break;
              case "M":
                var m4 = (l3 ? 10 * (i4.getMonth() + 1) : 0) + parseInt(t3, 10);
                if (isNaN(m4)) {
                  var g4 = k2.months.names;
                  for (h3 += t3.toLowerCase(); h3.length > 0; ) {
                    for (var v4 = 0; v4 < g4.length; v4++) if (0 === g4[v4].toLowerCase().indexOf(h3)) return i4.setMonth(v4), l3 = true, o3 = i4, true;
                    h3 = h3.substring(1, h3.length);
                  }
                  return false;
                }
                for (; m4 > 12; ) m4 = parseInt(m4.toString().slice(1), 10);
                m4 < 1 ? l3 = false : (i4.setMonth(m4 - 1), i4.getMonth() !== m4 - 1 && (i4.setDate(1), i4.setMonth(m4 - 1)), l3 = true);
                break;
              case "y":
                var _4 = (s3 ? 10 * i4.getFullYear() : 0) + parseInt(t3, 10);
                if (isNaN(_4)) return;
                for (; _4 > 9999; ) _4 = parseInt(_4.toString().slice(1), 10);
                _4 < 1 ? s3 = false : (i4.setFullYear(_4), s3 = true);
                break;
              case "h":
                if (n3 = (u3 ? 10 * (i4.getHours() % 12 || 12) : 0) + parseInt(t3, 10), isNaN(n3)) return;
                for (; n3 > 12; ) n3 = parseInt(n3.toString().slice(1), 10);
                i4.setHours(12 * Math.floor(i4.getHours() / 12) + n3 % 12), u3 = true;
                break;
              case "H":
                if (n3 = (u3 ? 10 * i4.getHours() : 0) + parseInt(t3, 10), isNaN(n3)) return;
                for (; n3 > 23; ) n3 = parseInt(n3.toString().slice(1), 10);
                i4.setHours(n3), u3 = true;
                break;
              case "m":
                var b4 = (c3 ? 10 * i4.getMinutes() : 0) + parseInt(t3, 10);
                if (isNaN(b4)) return;
                for (; b4 > 59; ) b4 = parseInt(b4.toString().slice(1), 10);
                i4.setMinutes(b4), c3 = true;
                break;
              case "s":
                var w2 = (p3 ? 10 * i4.getSeconds() : 0) + parseInt(t3, 10);
                if (isNaN(w2)) return;
                for (; w2 > 59; ) w2 = parseInt(w2.toString().slice(1), 10);
                i4.setSeconds(w2), p3 = true;
                break;
              case "t":
                if (u3) {
                  for (f3 += t3.toLowerCase(); f3.length > 0; ) {
                    if (0 === k2.AM[0].toLowerCase().indexOf(f3) && i4.getHours() >= 12 || 0 === k2.PM[0].toLowerCase().indexOf(f3) && i4.getHours() < 12) return i4.setHours((i4.getHours() + 12) % 24), o3 = i4, true;
                    f3 = f3.substring(1, f3.length);
                  }
                  return false;
                }
            }
            return o3 = i4, true;
          }, this.toPair = function(e4, t3, i4) {
            return e4 ? (t3 = n2.getCulture(t3), e4 = (k2 = t3.calendars.standard).patterns[e4] || e4, w = k2.days, b3 = k2.months, m3 = i4, [e4.replace(_3, C(false)), e4.replace(_3, C(true))]) : ["", ""];
          }, this.getDateObject = function() {
            return s3 && l3 && d3 && u3 && c3 && p3 ? new Date(o3.getTime()) : null;
          }, e3) o3 = new Date(e3.getTime());
          else {
            o3 = /* @__PURE__ */ new Date();
            for (var S = this.toPair(i3, a3, r3)[1], I = 0; I < S.length; I++) T(S[I], false);
          }
        };
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.html, r2 = i2.Widget, o2 = n2.parseDate, s2 = n2.keys, l2 = n2.support, d2 = n2.template, u2 = n2._activeElement, c2 = "<div />", p2 = ".kendoDatePicker", h2 = "click" + p2, f2 = l2.mouseAndTouchPresent ? n2.applyEventMap("up", p2.slice(1)) : h2, m2 = "open", g2 = "close", v2 = "change", _2 = "disabled", b2 = "readonly", k2 = "k-focus", w = "k-selected", y = "k-disabled", x = "mousedown" + p2, C = "navigate", T = "id", S = "month", I = "aria-disabled", D = "aria-readonly", E = "aria-expanded", A = "aria-hidden", F = "aria-activedescendant", z = n2.calendar, P = z.isInRange, H = z.restrictValue, N = z.isEqualDatePart, R = e2.extend, O = Date;
        function M(t3) {
          var n3 = t3.parseFormats, i3 = t3.format;
          z.normalize(t3), (n3 = Array.isArray(n3) ? n3 : [n3]).length || n3.push("yyyy-MM-dd"), -1 === e2.inArray(i3, n3) && n3.splice(0, 0, t3.format), t3.parseFormats = n3;
        }
        function B(e3) {
          e3.preventDefault();
        }
        var L = function(t3) {
          var a3, r3 = this, o3 = document.body, s3 = e2(c2).attr(A, "true").addClass("k-calendar-container");
          r3.options = t3 = t3 || {}, a3 = t3.id, t3.omitPopup ? s3 = t3.dateDiv : (s3.appendTo(o3), r3.popup = new i2.Popup(s3, R(t3.popup, t3, { name: "Popup", isRtl: n2.support.isRtl(t3.anchor) }))), a3 && (a3 += "_dateview", s3.attr(T, a3), r3._dateViewID = a3), r3.div = s3, r3.value(t3.value);
        };
        L.prototype = { _calendar: function() {
          var t3, a3 = this, r3 = a3.calendar, o3 = a3.options;
          r3 || (t3 = e2(c2).attr(T, n2.guid()).appendTo(o3.omitPopup ? o3.dateDiv : a3.popup.element).on(x, B).on(h2, "td:has(.k-link)", a3._click.bind(a3)), a3.calendar = r3 = new i2.Calendar(t3, { componentType: o3.componentType, size: o3.size, messages: o3.messages }), a3._setOptions(o3), t3.addClass(n2.getValidCssClass("k-calendar-", "size", o3.size)), r3.navigate(a3._value || a3._current, o3.start), a3.value(a3._value));
        }, _setOptions: function(e3) {
          this.calendar.setOptions({ focusOnNav: false, change: e3.change, culture: e3.culture, dates: e3.dates, depth: e3.depth, footer: e3.footer, format: e3.format, max: e3.max, min: e3.min, month: e3.month, weekNumber: e3.weekNumber, start: e3.start, messages: e3.messages, disableDates: e3.disableDates });
        }, setOptions: function(e3) {
          var t3 = this, n3 = t3.options, i3 = e3.disableDates;
          i3 && (e3.disableDates = z.disabled(i3)), t3.options = R(n3, e3, { change: n3.change, close: n3.close, open: n3.open }), t3.calendar && t3._setOptions(t3.options);
        }, destroy: function() {
          this.popup && this.popup.destroy();
        }, open: function() {
          var e3, t3 = this;
          t3._calendar(), e3 = t3.popup._hovered, t3.popup._hovered = true, t3.popup.open(), setTimeout(function() {
            t3.popup._hovered = e3;
          }, 1);
        }, close: function() {
          this.popup && this.popup.close();
        }, min: function(e3) {
          this._option("min", e3);
        }, max: function(e3) {
          this._option("max", e3);
        }, toggle: function() {
          this[this.popup.visible() ? g2 : m2]();
        }, move: function(e3) {
          var t3 = this, n3 = e3.keyCode, i3 = t3.calendar, a3 = e3.ctrlKey && n3 == s2.DOWN || n3 == s2.ENTER, r3 = false;
          if (e3.altKey) n3 == s2.DOWN ? (t3.open(), e3.preventDefault(), r3 = true) : n3 == s2.UP && (t3.close(), e3.preventDefault(), r3 = true);
          else if (t3.popup && t3.popup.visible()) {
            if (n3 == s2.ESC || a3 && i3._cell.hasClass(w)) return t3.close(), e3.preventDefault(), true;
            n3 != s2.SPACEBAR && (t3._current = i3._move(e3)), r3 = true;
          }
          return r3;
        }, current: function(e3) {
          this._current = e3, this.calendar && this.calendar._focus(e3);
        }, value: function(e3) {
          var t3 = this, n3 = t3.calendar, i3 = t3.options, a3 = i3.disableDates;
          a3 && a3(e3) && (e3 = null), t3._value = e3, t3._current = new O(+H(e3, i3.min, i3.max)), n3 && n3.value(e3);
        }, _click: function(e3) {
          -1 !== e3.currentTarget.className.indexOf(w) && (this.calendar.trigger("change"), this.close());
        }, _option: function(e3, t3) {
          var n3 = this.calendar;
          this.options[e3] = t3, n3 && n3[e3](t3);
        } }, L.normalize = M, n2.DateView = L;
        var V = r2.extend({ init: function(i3, a3) {
          var s3, l3, d3 = this;
          r2.fn.init.call(d3, i3, a3), i3 = d3.element, (a3 = d3.options).disableDates = n2.calendar.disabled(a3.disableDates), a3.min = o2(i3.attr("min")) || o2(a3.min), a3.max = o2(i3.attr("max")) || o2(a3.max), d3.options.readonly = a3.readonly !== t2 ? a3.readonly : Boolean(d3.element.attr("readonly")), d3.options.enable = a3.enable !== t2 ? a3.enable : !Boolean(i3.is("[disabled]") || e2(i3).parents("fieldset").is(":disabled")), M(a3), d3._initialOptions = R({}, a3), d3._wrapper(), d3.dateView = new L(R({}, a3, { id: i3.attr(T), anchor: d3.wrapper, change: function() {
            d3._change(this.value()), d3.close();
          }, close: function(e3) {
            d3.trigger(g2) ? e3.preventDefault() : (i3.attr(E, false), l3.attr(A, true), setTimeout(function() {
              i3.removeAttr("aria-activedescendant");
            }));
          }, open: function(e3) {
            var t3, n3 = d3.options;
            d3.trigger(m2) ? e3.preventDefault() : (d3.element.val() !== d3._oldText && (t3 = o2(i3.val(), n3.parseFormats, n3.culture), d3.dateView[t3 ? "current" : "value"](t3)), i3.attr(E, true), l3.attr(A, false), d3._updateARIA(t3));
          } })), l3 = d3.dateView.div, d3._icon();
          try {
            i3[0].setAttribute("type", "text");
          } catch (e3) {
            i3[0].type = "text";
          }
          i3.addClass("k-input-inner").attr({ role: "combobox", "aria-expanded": false, "aria-haspopup": "grid", "aria-controls": d3.dateView._dateViewID, autocomplete: "off" }), d3._reset(), d3._template(), !d3.options.enable ? d3.enable(false) : d3.readonly(i3.is("[readonly]")), s3 = o2(a3.value || d3.element.val(), a3.parseFormats, a3.culture), d3._createDateInput(a3), d3._old = d3._update(s3 || d3.element.val()), d3._oldText = i3.val(), d3._applyCssClasses(), a3.label && d3._label(), n2.notify(d3);
        }, events: [m2, g2, v2], options: { name: "DatePicker", value: null, footer: "", format: "", culture: "", parseFormats: [], min: new Date(1900, 0, 1), max: new Date(2099, 11, 31), start: S, depth: S, animation: {}, month: {}, dates: [], disableDates: null, ARIATemplate: "Current focused #=data.valueType# is #=data.text#", dateInput: false, weekNumber: false, messages: { weekColumnHeader: "" }, componentType: "classic", size: "medium", fillMode: "solid", rounded: "medium", label: null }, setOptions: function(e3) {
          var i3 = this, a3 = i3._value;
          r2.fn.setOptions.call(i3, e3), (e3 = i3.options).min = o2(e3.min), e3.max = o2(e3.max), M(e3), i3._dateIcon.off(p2), i3._dateIcon.remove(), i3.dateView.setOptions(e3), i3._icon(), i3._editable({ readonly: e3.readonly === t2 ? i3.options.readonly : e3.readonly, disable: !(e3.enable === t2 ? i3.options.enable : e3.enable) }), i3._createDateInput(e3), i3._dateInput || i3.element.val(n2.toString(a3, e3.format, e3.culture)), a3 && i3._updateARIA(a3), e3.label && i3._inputLabel ? i3.label.setOptions(e3.label) : false === e3.label ? (i3.label._unwrapFloating(), i3._inputLabel.remove(), delete i3._inputLabel) : e3.label && i3._label();
        }, _editable: function(e3) {
          var t3 = this, n3 = t3._dateIcon.off(p2), i3 = t3.element.off(p2), a3 = t3.wrapper.off(p2), r3 = e3.readonly, o3 = e3.disable;
          r3 || o3 ? (a3.addClass(o3 ? y : "").removeClass(o3 ? "" : y), i3.attr(_2, o3).attr(b2, r3).attr(I, o3).attr(D, r3)) : (a3.removeClass(y).on("mouseenter.kendoDatePicker mouseleave.kendoDatePicker", t3._toggleHover), i3 && i3.length && (i3[0].removeAttribute(_2), i3[0].removeAttribute(b2)), i3.attr(I, false).attr(D, false).on("keydown" + p2, t3._keydown.bind(t3)).on("focusout" + p2, t3._blur.bind(t3)).on("focus" + p2, function() {
            t3.wrapper.addClass(k2);
          }), n3.on(f2, t3._click.bind(t3)).on(x, B));
        }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false }), this._dateInput && this._dateInput._editable({ readonly: e3 === t2 || e3, disable: false }), this.label && this.label.floatingLabel && this.label.floatingLabel.readonly(e3 === t2 || e3);
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this._dateInput && this._dateInput._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this.label && this.label.floatingLabel && this.label.floatingLabel.enable(e3 = e3 === t2 || e3);
        }, _label: function() {
          var t3 = this, i3 = t3.options, a3 = e2.isPlainObject(i3.label) ? i3.label : { content: i3.label };
          t3.label = new n2.ui.Label(null, e2.extend({}, a3, { widget: t3 })), t3._inputLabel = t3.label.element;
        }, destroy: function() {
          var e3 = this;
          e3.label && e3.label.destroy(), r2.fn.destroy.call(e3), e3.dateView.calendar && e3._navigateCalendarHandler && (e3.dateView.calendar.unbind(C, e3._navigateCalendarHandler), e3._navigateCalendarHandler = null), e3.dateView.destroy(), e3.element.off(p2), e3._dateIcon.off(p2), e3._form && e3._form.off("reset", e3._resetHandler);
        }, open: function() {
          this.dateView.open(), this._navigateCalendar();
        }, close: function() {
          this.dateView.close();
        }, min: function(e3) {
          return this._option("min", e3);
        }, max: function(e3) {
          return this._option("max", e3);
        }, value: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3._value;
          n3._old = n3._update(e3), null === n3._old && (n3._dateInput ? n3._dateInput.value(n3._old) : n3.element.val("")), n3._oldText = n3.element.val(), n3.label && n3.label.floatingLabel && n3.label.floatingLabel.refresh();
        }, _toggleHover: function(t3) {
          e2(t3.currentTarget).toggleClass("k-hover", "mouseenter" === t3.type);
        }, _blur: function() {
          var e3 = this, t3 = e3.element.val();
          e3.close(), t3 !== e3._oldText && (e3._change(t3), t3 || e3.dateView.current(n2.calendar.getToday())), e3.wrapper.removeClass(k2);
        }, _click: function(e3) {
          var t3 = this;
          t3.dateView.toggle(), t3._navigateCalendar(), t3._focusElement(e3.type);
        }, _focusElement: function(e3) {
          var t3 = this.element;
          l2.touch && (!l2.mouseAndTouchPresent || (e3 || "").match(/touch/i)) || t3[0] === u2() || t3.trigger("focus");
        }, _change: function(e3) {
          var t3, i3 = this, a3 = i3.element.val();
          e3 = i3._update(e3);
          var r3 = (t3 = !n2.calendar.isEqualDate(i3._old, e3)) && !i3._typing, o3 = a3 !== i3.element.val();
          (r3 || o3) && i3.element.trigger(v2), t3 && (i3._old = e3, i3._oldText = i3.element.val(), i3.trigger(v2)), i3._typing = false;
        }, _keydown: function(e3) {
          var t3 = this, n3 = t3.dateView, i3 = t3.element.val(), a3 = false;
          n3.popup.visible() || e3.keyCode != s2.ENTER || i3 === t3._oldText ? (a3 = n3.move(e3), t3._updateARIA(n3._current), a3 ? t3._dateInput && e3.stopImmediatePropagation && e3.stopImmediatePropagation() : t3._typing = true) : t3._change(i3);
        }, _icon: function() {
          var t3, n3 = this, i3 = n3.element, r3 = n3.options;
          (t3 = i3.next("button.k-input-button"))[0] || (t3 = e2(a2.renderButton('<button aria-label="select" tabindex="-1" class="k-input-button k-button k-icon-button"></button>', { icon: "calendar", size: r3.size, fillMode: r3.fillMode, shape: "none", rounded: "none" })).insertAfter(i3)), n3._dateIcon = t3.attr({ role: "button" });
        }, _setCalendarAttribute: function() {
          var e3 = this;
          setTimeout(function() {
            e3.element.attr(F, e3.dateView.calendar._table.attr(F));
          });
        }, _navigateCalendar: function() {
          var e3 = this;
          e3._navigateCalendarHandler || (e3._navigateCalendarHandler = e3._setCalendarAttribute.bind(e3)), e3.dateView.calendar && e3.dateView.calendar.unbind(C, e3._navigateCalendarHandler).bind(C, e3._navigateCalendarHandler);
        }, _option: function(e3, n3) {
          var i3 = this.options;
          if (n3 === t2) return i3[e3];
          (n3 = o2(n3, i3.parseFormats, i3.culture)) && (i3[e3] = new O(+n3), this.dateView[e3](n3));
        }, _update: function(e3) {
          var t3, i3 = this, a3 = i3.options, r3 = a3.min, s3 = a3.max, l3 = i3._value, d3 = o2(e3, a3.parseFormats, a3.culture), u3 = null === d3 && null === l3 || d3 instanceof Date && l3 instanceof Date;
          return a3.disableDates(d3) && (d3 = null, i3._old || i3.element.val() || (e3 = null)), +d3 == +l3 && u3 ? ((t3 = n2.toString(d3, a3.format, a3.culture)) === e3 || i3._dateInput && !d3 || i3.element.val(null === d3 ? e3 : t3), d3) : (null !== d3 && N(d3, r3) ? d3 = H(d3, r3, s3) : P(d3, r3, s3) || (d3 = null), i3._value = d3, i3.dateView.value(d3), i3._dateInput && d3 ? i3._dateInput.value(d3 || e3) : i3.element.val(n2.toString(d3 || e3, a3.format, a3.culture)), i3._updateARIA(d3), d3);
        }, _wrapper: function() {
          var e3, t3 = this.element;
          (e3 = t3.parents(".k-datepicker"))[0] || (e3 = t3.wrap("<span />").parent()), e3[0].style.cssText = t3[0].style.cssText, t3.css({ height: t3[0].style.height }), this.wrapper = e3.addClass("k-datepicker k-input").addClass(t3[0].className).removeClass("input-validation-error");
        }, _reset: function() {
          var t3 = this, i3 = t3.element, a3 = i3.attr("form"), r3 = t3.options, o3 = r3.disableDates, s3 = r3.parseFormats.length ? r3.parseFormats : null, l3 = t3._initialOptions.value, d3 = a3 ? e2("#" + a3) : i3.closest("form"), u3 = i3[0].defaultValue;
          l3 && o3 && o3(l3) && (l3 = null), u3 && n2.parseDate(u3, s3, r3.culture) || !l3 || i3.attr("value", n2.toString(l3, r3.format, r3.culture)), d3[0] && (t3._resetHandler = function() {
            t3.value(l3 || i3[0].defaultValue), t3.max(t3._initialOptions.max), t3.min(t3._initialOptions.min);
          }, t3._form = d3.on("reset", t3._resetHandler));
        }, _template: function() {
          this._ariaTemplate = d2(this.options.ARIATemplate).bind(this);
        }, _createDateInput: function(e3) {
          this._dateInput && (this._dateInput.destroy(), this._dateInput = null), e3.dateInput && (this._dateInput = new i2.DateInput(this.element, { culture: e3.culture, format: e3.format, size: e3.size, fillMode: e3.fillMode, rounded: e3.rounded, min: e3.min, max: e3.max }));
        }, _updateARIA: function(e3) {
          var t3 = this, n3 = t3.dateView.calendar;
          t3.element && t3.element.length && t3.element[0].removeAttribute(F), n3 && t3.element.attr(F, n3._updateAria(t3._ariaTemplate, e3));
        } });
        n2.cssProperties.registerPrefix("DatePicker", "k-input-"), n2.cssProperties.registerValues("DatePicker", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), i2.plugin(V);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.html, r2 = i2.List, o2 = i2.Select, s2 = n2.support, l2 = n2._activeElement, d2 = n2.data.ObservableObject, u2 = n2.keys, c2 = ".kendoDropDownList", p2 = c2 + "FocusEvent", h2 = "disabled", f2 = "readonly", m2 = "change", g2 = "k-focus", v2 = "k-disabled", _2 = "aria-disabled", b2 = "aria-readonly", k2 = "mouseenter" + c2 + " mouseleave" + c2, w = "tabindex", y = "filter", x = "accept", C = o2.extend({ init: function(i3, a3) {
          var r3, s3, l3 = this, d3 = a3 && a3.index;
          l3.ns = c2, a3 = Array.isArray(a3) ? { dataSource: a3 } : a3, o2.fn.init.call(l3, i3, a3), a3 = l3.options, i3 = l3.element.on("focus" + c2, l3._focusHandler.bind(l3)), l3._focusInputHandler = l3._focusInput.bind(l3), l3.optionLabel = e2(), l3._optionLabel(), l3._inputTemplate(), l3._reset(), l3._prev = "", l3._word = "", l3._wrapper(), l3._tabindex(), l3.wrapper.data(w, l3.wrapper.attr(w)), l3._span(), l3._popup(), l3._mobile(), l3._dataSource(), l3._ignoreCase(), l3._filterHeader(), a3.label && this._label(), l3._aria(), l3._enable(), l3._attachFocusHandlers(), l3._oldIndex = l3.selectedIndex = -1, d3 !== t2 && (a3.index = d3), l3._initialIndex = a3.index, l3.requireValueMapper(l3.options), l3._initList(), l3.listView.one("dataBound", l3._attachAriaActiveDescendant.bind(l3)), l3._cascade(), l3.one("set", function(e3) {
            !e3.sender.listView.bound() && l3.hasOptionLabel() && l3._textAccessor(l3._optionLabelText());
          }), a3.autoBind ? l3.dataSource.fetch() : -1 === l3.selectedIndex && ((s3 = a3.text || "") || ((r3 = a3.optionLabel) && 0 === a3.index ? s3 = r3 : l3._isSelect && (s3 = i3.children(":selected").text())), l3._textAccessor(s3)), e2(l3.element).parents("fieldset").is(":disabled") && l3.enable(false), l3.listView.bind("click", function(e3) {
            e3.preventDefault();
          }), n2.notify(l3), l3._applyCssClasses();
        }, options: { name: "DropDownList", enabled: true, autoBind: true, index: 0, text: null, value: null, delay: 500, height: 200, dataTextField: "", dataValueField: "", optionLabel: "", cascadeFrom: "", cascadeFromField: "", cascadeFromParentField: "", ignoreCase: true, animation: {}, filter: "none", minLength: 1, enforceMinLength: false, virtual: false, template: null, valueTemplate: null, optionLabelTemplate: null, groupTemplate: "#:data#", fixedGroupTemplate: "#:data#", autoWidth: false, popup: null, filterTitle: null, size: "medium", fillMode: "solid", rounded: "medium", label: null }, events: ["open", "close", m2, "select", "filtering", "dataBinding", "dataBound", "cascade", "set", "kendoKeydown"], setOptions: function(e3) {
          o2.fn.setOptions.call(this, e3), this.listView.setOptions(this._listOptions(e3)), this._optionLabel(), this._inputTemplate(), this._accessors(), this._filterHeader(), this._enable(), this._aria(), !this.value() && this.hasOptionLabel() && this.select(0);
        }, destroy: function() {
          var e3 = this;
          o2.fn.destroy.call(e3), e3.wrapper.off(c2), e3.wrapper.off(p2), e3.element.off(c2), e3._arrow.off(), e3._arrow = null, e3._arrowIcon = null, e3.optionLabel.off(), e3.filterInput && e3.filterInput.off(p2);
        }, open: function() {
          var e3 = this, t3 = !!e3.dataSource.filter() && e3.dataSource.filter().filters.length > 0, n3 = this.listView;
          e3.popup.visible() || (e3.listView.bound() && e3._state !== x ? e3._allowOpening() && (e3._focusFilter = true, e3.popup.one("activate", e3._focusInputHandler), e3.popup._hovered = true, e3.wrapper.attr("aria-activedescendant", n3._optionID), e3.popup.open(), e3._resizeFilterInput(), e3._focusItem()) : (e3._open = true, e3._state = "rebind", e3.filterInput && (e3.filterInput.val(""), e3._prev = ""), e3.filterInput && 1 !== e3.options.minLength && !t3 ? (e3.refresh(), e3.popup.one("activate", e3._focusInputHandler), e3.wrapper.attr("aria-activedescendant", n3._optionID), e3.popup.open(), e3._resizeFilterInput()) : e3._filterSource()));
        }, close: function() {
          this._attachAriaActiveDescendant(), this.popup.close();
        }, _attachAriaActiveDescendant: function() {
          var e3 = this.wrapper, t3 = e3.find(".k-input-inner").attr("id");
          e3.attr("aria-describedby", t3);
        }, _focusInput: function() {
          this._focusElement(this.filterInput);
        }, _resizeFilterInput: function() {
          var e3 = this.filterInput, t3 = this._prevent;
          if (e3) {
            var i3 = this.filterInput[0] === l2(), a3 = n2.caret(this.filterInput[0])[0];
            this._prevent = true, e3.addClass("k-hidden"), e3.closest(".k-list-filter").css("width", this.popup.element.css("width")), e3.removeClass("k-hidden"), i3 && (e3.trigger("focus"), n2.caret(e3[0], a3)), this._prevent = t3;
          }
        }, _allowOpening: function() {
          return this.hasOptionLabel() || this.filterInput || o2.fn._allowOpening.call(this);
        }, toggle: function(e3) {
          this._toggle(e3, true);
        }, current: function(e3) {
          var n3;
          if (e3 === t2) return !(n3 = this.listView.focus()) && 0 === this.selectedIndex && this.hasOptionLabel() ? this.optionLabel : n3;
          this._focus(e3);
        }, dataItem: function(n3) {
          var i3 = this, a3 = null;
          if (null === n3) return n3;
          if (n3 === t2) a3 = i3.listView.selectedDataItems()[0];
          else {
            if ("number" != typeof n3) {
              if (i3.options.virtual) return i3.dataSource.getByUid(e2(n3).data("uid"));
              n3 = n3.hasClass("k-list-optionlabel") ? -1 : e2(i3.items()).index(n3);
            } else i3.hasOptionLabel() && (n3 -= 1);
            a3 = i3.dataSource.flatView()[n3];
          }
          return a3 || (a3 = i3._optionLabelDataItem()), a3;
        }, refresh: function() {
          this.listView.refresh();
        }, text: function(e3) {
          var n3, i3 = this, a3 = i3.options.ignoreCase;
          if ((e3 = null === e3 ? "" : e3) === t2) return i3._textAccessor();
          "string" == typeof e3 ? (n3 = a3 ? e3.toLowerCase() : e3, i3._select(function(e4) {
            return e4 = i3._text(e4), a3 && (e4 = (e4 + "").toLowerCase()), e4 === n3;
          }).done(function() {
            i3._textAccessor(i3.dataItem() || e3), i3._refreshFloatingLabel();
          })) : i3._textAccessor(e3);
        }, _clearFilter: function() {
          e2(this.filterInput).val(""), o2.fn._clearFilter.call(this);
        }, value: function(e3) {
          var n3 = this, i3 = n3.listView, a3 = n3.dataSource;
          return e3 === t2 ? (e3 = n3._accessor() || n3.listView.value()[0]) === t2 || null === e3 ? "" : e3 : (n3.requireValueMapper(n3.options, e3), !e3 && n3.hasOptionLabel() || (n3._initialIndex = null), this.trigger("set", { value: e3 }), n3._request && n3.options.cascadeFrom && n3.listView.bound() ? (n3._valueSetter && a3.unbind(m2, n3._valueSetter), n3._valueSetter = function() {
            n3.value(e3);
          }.bind(n3), void a3.one(m2, n3._valueSetter)) : (n3._isFilterEnabled() && i3.bound() && i3.isFiltered() ? n3._clearFilter() : n3._fetchData(), void i3.value(e3).done(function() {
            n3._old = n3._valueBeforeCascade = n3._accessor(), n3._oldIndex = n3.selectedIndex, n3._refreshFloatingLabel();
          })));
        }, hasOptionLabel: function() {
          return this.optionLabel && !!this.optionLabel[0];
        }, _optionLabel: function() {
          var t3 = this, i3 = t3.options, a3 = i3.optionLabel, r3 = i3.optionLabelTemplate;
          if (!a3) return t3.optionLabel.off().remove(), void (t3.optionLabel = e2());
          r3 || (r3 = "#:", r3 += "string" == typeof a3 ? "data" : n2.expr(i3.dataTextField, "data"), r3 += "#"), "function" != typeof r3 && (r3 = n2.template(r3)), t3.optionLabelTemplate = r3, t3.hasOptionLabel() || (t3.optionLabel = e2('<div role="option" class="k-list-optionlabel"></div>').prependTo(t3.list)), t3.optionLabel.html(r3(a3)).off().on("click.kendoDropDownList touchend.kendoDropDownList", t3._click.bind(t3)).on(k2, t3._toggleHover), t3.angular("compile", function() {
            return { elements: t3.optionLabel, data: [{ dataItem: t3._optionLabelDataItem() }] };
          });
        }, _optionLabelText: function() {
          var e3 = this.options.optionLabel;
          return "string" == typeof e3 ? e3 : this._text(e3);
        }, _optionLabelDataItem: function() {
          var n3 = this, i3 = n3.options.optionLabel;
          return n3.hasOptionLabel() ? e2.isPlainObject(i3) ? new d2(i3) : n3._assignInstance(n3._optionLabelText(), "") : t2;
        }, _buildOptions: function(e3) {
          var n3 = this;
          if (n3._isSelect) {
            var i3 = n3.listView.value()[0], a3 = n3._optionLabelDataItem(), o3 = a3 && n3._value(a3);
            i3 !== t2 && null !== i3 || (i3 = ""), a3 && (o3 !== t2 && null !== o3 || (o3 = ""), a3 = '<option value="' + o3 + '">' + n3._text(a3) + "</option>"), n3._options(e3, a3, i3), i3 !== r2.unifyType(n3._accessor(), typeof i3) && (n3._customOption = null, n3._custom(i3));
          }
        }, _listBound: function() {
          var e3, t3 = this, n3 = t3._initialIndex, i3 = t3._state === y, a3 = t3.dataSource.flatView();
          t3._presetValue = false, t3._renderFooter(), t3._renderNoData(), t3._toggleNoData(!a3.length), t3._resizePopup(true), t3.popup.position(), t3._buildOptions(a3), i3 || (t3._open && t3.toggle(t3._allowOpening()), t3._open = false, t3._fetch || (a3.length ? (!t3.listView.value().length && n3 > -1 && null !== n3 && t3.select(n3), t3._initialIndex = null, (e3 = t3.listView.selectedDataItems()[0]) && t3.text() !== t3._text(e3) && t3._selectValue(e3)) : t3._textAccessor() !== t3._optionLabelText() && (t3.listView.value(""), t3._selectValue(null), t3._oldIndex = t3.selectedIndex))), t3._hideBusy(), t3.trigger("dataBound");
        }, _listChange: function() {
          this._selectValue(this.listView.selectedDataItems()[0]), (this._presetValue || this._old && -1 === this._oldIndex) && (this._oldIndex = this.selectedIndex);
        }, _filterPaste: function() {
          this._search();
        }, _attachFocusHandlers: function() {
          var e3 = this;
          e3.wrapper.on("focusin" + p2, e3._focusinHandler.bind(e3)).on("focusout" + p2, e3._focusoutHandler.bind(e3)), e3.filterInput && e3.filterInput.on("focusin" + p2, e3._focusinHandler.bind(e3)).on("focusout" + p2, e3._focusoutHandler.bind(e3));
        }, _focusHandler: function() {
          this.wrapper.trigger("focus");
        }, _focusinHandler: function() {
          this.wrapper.addClass(g2), this._prevent = false;
        }, _focusoutHandler: function() {
          var e3 = this, t3 = window.self !== window.top;
          e3._prevent || (clearTimeout(e3._typingTimeout), s2.mobileOS.ios && t3 ? e3._change() : e3._blur(), e3.wrapper.removeClass(g2), e3._prevent = true, e3._open = false, e3.element.trigger("blur"));
        }, _wrapperMousedown: function() {
          this._prevent = !!this.filterInput;
        }, _wrapperClick: function(e3) {
          e3.preventDefault(), this.popup.unbind("activate", this._focusInputHandler), this._focused = this.wrapper, this._prevent = false, this._toggle();
        }, _editable: function(e3) {
          var t3 = this, i3 = t3.element, a3 = e3.disable, r3 = e3.readonly, o3 = t3.wrapper.add(t3.filterInput).off(c2), s3 = t3.wrapper.off(k2);
          r3 || a3 ? a3 ? (o3.removeAttr(w), s3.addClass(v2)) : s3.removeClass(v2) : (i3.prop(h2, false).prop(f2, false), s3.removeClass(v2).on(k2, t3._toggleHover), o3.attr(w, o3.data(w)).attr(_2, false).attr(b2, false).on("keydown" + c2, t3, t3._keydown.bind(t3)).on(n2.support.mousedown + c2, t3._wrapperMousedown.bind(t3)).on("paste" + c2, t3._filterPaste.bind(t3)), t3.wrapper.on("click" + c2, t3._wrapperClick.bind(t3)), t3.filterInput ? o3.on("input" + c2, t3._search.bind(t3)) : o3.on("keypress" + c2, t3._keypress.bind(t3))), i3.attr(h2, a3).attr(f2, r3), o3.attr(_2, a3).attr(b2, r3);
        }, _keydown: function(e3) {
          var t3, n3, i3 = this, a3 = e3.keyCode, r3 = e3.altKey, o3 = i3.popup.visible();
          if (i3.filterInput && (t3 = i3.filterInput[0] === l2()), a3 === u2.LEFT ? (a3 = u2.UP, n3 = true) : a3 === u2.RIGHT && (a3 = u2.DOWN, n3 = true), !n3 || !t3) {
            if (e3.keyCode = a3, (r3 && a3 === u2.UP || a3 === u2.ESC) && i3._focusElement(i3.wrapper), i3._state === y && a3 === u2.ESC && (i3._clearFilter(), i3._open = false, i3._state = x), a3 === u2.ENTER && i3._typingTimeout && i3.filterInput && o3) e3.preventDefault();
            else if (a3 !== u2.SPACEBAR || t3 || (i3.toggle(!o3), e3.preventDefault()), !(n3 = i3._move(e3))) {
              if (!o3 || !i3.filterInput) {
                var s3 = i3._focus();
                if (a3 === u2.HOME ? (n3 = true, i3._firstItem()) : a3 === u2.END && (n3 = true, i3._lastItem()), n3) {
                  if (i3.trigger("select", { dataItem: i3._getElementDataItem(i3._focus()), item: i3._focus() })) return void i3._focus(s3);
                  i3._select(i3._focus(), true).done(function() {
                    o3 || i3._blur();
                  }), e3.preventDefault();
                }
              }
              r3 || n3 || !i3.filterInput || i3._search();
            }
          }
        }, _matchText: function(e3, n3) {
          var i3 = this.options.ignoreCase;
          return e3 !== t2 && null !== e3 && (e3 += "", i3 && (e3 = e3.toLowerCase()), 0 === e3.indexOf(n3));
        }, _shuffleData: function(e3, t3) {
          var n3 = this._optionLabelDataItem();
          return n3 && (e3 = [n3].concat(e3)), e3.slice(t3).concat(e3.slice(0, t3));
        }, _selectNext: function() {
          var e3, t3, n3 = this, i3 = n3.dataSource.flatView(), a3 = i3.length + (n3.hasOptionLabel() ? 1 : 0), r3 = function(e4, t4) {
            for (var n4 = 0; n4 < e4.length; n4++) if (e4.charAt(n4) !== t4) return false;
            return true;
          }(n3._word, n3._last), o3 = n3.selectedIndex;
          o3 = -1 === o3 ? 0 : S(o3 += r3 ? 1 : 0, a3), i3 = i3.toJSON ? i3.toJSON() : i3.slice(), i3 = n3._shuffleData(i3, o3);
          for (var s3 = 0; s3 < a3 && (t3 = n3._text(i3[s3]), !r3 || !n3._matchText(t3, n3._last)) && !n3._matchText(t3, n3._word); s3++) ;
          s3 !== a3 && (e3 = n3._focus(), n3._select(S(o3 + s3, a3)).done(function() {
            var t4 = function() {
              n3.popup.visible() || n3._change();
            };
            n3.trigger("select", { dataItem: n3._getElementDataItem(n3._focus()), item: n3._focus() }) ? n3._select(e3).done(t4) : t4();
          }));
        }, _keypress: function(e3) {
          var t3 = this;
          if (0 !== e3.which && e3.keyCode !== n2.keys.ENTER) {
            var i3 = String.fromCharCode(e3.charCode || e3.keyCode);
            t3.options.ignoreCase && (i3 = i3.toLowerCase()), " " === i3 && e3.preventDefault(), t3._word += i3, t3._last = i3, t3._search();
          }
        }, _popupOpen: function() {
          var e3 = this.popup;
          e3.wrapper = n2.wrap(e3.element), e3.element.closest(".km-root")[0] && (e3.wrapper.addClass("km-popup km-widget"), this.wrapper.addClass("km-widget"));
        }, _popup: function() {
          o2.fn._popup.call(this), this.popup.one("open", this._popupOpen.bind(this));
        }, _getElementDataItem: function(e3) {
          return e3 && e3[0] ? e3[0] === this.optionLabel[0] ? this._optionLabelDataItem() : this.listView.dataItemByIndex(this.listView.getElementIndex(e3)) : null;
        }, _click: function(t3) {
          var n3 = this, i3 = t3.item || e2(t3.currentTarget);
          t3.preventDefault(), n3.trigger("select", { dataItem: n3._getElementDataItem(i3), item: i3 }) ? n3.close() : (n3._userTriggered = true, n3._select(i3).done(function() {
            n3._blur(), n3._focusElement(n3.wrapper);
          }));
        }, _focusElement: function(e3) {
          var t3 = l2(), n3 = this.wrapper, i3 = this.filterInput, a3 = e3 === i3 ? n3 : i3, r3 = s2.mobileOS && (s2.touch || s2.MSPointers || s2.pointers);
          i3 && i3[0] === e3[0] && r3 || i3 && (a3[0] === t3 || this._focusFilter) && (this._focusFilter = false, this._prevent = true, this._focused = e3.trigger("focus"));
        }, _searchByWord: function(e3) {
          if (e3) {
            var t3 = this;
            t3.options.ignoreCase && (e3 = e3.toLowerCase()), t3._select(function(n3) {
              return t3._matchText(t3._text(n3), e3);
            });
          }
        }, _inputValue: function() {
          return this.text();
        }, _search: function() {
          var e3 = this, t3 = e3.dataSource;
          if (clearTimeout(e3._typingTimeout), e3._isFilterEnabled()) e3._typingTimeout = setTimeout(function() {
            var t4 = e3.filterInput.val();
            e3._prev !== t4 && (e3._prev = t4, e3.search(t4), e3._resizeFilterInput()), e3._typingTimeout = null;
          }, e3.options.delay);
          else {
            if (e3._typingTimeout = setTimeout(function() {
              e3._word = "";
            }, e3.options.delay), !e3.listView.bound()) return void t3.fetch().done(function() {
              e3._selectNext();
            });
            e3._selectNext();
          }
        }, _get: function(t3) {
          var n3, i3, a3, r3 = "function" == typeof t3, o3 = r3 ? e2() : e2(t3);
          if (this.hasOptionLabel() && ("number" == typeof t3 ? t3 > -1 && (t3 -= 1) : o3.hasClass("k-list-optionlabel") && (t3 = -1)), r3) {
            for (n3 = this.dataSource.flatView(), a3 = 0; a3 < n3.length; a3++) if (t3(n3[a3])) {
              t3 = a3, i3 = true;
              break;
            }
            i3 || (t3 = -1);
          }
          return t3;
        }, _firstItem: function() {
          this.hasOptionLabel() ? this._focus(this.optionLabel) : this.listView.focusFirst();
        }, _lastItem: function() {
          this._resetOptionLabel(), this.listView.focusLast();
        }, _nextItem: function() {
          var e3;
          return this.optionLabel.hasClass("k-focus") ? (this._resetOptionLabel(), this.listView.focusFirst(), e3 = 1) : e3 = this.listView.focusNext(), e3;
        }, _prevItem: function() {
          var e3;
          if (!this.optionLabel.hasClass("k-focus")) return e3 = this.listView.focusPrev(), this.listView.focus() || this.options.virtual || this._focus(this.optionLabel), e3;
        }, _focusItem: function() {
          var e3 = this.options, n3 = this.listView, i3 = n3.focus(), a3 = n3.select();
          (a3 = a3[a3.length - 1]) === t2 && e3.highlightFirst && !i3 && (a3 = 0), a3 !== t2 ? n3.focus(a3) : !e3.optionLabel || e3.virtual && "dataItem" === e3.virtual.mapValueTo ? n3.scrollToIndex(0) : (this._focus(this.optionLabel), this._select(this.optionLabel), this.listView.content.scrollTop(0));
        }, _resetOptionLabel: function(e3) {
          this.optionLabel.removeClass("k-focus" + (e3 || "")).removeAttr("id");
        }, _focus: function(e3) {
          var n3 = this.listView, i3 = this.optionLabel;
          if (e3 === t2) return !(e3 = n3.focus()) && i3.hasClass("k-focus") && (e3 = i3), e3;
          this._resetOptionLabel(), e3 = this._get(e3), n3.focus(e3), -1 === e3 && (i3.addClass("k-focus").attr("id", n3._optionID), this.filterInput && this.filterInput.removeAttr("aria-activedescendant").attr("aria-activedescendant", n3._optionID));
        }, _select: function(e3, t3) {
          var n3 = this;
          return e3 = n3._get(e3), n3.listView.select(e3).done(function() {
            t3 || n3._state !== y || (n3._state = x), -1 === e3 && n3._selectValue(null);
          });
        }, _selectValue: function(e3) {
          var n3 = this, i3 = n3.options.optionLabel, a3 = n3.listView.select(), r3 = "", o3 = "";
          (a3 = a3[a3.length - 1]) === t2 && (a3 = -1), this._resetOptionLabel(" k-selected"), e3 || 0 === e3 ? (o3 = e3, r3 = n3._dataValue(e3), i3 && (a3 += 1)) : i3 && (n3._focus(n3.optionLabel.addClass("k-selected")), o3 = n3._optionLabelText(), r3 = "string" == typeof i3 ? "" : n3._value(i3), a3 = 0), n3.selectedIndex = a3, null === r3 && (r3 = ""), n3._textAccessor(o3), n3._accessor(r3, a3), n3._triggerCascade();
        }, _mobile: function() {
          var e3 = this.popup, t3 = s2.mobileOS;
          e3.element.parents(".km-root").eq(0).length && t3 && (e3.options.animation.open.effects = t3.android || t3.meego ? "fadeIn" : t3.ios || t3.wp ? "slideIn:up" : e3.options.animation.open.effects);
        }, _filterHeader: function() {
          this.filterInput && (this.filterInput.off(c2).closest(".k-list-filter").remove(), this.filterInput = null), this._isFilterEnabled() && (this.filterInput = e2('<input class="k-input-inner" type="text" />').attr({ placeholder: this.element.attr("placeholder"), title: this.options.filterTitle || this.element.attr("title"), role: "searchbox", "aria-label": this.options.filterTitle, "aria-haspopup": "listbox", "aria-autocomplete": "list" }), this.list.parent().prepend(e2('<div class="k-list-filter"><span class="k-searchbox k-input k-input-md k-rounded-md k-input-solid" type="text" autocomplete="off"><span class="k-input-icon k-icon k-i-search"></span></span></div>')).find(".k-searchbox").append(this.filterInput));
        }, _span: function() {
          var e3, t3, i3 = this, r3 = i3.wrapper, o3 = "span.k-input-value-text", s3 = n2.guid(), l3 = i3.options;
          (e3 = r3.find(o3))[0] || (t3 = a2.renderButton('<span role="button" class="k-input-button" aria-label="select"></span>', { icon: "arrow-s", size: l3.size, fillMode: l3.fillMode, shape: "none", rounded: "none" }), r3.append('<span id="' + s3 + '" unselectable="on" class="k-input-inner"><span class="k-input-value-text"></span></span>').append(t3).append(i3.element), e3 = r3.find(o3)), i3.span = e3, i3._arrow = r3.find(".k-input-button"), i3._arrowIcon = i3._arrow.find(".k-icon");
        }, _wrapper: function() {
          var e3, t3 = this, n3 = t3.element, i3 = n3[0];
          (e3 = n3.parent()).is("span.k-picker") || ((e3 = n3.wrap("<span />").parent())[0].style.cssText = i3.style.cssText, e3[0].title = i3.title), t3._focused = t3.wrapper = e3.addClass("k-picker k-dropdownlist").addClass(i3.className).removeClass("input-validation-error").css("display", "").attr({ accesskey: n3.attr("accesskey"), unselectable: "on", role: "combobox", "aria-expanded": false }), n3.hide().removeAttr("accesskey");
        }, _clearSelection: function(e3) {
          this.select(e3.value() ? 0 : -1);
        }, _openHandler: function(e3) {
          this._adjustListWidth(), this.trigger("open") ? e3.preventDefault() : (this.wrapper.attr("aria-expanded", true), this.ul.attr("aria-hidden", false));
        }, _closeHandler: function(e3) {
          this.trigger("close") ? e3.preventDefault() : (this.wrapper.attr("aria-expanded", false), this.ul.attr("aria-hidden", true));
        }, _inputTemplate: function() {
          var e3 = this, t3 = e3.options.valueTemplate;
          if (t3 = t3 ? n2.template(t3) : n2.template("#:this._text(data)#", { useWithBlock: false }).bind(e3), e3.valueTemplate = t3, e3.hasOptionLabel() && !e3.options.optionLabelTemplate) try {
            e3.valueTemplate(e3._optionLabelDataItem());
          } catch (e4) {
            throw new Error("The `optionLabel` option is not valid due to missing fields. Define a custom optionLabel as shown here http://docs.telerik.com/kendo-ui/api/javascript/ui/dropdownlist#configuration-optionLabel");
          }
        }, _textAccessor: function(n3) {
          var i3 = null, a3 = this.valueTemplate, r3 = this._optionLabelText(), o3 = this.span;
          if (n3 === t2) return o3.text();
          e2.isPlainObject(n3) || n3 instanceof d2 ? i3 = n3 : r3 && r3 === n3 && (i3 = this.options.optionLabel), i3 || (i3 = this._assignInstance(n3, this._accessor())), this.hasOptionLabel() && (i3 !== r3 && this._text(i3) !== r3 || (a3 = this.optionLabelTemplate, "string" != typeof this.options.optionLabel || this.options.optionLabelTemplate || (i3 = r3)));
          var s3 = function() {
            return { elements: o3.get(), data: [{ dataItem: i3 }] };
          };
          this.angular("cleanup", s3);
          try {
            o3.html(a3(i3));
          } catch (e3) {
            o3.html("");
          }
          this.angular("compile", s3);
        }, _preselect: function(e3, t3) {
          e3 || t3 || (t3 = this._optionLabelText()), this._accessor(e3), this._textAccessor(t3), this._old = this._accessor(), this._oldIndex = this.selectedIndex, this.listView.setValue(e3), this._initialIndex = null, this._presetValue = true;
        }, _assignInstance: function(e3, t3) {
          var n3 = this.options.dataTextField, i3 = {};
          return n3 ? (T(i3, n3.split("."), e3), T(i3, this.options.dataValueField.split("."), t3), i3 = new d2(i3)) : i3 = e3, i3;
        } });
        function T(e3, t3, n3) {
          for (var i3, a3 = 0, r3 = t3.length - 1; a3 < r3; ++a3) (i3 = t3[a3]) in e3 || (e3[i3] = {}), e3 = e3[i3];
          e3[t3[r3]] = n3;
        }
        function S(e3, t3) {
          return e3 >= t3 && (e3 -= t3), e3;
        }
        i2.plugin(C), n2.cssProperties.registerPrefix("DropDownList", "k-picker-"), n2.cssProperties.registerValues("DropDownList", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.isFunction, o2 = e2.extend, s2 = "horizontal", l2 = "vertical", d2 = "start", u2 = "resize", c2 = "resizeend", p2 = a2.extend({ init: function(e3, t3) {
          var n3 = this;
          a2.fn.init.call(n3, e3, t3), n3.orientation = n3.options.orientation.toLowerCase() != l2 ? s2 : l2, n3._positionMouse = n3.orientation == s2 ? "x" : "y", n3._position = n3.orientation == s2 ? "left" : "top", n3._sizingDom = n3.orientation == s2 ? "outerWidth" : "outerHeight", n3.draggable = new i2.Draggable(t3.draggableElement || e3, { distance: 1, filter: t3.handle, drag: n3._resize.bind(n3), dragcancel: n3._cancel.bind(n3), dragstart: n3._start.bind(n3), dragend: n3._stop.bind(n3) }), n3.userEvents = n3.draggable.userEvents;
        }, events: [u2, c2, d2], options: { name: "Resizable", orientation: s2 }, resize: function() {
        }, _max: function(e3) {
          var n3 = this, i3 = n3.hint ? n3.hint[n3._sizingDom]() : 0, a3 = n3.options.max;
          return r2(a3) ? a3(e3) : a3 !== t2 ? n3._initialElementPosition + a3 - i3 : a3;
        }, _min: function(e3) {
          var n3 = this.options.min;
          return r2(n3) ? n3(e3) : n3 !== t2 ? this._initialElementPosition + n3 : n3;
        }, _start: function(t3) {
          var n3 = this, i3 = n3.options.hint, a3 = e2(t3.currentTarget);
          n3._initialElementPosition = a3.position()[n3._position], n3._initialMousePosition = t3[n3._positionMouse].startLocation, i3 && (n3.hint = r2(i3) ? e2(i3(a3)) : i3, n3.hint.css({ position: "absolute" }).css(n3._position, n3._initialElementPosition).appendTo(n3.element)), n3.trigger(d2, t3), n3._maxPosition = n3._max(t3), n3._minPosition = n3._min(t3), e2(document.body).css("cursor", a3.css("cursor"));
        }, _resize: function(e3) {
          var n3, i3 = this, a3 = i3._maxPosition, r3 = i3._minPosition, s3 = i3._initialElementPosition + (e3[i3._positionMouse].location - i3._initialMousePosition);
          n3 = r3 !== t2 ? Math.max(r3, s3) : s3, i3.position = n3 = a3 !== t2 ? Math.min(a3, n3) : n3, i3.hint && i3.hint.toggleClass(i3.options.invalidClass || "", n3 == a3 || n3 == r3).css(i3._position, n3), i3.resizing = true, i3.trigger(u2, o2(e3, { position: n3 }));
        }, _stop: function(t3) {
          var n3 = this;
          n3.hint && n3.hint.remove(), n3.resizing = false, n3.trigger(c2, o2(t3, { position: n3.position })), e2(document.body).css("cursor", "");
        }, _cancel: function(e3) {
          var n3 = this;
          n3.hint && (n3.position = t2, n3.hint.css(n3._position, n3._initialElementPosition), n3._stop(e3));
        }, destroy: function() {
          var e3 = this;
          a2.fn.destroy.call(e3), e3.draggable && e3.draggable.destroy();
        }, press: function(e3) {
          if (e3) {
            var t3 = e3.position(), n3 = this;
            n3.userEvents.press(t3.left, t3.top, e3[0]), n3.targetPosition = t3, n3.target = e3;
          }
        }, move: function(e3) {
          var n3 = this, i3 = n3._position, a3 = n3.targetPosition, r3 = n3.position;
          r3 === t2 && (r3 = a3[i3]), a3[i3] = r3 + e3, n3.userEvents.move(a3.left, a3.top);
        }, end: function() {
          this.userEvents.end(), this.target = this.position = t2;
        } });
        n2.ui.plugin(p2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2, i2 = window.kendo, a2 = i2.ui.Widget, r2 = i2.ui.Popup.TabKeyTrap, o2 = i2.ui.Draggable, s2 = e2.isPlainObject, l2 = i2._activeElement, d2 = i2._outerWidth, u2 = i2._outerHeight, c2 = e2.extend, p2 = e2.each, h2 = i2.template, f2 = "body", m2 = ".kendoWindow", g2 = ".kendoWindowModal", v2 = ".k-window", _2 = ".k-window-title", b2 = _2 + "bar", k2 = ".k-window-content", w = ".k-resize-handle", y = ".k-overlay", x = "k-content-frame", C = "k-i-loading", T = "k-hover", S = "k-focus", I = "k-window-maximized", D = "k-display-inline-flex", E = ":visible", A = "hidden", F = "cursor", z = "open", P = "activate", H = "deactivate", N = "close", R = "refresh", O = "resizeStart", M = "resizeEnd", B = "dragstart", L = "dragend", V = "restore", U = "error", W = "overflow", j = "original-overflow-rule", q = "zIndex", G = ".k-window-actions .k-i-window-minimize,.k-window-actions .k-i-window-maximize", K = ".k-i-pin", $ = ".k-i-unpin", Y = K + "," + $, Q = ".k-window-titlebar .k-window-action", X = ".k-window-titlebar .k-i-refresh", J = "WindowEventsHandled", Z = /^0[a-z]*$/i, ee = i2.isLocalUrl, te = { small: "k-window-sm", medium: "k-window-md", large: "k-window-lg" };
        function ne(e3) {
          return void 0 !== e3;
        }
        function ie(e3, t3) {
          return parseInt(e3.css(t3), 10) || 0;
        }
        function ae(e3, t3, n3) {
          return e3 && isNaN(e3) && e3.toString().indexOf("px") < 0 ? e3 : Math.max(Math.min(parseInt(e3, 10), n3 === 1 / 0 ? n3 : parseInt(n3, 10)), t3 === -1 / 0 ? t3 : parseInt(t3, 10));
        }
        function re() {
          return !this.type || this.type.toLowerCase().indexOf("script") >= 0;
        }
        function oe(t3) {
          for (var n3 = { top: t3.offsetTop, left: t3.offsetLeft }, i3 = t3.offsetParent; i3; ) {
            n3.top += i3.offsetTop, n3.left += i3.offsetLeft;
            var a3 = e2(i3).css("overflowX"), r3 = e2(i3).css("overflowY");
            "auto" !== r3 && "scroll" !== r3 || (n3.top -= i3.scrollTop), "auto" !== a3 && "scroll" !== a3 || (n3.left -= i3.scrollLeft), i3 = i3.offsetParent;
          }
          return n3;
        }
        var se = a2.extend({ init: function(n3, o3) {
          var l3, d3, u3, c3, p3, h3, f3, g3, w2 = this, y2 = {}, C2 = o3 && o3.actions && !o3.actions.length;
          a2.fn.init.call(w2, n3, o3), c3 = (o3 = w2.options).position, n3 = w2.element, p3 = o3.content, f3 = e2(window), C2 && (o3.actions = []), w2.appendTo = e2(o3.appendTo), w2.containment = o3.draggable.containment ? e2(o3.draggable.containment).first() : null, p3 && !s2(p3) && (p3 = o3.content = { url: p3 }), n3.find("script").filter(re).remove(), n3.parent().is(w2.appendTo) || w2.containment || c3.top !== t2 && c3.left !== t2 || (n3.is(E) ? (y2 = n3.offset(), true) : (d3 = n3.css("visibility"), u3 = n3.css("display"), n3.css({ visibility: A, display: "" }), y2 = document.body.contains(n3[0]) ? n3.offset() : { top: 0, left: 0 }, n3.css({ visibility: d3, display: u3 })), c3.top === t2 && (c3.top = y2.top), c3.left === t2 && (c3.left = y2.left)), ne(o3.visible) && null !== o3.visible || (o3.visible = n3.is(E)), l3 = w2.wrapper = n3.closest(v2), n3.is(".k-window-content") && l3[0] || (n3.addClass("k-window-content"), n3.attr("tabindex", 0), w2._createWindow(n3, o3), l3 = w2.wrapper = n3.closest(v2), w2.title(w2.options.title), w2._dimensions()), w2.minTop = w2.minLeft = -1 / 0, w2.maxTop = w2.maxLeft = 1 / 0, w2._position(), p3 && w2.refresh(p3), o3.visible && w2.toFront(null, !o3.modal), h3 = l3.children(k2), o3.visible && o3.modal && w2._overlay(l3.is(E)).css({ opacity: 0.5 }), l3.on("mouseenter" + m2, Q, w2._buttonEnter.bind(w2)).on("mouseleave" + m2, Q, w2._buttonLeave.bind(w2)).on("click" + m2, "> " + Q, w2._windowActionHandler.bind(w2)).on("keydown" + m2, w2, w2._keydown.bind(w2)).on("focus" + m2, w2._focus.bind(w2)).on("blur" + m2, w2._blur.bind(w2)), h3.on("keydown" + m2, w2, w2._keydownContent.bind(w2)), h3.find("." + x)[0] && !f3.data(J) && (f3.on("blur" + m2, function() {
            var t3 = e2(document.activeElement).parent(k2);
            t3.length && i2.widgetInstance(t3)._focus();
          }), f3.on("focus" + m2, function() {
            e2(k2).not(".k-dialog-content").each(function(t3, n4) {
              i2.widgetInstance(e2(n4))._blur();
            });
          }), f3.data(J, true)), this._resizable(), this._draggable(), o3.pinned && this.wrapper.is(":visible") && w2.pin(), (g3 = n3.attr("id")) && (g3 += "_wnd_title", l3.attr({ role: "dialog", "aria-labelledby": g3 }).children(b2).children(_2).attr("id", g3)), l3.add(l3.children(".k-resize-handle," + b2)).on(i2.support.mousedown + m2, w2.toFront.bind(w2)), w2.touchScroller = i2.touchScroller(n3), w2._resizeHandler = w2._onDocumentResize.bind(w2), w2._marker = i2.guid().substring(0, 8), e2(window).on("resize" + m2 + w2._marker, w2._resizeHandler), o3.visible && (w2.trigger(z), w2.trigger(P)), i2.notify(w2), this.options.modal && (this._tabKeyTrap = new r2(l3), this._tabKeyTrap.trap(), this._tabKeyTrap.shouldTrap = function() {
            return l3.data("isFront");
          });
        }, _buttonEnter: function(t3) {
          e2(t3.currentTarget).addClass(T);
        }, _buttonLeave: function(t3) {
          e2(t3.currentTarget).removeClass(T);
        }, _focus: function() {
          this.wrapper.addClass(S);
        }, _blur: function() {
          this.wrapper.removeClass(S);
        }, _dimensions: function() {
          var e3 = this.wrapper, t3 = this.options, n3 = t3.width, i3 = t3.height, a3 = t3.maxHeight, r3 = t3.size, o3 = ["minWidth", "minHeight", "maxWidth", "maxHeight"], s3 = "content-box" == e3.css("box-sizing"), l3 = s3 ? ie(e3, "border-left-width") + ie(e3, "border-right-width") : 0, d3 = s3 ? ie(e3, "border-top-width") + ie(e3, "border-bottom-width") : 0, u3 = s3 ? ie(e3, "padding-top") : 0;
          this.containment && !this._isPinned && (this._updateBoundaries(), t3.maxHeight = Math.min(this.containment.height - (d3 + u3), a3), t3.maxWidth = Math.min(this.containment.width - l3, t3.maxWidth));
          for (var c3 = 0; c3 < o3.length; c3++) {
            var p3 = t3[o3[c3]] || "";
            p3 != 1 / 0 && e3.css(o3[c3], p3);
          }
          a3 != 1 / 0 && this.element.css("maxHeight", a3), n3 ? e3.outerWidth(ae(n3, t3.minWidth, t3.maxWidth)) : e3.outerWidth(""), i3 ? e3.outerHeight(ae(i3, t3.minHeight, t3.maxHeight)) : e3.outerHeight(""), t3.visible || e3.removeClass(D).hide(), r3 && te[r3] && e3.addClass(te[r3]);
        }, _position: function() {
          var e3, t3, n3 = this.wrapper, i3 = this.options.position;
          this._updateBoundaries(), this.containment && (i3.top = i3.top || 0, i3.left = i3.left || 0, e3 = i3.top.toString().indexOf("%") > 0 ? parseInt(this.containment.height * (parseFloat(i3.top) / 100), 10) : i3.top, t3 = i3.left.toString().indexOf("%") > 0 ? parseInt(this.containment.width * (parseFloat(i3.left) / 100), 10) : i3.left, i3.top = ae(e3, this.minTop, this.maxTop), i3.left = ae(t3, this.minLeft, this.maxLeft)), i3.top && i3.top.toString().indexOf("px") > 0 && (i3.top = Number(i3.top.replace("px", ""))), i3.left && i3.left.toString().indexOf("px") > 0 && (i3.left = Number(i3.left.replace("px", ""))), 0 === i3.top && (i3.top = i3.top.toString()), 0 === i3.left && (i3.left = i3.left.toString()), n3.css({ top: i3.top || "", left: i3.left || "" });
        }, _updateBoundaries: function() {
          var e3 = this.containment;
          if (!e3) return null;
          e3.width = e3.innerWidth(), e3.height = e3.innerHeight(), parseInt(e3.width, 10) > e3[0].clientWidth && (e3.width -= i2.support.scrollbar()), parseInt(e3.height, 10) > e3[0].clientHeight && (e3.height -= i2.support.scrollbar()), e3.position = oe(e3[0]), this._isPinned ? (this.minTop = this.minLeft = -1 / 0, this.maxTop = this.maxLeft = 1 / 0) : (this.minTop = e3.scrollTop(), this.minLeft = e3.scrollLeft(), this.maxLeft = this.minLeft + e3.width - d2(this.wrapper, true), this.maxTop = this.minTop + e3.height - u2(this.wrapper, true));
        }, _animationOptions: function(e3) {
          var t3 = this.options.animation;
          return t3 && t3[e3] || { open: { effects: {} }, close: { hide: true, effects: {} } }[e3];
        }, _resize: function() {
          i2.resize(this.element.children());
        }, _resizable: function() {
          var t3 = this.options.resizable, i3 = this.wrapper;
          this.resizing && (i3.off("dblclick" + m2).children(w).remove(), this.resizing.destroy(), this.resizing = null), t3 && (i3.on("dblclick" + m2, b2, function(t4) {
            e2(t4.target).closest(".k-window-action").length || this.toggleMaximization();
          }.bind(this)), p2("n e s w se sw ne nw".split(" "), function(e3, t4) {
            i3.append(n2.resizeHandle(t4));
          }), this.resizing = new le(this)), i3 = null;
        }, _draggable: function() {
          var e3 = this.options.draggable;
          this.dragging && (this.dragging.destroy(), this.dragging = null), e3 && (this.dragging = new de(this, e3.dragHandle || b2));
        }, _actions: function() {
          var t3 = this.options, a3 = t3.actions, r3 = t3.pinned, o3 = this.wrapper.children(b2).find(".k-window-actions"), s3 = ["maximize", "minimize"];
          a3 = e2.map(a3, function(e3) {
            return e3 = r3 && "pin" === e3.toLowerCase() ? "unpin" : e3, { name: s3.indexOf(e3.toLowerCase()) > -1 ? "window-" + e3 : e3 };
          }), o3.html(i2.render(n2.action, a3));
        }, setOptions: function(t3) {
          var n3 = this, i3 = n3.options.size, r3 = this.containment && !n3._isPinned ? this.containment : e2(document), o3 = JSON.parse(JSON.stringify(t3));
          c2(t3.position, n3.options.position), c2(t3.position, o3.position), n3._containerScrollTop = r3.scrollTop(), n3._containerScrollLeft = r3.scrollLeft(), a2.fn.setOptions.call(n3, t3);
          var s3 = false !== n3.options.scrollable;
          if (n3.restore(), void 0 !== t3.title && n3.title(t3.title), n3.wrapper.removeClass(te[i3]), n3._dimensions(), n3._position(), n3._resizable(), n3._draggable(), n3._actions(), void 0 !== t3.modal) {
            var l3 = false !== n3.options.visible;
            n3._enableDocumentScrolling(), n3._overlay(t3.modal && l3);
          }
          n3.element.css(W, s3 ? "" : "hidden");
        }, events: [z, P, H, N, "minimize", "maximize", R, V, O, "resize", M, B, L, "kendoKeydown", U], options: { name: "Window", animation: { open: { effects: { zoom: { direction: "in" }, fade: { direction: "in" } }, duration: 350 }, close: { effects: { zoom: { direction: "out", properties: { scale: 0.7 } }, fade: { direction: "out" } }, duration: 350, hide: true } }, title: "", actions: ["Close"], autoFocus: true, modal: false, size: "auto", resizable: true, draggable: true, minWidth: 90, minHeight: 50, maxWidth: 1 / 0, maxHeight: 1 / 0, pinned: false, scrollable: true, position: {}, content: null, visible: null, height: null, width: null, appendTo: "body", isMaximized: false, isMinimized: false }, _closable: function() {
          return e2.inArray("close", e2.map(this.options.actions, function(e3) {
            return e3.toLowerCase();
          })) > -1;
        }, _keydownContent: function(e3) {
          var t3 = i2.keys;
          e3.keyCode == t3.ESC && this._closable() && (e3.stopPropagation(), this._close(false));
        }, _keydown: function(e3) {
          var t3, n3, a3, r3, o3, s3, l3 = this, d3 = l3.options, u3 = i2.keys, c3 = e3.keyCode, p3 = l3.wrapper, h3 = 10, f3 = d3.isMaximized, m3 = d3.isMinimized;
          c3 == u3.ESC && l3._closable() && (e3.stopPropagation(), l3._close(false)), e3.target != e3.currentTarget || l3._closing || (e3.altKey && 82 == c3 && l3.refresh(), e3.altKey && 80 == c3 && (l3.options.pinned ? l3.unpin() : l3.pin()), e3.altKey && c3 == u3.UP ? m3 ? (l3.restore(), l3.wrapper.trigger("focus")) : f3 || (l3.maximize(), l3.wrapper.trigger("focus")) : e3.altKey && c3 == u3.DOWN && (m3 || f3 ? f3 && (l3.restore(), l3.wrapper.trigger("focus")) : (l3.minimize(), l3.wrapper.trigger("focus"))), t3 = i2.getOffset(p3), l3.containment && !l3._isPinned && (t3 = l3.options.position), !d3.draggable || e3.ctrlKey || e3.altKey || f3 || (l3._updateBoundaries(), c3 == u3.UP ? (t3.top = ae(t3.top - h3, l3.minTop, l3.maxTop), n3 = p3.css("top", t3.top)) : c3 == u3.DOWN ? (t3.top = ae(t3.top + h3, l3.minTop, l3.maxTop), n3 = p3.css("top", t3.top)) : c3 == u3.LEFT ? (t3.left = ae(t3.left - h3, l3.minLeft, l3.maxLeft), n3 = p3.css("left", t3.left)) : c3 == u3.RIGHT && (t3.left = ae(t3.left + h3, l3.minLeft, l3.maxLeft), n3 = p3.css("left", t3.left))), d3.resizable && e3.ctrlKey && !f3 && !m3 && (c3 == u3.UP ? (n3 = true, r3 = p3.outerHeight() - h3) : c3 == u3.DOWN && (n3 = true, r3 = l3.containment && !l3._isPinned ? Math.min(p3.outerHeight() + h3, l3.containment.height - t3.top - ie(p3, "padding-top") - ie(p3, "borderBottomWidth") - ie(p3, "borderTopWidth")) : p3.outerHeight() + h3), c3 == u3.LEFT ? (n3 = true, a3 = p3.outerWidth() - h3) : c3 == u3.RIGHT && (n3 = true, a3 = l3.containment && !l3._isPinned ? Math.min(p3.outerWidth() + h3, l3.containment.width - t3.left - ie(p3, "borderLeftWidth") - ie(p3, "borderRightWidth")) : p3.outerWidth() + h3), n3 && (o3 = ae(a3, d3.minWidth, d3.maxWidth), s3 = ae(r3, d3.minHeight, d3.maxHeight), isNaN(o3) || (p3.outerWidth(o3), l3.options.width = o3 + "px"), isNaN(s3) || (p3.outerHeight(s3), l3.options.height = s3 + "px"), l3.resize())), n3 && e3.preventDefault());
        }, _overlay: function(t3) {
          var n3 = this.containment ? this.containment.children(y) : this.appendTo.children(y), i3 = this.wrapper, a3 = t3 ? "block" : "none", r3 = parseInt(i3.css(q), 10) - 1;
          return n3.length || (n3 = e2("<div class='k-overlay' />")), n3.insertBefore(i3[0]).css({ zIndex: r3, display: a3 }), this.options.modal.preventScroll && !this.containment && this._stopDocumentScrolling(), n3;
        }, _actionForIcon: function(e3) {
          return { "k-i-close": "_close", "k-i-window-maximize": "maximize", "k-i-window-minimize": "minimize", "k-i-window-restore": "restore", "k-i-refresh": "refresh", "k-i-pin": "pin", "k-i-unpin": "unpin" }[/\bk-i(-\w+)+\b/.exec(e3[0].className)[0]];
        }, _windowActionHandler: function(t3) {
          if (!this._closing) {
            var n3 = e2(t3.target).closest(".k-window-action").find(".k-icon"), i3 = this._actionForIcon(n3);
            return i3 ? (t3.preventDefault(), this[i3](), false) : void 0;
          }
        }, _modals: function() {
          for (var t3, n3 = this, i3 = e2(v2 + E), a3 = [], r3 = 0; r3 < i3.length; r3 += 1) (t3 = n3._object(e2(i3[r3]))) && t3.options && t3.options.modal && t3.options.visible && t3.options.appendTo === n3.options.appendTo && (!t3.containment || n3.containment && t3.containment[0] === n3.containment[0]) && a3.push(t3.wrapper[0]);
          return a3.sort(function(e3, t4) {
            return e3.style.zIndex - t4.style.zIndex;
          }), n3 = null, e2(a3);
        }, _object: function(e3) {
          var n3 = e3.children(k2), a3 = i2.widgetInstance(n3);
          return a3 || t2;
        }, center: function() {
          var t3, n3, i3 = this, a3 = i3.options.position, r3 = i3.wrapper, o3 = e2(window), s3 = 0, l3 = 0;
          return i3.options.isMaximized || (i3.options.pinned && !i3._isPinned && i3.pin(), i3.options.pinned || (s3 = o3.scrollTop(), l3 = o3.scrollLeft()), this.containment && !i3.options.pinned ? (t3 = this.minTop + (this.maxTop - this.minTop) / 2, n3 = this.minLeft + (this.maxLeft - this.minLeft) / 2) : (i3._scrollIsAppended = true, n3 = l3 + Math.max(0, (o3.width() - r3.outerWidth()) / 2), t3 = s3 + Math.max(0, (o3.height() - r3.outerHeight() - ie(r3, "paddingTop")) / 2)), r3.css({ left: n3, top: t3 }), a3.top = t3, a3.left = n3), i3;
        }, title: function(t3) {
          var a3, r3 = this, o3 = true, s3 = r3.wrapper, l3 = s3.children(b2), d3 = l3.children(_2);
          return arguments.length ? (e2.isPlainObject(t3) ? (a3 = void 0 !== t3.text ? t3.text : "", o3 = false !== t3.encoded) : a3 = t3, false === a3 ? (s3.addClass("k-window-titleless"), s3.css("padding-top", 0), l3.remove()) : l3.length ? d3.html(o3 ? i2.htmlEncode(a3) : a3) : (s3.prepend(n2.titlebar({ title: o3 ? i2.htmlEncode(a3) : a3 })), r3._actions(), l3 = s3.children(b2)), r3.options.title = a3, r3) : d3.html();
        }, content: function(e3, t3) {
          var n3 = this.wrapper.children(k2), a3 = n3.children(".km-scroll-container");
          return n3 = a3[0] ? a3 : n3, ne(e3) ? (this.angular("cleanup", function() {
            return { elements: n3.children() };
          }), i2.destroy(this.element.children()), n3.empty().html(e3), this.angular("compile", function() {
            for (var e4 = [], i3 = n3.length; --i3 >= 0; ) e4.push({ dataItem: t3 });
            return { elements: n3.children(), data: e4 };
          }), this) : n3.html();
        }, open: function() {
          var t3, n3, a3 = this, r3 = a3.wrapper, o3 = a3.options, s3 = this._animationOptions("open"), l3 = r3.children(k2), d3 = this.containment && !a3._isPinned ? this.containment : e2(document);
          if (!a3.trigger(z)) {
            if (a3._closing && r3.kendoStop(true, true), a3._closing = false, a3.toFront(), o3.autoFocus && a3.wrapper.trigger("focus"), o3.visible = true, o3.modal) {
              if (n3 = !!a3._modals().length, (t3 = a3._overlay(n3)).kendoStop(true, true), s3.duration && i2.effects.Fade && !n3) {
                var u3 = i2.fx(t3).fadeIn();
                u3.duration(s3.duration || 0), u3.endValue(0.5), u3.play();
              } else t3.css("opacity", 0.5);
              t3.show(), e2(window).on("focus" + g2, function() {
                r3.data("isFront") && !e2(document.activeElement).closest(r3).length && a3.wrapper.trigger("focus");
              });
            }
            r3.is(E) || (l3.css(W, A), a3.wrapper.find(Q).addClass("k-button-flat"), r3.addClass(D).kendoStop().kendoAnimate({ effects: s3.effects, duration: s3.duration, complete: this._activate.bind(this) }));
          }
          return o3.isMaximized && (a3._containerScrollTop = d3.scrollTop(), a3._containerScrollLeft = d3.scrollLeft(), a3._stopDocumentScrolling()), this.options.pinned && !this._isPinned && this.pin(), a3;
        }, _activate: function() {
          var e3 = false !== this.options.scrollable;
          this.options.autoFocus && this.wrapper.trigger("focus"), this.element.css(W, e3 ? "" : "hidden"), i2.resize(this.element.children()), this.trigger(P);
        }, _removeOverlay: function(n3) {
          var a3 = this._modals(), r3 = this.options, o3 = r3.modal && !a3.length, s3 = this._animationOptions("close");
          if (o3) {
            if (!n3 && s3.duration && i2.effects.Fade) {
              var l3 = i2.fx(r3.modal ? this._overlay(true) : e2(t2)).fadeOut();
              l3.duration(s3.duration || 0), l3.startValue(0.5), l3.play();
            } else this._overlay(false).remove();
            r3.modal.preventScroll && this._enableDocumentScrolling();
          } else a3.length && (this._object(a3.last())._overlay(true), r3.modal.preventScroll && this._stopDocumentScrolling());
        }, _close: function(t3) {
          var n3, i3 = this, a3 = i3.wrapper, r3 = i3.options, o3 = this._animationOptions("open"), s3 = this._animationOptions("close"), l3 = this.containment && !i3._isPinned ? this.containment : e2(document);
          i3._closing || (n3 = i3.trigger(N, { userTriggered: !t3 }), i3._closing = !n3, a3.is(E) && !n3 && (r3.visible = false, e2(v2).each(function(t4, n4) {
            var i4 = e2(n4).children(k2);
            n4 != a3 && i4.find("> ." + x).length > 0 && i4.children(y).remove();
          }), this._removeOverlay(), i3.wrapper.find(Q).removeClass("k-button-flat"), a3.kendoStop().kendoAnimate({ effects: s3.effects || o3.effects, reverse: true === s3.reverse, duration: s3.duration, complete: this._deactivate.bind(this) }), e2(window).off(g2)), i3.options.isMaximized && (i3._enableDocumentScrolling(), i3._containerScrollTop && i3._containerScrollTop > 0 && l3.scrollTop(i3._containerScrollTop), i3._containerScrollLeft && i3._containerScrollLeft > 0 && l3.scrollLeft(i3._containerScrollLeft)), i3.options.iframe && i3.wrapper.trigger("blur"));
        }, _deactivate: function() {
          var e3 = this;
          if (e3.wrapper.removeClass(D).hide().css("opacity", ""), e3.trigger(H), e3.options.modal) {
            var t3 = e3._object(e3._modals().last());
            t3 && t3.toFront();
          }
        }, close: function() {
          return this._close(true), this;
        }, _actionable: function(t3) {
          return e2(t3).is(Q + "," + Q + " .k-icon, :input, a, .k-input, .k-icon, [role='gridcell'], .k-input-value-text");
        }, _shouldFocus: function(t3) {
          var n3 = l2(), i3 = this.wrapper;
          return this.options.autoFocus && !e2(n3).is(i3) && !this._actionable(t3) && (!i3.find(n3).length || !i3.find(t3).length);
        }, toFront: function(t3, i3) {
          var a3 = this, r3 = a3.wrapper, o3 = r3[0], s3 = a3.containment && !a3._isPinned, l3 = this._animationOptions("open"), d3 = +r3.css(q), u3 = d3, c3 = t3 && t3.target || null;
          if (e2(v2).each(function(t4, i4) {
            var a4 = e2(i4), s4 = a4.css(q), l4 = a4.children(k2);
            isNaN(s4) || (d3 = Math.max(+s4, d3)), r3.data("isFront", i4 == o3), i4 != o3 && l4.find("." + x).length && !l4.find(y).length && l4.append(n2.overlay);
          }), (!r3[0].style.zIndex || u3 < d3) && r3.css(q, d3 + 2), a3.element.find("> .k-overlay").remove(), a3._shouldFocus(c3)) {
            i3 || setTimeout(function() {
              a3.wrapper.focus();
            }, l3 ? l3.duration : 0);
            var p3 = s3 ? a3.containment.scrollTop() : e2(window).scrollTop(), h3 = parseInt(r3.position().top, 10);
            !a3.options.pinned && h3 > 0 && h3 < p3 && (p3 > 0 ? e2(window).scrollTop(h3) : r3.css("top", p3));
          }
          return r3 = null, a3;
        }, toggleMaximization: function() {
          return this._closing ? this : this[this.options.isMaximized ? "restore" : "maximize"]();
        }, restore: function() {
          var t3 = this, n3 = t3.options, i3 = n3.minHeight, a3 = t3.restoreOptions, r3 = t3.containment && !t3._isPinned ? t3.containment : e2(document);
          return n3.isMaximized || n3.isMinimized ? (i3 && i3 != 1 / 0 && t3.wrapper.css("min-height", i3), a3 && !n3.isMaximized && (a3.height = ae(a3.height, t3.options.minHeight, t3.options.maxHeight), n3.position.top + parseInt(a3.height, 10) > t3.maxTop && (n3.position.top = ae(n3.position.top, t3.minTop, t3.maxTop - parseInt(a3.height, 10)), c2(a3, { left: n3.position.left, top: n3.position.top }))), t3.wrapper.css({ position: n3.pinned ? "fixed" : "absolute", left: a3.left, top: a3.top, width: a3.width, height: a3.height }).removeClass(I).find(".k-window-content,.k-resize-handle").show().end().find(".k-window-titlebar .k-i-window-restore").parent().remove().end().end().find(G).parent().show().end().end().find(Y).parent().show(), n3.isMaximized ? t3.wrapper.find(".k-i-window-maximize").parent().trigger("focus") : n3.isMinimized && t3.wrapper.find(".k-i-window-minimize").parent().trigger("focus"), t3.options.width = a3.width, t3.options.height = a3.height, t3.options.modal.preventScroll || t3._enableDocumentScrolling(), t3._containerScrollTop && t3._containerScrollTop > 0 && r3.scrollTop(t3._containerScrollTop), t3._containerScrollLeft && t3._containerScrollLeft > 0 && r3.scrollLeft(t3._containerScrollLeft), n3.isMaximized = n3.isMinimized = false, t3.wrapper.removeAttr("aria-labelled-by"), t3.resize(), t3.trigger(V), t3) : t3;
        }, _sizingAction: function(e3, t3) {
          var i3 = this, a3 = i3.wrapper, r3 = a3[0].style, o3 = i3.options;
          return o3.isMaximized || o3.isMinimized || (i3.restoreOptions = { width: r3.width, height: r3.height }, a3.children(w).hide().end().children(b2).find(G).parent().hide().eq(0).before(n2.action({ name: "window-restore" })), t3.call(i3), i3.wrapper.children(b2).find(Y).parent().toggle("maximize" !== e3), i3.trigger(e3), a3.find(".k-i-window-restore").parent().trigger("focus")), i3;
        }, maximize: function() {
          return this._sizingAction("maximize", function() {
            var t3 = this, n3 = t3.wrapper, i3 = this.containment && !t3._isPinned, a3 = n3.position(), r3 = e2(document);
            c2(t3.restoreOptions, { left: a3.left + (i3 ? this.containment.scrollLeft() : 0), top: a3.top + (i3 ? this.containment.scrollTop() : 0) }), this._containerScrollTop = i3 ? this.containment.scrollTop() : r3.scrollTop(), this._containerScrollLeft = i3 ? this.containment.scrollLeft() : r3.scrollLeft(), t3._stopDocumentScrolling(), n3.css({ top: i3 ? this.containment.scrollTop() : 0, left: i3 ? this.containment.scrollLeft() : 0, position: i3 ? "absolute" : "fixed" }).addClass(I), t3.options.isMaximized = true, t3._onDocumentResize();
          }), this;
        }, _stopDocumentScrolling: function() {
          var t3 = this, n3 = t3.containment;
          if (n3 && !t3._isPinned) return t3._storeOverflowRule(n3), n3.css(W, A), void t3.wrapper.css({ maxWidth: n3.innerWidth(), maxHeight: n3.innerHeight() });
          var i3 = e2("body");
          t3._storeOverflowRule(i3), i3.css(W, A);
          var a3 = e2("html");
          t3._storeOverflowRule(a3), a3.css(W, A);
        }, _enableDocumentScrolling: function() {
          var t3 = this, n3 = t3.containment;
          if (n3 && !t3._isPinned) return t3._restoreOverflowRule(n3), void t3.wrapper.css({ maxWidth: n3.width, maxHeight: n3.height });
          t3._restoreOverflowRule(e2(document.body)), t3._restoreOverflowRule(e2("html"));
        }, _storeOverflowRule: function(e3) {
          if (!this._isOverflowStored(e3)) {
            var t3 = e3.get(0).style.overflow;
            "string" == typeof t3 && e3.data(j, t3);
          }
        }, _isOverflowStored: function(e3) {
          return "string" == typeof e3.data(j);
        }, _restoreOverflowRule: function(e3) {
          var n3 = e3.data(j);
          null !== n3 && n3 !== t2 ? (e3.css(W, n3), e3.removeData(j)) : e3.css(W, "");
        }, isMaximized: function() {
          return this.options.isMaximized;
        }, minimize: function() {
          return this._sizingAction("minimize", function() {
            var e3 = this;
            e3.wrapper.css({ height: "", minHeight: "" }), e3.element.hide(), e3.options.isMinimized = true;
          }), this.wrapper.attr("aria-labelled-by", this.element.attr("aria-labelled-by")), this._updateBoundaries(), this;
        }, isMinimized: function() {
          return this.options.isMinimized;
        }, pin: function() {
          var t3 = this, n3 = e2(window), i3 = t3.wrapper, a3 = t3.options, r3 = a3.position, o3 = this.containment ? oe(i3[0]).top + ie(this.containment, "borderTopWidth") : ie(i3, "top"), s3 = this.containment ? oe(i3[0]).left + ie(this.containment, "borderLeftWidth") : ie(i3, "left");
          t3.options.isMaximized || (r3.top = o3, r3.left = s3, !t3._scrollIsAppended || this.containment && "fixed" === this.containment.css("position") || (r3.top -= n3.scrollTop(), r3.left -= n3.scrollLeft(), t3._scrollIsAppended = false), i3.css(c2(r3, { position: "fixed" })), i3.children(b2).find(K).addClass("k-i-unpin").removeClass("k-i-pin"), t3._isPinned = true, t3.options.pinned = true, this.containment && (a3.maxWidth = a3.maxHeight = 1 / 0, i3.css({ maxWidth: "", maxHeight: "" })));
        }, unpin: function() {
          var t3 = this, n3 = e2(window), i3 = t3.wrapper, a3 = t3.options, r3 = t3.options.position, o3 = t3.containment, s3 = parseInt(i3.css("top"), 10) + n3.scrollTop(), l3 = parseInt(i3.css("left"), 10) + n3.scrollLeft();
          t3.options.isMaximized || (t3._isPinned = false, t3._scrollIsAppended = true, t3.options.pinned = false, o3 && (t3._updateBoundaries(), a3.maxWidth = Math.min(o3.width, a3.maxWidth), a3.maxHeight = Math.min(o3.height - ie(i3, "padding-top"), a3.maxHeight), i3.css({ maxWidth: a3.maxWidth, maxHeight: a3.maxHeight }), s3 = s3 < o3.position.top ? t3.minTop : s3 > o3.position.top + o3.height ? t3.maxTop : s3 + o3.scrollTop() - (o3.position.top + ie(o3, "border-top-width")), l3 = l3 < o3.position.left ? t3.minLeft : l3 > o3.position.left + o3.width ? t3.maxLeft : l3 + o3.scrollLeft() - (o3.position.left + ie(o3, "border-left-width"))), r3.top = ae(s3, t3.minTop, t3.maxTop), r3.left = ae(l3, t3.minLeft, t3.maxLeft), i3.css(c2(r3, { position: "" })), i3.children(b2).find($).addClass("k-i-pin").removeClass("k-i-unpin"));
        }, _onDocumentResize: function() {
          var t3, n3, a3 = this, r3 = a3.wrapper, o3 = e2(window), s3 = i2.support.zoomLevel(), l3 = "content-box" == r3.css("box-sizing");
          if (a3.options.isMaximized) {
            var d3 = l3 ? ie(r3, "border-left-width") + ie(r3, "border-right-width") : 0, u3 = l3 ? ie(r3, "border-top-width") + ie(r3, "border-bottom-width") : 0, c3 = l3 ? ie(r3, "padding-top") : 0;
            a3.containment && !a3._isPinned ? (t3 = a3.containment.innerWidth() - d3, n3 = a3.containment.innerHeight() - (u3 + c3)) : (t3 = o3.width() / s3 - d3, n3 = o3.height() / s3 - (u3 + c3)), r3.css({ width: t3, height: n3 }), a3.options.width = t3, a3.options.height = n3, a3.resize();
          }
        }, refresh: function(t3) {
          var i3, a3, r3, o3 = this, l3 = o3.options, d3 = e2(o3.element);
          return s2(t3) || (t3 = { url: t3 }), t3 = c2(l3.content, t3), a3 = ne(l3.iframe) ? l3.iframe : t3.iframe, (r3 = t3.url) ? (ne(a3) || (a3 = !ee(r3)), a3 ? ((i3 = d3.find("." + x)[0]) ? i3.src = r3 || i3.src : d3.html(n2.contentFrame(c2({}, l3, { content: t3 }))), d3.find("." + x).off("load" + m2).on("load" + m2, this._triggerRefresh.bind(this))) : o3._ajaxRequest(t3)) : (t3.template && o3.content(h2(t3.template)({})), o3.trigger(R)), d3.toggleClass("k-window-iframecontent", !!a3), o3;
        }, _triggerRefresh: function() {
          this.trigger(R);
        }, _ajaxComplete: function() {
          clearTimeout(this._loadingIconTimeout), this.wrapper.find(X).removeClass(C);
        }, _ajaxError: function(e3, t3) {
          this.trigger(U, { status: t3, xhr: e3 });
        }, _ajaxSuccess: function(e3) {
          return function(t3) {
            var n3 = t3;
            e3 && (n3 = h2(e3)(t3 || {})), this.content(n3, t3), this.element.prop("scrollTop", 0), this.trigger(R);
          };
        }, _showLoading: function() {
          this.wrapper.find(X).addClass(C);
        }, _ajaxRequest: function(t3) {
          this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100), e2.ajax(c2({ type: "GET", dataType: "html", cache: false, error: this._ajaxError.bind(this), complete: this._ajaxComplete.bind(this), success: this._ajaxSuccess(t3.template).bind(this) }, t3));
        }, _destroy: function() {
          this.resizing && this.resizing.destroy(), this.dragging && this.dragging.destroy(), this.wrapper.off(m2).children(k2).off(m2).end().find(".k-resize-handle,.k-window-titlebar").off(m2), e2(window).off("resize" + m2 + this._marker), e2(window).off(g2), e2(window).off(m2), clearTimeout(this._loadingIconTimeout), a2.fn.destroy.call(this), this.unbind(t2), i2.destroy(this.wrapper);
        }, destroy: function() {
          this._destroy(), this.options.modal && this._removeOverlay(true), this.wrapper.empty().remove(), this.wrapper = this.appendTo = this.element = e2();
        }, _createWindow: function() {
          var t3, a3, r3 = this.element, o3 = this.options, s3 = i2.support.isRtl(r3);
          false === o3.scrollable && r3.css("overflow", "hidden"), a3 = e2(n2.wrapper(o3)), t3 = r3.find("iframe:not(.k-content-frame)").map(function() {
            var e3 = this.getAttribute("src");
            return this.src = "", e3;
          }), a3.toggleClass("k-rtl", s3).attr("tabindex", 0).append(r3).find("iframe:not(.k-content-frame)").each(function(e3) {
            this.src = t3[e3];
          }), this.containment ? this.containment.prepend(a3) : this.appendTo && a3.appendTo(this.appendTo), a3.find(".k-window-title").css(s3 ? "left" : "right", d2(a3.find(".k-window-actions")) + 10), r3.css("visibility", "").show(), r3.find("[data-role=editor]").each(function() {
            var t4 = e2(this).data("kendoEditor");
            t4 && t4.refresh();
          }), a3 = r3 = null;
        } });
        function le(e3) {
          var t3 = this;
          t3.owner = e3, t3._preventDragging = false, t3._draggable = new o2(e3.wrapper, { filter: ">.k-resize-handle", group: e3.wrapper.id + "-resizing", dragstart: t3.dragstart.bind(t3), drag: t3.drag.bind(t3), dragend: t3.dragend.bind(t3) }), t3._draggable.userEvents.bind("press", t3.addOverlay.bind(t3)), t3._draggable.userEvents.bind("release", t3.removeOverlay.bind(t3));
        }
        function de(e3, t3) {
          var n3 = this;
          n3.owner = e3, n3._preventDragging = false, n3._draggable = new o2(e3.wrapper, { filter: t3, group: e3.wrapper.id + "-moving", dragstart: n3.dragstart.bind(n3), drag: n3.drag.bind(n3), dragend: n3.dragend.bind(n3), dragcancel: n3.dragcancel.bind(n3) }), n3._draggable.userEvents.stopPropagation = false;
        }
        n2 = { wrapper: h2("<div class='k-widget k-window'></div>"), action: h2("<a role='button' href='\\#' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action' aria-label='#= name #'><span class='k-button-icon k-icon k-i-#= name.toLowerCase() #'></span></a>"), titlebar: h2("<div class='k-window-titlebar k-hstack'><span class='k-window-title'>#= title #</span><div class='k-window-actions k-hstack'></div></div>"), overlay: "<div class='k-overlay'></div>", contentFrame: h2("<iframe frameborder='0' title='#= title #' class='k-content-frame' src='#= content.url #'>This page requires frames in order to show content</iframe>"), resizeHandle: h2("<div aria-hidden='true' class='k-resize-handle k-resize-#= data #'></div>") }, le.prototype = { addOverlay: function() {
          this.owner.wrapper.append(n2.overlay);
        }, removeOverlay: function() {
          this.owner.wrapper.find(y).remove();
        }, dragstart: function(t3) {
          var n3 = this, a3 = n3.owner, r3 = a3.wrapper;
          if (n3._preventDragging = a3.trigger(O), !n3._preventDragging) {
            n3.elementPadding = parseInt(r3.css("padding-top"), 10), n3.initialPosition = i2.getOffset(r3, "position"), n3.resizeDirection = t3.currentTarget.prop("className").replace("k-resize-handle k-resize-", ""), n3.initialSize = { width: r3.outerWidth(), height: r3.outerHeight() }, a3._updateBoundaries(), n3.containerOffset = a3.containment ? a3.containment.position : i2.getOffset(a3.appendTo);
            var o3 = r3.offsetParent();
            if (o3.is("html")) n3.containerOffset.top = n3.containerOffset.left = 0;
            else {
              var s3 = o3.css("margin-top"), l3 = o3.css("margin-left");
              if (!Z.test(s3) || !Z.test(l3)) {
                var d3 = oe(r3[0]), u3 = d3.left - n3.containerOffset.left - n3.initialPosition.left, c3 = d3.top - n3.containerOffset.top - n3.initialPosition.top;
                n3._relativeElMarginLeft = u3 > 1 ? u3 : 0, n3._relativeElMarginTop = c3 > 1 ? c3 : 0, n3.initialPosition.left += n3._relativeElMarginLeft, n3.initialPosition.top += n3._relativeElMarginTop;
              }
            }
            r3.children(w).not(t3.currentTarget).hide(), e2(f2).css(F, t3.currentTarget.css(F));
          }
        }, drag: function(t3) {
          if (!this._preventDragging) {
            var n3, a3, r3, o3, s3 = this, l3 = s3.owner, d3 = l3.wrapper, u3 = l3.options, c3 = u3.position, p3 = s3.resizeDirection, h3 = s3.containerOffset, f3 = s3.initialPosition, m3 = s3.initialSize, g3 = l3.containment && !l3._isPinned, v3 = i2.support.isRtl(l3.containment), _3 = g3 && v3 && l3.containment.innerWidth() > l3.containment.width ? i2.support.scrollbar() : 0, b3 = g3 ? { top: l3.containment.scrollTop(), left: l3.containment.scrollLeft() } : { top: 0, left: 0 }, k3 = Math.max(t3.x.location, 0), w2 = Math.max(t3.y.location, 0);
            p3.indexOf("e") >= 0 ? (n3 = l3.containment && k3 - m3.width >= l3.maxLeft - b3.left + h3.left + _3 ? l3.maxLeft + _3 - f3.left + m3.width - b3.left : k3 - f3.left - h3.left, d3.outerWidth(ae(n3, u3.minWidth, u3.maxWidth))) : p3.indexOf("w") >= 0 && (n3 = ae((o3 = f3.left + m3.width + h3.left) - k3, u3.minWidth, u3.maxWidth), c3.left = o3 - n3 - h3.left - _3 - (s3._relativeElMarginLeft || 0) + b3.left, l3.containment && c3.left <= l3.minLeft && (c3.left = l3.minLeft, n3 = ae(o3 - _3 - c3.left - h3.left + b3.left, u3.minWidth, u3.maxWidth)), d3.css({ left: c3.left, width: n3 }));
            var y2 = w2;
            l3.options.pinned && (y2 -= e2(window).scrollTop()), p3.indexOf("s") >= 0 ? (a3 = y2 - f3.top - s3.elementPadding - h3.top, y2 - m3.height - s3.elementPadding >= l3.maxTop + h3.top - b3.top && (a3 = l3.maxTop - f3.top + m3.height - b3.top), d3.outerHeight(ae(a3, u3.minHeight, u3.maxHeight))) : p3.indexOf("n") >= 0 && (a3 = ae((r3 = f3.top + m3.height + h3.top) - y2, u3.minHeight, u3.maxHeight), c3.top = r3 - a3 - h3.top - (s3._relativeElMarginTop || 0) + b3.top, c3.top <= l3.minTop && l3.containment && (c3.top = l3.minTop, a3 = ae(r3 - c3.top - h3.top + b3.top, u3.minHeight, u3.maxHeight)), d3.css({ top: c3.top, height: a3 })), n3 && (l3.options.width = n3 + "px"), a3 && (l3.options.height = a3 + "px"), l3.resize();
          }
        }, dragend: function(t3) {
          if (!this._preventDragging) {
            var n3 = this, i3 = n3.owner, a3 = i3.wrapper;
            return a3.children(w).not(t3.currentTarget).show(), e2(f2).css(F, ""), i3.touchScroller && i3.touchScroller.reset(), 27 == t3.keyCode && a3.css(n3.initialPosition).css(n3.initialSize), i3.trigger(M), false;
          }
        }, destroy: function() {
          this._draggable && this._draggable.destroy(), this._draggable = this.owner = null;
        } }, de.prototype = { dragstart: function(t3) {
          var a3 = this.owner, r3 = a3.options.draggable, o3 = a3.element, s3 = o3.find(".k-window-actions"), l3 = i2.getOffset(a3.appendTo);
          this._preventDragging = a3.trigger(B) || !r3, this._preventDragging || a3.isMaximized() || (a3.initialWindowPosition = i2.getOffset(a3.wrapper, "position"), a3.initialPointerPosition = { left: a3.options.position.left, top: a3.options.position.top }, a3.startPosition = { left: t3.x.client - a3.initialWindowPosition.left, top: t3.y.client - a3.initialWindowPosition.top }, a3._updateBoundaries(), a3.containment || (s3.length > 0 ? a3.minLeft = d2(s3) + parseInt(s3.css("right"), 10) - d2(o3) : a3.minLeft = 20 - d2(o3), a3.minLeft -= l3.left, a3.minTop = -l3.top), e2(n2.overlay).appendTo(a3.wrapper).css({ opacity: 0 }), a3.wrapper.children(w).hide(), e2(f2).css(F, t3.currentTarget.css(F)));
        }, drag: function(t3) {
          var n3, a3, r3 = this.owner, o3 = r3.options.position, s3 = r3.options.draggable.axis;
          this._preventDragging || r3.isMaximized() || (s3 && "x" !== s3.toLowerCase() || (n3 = t3.x.client - r3.startPosition.left, r3.containment && !r3._isPinned && (n3 += r3.containment.scrollLeft()), o3.left = ae(n3, r3.minLeft, r3.maxLeft)), s3 && "y" !== s3.toLowerCase() || (a3 = t3.y.client - r3.startPosition.top, r3.containment && !r3._isPinned && (a3 += r3.containment.scrollTop()), o3.top = ae(a3, r3.minTop, r3.maxTop)), i2.support.transforms ? e2(r3.wrapper).css("transform", "translate(" + (o3.left - r3.initialPointerPosition.left) + "px, " + (o3.top - r3.initialPointerPosition.top) + "px)") : e2(r3.wrapper).css(o3));
        }, _finishDrag: function() {
          var t3 = this.owner;
          t3.wrapper.children(w).toggle(!t3.options.isMinimized).end().find(y).remove(), e2(f2).css(F, "");
        }, dragcancel: function(e3) {
          this._preventDragging || (this._finishDrag(), e3.currentTarget.closest(v2).css(this.owner.initialWindowPosition));
        }, dragend: function() {
          var t3 = this.owner;
          if (!this._preventDragging && !t3.isMaximized()) return e2(t3.wrapper).css(t3.options.position).css("transform", ""), this._finishDrag(), t3.trigger(L), false;
        }, destroy: function() {
          this._draggable && this._draggable.destroy(), this._draggable = this.owner = null;
        } }, i2.ui.plugin(se);
      }(window.kendo.jQuery);
      window.kendo = window.kendo || {};
      var o = kendo.Class, s = kendo.support, l = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "00ffff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000000", blanchedalmond: "ffebcd", blue: "0000ff", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "00ffff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgrey: "a9a9a9", darkgreen: "006400", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "ff00ff", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", grey: "808080", green: "008000", greenyellow: "adff2f", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3", lightgrey: "d3d3d3", lightgreen: "90ee90", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslategray: "778899", lightslategrey: "778899", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "00ff00", limegreen: "32cd32", linen: "faf0e6", magenta: "ff00ff", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370d8", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "d87093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", red: "ff0000", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", slategrey: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", wheat: "f5deb3", white: "ffffff", whitesmoke: "f5f5f5", yellow: "ffff00", yellowgreen: "9acd32" }, d = s.browser, u = function(e2) {
        var t2 = Object.keys(l);
        t2.push("transparent");
        var n2 = new RegExp("^(" + t2.join("|") + ")(\\W|$)", "i");
        return u = function(e3) {
          return n2.exec(e3);
        }, n2.exec(e2);
      }, c = o.extend({ init: function() {
      }, toHSV: function() {
        return this;
      }, toRGB: function() {
        return this;
      }, toHex: function(e2) {
        return this.toBytes().toHex(e2);
      }, toBytes: function() {
        return this;
      }, toCss: function(e2) {
        return "#" + this.toHex(e2);
      }, toCssRgba: function() {
        var e2 = this.toBytes();
        return "rgba(" + e2.r + ", " + e2.g + ", " + e2.b + ", " + parseFloat(Number(this.a).toFixed(3)) + ")";
      }, toDisplay: function() {
        return d.msie && d.version < 9 ? this.toCss() : this.toCssRgba();
      }, equals: function(e2) {
        return e2 === this || null != e2 && this.toCssRgba() === b(e2).toCssRgba();
      }, diff: function(e2) {
        if (null === e2) return NaN;
        var t2 = this.toBytes(), n2 = e2.toBytes();
        return Math.sqrt(Math.pow(0.3 * (t2.r - n2.r), 2) + Math.pow(0.59 * (t2.g - n2.g), 2) + Math.pow(0.11 * (t2.b - n2.b), 2));
      }, clone: function() {
        var e2 = this.toBytes();
        return e2 === this && (e2 = new h(e2.r, e2.g, e2.b, e2.a)), e2;
      } }), p = c.extend({ init: function(e2, t2, n2, i2) {
        c.fn.init.call(this), this.r = e2, this.g = t2, this.b = n2, this.a = i2;
      }, toHSV: function() {
        var e2, t2, n2 = this, i2 = n2.r, a2 = n2.g, r2 = n2.b, o2 = Math.min(i2, a2, r2), s2 = Math.max(i2, a2, r2), l2 = s2 - o2, d2 = s2;
        return 0 === l2 ? new m(0, 0, d2, this.a) : (0 !== s2 ? (t2 = l2 / s2, e2 = i2 === s2 ? (a2 - r2) / l2 : a2 === s2 ? 2 + (r2 - i2) / l2 : 4 + (i2 - a2) / l2, (e2 *= 60) < 0 && (e2 += 360)) : (t2 = 0, e2 = -1), new m(e2, t2, d2, this.a));
      }, toHSL: function() {
        var e2, t2, n2 = this, i2 = n2.r, a2 = n2.g, r2 = n2.b, o2 = Math.max(i2, a2, r2), s2 = Math.min(i2, a2, r2), l2 = (o2 + s2) / 2;
        if (o2 === s2) e2 = t2 = 0;
        else {
          var d2 = o2 - s2;
          switch (t2 = l2 > 0.5 ? d2 / (2 - o2 - s2) : d2 / (o2 + s2), o2) {
            case i2:
              e2 = (a2 - r2) / d2 + (a2 < r2 ? 6 : 0);
              break;
            case a2:
              e2 = (r2 - i2) / d2 + 2;
              break;
            case r2:
              e2 = (i2 - a2) / d2 + 4;
          }
        }
        return new g(60 * e2, 100 * t2, 100 * l2, this.a);
      }, toBytes: function() {
        return new h(255 * this.r, 255 * this.g, 255 * this.b, this.a);
      } }), h = p.extend({ init: function(e2, t2, n2, i2) {
        p.fn.init.call(this, Math.round(e2), Math.round(t2), Math.round(n2), i2);
      }, toRGB: function() {
        return new p(this.r / 255, this.g / 255, this.b / 255, this.a);
      }, toHSV: function() {
        return this.toRGB().toHSV();
      }, toHSL: function() {
        return this.toRGB().toHSL();
      }, toHex: function(e2) {
        var t2 = f(this.r, 2) + f(this.g, 2) + f(this.b, 2);
        return e2 && e2.alpha && (t2 += f(Math.round(255 * this.a), 2)), t2;
      }, toBytes: function() {
        return this;
      } });
      function f(e2, t2, n2) {
        void 0 === n2 && (n2 = "0");
        for (var i2 = e2.toString(16); t2 > i2.length; ) i2 = n2 + i2;
        return i2;
      }
      var m = c.extend({ init: function(e2, t2, n2, i2) {
        c.fn.init.call(this), this.h = e2, this.s = t2, this.v = n2, this.a = i2;
      }, toRGB: function() {
        var e2, t2, n2, i2 = this, a2 = i2.h, r2 = i2.s, o2 = i2.v;
        if (0 === r2) e2 = t2 = n2 = o2;
        else {
          a2 /= 60;
          var s2 = Math.floor(a2), l2 = a2 - s2, d2 = o2 * (1 - r2), u2 = o2 * (1 - r2 * l2), c2 = o2 * (1 - r2 * (1 - l2));
          switch (s2) {
            case 0:
              e2 = o2, t2 = c2, n2 = d2;
              break;
            case 1:
              e2 = u2, t2 = o2, n2 = d2;
              break;
            case 2:
              e2 = d2, t2 = o2, n2 = c2;
              break;
            case 3:
              e2 = d2, t2 = u2, n2 = o2;
              break;
            case 4:
              e2 = c2, t2 = d2, n2 = o2;
              break;
            default:
              e2 = o2, t2 = d2, n2 = u2;
          }
        }
        return new p(e2, t2, n2, this.a);
      }, toHSL: function() {
        return this.toRGB().toHSL();
      }, toBytes: function() {
        return this.toRGB().toBytes();
      } }), g = c.extend({ init: function(e2, t2, n2, i2) {
        c.fn.init.call(this), this.h = e2, this.s = t2, this.l = n2, this.a = i2;
      }, toRGB: function() {
        var e2, t2, n2, i2 = this.h / 360, a2 = this.s / 100, r2 = this.l / 100;
        if (0 === a2) e2 = t2 = n2 = r2;
        else {
          var o2 = r2 < 0.5 ? r2 * (1 + a2) : r2 + a2 - r2 * a2, s2 = 2 * r2 - o2;
          e2 = v(s2, o2, i2 + 1 / 3), t2 = v(s2, o2, i2), n2 = v(s2, o2, i2 - 1 / 3);
        }
        return new p(e2, t2, n2, this.a);
      }, toHSV: function() {
        return this.toRGB().toHSV();
      }, toBytes: function() {
        return this.toRGB().toBytes();
      } });
      function v(e2, t2, n2) {
        var i2 = n2;
        return i2 < 0 && (i2 += 1), i2 > 1 && (i2 -= 1), i2 < 1 / 6 ? e2 + 6 * (t2 - e2) * i2 : i2 < 0.5 ? t2 : i2 < 2 / 3 ? e2 + (t2 - e2) * (2 / 3 - i2) * 6 : e2;
      }
      function _(e2) {
        return parseFloat(parseFloat(parseInt(e2, 16) / 255).toFixed(3));
      }
      function b(e2, t2) {
        var n2, i2;
        if (null == e2 || "none" === e2) return null;
        if (e2 instanceof c) return e2;
        var a2 = e2.toLowerCase();
        if (n2 = u(a2)) return (a2 = "transparent" === n2[1] ? new p(1, 1, 1, 0) : b(l[n2[1]], t2)).match = [n2[1]], a2;
        if ((n2 = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\b/i.exec(a2)) ? i2 = new h(parseInt(n2[1], 16), parseInt(n2[2], 16), parseInt(n2[3], 16), 1) : (n2 = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\b/i.exec(a2)) ? i2 = new h(parseInt(n2[1] + n2[1], 16), parseInt(n2[2] + n2[2], 16), parseInt(n2[3] + n2[3], 16), 1) : (n2 = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\b/i.exec(a2)) ? i2 = new h(parseInt(n2[1] + n2[1], 16), parseInt(n2[2] + n2[2], 16), parseInt(n2[3] + n2[3], 16), _(n2[4] + n2[4])) : (n2 = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\b/i.exec(a2)) ? i2 = new h(parseInt(n2[1], 16), parseInt(n2[2], 16), parseInt(n2[3], 16), _(n2[4])) : (n2 = /^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)/.exec(a2)) ? i2 = new h(parseInt(n2[1], 10), parseInt(n2[2], 10), parseInt(n2[3], 10), 1) : (n2 = /^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)/.exec(a2)) ? i2 = new h(parseInt(n2[1], 10), parseInt(n2[2], 10), parseInt(n2[3], 10), parseFloat(n2[4])) : (n2 = /^rgb\(\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*\)/.exec(a2)) ? i2 = new p(parseFloat(n2[1]) / 100, parseFloat(n2[2]) / 100, parseFloat(n2[3]) / 100, 1) : (n2 = /^rgba\(\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9.]+)\s*\)/.exec(a2)) && (i2 = new p(parseFloat(n2[1]) / 100, parseFloat(n2[2]) / 100, parseFloat(n2[3]) / 100, parseFloat(n2[4]))), i2) i2.match = n2;
        else if (!t2) throw new Error("Cannot parse color: " + a2);
        return i2;
      }
      var k = o.extend({ init: function(e2) {
        var t2 = this;
        if (1 === arguments.length) for (var n2 = k.formats, i2 = this.resolveColor(e2), a2 = 0; a2 < n2.length; a2++) {
          var r2 = n2[a2].re, o2 = n2[a2].process, s2 = r2.exec(i2);
          if (s2) {
            var l2 = o2(s2);
            t2.r = l2[0], t2.g = l2[1], t2.b = l2[2];
          }
        }
        else this.r = arguments[0], this.g = arguments[1], this.b = arguments[2];
        this.r = this.normalizeByte(this.r), this.g = this.normalizeByte(this.g), this.b = this.normalizeByte(this.b);
      }, toHex: function() {
        var e2 = this.padDigit, t2 = this.r.toString(16), n2 = this.g.toString(16), i2 = this.b.toString(16);
        return "#" + e2(t2) + e2(n2) + e2(i2);
      }, resolveColor: function(e2) {
        var t2 = e2 || "black";
        return "#" === t2.charAt(0) && (t2 = t2.substr(1, 6)), t2 = (t2 = t2.replace(/ /g, "")).toLowerCase(), t2 = k.namedColors[t2] || t2;
      }, normalizeByte: function(e2) {
        return e2 < 0 || isNaN(e2) ? 0 : e2 > 255 ? 255 : e2;
      }, padDigit: function(e2) {
        return 1 === e2.length ? "0" + e2 : e2;
      }, brightness: function(e2) {
        var t2 = Math.round;
        return this.r = t2(this.normalizeByte(this.r * e2)), this.g = t2(this.normalizeByte(this.g * e2)), this.b = t2(this.normalizeByte(this.b * e2)), this;
      }, percBrightness: function() {
        return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);
      }, isDark: function() {
        return this.percBrightness() < 180;
      } });
      k.fromBytes = function(e2, t2, n2, i2) {
        return new h(e2, t2, n2, null != i2 ? i2 : 1);
      }, k.fromRGB = function(e2, t2, n2, i2) {
        return new p(e2, t2, n2, null != i2 ? i2 : 1);
      }, k.fromHSV = function(e2, t2, n2, i2) {
        return new m(e2, t2, n2, null != i2 ? i2 : 1);
      }, k.fromHSL = function(e2, t2, n2, i2) {
        return new g(e2, t2, n2, null != i2 ? i2 : 1);
      }, k.formats = [{ re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/, process: function(e2) {
        return [parseInt(e2[1], 10), parseInt(e2[2], 10), parseInt(e2[3], 10)];
      } }, { re: /^(\w{2})(\w{2})(\w{2})$/, process: function(e2) {
        return [parseInt(e2[1], 16), parseInt(e2[2], 16), parseInt(e2[3], 16)];
      } }, { re: /^(\w{1})(\w{1})(\w{1})$/, process: function(e2) {
        return [parseInt(e2[1] + e2[1], 16), parseInt(e2[2] + e2[2], 16), parseInt(e2[3] + e2[3], 16)];
      } }], k.namedColors = l, kendo.deepExtend(kendo, { parseColor: b, namedColors: l, Color: k });
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.ui.Draggable, r2 = n2._outerWidth, o2 = n2._outerHeight, s2 = e2.extend, l2 = n2.format, d2 = n2.parseFloat, u2 = Array.isArray, c2 = Math, p2 = n2.support, h2 = p2.pointers, f2 = p2.msPointers, m2 = "change", g2 = "slide", v2 = ".slider", _2 = "touchstart" + v2 + " mousedown" + v2, b2 = h2 ? "pointerdown" + v2 : f2 ? "MSPointerDown" + v2 : _2, k2 = "touchend" + v2 + " mouseup" + v2, w = h2 ? "pointerup" : f2 ? "MSPointerUp" + v2 : k2, y = "moveSelection", x = "keydown" + v2, C = "click" + v2, T = "mouseover" + v2, S = "focus" + v2, I = "blur" + v2, D = ".k-draghandle", E = ".k-slider-track", A = ".k-tick", F = "k-disabled", z = "disabled", P = "tabindex", H = n2.getTouches, N = "aria-valuetext", R = "aria-valuenow", O = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          if (i2.fn.init.call(a3, e3, t3), t3 = a3.options, a3._isHorizontal = "horizontal" == t3.orientation, a3._isRtl = a3._isHorizontal && n2.support.isRtl(e3), a3._position = a3._isHorizontal ? "left" : "bottom", a3._sizeFn = a3._isHorizontal ? "width" : "height", a3._outerSize = a3._isHorizontal ? r2 : o2, t3.tooltip.format = t3.tooltip.enabled && t3.tooltip.format || "{0}", t3.smallStep <= 0) throw new Error("Kendo UI Slider smallStep must be a positive number.");
          a3._createHtml(), a3._trackDiv = a3.wrapper.find(E), a3._maxSelection = a3._trackDiv[a3._sizeFn](), a3._sliderItemsInit(), a3._reset(), a3._tabindex(a3.wrapper.find(D)), a3[t3.enabled ? "enable" : "disable"]();
          var s3 = n2.support.isRtl(a3.wrapper) ? -1 : 1;
          a3._keyMap = { 37: B(-1 * s3 * t3.smallStep), 40: B(-t3.smallStep), 39: B(1 * s3 * t3.smallStep), 38: B(+t3.smallStep), 35: L(t3.max), 36: L(t3.min), 33: B(+t3.largeStep), 34: B(-t3.largeStep) }, a3._ariaLabel(a3.wrapper.find(D)), n2.notify(a3);
        }, events: [m2, g2], options: { enabled: true, min: 0, max: 10, smallStep: 1, largeStep: 5, orientation: "horizontal", tickPlacement: "both", tooltip: { enabled: true, format: "{0}" } }, _distance: function() {
          return U(this.options.max - this.options.min);
        }, _resize: function() {
          this.wrapper.find(".k-slider-items").remove(), this._maxSelection = this._trackDiv[this._sizeFn](), this._sliderItemsInit(), this._refresh(), this.options.enabled && this.enable(true);
        }, _sliderItemsInit: function() {
          var t3 = this, n3 = t3.options, i3 = (t3._maxSelection - 2) / ((n3.max - n3.min) / n3.smallStep), a3 = t3._calculateItemsWidth(c2.floor(q(t3._distance()) / q(n3.smallStep)));
          "none" != n3.tickPlacement && i3 >= 2 && (e2(this.element).parent().find(".k-slider-items").remove(), t3._trackDiv.before(function(e3, t4) {
            var n4, i4 = "<ul class='k-reset k-slider-items' role='presentation'>", a4 = c2.floor(U(t4 / e3.smallStep)) + 1;
            for (n4 = 0; n4 < a4; n4++) i4 += "<li class='k-tick'></li>";
            return i4 += "</ul>";
          }(n3, t3._distance())), t3._setItemsTitle()), t3._calculateSteps(a3), "none" != n3.tickPlacement && i3 >= 2 && n3.largeStep >= n3.smallStep && (t3._setItemsLargeTick(), t3.wrapper.find(A).first().addClass("k-first"), t3.wrapper.find(A).last().addClass("k-last"));
        }, getSize: function() {
          return n2.dimensions(this.wrapper);
        }, _setItemsTitle: function() {
          for (var t3 = this.options, n3 = this.wrapper.find(A), i3 = t3.min, a3 = n3.length, r3 = 0; r3 <= a3; r3 += 1) e2(n3[r3]).attr("title", l2(t3.tooltip.format, U(i3))), i3 += t3.smallStep;
        }, _setItemsLargeTick: function() {
          var t3, n3 = this, i3 = n3.options, a3 = n3.wrapper.find(A), r3 = 0;
          if (q(i3.largeStep) % q(i3.smallStep) == 0 || n3._distance() / i3.largeStep >= 3) for (n3._isHorizontal || n3._isRtl || (a3 = e2.makeArray(a3).reverse()), r3 = 0; r3 < a3.length; r3++) {
            t3 = e2(a3[r3]);
            var o3 = U(q(n3._values[r3] - this.options.min));
            o3 % q(i3.smallStep) == 0 && o3 % q(i3.largeStep) == 0 && (t3.addClass("k-tick-large").html("<span class='k-label'>" + t3.attr("title") + "</span>"), 0 !== r3 && r3 !== a3.length - 1 && t3.css("line-height", t3[n3._sizeFn]() + "px"));
          }
        }, _calculateItemsWidth: function(e3) {
          var t3, n3, i3, a3 = this, r3 = a3.options, o3 = parseFloat(a3._trackDiv.css(a3._sizeFn)) + 1, s3 = a3._distance(), l3 = q(s3) / q(r3.smallStep), d3 = o3 / q(s3);
          for (l3 - e3 > 0 && (o3 -= q(s3) % q(r3.smallStep) * d3), t3 = o3 / e3, n3 = [], i3 = 0; i3 < e3 - 1; i3++) n3[i3] = t3;
          return n3[e3 - 1] = n3[e3] = t3 / 2, a3._roundWidths(n3);
        }, _roundWidths: function(e3) {
          var t3, n3 = 0, i3 = e3.length;
          for (t3 = 0; t3 < i3; t3++) n3 += e3[t3] - c2.floor(e3[t3]), e3[t3] = c2.floor(e3[t3]);
          return n3 = c2.round(n3), this._addAdditionalSize(n3, e3);
        }, _addAdditionalSize: function(e3, t3) {
          if (0 === e3) return t3;
          var n3, i3 = parseFloat(t3.length - 1) / parseFloat(1 == e3 ? e3 : e3 - 1);
          for (n3 = 0; n3 < e3; n3++) t3[parseInt(c2.round(i3 * n3), 10)] += 1;
          return t3;
        }, _calculateSteps: function(e3) {
          var t3, n3 = this, i3 = n3.options, a3 = i3.min, r3 = 0, o3 = n3._distance(), s3 = c2.ceil(q(o3) / q(i3.smallStep)), l3 = 1;
          if (s3 += q(o3) / q(i3.smallStep) % 1 == 0 ? 1 : 0, e3.splice(0, 0, 2 * e3[s3 - 2]), e3.splice(s3 - 1, 1, 2 * e3.pop()), n3._pixelSteps = [r3], n3._values = [a3], 0 !== s3) {
            for (; l3 < s3; ) r3 += (e3[l3 - 1] + e3[l3]) / 2, n3._pixelSteps[l3] = r3, a3 += i3.smallStep, n3._values[l3] = U(a3), l3++;
            t3 = q(o3) % q(i3.smallStep) == 0 ? s3 - 1 : s3, n3._pixelSteps[t3] = n3._maxSelection, n3._values[t3] = i3.max, n3._isRtl && (n3._pixelSteps.reverse(), n3._values.reverse());
          }
        }, _getValueFromPosition: function(e3, t3) {
          var n3, i3 = this, a3 = i3.options, r3 = c2.max(a3.smallStep * (i3._maxSelection / i3._distance()), 0), o3 = 0, s3 = r3 / 2;
          if (i3._isHorizontal ? (o3 = e3 - t3.startPoint, i3._isRtl && (o3 = i3._maxSelection - o3)) : o3 = t3.startPoint - e3, i3._maxSelection - (parseInt(i3._maxSelection % r3, 10) - 3) / 2 < o3) return a3.max;
          for (n3 = 0; n3 < i3._pixelSteps.length; n3++) if (c2.abs(i3._pixelSteps[n3] - o3) - 1 <= s3) return U(i3._values[n3]);
        }, _getFormattedValue: function(e3, t3) {
          var i3, a3, r3, o3 = "", s3 = this.options.tooltip;
          return u2(e3) ? (a3 = e3[0], r3 = e3[1]) : t3 && t3.type && (a3 = t3.selectionStart, r3 = t3.selectionEnd), t3 && (i3 = t3.tooltipTemplate), !i3 && s3.template && (i3 = n2.template(s3.template)), u2(e3) || t3 && t3.type ? o3 = i3 ? i3({ selectionStart: a3, selectionEnd: r3 }) : (a3 = l2(s3.format, a3)) + " - " + (r3 = l2(s3.format, r3)) : (t3 && (t3.val = e3), o3 = i3 ? i3({ value: e3 }) : l2(s3.format, e3)), o3;
        }, _getDraggableArea: function() {
          var e3 = this, t3 = n2.getOffset(e3._trackDiv);
          return { startPoint: e3._isHorizontal ? t3.left : t3.top + e3._maxSelection, endPoint: e3._isHorizontal ? t3.left + e3._maxSelection : t3.top };
        }, _createHtml: function() {
          var e3 = this, n3 = e3.element, i3 = e3.options, a3 = n3.find("input");
          2 == a3.length ? (a3.eq(0).prop("value", V(i3.selectionStart)), a3.eq(1).prop("value", V(i3.selectionEnd))) : n3.prop("value", V(i3.value)), e3.wrapper = n3.wrap(function(e4, t3, n4) {
            var i4 = n4 ? " k-slider-horizontal" : " k-slider-vertical", a4 = e4.style ? e4.style : t3.attr("style"), r3 = t3.attr("class") ? " " + t3.attr("class") : "", o3 = "";
            "bottomRight" == e4.tickPlacement ? o3 = " k-slider-bottomright" : "topLeft" == e4.tickPlacement && (o3 = " k-slider-topleft");
            return "<div class='k-widget k-slider" + i4 + r3 + "'" + (a4 = a4 ? " style='" + a4 + "'" : "") + "><div class='k-slider-track-wrap" + o3 + "'></div></div>";
          }(i3, n3, e3._isHorizontal)).hide().parents(".k-slider"), i3.showButtons && e3.wrapper.find(".k-slider-track-wrap").after(M(i3, "increase", e3._isHorizontal, e3._isRtl)).before(M(i3, "decrease", e3._isHorizontal, e3._isRtl)), n3.before(function(e4, n4, i4) {
            var a4, r3, o3, s3 = n4.is("input") ? 1 : 2, l3 = 2 == s3 ? e4.leftDragHandleTitle : e4.dragHandleTitle, d3 = e4.value, u3 = e4.selectionStart, c3 = e4.selectionEnd;
            1 === s3 ? null !== (a4 = n4.val()) && a4 !== t2 && "null" !== a4 && (null !== d3 && d3 !== t2 || (d3 = a4)) : (r3 = n4.find("input").eq(0).val(), o3 = n4.find("input").eq(1).val(), null !== r3 && r3 !== t2 && "null" !== r3 && (null !== u3 && u3 !== t2 || (u3 = r3)), null !== o3 && o3 !== t2 && "null" !== o3 && (null !== c3 && c3 !== t2 || (c3 = o3)));
            return "<div class='k-slider-track'><div class='k-slider-selection'><!-- --></div><span tabindex='0' class='k-draghandle' title='" + l3 + "' role='slider' " + (false === i4 ? "aria-orientation='vertical' " : "") + "aria-valuemin='" + e4.min + "' aria-valuemax='" + e4.max + "' aria-valuenow='" + (s3 > 1 ? u3 || e4.min : d3 || e4.min) + "'></span>" + (s3 > 1 ? "<span tabindex='0' class='k-draghandle' title='" + e4.rightDragHandleTitle + "'role='slider' " + (false === i4 ? "aria-orientation='vertical' " : "") + "aria-valuemin='" + e4.min + "' aria-valuemax='" + e4.max + "' aria-valuenow='" + (c3 || e4.max) + "'></span>" : "") + "</div>";
          }(i3, n3, e3._isHorizontal));
        }, _focus: function(t3) {
          var n3 = this, i3 = t3.target, a3 = n3.value(), r3 = n3._drag;
          r3 || (i3 == n3.wrapper.find(D).eq(0)[0] ? (r3 = n3._firstHandleDrag, n3._activeHandle = 0) : (r3 = n3._lastHandleDrag, n3._activeHandle = 1), a3 = a3[n3._activeHandle]), e2(i3).addClass("k-focus k-selected"), r3 && (n3._activeHandleDrag = r3, r3.selectionStart = n3.options.selectionStart, r3.selectionEnd = n3.options.selectionEnd, r3._updateTooltip(a3));
        }, _focusWithMouse: function(t3) {
          t3 = e2(t3);
          var n3 = this, i3 = t3.is(D) ? t3.index() : 0;
          window.setTimeout(function() {
            n3.wrapper.find(D)[2 == i3 ? 1 : 0].focus();
          }, 1), n3._setTooltipTimeout();
        }, _blur: function(t3) {
          var n3 = this, i3 = n3._activeHandleDrag;
          e2(t3.target).removeClass("k-focus k-selected"), i3 && (i3._removeTooltip(), delete n3._activeHandleDrag, delete n3._activeHandle);
        }, _setTooltipTimeout: function() {
          var e3 = this;
          e3._tooltipTimeout = window.setTimeout(function() {
            var t3 = e3._drag || e3._activeHandleDrag;
            t3 && t3._removeTooltip();
          }, 300);
        }, _clearTooltipTimeout: function() {
          window.clearTimeout(this._tooltipTimeout);
          var e3 = this._drag || this._activeHandleDrag;
          e3 && e3.tooltipDiv && e3.tooltipDiv.stop(true, false).css("opacity", 1);
        }, _reset: function() {
          var t3 = this, n3 = t3.element, i3 = n3.attr("form"), a3 = i3 ? e2("#" + i3) : n3.closest("form");
          a3[0] && (t3._form = a3.on("reset", t3._formResetHandler.bind(t3)));
        }, min: function(e3) {
          if (!e3) return this.options.min;
          this.setOptions({ min: e3 });
        }, max: function(e3) {
          if (!e3) return this.options.max;
          this.setOptions({ max: e3 });
        }, setOptions: function(e3) {
          i2.fn.setOptions.call(this, e3), this._sliderItemsInit(), this._refresh();
        }, destroy: function() {
          this._form && this._form.off("reset", this._formResetHandler), i2.fn.destroy.call(this);
        } });
        function M(e3, t3, n3) {
          var i3 = "";
          return i3 = n3 ? "increase" === t3 ? "k-i-arrow-e" : "k-i-arrow-w" : "increase" == t3 ? "k-i-arrow-n" : "k-i-arrow-s", "<a role='button' class='k-button k-button-md k-rounded-full k-button-solid k-button-solid-base k-icon-button k-button-" + t3 + "' title='" + e3[t3 + "ButtonTitle"] + "' aria-label='" + e3[t3 + "ButtonTitle"] + "'><span class='k-button-icon k-icon " + i3 + "'></span></a>";
        }
        function B(e3) {
          return function(t3) {
            return t3 + e3;
          };
        }
        function L(e3) {
          return function() {
            return e3;
          };
        }
        function V(e3) {
          return (e3 + "").replace(".", n2.cultures.current.numberFormat["."]);
        }
        function U(e3) {
          var t3, n3;
          return t3 = function(e4) {
            var t4 = e4.toString(), n4 = 0;
            return (t4 = t4.split("."))[1] && (n4 = t4[1].length), n4 > 10 ? 10 : n4;
          }(e3 = parseFloat(e3, 10)), n3 = c2.pow(10, t3 || 0), c2.round(e3 * n3) / n3;
        }
        function W(e3, n3) {
          var i3 = d2(e3.getAttribute(n3));
          return null === i3 && (i3 = t2), i3;
        }
        function j(e3) {
          return void 0 !== e3;
        }
        function q(e3) {
          return 1e4 * e3;
        }
        var G = O.extend({ init: function(n3, i3) {
          var a3, r3 = this;
          n3.type = "text", i3 = s2({}, { value: W(n3, "value"), min: W(n3, "min"), max: W(n3, "max"), smallStep: W(n3, "step") }, i3), n3 = e2(n3), i3 && i3.enabled === t2 && (i3.enabled = !n3.is("[disabled]")), O.fn.init.call(r3, n3, i3), j((i3 = r3.options).value) && null !== i3.value || (i3.value = i3.min, n3.prop("value", V(i3.min))), i3.value = c2.max(c2.min(i3.value, i3.max), i3.min), a3 = r3.wrapper.find(D), r3._selection = new G.Selection(a3, r3, i3), r3._drag = new G.Drag(a3, "", r3, i3), r3._refreshAriaAttr(i3.value);
        }, options: { name: "Slider", showButtons: true, increaseButtonTitle: "Increase", decreaseButtonTitle: "Decrease", dragHandleTitle: "drag", tooltip: { format: "{0:#,#.##}" }, value: null }, enable: function(t3) {
          var i3, a3, r3 = this, o3 = r3.options;
          if (r3.disable(), false !== t3) {
            if (r3.wrapper.removeClass(F), r3.wrapper.find("input").prop(z, false), i3 = function(t4) {
              var n3 = H(t4)[0];
              if (n3) {
                var i4 = r3._isHorizontal ? n3.location.pageX : n3.location.pageY, a4 = r3._getDraggableArea(), o4 = e2(t4.target);
                o4.hasClass("k-draghandle") ? o4.addClass("k-focus k-selected") : (r3._update(r3._getValueFromPosition(i4, a4)), r3._focusWithMouse(t4.target), r3._drag.dragstart(t4), t4.preventDefault());
              }
            }, r3.wrapper.find(".k-tick, .k-slider-track").on(b2, i3).end().on(b2, function() {
              e2(document.documentElement).one("selectstart", n2.preventDefault);
            }).on(w, function() {
              r3._drag._end();
            }), r3.wrapper.find(D).attr(P, 0).on(k2, function() {
              r3._setTooltipTimeout();
            }).on(C, function(e3) {
              r3._focusWithMouse(e3.target), e3.preventDefault();
            }).on(S, r3._focus.bind(r3)).on(I, r3._blur.bind(r3)), a3 = function(e3) {
              var t4 = r3._nextValueByIndex(r3._valueIndex + 1 * e3);
              r3._setValueInRange(t4), r3._drag._updateTooltip(t4);
            }, o3.showButtons) {
              var s3 = function(e3, t4) {
                this._clearTooltipTimeout(), (1 === e3.which || p2.touch && 0 === e3.which) && (a3(t4), this.timeout = setTimeout(function() {
                  this.timer = setInterval(function() {
                    a3(t4);
                  }, 60);
                }.bind(this), 200));
              }.bind(r3);
              r3.wrapper.find(".k-button").on(k2, function(e3) {
                this._clearTimer(), r3._focusWithMouse(e3.target);
              }.bind(r3)).on(T, function(t4) {
                e2(t4.currentTarget).addClass("k-hover");
              }).on("mouseout" + v2, function(t4) {
                e2(t4.currentTarget).removeClass("k-hover"), this._clearTimer();
              }.bind(r3)).on(_2, function(t4) {
                var n3 = e2(t4.target).closest(".k-button").is(".k-button-increase") ? 1 : -1;
                s3(t4, n3);
              }).on("click", n2.preventDefault);
            }
            r3.wrapper.find(D).off(x, false).on(x, this._keydown.bind(r3)), o3.enabled = true;
          }
        }, disable: function() {
          var t3 = this;
          t3.wrapper.addClass(F), e2(t3.element).prop(z, z), t3.wrapper.find(".k-button").off(_2).on(_2, function(t4) {
            t4.preventDefault(), e2(this).addClass("k-active");
          }).off(k2).on(k2, function(t4) {
            t4.preventDefault(), e2(this).removeClass("k-active");
          }).off("mouseleave" + v2).on("mouseleave" + v2, n2.preventDefault).off(T).on(T, n2.preventDefault), t3.wrapper.find(".k-tick, .k-slider-track").off(b2).off(w), t3.wrapper.find(D).attr(P, -1).off(k2).off(x).off(C).off(S).off(I), t3.options.enabled = false;
        }, _update: function(e3) {
          var t3 = this, n3 = t3.value() != e3;
          t3.value(e3), n3 && t3.trigger(m2, { value: t3.options.value });
        }, value: function(e3) {
          var t3 = this, n3 = t3.options;
          if (e3 = U(e3), isNaN(e3)) return n3.value;
          e3 >= n3.min && e3 <= n3.max && n3.value != e3 && (t3.element.prop("value", V(e3)), n3.value = e3, t3._refreshAriaAttr(e3), t3._refresh());
        }, _refresh: function() {
          this.trigger(y, { value: this.options.value });
        }, _refreshAriaAttr: function(e3) {
          var t3, n3 = this._drag;
          t3 = n3 && n3._tooltipDiv ? n3._tooltipDiv.text() : this._getFormattedValue(e3, null), this.wrapper.find(D).attr(R, e3).attr(N, t3);
        }, _clearTimer: function() {
          clearTimeout(this.timeout), clearInterval(this.timer);
        }, _keydown: function(e3) {
          var t3 = this;
          e3.keyCode in t3._keyMap && (t3._clearTooltipTimeout(), t3._setValueInRange(t3._keyMap[e3.keyCode](t3.options.value)), t3._drag._updateTooltip(t3.value()), e3.preventDefault());
        }, _setValueInRange: function(e3) {
          var t3 = this, n3 = t3.options;
          e3 = U(e3), isNaN(e3) ? t3._update(n3.min) : (e3 = c2.max(c2.min(e3, n3.max), n3.min), t3._update(e3));
        }, _nextValueByIndex: function(e3) {
          var t3 = this._values.length;
          return this._isRtl && (e3 = t3 - 1 - e3), this._values[c2.max(0, c2.min(e3, t3 - 1))];
        }, _formResetHandler: function() {
          var e3 = this, t3 = e3.options.min;
          setTimeout(function() {
            var n3 = e3.element[0].value;
            e3.value("" === n3 || isNaN(n3) ? t3 : n3);
          });
        }, destroy: function() {
          var e3 = this;
          O.fn.destroy.call(e3), e3.wrapper.off(v2).find(".k-button").off(v2).end().find(D).off(v2).end().find(".k-tick, .k-slider-track").off(v2).end(), e3._drag.draggable.destroy(), e3._drag._removeTooltip(true);
        } });
        G.Selection = function(e3, t3, n3) {
          function i3(i4) {
            var a3 = i4 - n3.min, r3 = t3._valueIndex = c2.ceil(U(a3 / n3.smallStep)), o3 = parseInt(t3._pixelSteps[r3], 10), s3 = t3._trackDiv.find(".k-slider-selection"), l3 = t3._isRtl ? 2 : 0;
            s3[t3._sizeFn](t3._isRtl ? t3._maxSelection - o3 : o3), e3.css(t3._position, o3 - l3);
          }
          i3(n3.value), t3.bind([g2, y], function(e4) {
            i3(parseFloat(e4.value, 10));
          }), t3.bind(m2, function(e4) {
            i3(parseFloat(e4.sender.value(), 10));
          });
        }, G.Drag = function(e3, t3, n3, i3) {
          var r3 = this;
          r3.owner = n3, r3.options = i3, r3.element = e3, r3.type = t3, r3.draggable = new a2(e3, { distance: 0, dragstart: r3._dragstart.bind(r3), drag: r3.drag.bind(r3), dragend: r3.dragend.bind(r3), dragcancel: r3.dragcancel.bind(r3) }), e3.click(false), e3.on("dragstart", function(e4) {
            e4.preventDefault();
          });
        }, G.Drag.prototype = { dragstart: function(e3) {
          this.owner._activeDragHandle = this, this.draggable.userEvents.cancel(), this._dragstart(e3), this.dragend();
        }, _dragstart: function(t3) {
          var n3 = this, i3 = n3.owner, a3 = n3.options;
          a3.enabled ? (this.owner._activeDragHandle = this, i3.element.off(T), i3.wrapper.find(".k-focus").removeClass("k-focus k-selected"), n3.element.addClass("k-focus k-selected"), e2(document.documentElement).css("cursor", "pointer"), n3.draggableArea = i3._getDraggableArea(), n3.step = c2.max(a3.smallStep * (i3._maxSelection / i3._distance()), 0), n3.type ? (n3.selectionStart = a3.selectionStart, n3.selectionEnd = a3.selectionEnd, i3._setZIndex(n3.type)) : n3.oldVal = n3.val = a3.value, n3._removeTooltip(true), n3._createTooltip()) : t3.preventDefault();
        }, _createTooltip: function() {
          var t3, i3 = this, a3 = i3.owner, r3 = i3.options.tooltip, o3 = "", s3 = e2(window);
          r3.enabled && (r3.template && (i3.tooltipTemplate = n2.template(r3.template)), e2(".k-slider-tooltip").remove(), i3.tooltipDiv = e2("<div class='k-tooltip k-slider-tooltip'><!-- --></div>").appendTo(document.body), o3 = a3._getFormattedValue(i3.val || a3.value(), i3), i3.type || (t3 = "k-callout-" + (a3._isHorizontal ? "s" : "e"), i3.tooltipInnerDiv = "<div class='k-callout " + t3 + "'><!-- --></div>", o3 += i3.tooltipInnerDiv), i3.tooltipDiv.html(o3), i3._scrollOffset = { top: s3.scrollTop(), left: n2.scrollLeft(s3) }, i3.moveTooltip());
        }, drag: function(e3) {
          var t3, n3 = this, i3 = n3.owner, a3 = e3.x.location, r3 = e3.y.location, o3 = n3.draggableArea.startPoint, s3 = n3.draggableArea.endPoint;
          e3.preventDefault(), i3._isHorizontal ? i3._isRtl ? n3.val = n3.constrainValue(a3, o3, s3, a3 < s3) : n3.val = n3.constrainValue(a3, o3, s3, a3 >= s3) : n3.val = n3.constrainValue(r3, s3, o3, r3 <= s3), n3.oldVal != n3.val && (n3.oldVal = n3.val, n3.type ? ("firstHandle" == n3.type ? n3.val < n3.selectionEnd ? n3.selectionStart = n3.val : n3.selectionStart = n3.selectionEnd = n3.val : n3.val > n3.selectionStart ? n3.selectionEnd = n3.val : n3.selectionStart = n3.selectionEnd = n3.val, t3 = { values: [n3.selectionStart, n3.selectionEnd], value: [n3.selectionStart, n3.selectionEnd] }) : t3 = { value: n3.val }, i3.trigger(g2, t3)), n3._updateTooltip(n3.val);
        }, _updateTooltip: function(e3) {
          var t3 = this, n3 = "";
          t3.options.tooltip.enabled && (t3.tooltipDiv || t3._createTooltip(), n3 = t3.owner._getFormattedValue(U(e3), t3), t3.type || (n3 += t3.tooltipInnerDiv), t3.tooltipDiv.html(n3), t3.moveTooltip());
        }, dragcancel: function() {
          return this.owner._refresh(), e2(document.documentElement).css("cursor", ""), this._end();
        }, dragend: function() {
          var t3 = this, n3 = t3.owner;
          return e2(document.documentElement).css("cursor", ""), t3.type ? n3._update(t3.selectionStart, t3.selectionEnd) : (n3._update(t3.val), t3.draggable.userEvents._disposeAll()), t3.draggable.userEvents.cancel(), t3._end();
        }, _end: function() {
          var e3 = this.owner;
          return e3._focusWithMouse(this.element), e3.element.on(T), false;
        }, _removeTooltip: function(t3) {
          var n3 = this, i3 = n3.owner;
          n3.tooltipDiv && i3.options.tooltip.enabled && i3.options.enabled && (t3 ? (n3.tooltipDiv.remove(), n3.tooltipDiv = null) : n3.tooltipDiv.fadeOut("slow", function() {
            e2(this).remove(), n3.tooltipDiv = null;
          }));
        }, moveTooltip: function() {
          var t3, i3, a3, s3, l3 = this, d3 = l3.owner, u3 = 0, c3 = 0, p3 = l3.element, h3 = n2.getOffset(p3), f3 = e2(window), m3 = l3.tooltipDiv.find(".k-callout"), g3 = r2(l3.tooltipDiv), v3 = o2(l3.tooltipDiv);
          l3.type ? (t3 = d3.wrapper.find(D), h3 = n2.getOffset(t3.eq(0)), i3 = n2.getOffset(t3.eq(1)), d3._isHorizontal ? (u3 = i3.top, c3 = h3.left + (i3.left - h3.left) / 2) : (u3 = h3.top + (i3.top - h3.top) / 2, c3 = i3.left), s3 = r2(t3.eq(0)) + 16) : (u3 = h3.top, c3 = h3.left, s3 = r2(p3) + 16), d3._isHorizontal ? (c3 -= parseInt((g3 - d3._outerSize(p3)) / 2, 10), u3 -= v3 + 8 + (m3.length ? m3.height() : 0)) : (u3 -= parseInt((v3 - d3._outerSize(p3)) / 2, 10), c3 -= g3 + 8 + (m3.length ? m3.width() : 0)), d3._isHorizontal ? (u3 += a3 = l3._flip(u3, v3, s3, o2(f3) + l3._scrollOffset.top), c3 += l3._fit(c3, g3, r2(f3) + l3._scrollOffset.left)) : (a3 = l3._flip(c3, g3, s3, r2(f3) + l3._scrollOffset.left), u3 += l3._fit(u3, v3, o2(f3) + l3._scrollOffset.top), c3 += a3), a3 > 0 && m3 && (m3.removeClass(), m3.addClass("k-callout k-callout-" + (d3._isHorizontal ? "n" : "w"))), l3.tooltipDiv.css({ top: u3, left: c3 });
        }, _fit: function(e3, t3, n3) {
          var i3 = 0;
          return e3 + t3 > n3 && (i3 = n3 - (e3 + t3)), e3 < 0 && (i3 = -e3), i3;
        }, _flip: function(e3, t3, n3, i3) {
          var a3 = 0;
          return e3 + t3 > i3 && (a3 += -(n3 + t3)), e3 + a3 < 0 && (a3 += n3 + t3), a3;
        }, constrainValue: function(e3, t3, n3, i3) {
          var a3 = this;
          return t3 < e3 && e3 < n3 ? a3.owner._getValueFromPosition(e3, a3.draggableArea) : i3 ? a3.options.max : a3.options.min;
        } }, n2.ui.plugin(G);
        var K = O.extend({ init: function(n3, i3) {
          var a3 = this, r3 = e2(n3).find("input"), o3 = r3.eq(0)[0], l3 = r3.eq(1)[0];
          o3.type = "text", l3.type = "text", i3 && i3.showButtons && (window.console && window.console.warn("showbuttons option is not supported for the range slider, ignoring"), i3.showButtons = false), (i3 = s2({}, { selectionStart: W(o3, "value"), min: W(o3, "min"), max: W(o3, "max"), smallStep: W(o3, "step") }, { selectionEnd: W(l3, "value"), min: W(l3, "min"), max: W(l3, "max"), smallStep: W(l3, "step") }, i3)) && i3.enabled === t2 && (i3.enabled = !r3.is("[disabled]")), O.fn.init.call(a3, n3, i3), j((i3 = a3.options).selectionStart) && null !== i3.selectionStart || (i3.selectionStart = i3.min, r3.eq(0).prop("value", V(i3.min))), j(i3.selectionEnd) && null !== i3.selectionEnd || (i3.selectionEnd = i3.max, r3.eq(1).prop("value", V(i3.max)));
          var d3 = a3.wrapper.find(D);
          this._selection = new K.Selection(d3, a3, i3), a3._firstHandleDrag = new G.Drag(d3.eq(0), "firstHandle", a3, i3), a3._lastHandleDrag = new G.Drag(d3.eq(1), "lastHandle", a3, i3), a3._refreshAriaAttr(i3.selectionStart, i3.selectionEnd);
        }, options: { name: "RangeSlider", leftDragHandleTitle: "drag", rightDragHandleTitle: "drag", tooltip: { format: "{0:#,#.##}" }, selectionStart: null, selectionEnd: null }, enable: function(t3) {
          var i3, a3 = this, r3 = a3.options;
          a3.disable(), false !== t3 && (a3.wrapper.removeClass(F), a3.wrapper.find("input").prop(z, false), i3 = function(t4) {
            var n3 = H(t4)[0];
            if (n3) {
              var i4, o3, s3, l3 = a3._isHorizontal ? n3.location.pageX : n3.location.pageY, d3 = a3._getDraggableArea(), u3 = a3._getValueFromPosition(l3, d3), c3 = e2(t4.target);
              if (c3.hasClass("k-draghandle")) return a3.wrapper.find(".k-focus").removeClass("k-focus k-selected"), void c3.addClass("k-focus k-selected");
              u3 < r3.selectionStart ? (i4 = u3, o3 = r3.selectionEnd, s3 = a3._firstHandleDrag) : u3 > a3.selectionEnd ? (i4 = r3.selectionStart, o3 = u3, s3 = a3._lastHandleDrag) : u3 - r3.selectionStart <= r3.selectionEnd - u3 ? (i4 = u3, o3 = r3.selectionEnd, s3 = a3._firstHandleDrag) : (i4 = r3.selectionStart, o3 = u3, s3 = a3._lastHandleDrag), s3.dragstart(t4), a3._setValueInRange(i4, o3), a3._focusWithMouse(s3.element);
            }
          }, a3.wrapper.find(".k-tick, .k-slider-track").on(b2, i3).end().on(b2, function() {
            e2(document.documentElement).one("selectstart", n2.preventDefault);
          }).on(w, function() {
            a3._activeDragHandle && a3._activeDragHandle._end();
          }), a3.wrapper.find(D).attr(P, 0).on(k2, function() {
            a3._setTooltipTimeout();
          }).on(C, function(e3) {
            a3._focusWithMouse(e3.target), e3.preventDefault();
          }).on(S, a3._focus.bind(a3)).on(I, a3._blur.bind(a3)), a3.wrapper.find(D).off(x, n2.preventDefault).eq(0).on(x, function(e3) {
            this._keydown(e3, "firstHandle");
          }.bind(a3)).end().eq(1).on(x, function(e3) {
            this._keydown(e3, "lastHandle");
          }.bind(a3)), a3.options.enabled = true);
        }, disable: function() {
          var e3 = this;
          e3.wrapper.addClass(F), e3.wrapper.find("input").prop(z, z), e3.wrapper.find(".k-tick, .k-slider-track").off(b2).off(w), e3.wrapper.find(D).attr(P, -1).off(k2).off(x).off(C).off(S).off(I), e3.options.enabled = false;
        }, _keydown: function(e3, t3) {
          var n3, i3, a3, r3 = this, o3 = r3.options.selectionStart, s3 = r3.options.selectionEnd;
          e3.keyCode in r3._keyMap && (r3._clearTooltipTimeout(), "firstHandle" == t3 ? (a3 = r3._activeHandleDrag = r3._firstHandleDrag, (o3 = r3._keyMap[e3.keyCode](o3)) > s3 && (s3 = o3)) : (a3 = r3._activeHandleDrag = r3._lastHandleDrag, o3 > (s3 = r3._keyMap[e3.keyCode](s3)) && (o3 = s3)), r3._setValueInRange(U(o3), U(s3)), n3 = Math.max(o3, r3.options.selectionStart), i3 = Math.min(s3, r3.options.selectionEnd), a3.selectionEnd = Math.max(i3, r3.options.selectionStart), a3.selectionStart = Math.min(n3, r3.options.selectionEnd), a3._updateTooltip(r3.value()[r3._activeHandle]), e3.preventDefault());
        }, _update: function(e3, t3) {
          var n3 = this, i3 = n3.value(), a3 = i3[0] != e3 || i3[1] != t3;
          n3.value([e3, t3]), a3 && n3.trigger(m2, { values: [e3, t3], value: [e3, t3] });
        }, value: function(e3) {
          return e3 && e3.length ? this._value(e3[0], e3[1]) : this._value();
        }, _value: function(e3, t3) {
          var n3 = this, i3 = n3.options, a3 = i3.selectionStart, r3 = i3.selectionEnd;
          if (isNaN(e3) && isNaN(t3)) return [a3, r3];
          e3 = U(e3), t3 = U(t3), e3 >= i3.min && e3 <= i3.max && t3 >= i3.min && t3 <= i3.max && e3 <= t3 && (a3 == e3 && r3 == t3 || (n3.element.find("input").eq(0).prop("value", V(e3)).end().eq(1).prop("value", V(t3)), i3.selectionStart = e3, i3.selectionEnd = t3, n3._refresh(), n3._refreshAriaAttr(e3, t3)));
        }, values: function(e3, t3) {
          return u2(e3) ? this._value(e3[0], e3[1]) : this._value(e3, t3);
        }, _refresh: function() {
          var e3 = this, t3 = e3.options;
          e3.trigger(y, { values: [t3.selectionStart, t3.selectionEnd], value: [t3.selectionStart, t3.selectionEnd] }), t3.selectionStart == t3.max && t3.selectionEnd == t3.max && e3._setZIndex("firstHandle");
        }, _refreshAriaAttr: function(e3, t3) {
          var n3, i3 = this, a3 = i3.wrapper.find(D), r3 = i3._activeHandleDrag;
          n3 = i3._getFormattedValue([e3, t3], r3), a3.eq(0).attr(R, e3), a3.eq(1).attr(R, t3), a3.attr(N, n3);
        }, _setValueInRange: function(e3, t3) {
          var n3 = this.options;
          e3 = c2.max(c2.min(e3, n3.max), n3.min), t3 = c2.max(c2.min(t3, n3.max), n3.min), e3 == n3.max && t3 == n3.max && this._setZIndex("firstHandle"), this._update(c2.min(e3, t3), c2.max(e3, t3));
        }, _setZIndex: function(t3) {
          this.wrapper.find(D).each(function(n3) {
            e2(this).css("z-index", "firstHandle" == t3 ? 1 - n3 : n3);
          });
        }, _formResetHandler: function() {
          var e3 = this, t3 = e3.options;
          setTimeout(function() {
            var n3 = e3.element.find("input"), i3 = n3[0].value, a3 = n3[1].value;
            e3.values("" === i3 || isNaN(i3) ? t3.min : i3, "" === a3 || isNaN(a3) ? t3.max : a3);
          });
        }, destroy: function() {
          var e3 = this;
          O.fn.destroy.call(e3), e3.wrapper.off(v2).find(".k-tick, .k-slider-track").off(v2).end().find(D).off(v2), e3._firstHandleDrag.draggable.destroy(), e3._lastHandleDrag.draggable.destroy();
        } });
        K.Selection = function(e3, t3, n3) {
          function i3(i4) {
            var a3 = (i4 = i4 || [])[0] - n3.min, r3 = i4[1] - n3.min, o3 = c2.ceil(U(a3 / n3.smallStep)), s3 = c2.ceil(U(r3 / n3.smallStep)), l3 = t3._pixelSteps[o3], d3 = t3._pixelSteps[s3], u3 = t3._isRtl ? 2 : 0;
            e3.eq(0).css(t3._position, l3 - u3).end().eq(1).css(t3._position, d3 - u3), function(e4, n4) {
              var i5, a4, r4 = t3._trackDiv.find(".k-slider-selection");
              i5 = c2.abs(e4 - n4), r4[t3._sizeFn](i5), t3._isRtl ? (a4 = c2.max(e4, n4), r4.css("right", t3._maxSelection - a4 - 1)) : (a4 = c2.min(e4, n4), r4.css(t3._position, a4 - 1));
            }(l3, d3);
          }
          i3(t3.value()), t3.bind([m2, g2, y], function(e4) {
            i3(e4.values);
          });
        }, n2.ui.plugin(K);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.ui, r2 = "<span class='k-badge-icon k-icon k-i-#= icon #'></span>", o2 = "<span class='k-badge-icon k-svg-icon'>#= icon #</span>", s2 = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          i2.fn.init.call(a3, e3, t3), a3._content(), a3._appearance(), n2.notify(a3);
        }, destroy: function() {
          i2.fn.destroy.call(this);
        }, options: { name: "Badge", cutoutBorder: false, data: {}, fillMode: "solid", icon: "", max: 1 / 0, position: "inline", align: "", rounded: "medium", roundings: { small: "sm", medium: "md", large: "lg", full: "full" }, sizes: { small: "sm", medium: "md", large: "lg" }, size: "medium", template: null, text: "", themeColor: "secondary", visible: true, _classNames: [] }, _content: function() {
          var e3 = this, t3 = e3.options.text, i3 = e3.options.template, a3 = e3.options.data, r3 = e3.options.icon;
          if (null !== i3) return e3._text = t3, e3._template = n2.template(i3).bind(e3), void e3.element.html(e3._template(a3));
          "" === r3 ? "" === t3 ? e3.text(e3.element.html()) : e3.text(t3) : e3.icon(r3);
        }, _appearance: function() {
          var e3 = this;
          e3._themeColor = e3.options.themeColor, e3._shape = e3.options.shape, e3._sizes = e3.options.sizes, e3._size = e3.options.size, e3._fillMode = e3.options.fillMode, e3._rounded = e3.options.rounded, e3._roundings = e3.options.roundings, e3._cutoutBorder = e3.options.cutoutBorder, e3._align = e3.options.align, e3._position = e3.options.position, e3._visible = e3.options.visible, e3._updateClassNames();
        }, _updateClassNames: function() {
          var e3 = this, n3 = ["k-badge"], i3 = e3.options._classNames, a3 = e3._themeColor, r3 = e3._shape, o3 = e3._sizes, s3 = e3._size, l2 = o3[s3] === t2 ? s3 : o3[s3], d2 = e3._fillMode, u2 = e3._rounded, c2 = e3._roundings, p2 = c2[u2] === t2 ? u2 : c2[u2], h2 = e3._cutoutBorder, f2 = e3._align, m2 = e3._position, g2 = e3._visible;
          e3.element.removeClass(function(t3, n4) {
            0 === n4.indexOf("k-") && -1 === i3.indexOf(n4) && e3.element.removeClass(n4);
          }), "string" == typeof d2 && "" !== d2 && n3.push("k-badge-" + d2), "string" == typeof a3 && "" !== a3 && n3.push("k-badge-" + d2 + "-" + a3), "string" == typeof s3 && "" !== s3 && n3.push("k-badge-" + l2), "string" == typeof u2 && "" !== u2 && n3.push("k-rounded-" + p2), "string" == typeof r3 && "" !== r3 && n3.push("k-badge-" + r3), "boolean" == typeof h2 && true === h2 && n3.push("k-badge-border-cutout"), "string" == typeof m2 && "" !== m2 && n3.push("k-badge-" + m2), "string" == typeof m2 && "" !== m2 && "inline" !== m2 && "string" == typeof f2 && 2 == f2.split(" ").length && n3.push("k-" + f2.replace(" ", "-")), false === g2 && n3.push("k-hidden"), e3.element.addClass(n3.join(" "));
        }, setOptions: function(e3) {
          var t3 = this;
          t3.element.removeClass(function(e4, n3) {
            n3.indexOf("k-") >= 0 && t3.element.removeClass(n3);
          }), i2.fn.setOptions.call(t3, e3), t3._content(), t3._appearance();
        }, text: function(e3) {
          var n3 = this, i3 = n3.options.max;
          if (0 === arguments.length || e3 === t2) return n3._text;
          n3._text = e3, true !== e3 && false !== e3 && null !== e3 ? "string" != typeof e3 ? "number" != typeof e3 ? "object" == typeof e3 && "toString" in e3 && n3.element.html(e3.toString()) : e3 > i3 ? n3.element.html(i3 + "+") : n3.element.html(e3) : n3.element.html(e3) : n3.element.html("");
        }, icon: function(e3) {
          var i3, a3 = this;
          return 0 === arguments.length || e3 === t2 ? a3._icon : (a3._icon = e3, 0 === e3.indexOf("<svg") ? (i3 = n2.template(o2), void a3.element.html(i3({ icon: e3 }))) : (i3 = n2.template(r2), void a3.element.html(i3({ icon: e3 }))));
        }, themeColor: function(e3) {
          var n3 = this;
          if (0 === arguments.length || e3 === t2) return n3._themeColor;
          n3._themeColor = e3, n3._updateClassNames();
        }, rounded: function(e3) {
          var n3 = this;
          if (0 === arguments.length || e3 === t2) return n3._rounded;
          n3._rounded = e3, n3._updateClassNames();
        }, hide: function() {
          this._visible = false, this._updateClassNames();
        }, show: function() {
          this._visible = true, this._updateClassNames();
        } });
        a2.plugin(s2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.html, r2 = n2.ui, o2 = n2.keys, s2 = "click", l2 = n2.support.mousedown, d2 = n2.support.mouseup, u2 = ".kendoButton", c2 = "disabled", p2 = "k-focus", h2 = "k-active";
        n2.setDefaults("button", { icon: "", iconClass: "", spriteCssClass: "", imageUrl: "", badge: null });
        var f2 = i2.extend({ init: function(t3, r3) {
          var o3 = this;
          i2.fn.init.call(o3, t3, r3), t3 = o3.wrapper = o3.element, r3 = o3.options, a2.renderButton(t3, e2.extend({}, r3)), t3.attr("role", "button"), r3.enable = r3.enable && r3.enabled && !t3.attr(c2), o3.enable(r3.enable), r3.enable && o3._tabindex(), o3._badge(), t3.on(s2 + u2, o3._click.bind(o3)).on("focus" + u2, o3._focus.bind(o3)).on("blur" + u2, o3._blur.bind(o3)).on("keydown" + u2, o3._keydown.bind(o3)).on("keyup" + u2, o3._removeActive.bind(o3)).on(l2 + u2, o3._addActive.bind(o3)).on(d2 + u2 + " mouseout" + u2, o3._removeActive.bind(o3)), n2.notify(o3);
        }, destroy: function() {
          var e3 = this;
          e3.wrapper.off(u2), e3.badge && e3.badge.destroy(), i2.fn.destroy.call(e3);
        }, events: [s2], options: { name: "Button", enable: true, enabled: true, icon: "", iconClass: "", spriteCssClass: "", imageUrl: "", badge: null, size: "medium", shape: "rectangle", rounded: "medium", fillMode: "solid", themeColor: "base" }, _isNativeButton: function() {
          return "button" == this.element.prop("tagName").toLowerCase();
        }, _click: function(e3) {
          this.options.enable && this.trigger(s2, { event: e3 }) && e3.preventDefault();
        }, _focus: function() {
          this.options.enable && this.element.addClass(p2);
        }, _blur: function() {
          var e3 = this;
          e3.element.removeClass(p2), setTimeout(function() {
            e3.element.removeClass(h2);
          });
        }, _keydown: function(e3) {
          var t3 = this;
          e3.keyCode != o2.ENTER && e3.keyCode != o2.SPACEBAR || (t3._addActive(), t3._isNativeButton() || (e3.keyCode == o2.SPACEBAR && e3.preventDefault(), t3._click(e3)));
        }, _removeActive: function() {
          this.element.removeClass(h2);
        }, _addActive: function() {
          this.options.enable && this.element.addClass(h2);
        }, enable: function(e3) {
          var n3 = this, i3 = n3.element;
          e3 === t2 && (e3 = true), e3 = !!e3, n3.options.enable = e3, i3.toggleClass("k-disabled", !e3).attr("aria-disabled", !e3).attr(c2, !e3), e3 && n3._tabindex();
          try {
            i3.trigger("blur");
          } catch (e4) {
          }
        }, _badge: function() {
          var n3, i3 = this, a3 = i3.options.badge;
          null !== a3 && a3 !== t2 && (a3.constructor !== Object && (a3 = { text: a3 }), a3.position !== t2 && "" !== a3.position || (a3.position = "edge", a3.align !== t2 && "" !== a3.align || (a3.align = "top end")), a3._classNames = ["k-button-badge"], i3.element.addClass("k-badge-container"), n3 = e2("<span />").appendTo(i3.element), i3.badge = new r2.Badge(n3, a3));
        } });
        false === f2.fn.hasOwnProperty("defaults") && Object.defineProperty(f2.fn, "defaults", { get: function() {
          return n2.defaults.button;
        } }), n2.cssProperties.registerPrefix("Button", "k-button-"), n2.cssProperties.registerValues("Button", [{ prop: "fillMode", values: n2.cssProperties.fillModeValues.concat(["link"]) }, { prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), n2.ui.plugin(f2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Observable, a2 = n2.data.ObservableObject, r2 = n2.data.ObservableArray, o2 = {}.toString, s2 = {}, l2 = n2.Class, d2 = "value", u2 = "source", c2 = "events", p2 = "checked", h2 = true, f2 = "change";
        !function() {
          var e3 = document.createElement("a");
          try {
            delete e3.test;
          } catch (e4) {
            h2 = false;
          }
        }();
        var m2 = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          i2.fn.init.call(n3), n3.source = e3[0], n3.parents = e3, n3.path = t3, n3.dependencies = {}, n3.dependencies[t3] = true, n3.observable = n3.source instanceof i2, n3._access = function(e4) {
            n3.dependencies[e4.field] = true;
          }, n3.observable && (n3._change = function(e4) {
            n3.change(e4);
          }, n3.source.bind(f2, n3._change));
        }, _parents: function() {
          var t3 = this.parents, n3 = this.get();
          if (n3 && "function" == typeof n3.parent) {
            var i3 = n3.parent();
            e2.inArray(i3, t3) < 0 && (t3 = [i3].concat(t3));
          }
          return t3;
        }, change: function(e3) {
          var t3, n3, i3 = e3.field, a3 = this;
          if ("this" === a3.path) a3.trigger(f2, e3);
          else for (t3 in a3.dependencies) if (0 === t3.indexOf(i3) && (!(n3 = t3.charAt(i3.length)) || "." === n3 || "[" === n3)) {
            a3.trigger(f2, e3);
            break;
          }
        }, start: function(e3) {
          e3.bind("get", this._access);
        }, stop: function(e3) {
          e3.unbind("get", this._access);
        }, get: function() {
          var e3 = this, n3 = e3.source, i3 = 0, r3 = e3.path, o3 = n3;
          if (!e3.observable) return o3;
          for (e3.start(e3.source), o3 = n3.get(r3); o3 === t2 && n3; ) (n3 = e3.parents[++i3]) instanceof a2 && (o3 = n3.get(r3));
          if (o3 === t2) for (n3 = e3.source; o3 === t2 && n3; ) (n3 = n3.parent()) instanceof a2 && (o3 = n3.get(r3));
          return "function" == typeof o3 && ((i3 = r3.lastIndexOf(".")) > 0 && (n3 = n3.get(r3.substring(0, i3))), e3.start(n3), o3 = n3 !== e3.source ? o3.call(n3, e3.source) : o3.call(n3), e3.stop(n3)), n3 && n3 !== e3.source && (e3.currentSource = n3, n3.unbind(f2, e3._change).bind(f2, e3._change)), e3.stop(e3.source), o3;
        }, set: function(e3) {
          var t3 = this.currentSource || this.source, i3 = n2.getter(this.path)(t3);
          "function" == typeof i3 ? t3 !== this.source ? i3.call(t3, this.source, e3) : i3.call(t3, e3) : t3.set(this.path, e3);
        }, destroy: function() {
          this.observable && (this.source.unbind(f2, this._change), this.currentSource && this.currentSource.unbind(f2, this._change)), this.unbind();
        } }), g2 = m2.extend({ get: function() {
          var e3, t3 = this.source, n3 = this.path, i3 = 0;
          for (e3 = t3.get(n3); !e3 && t3; ) (t3 = this.parents[++i3]) instanceof a2 && (e3 = t3.get(n3));
          if (e3) return e3.bind(t3);
        } }), v2 = m2.extend({ init: function(e3, t3, n3) {
          m2.fn.init.call(this, e3, t3), this.template = n3;
        }, render: function(e3) {
          var t3;
          return this.start(this.source), t3 = n2.render(this.template, e3), this.stop(this.source), t3;
        } }), _2 = l2.extend({ init: function(e3, t3, n3) {
          this.element = e3, this.bindings = t3, this.options = n3;
        }, bind: function(e3, t3) {
          var n3 = this;
          (e3 = t3 ? e3[t3] : e3).bind(f2, function(e4) {
            n3.refresh(t3 || e4);
          }), n3.refresh(t3);
        }, destroy: function() {
        } }), b2 = _2.extend({ dataType: function() {
          return (this.element.getAttribute("data-" + n2.ns + "type") || this.element.type || "text").toLowerCase();
        }, parsedValue: function() {
          return this._parseValue(this.element.value, this.dataType());
        }, _parseValue: function(e3, t3) {
          return "date" == t3 ? e3 = n2.parseDate(e3, "yyyy-MM-dd") : "datetime-local" == t3 ? e3 = n2.parseDate(e3, ["yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mm"]) : "number" == t3 ? e3 = n2.parseFloat(e3) : "boolean" == t3 && (e3 = e3.toLowerCase(), e3 = null !== n2.parseFloat(e3) ? Boolean(n2.parseFloat(e3)) : "true" === e3.toLowerCase()), e3;
        } });
        function k2(t3, i3, a3) {
          return _2.extend({ init: function(e3, t4, n3) {
            var i4 = this;
            _2.fn.init.call(i4, e3.element[0], t4, n3), i4.widget = e3, i4._dataBinding = i4.dataBinding.bind(i4), i4._dataBound = i4.dataBound.bind(i4), i4._itemChange = i4.itemChange.bind(i4);
          }, itemChange: function(e3) {
            D(e3.item[0], e3.data, this._ns(e3.ns), [e3.data].concat(this.bindings[t3]._parents()));
          }, dataBinding: function(e3) {
            var t4, n3, i4 = this.widget, a4 = e3.removedItems || i4.items();
            for (t4 = 0, n3 = a4.length; t4 < n3; t4++) F(a4[t4], false);
          }, _ns: function(t4) {
            t4 = t4 || n2.ui;
            var i4 = [n2.ui, n2.dataviz.ui, n2.mobile.ui];
            return i4.splice(e2.inArray(t4, i4), 1), i4.unshift(t4), n2.rolesFromNamespaces(i4);
          }, dataBound: function(e3) {
            var a4, r3, o3, s3, l3 = this.widget, d3 = e3.addedItems || l3.items(), u3 = l3[i3], c3 = n2.data.HierarchicalDataSource;
            if (!(c3 && u3 instanceof c3) && d3.length) for (o3 = e3.addedDataItems || u3.flatView(), s3 = this.bindings[t3]._parents(), a4 = 0, r3 = o3.length; a4 < r3; a4++) d3[a4] && D(d3[a4], o3[a4], this._ns(e3.ns), [o3[a4]].concat(s3));
          }, refresh: function(e3) {
            var r3, o3, s3, l3 = this, d3 = l3.widget;
            (e3 = e3 || {}).action || (l3.destroy(), d3.bind("dataBinding", l3._dataBinding), d3.bind("dataBound", l3._dataBound), d3.bind("itemChange", l3._itemChange), r3 = l3.bindings[t3].get(), d3[i3] instanceof n2.data.DataSource && d3[i3] != r3 && (r3 instanceof n2.data.DataSource ? d3[a3](r3) : r3 && r3._dataSource ? d3[a3](r3._dataSource) : (o3 = n2.ui.Select && d3 instanceof n2.ui.Select, s3 = n2.ui.MultiSelect && d3 instanceof n2.ui.MultiSelect, n2.ui.DropDownTree && d3 instanceof n2.ui.DropDownTree ? d3.treeview[i3].data(r3) : d3[i3].data(r3), l3.bindings.value && (o3 || s3) && d3.value(P(l3.bindings.value.get(), d3.options.dataValueField)))));
          }, destroy: function() {
            var e3 = this.widget;
            e3.unbind("dataBinding", this._dataBinding), e3.unbind("dataBound", this._dataBound), e3.unbind("itemChange", this._itemChange);
          } });
        }
        s2.attr = _2.extend({ refresh: function(e3) {
          this.element.setAttribute(e3, this.bindings.attr[e3].get());
        } }), s2.css = _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3, t3, n3), this.classes = {};
        }, refresh: function(t3) {
          var n3 = e2(this.element), i3 = this.bindings.css[t3];
          (this.classes[t3] = i3.get()) ? n3.addClass(t3) : n3.removeClass(t3);
        } }), s2.style = _2.extend({ refresh: function(e3) {
          this.element.style[e3] = this.bindings.style[e3].get() || "";
        } }), s2.enabled = _2.extend({ refresh: function() {
          this.bindings.enabled.get() ? this.element.removeAttribute("disabled") : this.element.setAttribute("disabled", "disabled");
        } }), s2.readonly = _2.extend({ refresh: function() {
          this.bindings.readonly.get() ? this.element.setAttribute("readonly", "readonly") : this.element.removeAttribute("readonly");
        } }), s2.disabled = _2.extend({ refresh: function() {
          this.bindings.disabled.get() ? this.element.setAttribute("disabled", "disabled") : this.element.removeAttribute("disabled");
        } }), s2.events = _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3, t3, n3), this.handlers = {};
        }, refresh: function(t3) {
          var n3 = e2(this.element), i3 = this.bindings.events[t3], a3 = this.handlers[t3];
          a3 && n3.off(t3, a3), a3 = this.handlers[t3] = i3.get(), n3.on(t3, i3.source, a3);
        }, destroy: function() {
          var t3, n3 = e2(this.element);
          for (t3 in this.handlers) n3.off(t3, this.handlers[t3]);
        } }), s2.text = _2.extend({ refresh: function() {
          var t3 = this.bindings.text.get(), i3 = this.element.getAttribute("data-" + n2.ns + "format") || "";
          null == t3 && (t3 = ""), e2(this.element).text(n2.toString(t3, i3));
        } }), s2.visible = _2.extend({ refresh: function() {
          this.bindings.visible.get() ? this.element.style.display = "" : this.element.style.display = "none";
        } }), s2.invisible = _2.extend({ refresh: function() {
          this.bindings.invisible.get() ? this.element.style.display = "none" : this.element.style.display = "";
        } }), s2.html = _2.extend({ refresh: function() {
          this.element.innerHTML = this.bindings.html.get();
        } }), s2.value = b2.extend({ init: function(t3, n3, i3) {
          b2.fn.init.call(this, t3, n3, i3), this._change = this.change.bind(this), this.eventName = i3.valueUpdate || f2, e2(this.element).on(this.eventName, this._change), this._initChange = false;
        }, change: function() {
          this._initChange = this.eventName != f2, this.bindings.value.set(this.parsedValue()), this._initChange = false;
        }, refresh: function() {
          if (!this._initChange) {
            var e3 = this.bindings.value.get();
            null == e3 && (e3 = "");
            var t3 = this.dataType();
            "date" == t3 ? e3 = n2.toString(e3, "yyyy-MM-dd") : "datetime-local" == t3 && (e3 = n2.toString(e3, "yyyy-MM-ddTHH:mm:ss")), this.element.value = e3;
          }
          this._initChange = false;
        }, destroy: function() {
          e2(this.element).off(this.eventName, this._change);
        } }), s2.source = _2.extend({ init: function(e3, t3, i3) {
          _2.fn.init.call(this, e3, t3, i3);
          var a3 = this.bindings.source.get();
          a3 instanceof n2.data.DataSource && false !== i3.autoBind && a3.fetch();
        }, refresh: function(e3) {
          var t3 = this, i3 = t3.bindings.source.get();
          i3 instanceof r2 || i3 instanceof n2.data.DataSource ? "add" == (e3 = e3 || {}).action ? t3.add(e3.index, e3.items) : "remove" == e3.action ? t3.remove(e3.index, e3.items) : "itemchange" != e3.action && t3.render() : t3.render();
        }, container: function() {
          var e3 = this.element;
          return "table" == e3.nodeName.toLowerCase() && (e3.tBodies[0] || e3.appendChild(document.createElement("tbody")), e3 = e3.tBodies[0]), e3;
        }, template: function() {
          var e3 = this.options, t3 = e3.template, i3 = this.container().nodeName.toLowerCase();
          return t3 || (t3 = "select" == i3 ? e3.valueField || e3.textField ? n2.format('<option value="#:{0}#">#:{1}#</option>', e3.valueField || e3.textField, e3.textField || e3.valueField) : "<option>#:data#</option>" : "tbody" == i3 ? "<tr><td>#:data#</td></tr>" : "ul" == i3 || "ol" == i3 ? "<li>#:data#</li>" : "#:data#", t3 = n2.template(t3)), t3;
        }, add: function(t3, i3) {
          var a3, r3, o3, s3, l3 = this.container(), d3 = l3.cloneNode(false), u3 = l3.children[t3];
          if (e2(d3).html(n2.render(this.template(), i3)), d3.children.length) for (a3 = this.bindings.source._parents(), r3 = 0, o3 = i3.length; r3 < o3; r3++) s3 = d3.children[0], l3.insertBefore(s3, u3 || null), D(s3, i3[r3], this.options.roles, [i3[r3]].concat(a3));
        }, remove: function(e3, t3) {
          var n3, i3 = this.container();
          for (n3 = 0; n3 < t3.length; n3++) {
            var a3 = i3.children[e3];
            F(a3, true), a3.parentNode == i3 && i3.removeChild(a3);
          }
        }, render: function() {
          var t3, i3, a3, s3 = this.bindings.source.get(), l3 = this.container(), d3 = this.template();
          if (null != s3) if (s3 instanceof n2.data.DataSource && (s3 = s3.view()), s3 instanceof r2 || "[object Array]" === o2.call(s3) || (s3 = [s3]), this.bindings.template) {
            if (z(l3, true), e2(l3).html(this.bindings.template.render(s3)), l3.children.length) for (t3 = this.bindings.source._parents(), i3 = 0, a3 = s3.length; i3 < a3; i3++) D(l3.children[i3], s3[i3], this.options.roles, [s3[i3]].concat(t3));
          } else e2(l3).html(n2.render(d3, s3));
        } }), s2.input = { checked: b2.extend({ init: function(t3, n3, i3) {
          b2.fn.init.call(this, t3, n3, i3), this._change = this.change.bind(this), e2(this.element).change(this._change);
        }, change: function() {
          var e3 = this.element, t3 = this.value();
          if ("radio" == e3.type) t3 = this.parsedValue(), this.bindings.checked.set(t3);
          else if ("checkbox" == e3.type) {
            var n3, i3 = this.bindings.checked.get();
            if (i3 instanceof r2) {
              if ((t3 = this.parsedValue()) instanceof Date) {
                for (var a3 = 0; a3 < i3.length; a3++) if (i3[a3] instanceof Date && +i3[a3] == +t3) {
                  n3 = a3;
                  break;
                }
              } else n3 = i3.indexOf(t3);
              n3 > -1 ? i3.splice(n3, 1) : i3.push(t3);
            } else this.bindings.checked.set(t3);
          }
        }, refresh: function() {
          var e3 = this.bindings.checked.get(), t3 = e3, i3 = this.dataType(), a3 = this.element;
          if ("checkbox" == a3.type) if (t3 instanceof r2) {
            var o3 = -1;
            if ((e3 = this.parsedValue()) instanceof Date) {
              for (var s3 = 0; s3 < t3.length; s3++) if (t3[s3] instanceof Date && +t3[s3] == +e3) {
                o3 = s3;
                break;
              }
            } else o3 = t3.indexOf(e3);
            a3.checked = o3 >= 0;
          } else a3.checked = t3;
          else "radio" == a3.type && ("date" == i3 ? e3 = n2.toString(e3, "yyyy-MM-dd") : "datetime-local" == i3 && (e3 = n2.toString(e3, "yyyy-MM-ddTHH:mm:ss")), null != e3 && a3.value === e3.toString() ? a3.checked = true : a3.checked = false);
        }, value: function() {
          var e3 = this.element, t3 = e3.value;
          return "checkbox" == e3.type && (t3 = e3.checked), t3;
        }, destroy: function() {
          e2(this.element).off(f2, this._change);
        } }) }, s2.select = { source: s2.source.extend({ refresh: function(i3) {
          var a3 = this, o3 = a3.bindings.source.get();
          if (o3 instanceof r2 || o3 instanceof n2.data.DataSource) {
            if ("add" == (i3 = i3 || {}).action) a3.add(i3.index, i3.items);
            else if ("remove" == i3.action) a3.remove(i3.index, i3.items);
            else if (("itemchange" == i3.action || i3.action === t2) && (a3.render(), a3.bindings.value && a3.bindings.value)) {
              var s3 = P(a3.bindings.value.get(), e2(a3.element).data("valueField"));
              null === s3 ? a3.element.selectedIndex = -1 : a3.element.value = s3;
            }
          } else a3.render();
        } }), value: b2.extend({ init: function(t3, n3, i3) {
          b2.fn.init.call(this, t3, n3, i3), this._change = this.change.bind(this), e2(this.element).change(this._change);
        }, parsedValue: function() {
          var e3, t3, n3, i3, a3 = this.dataType(), r3 = [];
          for (n3 = 0, i3 = this.element.options.length; n3 < i3; n3++) (t3 = this.element.options[n3]).selected && (e3 = (e3 = t3.attributes.value) && e3.specified ? t3.value : t3.text, r3.push(this._parseValue(e3, a3)));
          return r3;
        }, change: function() {
          var e3, i3, o3, s3, l3, d3, u3 = [], c3 = this.element, p3 = this.options.valueField || this.options.textField, h3 = this.options.valuePrimitive;
          for (l3 = 0, d3 = c3.options.length; l3 < d3; l3++) (i3 = c3.options[l3]).selected && (s3 = (s3 = i3.attributes.value) && s3.specified ? i3.value : i3.text, p3 ? u3.push(s3) : u3.push(this._parseValue(s3, this.dataType())));
          if (p3) for ((e3 = this.bindings.source.get()) instanceof n2.data.DataSource && (e3 = e3.view()), o3 = 0; o3 < u3.length; o3++) for (l3 = 0, d3 = e3.length; l3 < d3; l3++) {
            var f3 = e3[l3].get(p3);
            if (String(f3) === u3[o3]) {
              u3[o3] = e3[l3];
              break;
            }
          }
          (s3 = this.bindings.value.get()) instanceof r2 ? s3.splice.apply(s3, [0, s3.length].concat(u3)) : h3 || !(s3 instanceof a2 || null === s3 || s3 === t2) && p3 ? this.bindings.value.set(u3[0].get(p3)) : this.bindings.value.set(u3[0]);
        }, refresh: function() {
          var e3, t3, i3 = this.element, o3 = i3.options, s3 = this.bindings.value.get(), l3 = s3, d3 = this.options.valueField || this.options.textField, u3 = this.dataType();
          l3 instanceof r2 || (l3 = new r2([s3])), i3.selectedIndex = -1;
          for (var c3 = 0; c3 < l3.length; c3++) for (s3 = l3[c3], d3 && s3 instanceof a2 && (s3 = s3.get(d3)), "date" == u3 ? s3 = n2.toString(l3[c3], "yyyy-MM-dd") : "datetime-local" == u3 && (s3 = n2.toString(l3[c3], "yyyy-MM-ddTHH:mm:ss")), e3 = 0; e3 < o3.length; e3++) "" === (t3 = o3[e3].value) && "" !== s3 && (t3 = o3[e3].text), null != s3 && t3 == s3.toString() && (o3[e3].selected = true, true);
        }, destroy: function() {
          e2(this.element).off(f2, this._change);
        } }) }, s2.widget = { events: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3, this.handlers = {};
        }, refresh: function(e3) {
          var t3 = this.bindings.events[e3], n3 = this.handlers[e3];
          n3 && this.widget.unbind(e3, n3), n3 = t3.get(), this.handlers[e3] = function(e4) {
            e4.data = t3.source, n3(e4), e4.data === t3.source && delete e4.data;
          }, this.widget.bind(e3, this.handlers[e3]);
        }, destroy: function() {
          var e3;
          for (e3 in this.handlers) this.widget.unbind(e3, this.handlers[e3]);
        } }), checked: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3, this._change = this.change.bind(this), this.widget.bind(f2, this._change);
        }, change: function() {
          this.bindings.checked.set(this.value());
        }, refresh: function() {
          "radio" === this.element.type ? this.widget.check(this.bindings.checked.get().toString() === this.value()) : this.widget.check(true === this.bindings.checked.get());
        }, value: function() {
          var e3 = this.element, t3 = e3.value;
          return "on" != t3 && "off" != t3 && "checkbox" != this.element.type || (t3 = e3.checked), t3;
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }), start: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this._change = this.change.bind(this), this.widget = e3, this.widget.bind(f2, this._change);
        }, change: function() {
          this.bindings.start.set(this.widget.range().start);
        }, refresh: function() {
          var e3 = this.bindings.start.get(), t3 = this.widget._range ? this.widget._range.end : null;
          this.widget.range({ start: e3, end: t3 });
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }), end: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this._change = this.change.bind(this), this.widget = e3, this.widget.bind(f2, this._change);
        }, change: function() {
          this.bindings.end.set(this.widget.range().end);
        }, refresh: function() {
          var e3 = this.bindings.end.get(), t3 = this.widget._range ? this.widget._range.start : null;
          this.widget.range({ start: t3, end: e3 });
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }), visible: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3;
        }, refresh: function() {
          var e3 = this.bindings.visible.get();
          this.widget.wrapper[0].style.display = e3 ? "" : "none";
        } }), invisible: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3;
        }, refresh: function() {
          var e3 = this.bindings.invisible.get();
          this.widget.wrapper[0].style.display = e3 ? "none" : "";
        } }), floatingLabel: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), e3.floatingLabel && e3.floatingLabel.refresh();
        } }), enabled: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3;
        }, refresh: function() {
          this.widget.enable && this.widget.enable(this.bindings.enabled.get());
        } }), disabled: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3;
        }, refresh: function() {
          this.widget.enable && this.widget.enable(!this.bindings.disabled.get());
        } }), source: k2("source", "dataSource", "setDataSource"), value: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3, this._change = this.change.bind(this), this.widget.first(f2, this._change);
          var i3 = this.bindings.value.get();
          this._valueIsObservableObject = !n3.valuePrimitive && (null == i3 || i3 instanceof a2), this._valueIsObservableArray = i3 instanceof r2, this._initChange = false;
        }, _source: function() {
          var e3;
          return this.widget.dataItem && (e3 = this.widget.dataItem()) && e3 instanceof a2 ? [e3] : (this.bindings.source && (e3 = this.bindings.source.get()), (!e3 || e3 instanceof n2.data.DataSource) && (e3 = this.widget.dataSource.flatView()), e3);
        }, change: function() {
          var e3, t3, n3, i3, a3, r3, s3, l3 = this.widget.value(), d3 = this.options.dataValueField || this.options.dataTextField, u3 = "[object Array]" === o2.call(l3), c3 = this._valueIsObservableObject, p3 = [];
          if (this._initChange = true, d3) if ("" === l3 && (c3 || this.options.valuePrimitive)) l3 = null;
          else {
            for (s3 = this._source(), u3 && (t3 = l3.length, p3 = l3.slice(0)), a3 = 0, r3 = s3.length; a3 < r3; a3++) if (i3 = (n3 = s3[a3]).get(d3), u3) {
              for (e3 = 0; e3 < t3; e3++) if (i3 == p3[e3]) {
                p3[e3] = n3;
                break;
              }
            } else if (i3 == l3) {
              l3 = c3 ? n3 : i3;
              break;
            }
            p3[0] && (l3 = this._valueIsObservableArray ? p3 : c3 || !d3 ? p3[0] : p3[0].get(d3));
          }
          this.bindings.value.set(l3), this._initChange = false;
        }, refresh: function() {
          if (!this._initChange) {
            var e3, n3 = this.widget, i3 = n3.options, o3 = i3.dataTextField, s3 = i3.dataValueField || o3, l3 = this.bindings.value.get(), d3 = i3.text || "", u3 = 0, c3 = [];
            if (l3 === t2 && (l3 = null), s3) if (l3 instanceof r2) {
              for (e3 = l3.length; u3 < e3; u3++) c3[u3] = l3[u3].get(s3);
              l3 = c3;
            } else l3 instanceof a2 && (d3 = l3.get(o3), l3 = l3.get(s3));
            false !== i3.autoBind || i3.cascadeFrom || !n3.listView || n3.listView.bound() ? n3.value(l3) : (o3 !== s3 || d3 || (d3 = l3), d3 || !l3 && 0 !== l3 || !i3.valuePrimitive ? n3._preselect(l3, d3) : n3.value(l3));
          }
          this._initChange = false;
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }), dropdowntree: { value: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3, this._change = this.change.bind(this), this.widget.first(f2, this._change), this._initChange = false;
        }, change: function() {
          var e3 = this, n3 = e3.bindings.value.get(), i3 = e3.options.valuePrimitive, a3 = e3.widget.treeview.select(), o3 = e3.widget._isMultipleSelection() ? e3.widget._getAllChecked() : e3.widget.treeview.dataItem(a3) || e3.widget.value(), s3 = i3 || false === e3.widget.options.autoBind ? e3.widget.value() : o3, l3 = this.options.dataValueField || this.options.dataTextField;
          if (s3 = s3.slice ? s3.slice(0) : s3, e3._initChange = true, n3 instanceof r2) {
            for (var d3, u3, c3, p3 = [], h3 = s3.length, f3 = 0, m3 = 0, g3 = n3[f3]; g3 !== t2; ) {
              for (c3 = false, m3 = 0; m3 < h3; m3++) if (i3 ? s3[m3] == g3 : (u3 = (u3 = s3[m3]).get ? u3.get(l3) : u3) == (g3.get ? g3.get(l3) : g3)) {
                s3.splice(m3, 1), h3 -= 1, c3 = true;
                break;
              }
              c3 ? f3 += 1 : (p3.push(g3), w(n3, f3, 1), d3 = f3), g3 = n3[f3];
            }
            w(n3, n3.length, 0, s3), p3.length && n3.trigger("change", { action: "remove", items: p3, index: d3 }), s3.length && n3.trigger("change", { action: "add", items: s3, index: n3.length - 1 });
          } else e3.bindings.value.set(s3);
          e3._initChange = false;
        }, refresh: function() {
          if (!this._initChange) {
            var e3, t3, n3 = this.options, i3 = this.widget, o3 = n3.dataValueField || n3.dataTextField, s3 = this.bindings.value.get(), l3 = s3, d3 = 0, u3 = [];
            if (o3) if (s3 instanceof r2) {
              for (e3 = s3.length; d3 < e3; d3++) t3 = s3[d3], u3[d3] = t3.get ? t3.get(o3) : t3;
              s3 = u3;
            } else s3 instanceof a2 && (s3 = s3.get(o3));
            false === n3.autoBind && true !== n3.valuePrimitive ? i3._preselect(l3, s3) : i3.value(s3);
          }
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }) }, gantt: { dependencies: k2("dependencies", "dependencies", "setDependenciesDataSource") }, multiselect: { value: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3, this._change = this.change.bind(this), this.widget.first(f2, this._change), this._initChange = false;
        }, change: function() {
          var e3 = this, n3 = e3.bindings.value.get(), i3 = e3.options.valuePrimitive, a3 = i3 ? e3.widget.value() : e3.widget.dataItems(), o3 = this.options.dataValueField || this.options.dataTextField;
          if (a3 = a3.slice(0), e3._initChange = true, n3 instanceof r2) {
            for (var s3, l3, d3, u3 = [], c3 = a3.length, p3 = 0, h3 = 0, f3 = n3[p3]; f3 !== t2; ) {
              for (d3 = false, h3 = 0; h3 < c3; h3++) if (i3 ? a3[h3] == f3 : (l3 = (l3 = a3[h3]).get ? l3.get(o3) : l3) == (f3.get ? f3.get(o3) : f3)) {
                a3.splice(h3, 1), c3 -= 1, d3 = true;
                break;
              }
              d3 ? p3 += 1 : (u3.push(f3), w(n3, p3, 1), s3 = p3), f3 = n3[p3];
            }
            w(n3, n3.length, 0, a3), u3.length && n3.trigger("change", { action: "remove", items: u3, index: s3 }), a3.length && n3.trigger("change", { action: "add", items: a3, index: n3.length - 1 });
          } else e3.bindings.value.set(a3);
          e3._initChange = false;
        }, refresh: function() {
          if (!this._initChange) {
            var e3, n3, i3 = this.options, o3 = this.widget, s3 = i3.dataValueField || i3.dataTextField, l3 = this.bindings.value.get(), d3 = l3, u3 = 0, c3 = [];
            if (l3 === t2 && (l3 = null), s3) if (l3 instanceof r2) {
              for (e3 = l3.length; u3 < e3; u3++) n3 = l3[u3], c3[u3] = n3.get ? n3.get(s3) : n3;
              l3 = c3;
            } else l3 instanceof a2 && (l3 = l3.get(s3));
            false !== i3.autoBind || true === i3.valuePrimitive || o3._isBound() ? o3.value(l3) : o3._preselect(d3, l3);
          }
        }, destroy: function() {
          this.widget.unbind(f2, this._change);
        } }) }, scheduler: { source: k2("source", "dataSource", "setDataSource").extend({ dataBound: function(e3) {
          var t3, n3, i3, a3, r3 = this.widget, o3 = e3.addedItems || r3.items();
          if (o3.length) for (i3 = e3.addedDataItems || r3.dataItems(), a3 = this.bindings.source._parents(), t3 = 0, n3 = i3.length; t3 < n3; t3++) D(o3[t3], i3[t3], this._ns(e3.ns), [i3[t3]].concat(a3));
        } }) }, grid: { source: k2("source", "dataSource", "setDataSource").extend({ dataBound: function(e3) {
          var t3, n3, i3, a3, r3 = this.widget, o3 = e3.addedItems || r3.items();
          if (o3.length) for (a3 = e3.addedDataItems || r3.dataItems(), i3 = this.bindings.source._parents(), t3 = 0, n3 = a3.length; t3 < n3; t3++) D(o3[t3], a3[t3], this._ns(e3.ns), [a3[t3]].concat(i3));
        } }) }, badge: { text: _2.extend({ init: function(e3, t3, n3) {
          _2.fn.init.call(this, e3.element[0], t3, n3), this.widget = e3;
        }, refresh: function() {
          var e3 = this.bindings.text.get();
          null == e3 && (e3 = ""), this.widget.text(e3);
        } }) } };
        var w = function(e3, t3, n3, i3) {
          n3 = n3 || 0;
          var a3, r3 = (i3 = i3 || []).length, o3 = e3.length, s3 = [].slice.call(e3, t3 + n3), l3 = s3.length;
          if (r3) {
            for (r3 = t3 + r3, a3 = 0; t3 < r3; t3++) e3[t3] = i3[a3], a3++;
            e3.length = r3;
          } else if (n3) for (e3.length = t3, n3 += t3; t3 < n3; ) delete e3[--n3];
          if (l3) {
            for (l3 = t3 + l3, a3 = 0; t3 < l3; t3++) e3[t3] = s3[a3], a3++;
            e3.length = l3;
          }
          for (t3 = e3.length; t3 < o3; ) delete e3[t3], t3++;
        }, y = l2.extend({ init: function(e3, t3) {
          this.target = e3, this.options = t3, this.toDestroy = [];
        }, bind: function(e3) {
          var t3, n3, i3, a3, r3, o3, s3 = this instanceof x, l3 = this.binders();
          for (t3 in e3) t3 == d2 ? n3 = true : t3 == u2 ? i3 = true : t3 != c2 || s3 ? t3 == p2 ? r3 = true : "css" == t3 ? o3 = true : this.applyBinding(t3, e3, l3) : a3 = true;
          i3 && this.applyBinding(u2, e3, l3), n3 && this.applyBinding(d2, e3, l3), r3 && this.applyBinding(p2, e3, l3), a3 && !s3 && this.applyBinding(c2, e3, l3), o3 && !s3 && this.applyBinding("css", e3, l3), s3 && this.target && this.target.floatingLabel && this.applyBinding("floatingLabel", e3, l3);
        }, binders: function() {
          return s2[this.target.nodeName.toLowerCase()] || {};
        }, applyBinding: function(e3, t3, n3) {
          var i3, a3 = n3[e3] || s2[e3], r3 = this.toDestroy, o3 = t3[e3];
          if (a3) if (a3 = new a3(this.target, t3, this.options), r3.push(a3), o3 instanceof m2) a3.bind(o3), r3.push(o3);
          else for (i3 in o3) a3.bind(o3, i3), r3.push(o3[i3]);
          else if ("template" !== e3) throw new Error("The " + e3 + " binding is not supported by the " + this.target.nodeName.toLowerCase() + " element");
        }, destroy: function() {
          var e3, t3, n3 = this.toDestroy;
          for (e3 = 0, t3 = n3.length; e3 < t3; e3++) n3[e3].destroy();
        } }), x = y.extend({ binders: function() {
          return s2.widget[this.target.options.name.toLowerCase()] || {};
        }, applyBinding: function(e3, t3, n3) {
          var i3, a3 = n3[e3] || s2.widget[e3], r3 = this.toDestroy, o3 = t3[e3];
          if (!a3) throw new Error("The " + e3 + " binding is not supported by the " + this.target.options.name + " widget");
          if (a3 = new a3(this.target, t3, this.target.options), r3.push(a3), o3 instanceof m2) a3.bind(o3), r3.push(o3);
          else for (i3 in o3) a3.bind(o3, i3), r3.push(o3[i3]);
        } });
        var C = /[A-Za-z0-9_\-]+:(\{([^}]*)\}|[^,}]+)/g, T = /\s/g;
        function S(e3) {
          var t3, n3, i3, a3, r3, o3, s3, l3 = {};
          for (t3 = 0, n3 = (s3 = e3.match(C)).length; t3 < n3; t3++) a3 = (i3 = s3[t3]).indexOf(":"), r3 = i3.substring(0, a3), "{" == (o3 = i3.substring(a3 + 1)).charAt(0) && (o3 = S(o3)), l3[r3] = o3;
          return l3;
        }
        function I(e3, t3, n3) {
          var i3, a3 = {};
          for (i3 in e3) a3[i3] = new n3(t3, e3[i3]);
          return a3;
        }
        function D(e3, t3, i3, a3) {
          if (e3 && !e3.getAttribute("data-" + n2.ns + "stop")) {
            var r3, o3, s3, l3 = e3.getAttribute("data-" + n2.ns + "role"), d3 = e3.getAttribute("data-" + n2.ns + "bind"), u3 = [], c3 = true, p3 = {};
            a3 = a3 || [t3], (l3 || d3) && A(e3, false), l3 && (s3 = function(e4, t4) {
              var i4 = n2.initWidget(e4, {}, t4);
              if (i4) return new x(i4);
            }(e3, i3)), d3 && (d3 = S(d3.replace(T, "")), s3 || ((p3 = n2.parseOptions(e3, { textField: "", valueField: "", template: "", valueUpdate: f2, valuePrimitive: false, autoBind: true }, t3)).roles = i3, s3 = new y(e3, p3)), s3.source = t3, o3 = I(d3, a3, m2), p3.template && (o3.template = new v2(a3, "", p3.template)), o3.click && (d3.events = d3.events || {}, d3.events.click = d3.click, o3.click.destroy(), delete o3.click), o3.source && (c3 = false), d3.attr && (o3.attr = I(d3.attr, a3, m2)), d3.style && (o3.style = I(d3.style, a3, m2)), d3.events && (o3.events = I(d3.events, a3, g2)), d3.css && (o3.css = I(d3.css, a3, m2)), s3.bind(o3)), s3 && (e3.kendoBindingTarget = s3);
            var h3 = e3.children;
            if (c3 && h3 && !e3.getAttribute("data-" + n2.ns + "stop")) {
              for (r3 = 0; r3 < h3.length; r3++) u3[r3] = h3[r3];
              for (r3 = 0; r3 < u3.length; r3++) D(u3[r3], t3, i3, a3);
            }
          }
        }
        function E(t3, i3) {
          var a3, r3, o3, s3 = n2.rolesFromNamespaces([].slice.call(arguments, 2));
          for (i3 = n2.observable(i3), a3 = 0, r3 = (t3 = e2(t3)).length; a3 < r3; a3++) 1 === (o3 = t3[a3]).nodeType && D(o3, i3, s3);
        }
        function A(t3, i3) {
          var a3 = t3.kendoBindingTarget;
          if (a3 && (a3.destroy(), h2 ? delete t3.kendoBindingTarget : t3.removeAttribute ? t3.removeAttribute("kendoBindingTarget") : t3.kendoBindingTarget = null), i3) {
            var r3 = n2.widgetInstance(e2(t3));
            r3 && "function" == typeof r3.destroy && r3.destroy();
          }
        }
        function F(e3, t3) {
          A(e3, t3), z(e3, t3);
        }
        function z(e3, t3) {
          var n3 = e3.children;
          if (n3) for (var i3 = 0, a3 = n3.length; i3 < a3; i3++) F(n3[i3], t3);
        }
        function P(e3, t3) {
          var n3, i3, o3 = [], s3 = 0;
          if (!t3) return e3;
          if (e3 instanceof r2) {
            for (n3 = e3.length; s3 < n3; s3++) i3 = e3[s3], o3[s3] = i3.get ? i3.get(t3) : i3[t3];
            e3 = o3;
          } else e3 instanceof a2 && (e3 = e3.get(t3));
          return e3;
        }
        n2.unbind = function(t3) {
          var n3, i3;
          for (n3 = 0, i3 = (t3 = e2(t3)).length; n3 < i3; n3++) F(t3[n3], false);
        }, n2.bind = E, n2.data.binders = s2, n2.data.Binder = _2, n2.notify = function(e3, t3) {
          var n3 = e3.element, i3 = n3[0].kendoBindingTarget;
          i3 && E(n3, i3.source, t3);
        }, n2.observable = function(e3) {
          return e3 instanceof a2 || (e3 = new a2(e3)), e3;
        }, n2.observableHierarchy = function(e3) {
          var t3 = n2.data.HierarchicalDataSource.create(e3);
          return t3.fetch(), function e4(t4) {
            var n3, i3;
            for (n3 = 0; n3 < t4.length; n3++) t4[n3]._initChildren(), (i3 = t4[n3].children).fetch(), t4[n3].items = i3.data(), e4(t4[n3].items);
          }(t3.data()), t3._data._dataSource = t3, t3._data;
        };
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.ui, r2 = e2.isPlainObject, o2 = ".kendoTextBox", s2 = "change", l2 = "disabled", d2 = "readonly", u2 = "k-input-inner", c2 = "k-focus", p2 = "k-disabled", h2 = "k-no-click", f2 = "aria-disabled", m2 = i2.extend({ init: function(a3, r3) {
          var o3 = this;
          i2.fn.init.call(o3, a3, r3), r3 = e2.extend(true, {}, r3), o3.options.value = r3.value || o3.element.val(), o3.options.readonly = r3.readonly !== t2 ? r3.readonly : Boolean(o3.element.attr("readonly")), o3.options.enable = r3.enable !== t2 ? r3.enable : !Boolean(o3.element.attr("disabled")), o3.options.placeholder = r3.placeholder || o3.element.attr("placeholder"), o3.value(o3.options.value), o3._wrapper(), o3._label(), o3._editable({ readonly: o3.options.readonly, disable: !o3.options.enable }), o3.element.addClass(u2).attr("placeholder", o3.options.placeholder).attr("autocomplete", "off"), n2.notify(o3), o3._applyCssClasses();
        }, events: [s2], options: { name: "TextBox", value: "", readonly: false, enable: true, placeholder: "", label: null, rounded: "medium", size: "medium", fillMode: "solid" }, value: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3._value;
          n3._value = e3, n3.element.val(e3), n3.floatingLabel && n3.floatingLabel.refresh();
        }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false }), this.floatingLabel && this.floatingLabel.readonly(e3 === t2 || e3);
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this.floatingLabel && this.floatingLabel.enable(e3 = e3 === t2 || e3);
        }, focus: function() {
          this.element[0].focus();
        }, destroy: function() {
          var e3 = this;
          e3.floatingLabel && e3.floatingLabel.destroy(), e3.element.off(o2), e3.element[0].style.width = "", e3.element.removeClass(u2), i2.fn.destroy.call(e3);
        }, setOptions: function(e3) {
          this.destroy(), this._inputLabel && (this._inputLabel.remove(), this._inputLabel = null), this._floatingLabelContainer ? (this.floatingLabel.destroy(), this.floatingLabel = null, this.element.unwrap(), this.element.unwrap(), this._floatingLabelContainer = null) : this.element.unwrap(), n2.deepExtend(this.options, e3), this.init(this.element, this.options);
        }, _editable: function(e3) {
          var t3 = this, n3 = t3.element, i3 = t3.wrapper, a3 = e3.disable, r3 = e3.readonly;
          n3.off(o2), r3 || a3 ? (n3.attr(l2, a3).attr(d2, r3).attr(f2, a3), i3.toggleClass(p2, a3).toggleClass(h2, r3)) : (n3.prop(l2, false).prop(d2, false).attr(f2, false), i3.removeClass(p2).removeClass(h2), n3.on("focusin" + o2, t3._focusin.bind(t3)), n3.on("focusout" + o2, t3._focusout.bind(t3)), n3.on("change" + o2, t3._change.bind(t3)));
        }, _label: function() {
          var t3, i3, a3 = this, o3 = a3.element, s3 = a3.options, l3 = o3.attr("id");
          null !== s3.label && (t3 = !!r2(s3.label) && s3.label.floating, i3 = r2(s3.label) ? s3.label.content : s3.label, t3 && (a3._floatingLabelContainer = a3.wrapper.wrap("<span></span>").parent(), a3.floatingLabel = new n2.ui.FloatingLabel(a3._floatingLabelContainer, { widget: a3 })), n2.isFunction(i3) && (i3 = i3.call(a3)), i3 || (i3 = ""), l3 || (l3 = s3.name + "_" + n2.guid(), o3.attr("id", l3)), a3._inputLabel = e2("<label class='k-label k-input-label' for='" + l3 + "'>" + i3 + "</label>'").insertBefore(a3.wrapper));
        }, _focusin: function() {
          this.wrapper.addClass(c2);
        }, _focusout: function() {
          this.wrapper.removeClass(c2);
        }, _change: function(e3) {
          var t3 = this, n3 = t3.element.val();
          t3._value = n3, t3.trigger(s2, { value: n3, originalEvent: e3 });
        }, _wrapper: function() {
          var e3, t3 = this.element, n3 = t3[0];
          (e3 = t3.wrap("<span class='k-input k-textbox'></span>").parent())[0].style.cssText = n3.style.cssText, n3.style.width = "100%", this.wrapper = e3.addClass(n3.className).removeClass("input-validation-error");
        } });
        n2.cssProperties.registerPrefix("TextBox", "k-input-"), n2.cssProperties.registerValues("TextBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), a2.plugin(m2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.caret, a2 = n2.keys, r2 = n2.html, o2 = n2.ui, s2 = o2.Widget, l2 = n2._activeElement, d2 = n2._extractFormat, u2 = n2.parseFloat, c2 = n2.support.placeholder, p2 = n2.getCulture, h2 = "change", f2 = "disabled", m2 = "readonly", g2 = "k-input-inner", v2 = "spin", _2 = ".kendoNumericTextBox", b2 = "mouseenter" + _2 + " mouseleave.kendoNumericTextBox", k2 = "k-focus", w = "k-hover", y = "focus", x = ".", C = "k-selected", T = "k-disabled", S = "k-invalid", I = "aria-disabled", D = /^(-)?(\d*)$/, E = null, A = e2.isPlainObject, F = e2.extend, z = s2.extend({ init: function(i3, a3) {
          var r3, o3, l3, u3, c3, p3 = this, h3 = a3 && a3.step !== t2;
          s2.fn.init.call(p3, i3, a3), a3 = p3.options, i3 = p3.element.on("focusout" + _2, p3._focusout.bind(p3)).attr("role", "spinbutton"), a3.placeholder = a3.placeholder || i3.attr("placeholder"), r3 = p3.min(i3.attr("min")), o3 = p3.max(i3.attr("max")), l3 = p3._parse(i3.attr("step")), a3.min === E && r3 !== E && (a3.min = r3), a3.max === E && o3 !== E && (a3.max = o3), h3 || l3 === E || (a3.step = l3), p3._initialOptions = F({}, a3), c3 = i3.attr("type"), p3._reset(), p3._wrapper(), p3._arrows(), p3._validation(), p3._input(), n2.support.mobileOS ? p3._text.on("touchend" + _2 + " " + y + _2, function() {
            n2.support.browser.edge ? p3._text.one(y + _2, function() {
              p3._focusin();
            }) : p3._focusin(), p3.selectValue();
          }) : p3._text.on(y + _2, p3._click.bind(p3)), i3.attr("aria-valuemin", a3.min !== E ? a3.min * a3.factor : a3.min).attr("aria-valuemax", a3.max !== E ? a3.max * a3.factor : a3.max), a3.format = d2(a3.format), (u3 = a3.value) == E && (u3 = "number" == c3 ? parseFloat(i3.val()) : i3.val()), p3.value(u3), !a3.enable || i3.is("[disabled]") || e2(p3.element).parents("fieldset").is(":disabled") ? p3.enable(false) : p3.readonly(i3.is("[readonly]")), p3.angular("compile", function() {
            return { elements: p3._text.get() };
          }), p3._label(), p3._ariaLabel(p3._text), p3._applyCssClasses(), n2.notify(p3);
        }, options: { name: "NumericTextBox", decimals: E, enable: true, restrictDecimals: false, min: E, max: E, value: E, step: 1, round: true, culture: "", format: "n", spinners: true, placeholder: "", selectOnFocus: false, factor: 1, upArrowText: "Increase value", downArrowText: "Decrease value", label: null, size: "medium", fillMode: "solid", rounded: "medium" }, events: [h2, v2], _editable: function(e3) {
          var t3 = this, n3 = t3.element, i3 = e3.disable, a3 = e3.readonly, r3 = t3._text.add(n3), o3 = t3.wrapper.off(b2);
          t3._toggleText(true), t3._upArrowEventHandler.unbind("press"), t3._downArrowEventHandler.unbind("press"), n3.off("keydown" + _2).off("keyup" + _2).off("input" + _2).off("paste" + _2), t3._inputLabel && t3._inputLabel.off(_2), a3 || i3 ? (o3.addClass(i3 ? T : "").removeClass(i3 ? "" : T), r3.attr(f2, i3).attr(m2, a3).attr(I, i3)) : (o3.removeClass(T).on(b2, t3._toggleHover), r3.prop(f2, false).prop(m2, false).attr(I, false), t3._upArrowEventHandler.bind("press", function(e4) {
            e4.preventDefault(), t3._spin(1), t3._upArrow.addClass(C);
          }), t3._downArrowEventHandler.bind("press", function(e4) {
            e4.preventDefault(), t3._spin(-1), t3._downArrow.addClass(C);
          }), t3.element.on("keydown" + _2, t3._keydown.bind(t3)).on("keyup" + _2, t3._keyup.bind(t3)).on("paste" + _2, t3._paste.bind(t3)).on("input" + _2, t3._inputHandler.bind(t3)), t3._inputLabel && t3._inputLabel.on("click" + _2, t3.focus.bind(t3)));
        }, readonly: function(e3) {
          this._editable({ readonly: e3 === t2 || e3, disable: false }), this.floatingLabel && this.floatingLabel.readonly(e3 === t2 || e3);
        }, enable: function(e3) {
          this._editable({ readonly: false, disable: !(e3 = e3 === t2 || e3) }), this.floatingLabel && this.floatingLabel.enable(e3 = e3 === t2 || e3);
        }, setOptions: function(e3) {
          var n3 = this;
          s2.fn.setOptions.call(n3, e3), n3.wrapper.toggleClass("k-expand-padding", !n3.options.spinners), n3._text.prop("placeholder", n3.options.placeholder), n3._placeholder(n3.options.placeholder), n3.element.attr({ "aria-valuemin": n3.options.min !== E ? n3.options.min * n3.options.factor : n3.options.min, "aria-valuemax": n3.options.max !== E ? n3.options.max * n3.options.factor : n3.options.max }), n3.options.format = d2(n3.options.format), n3._upArrowEventHandler.destroy(), n3._upArrowEventHandler = null, n3._downArrowEventHandler.destroy(), n3._downArrowEventHandler = null, n3._arrowsWrap.remove(), n3._arrows(), n3._applyCssClasses(), n3._inputLabel && (n3._inputLabel.off(_2), n3._inputLabel.remove(), n3.floatingLabel && (n3.floatingLabel.destroy(), n3._floatingLabelContainer && n3.wrapper.unwrap())), n3._label(), n3._editable({ readonly: n3.options.readonly, disable: !n3.options.enable }), e3.value !== t2 && n3.value(e3.value);
        }, destroy: function() {
          var e3 = this;
          e3._inputLabel && (e3._inputLabel.off(_2), e3.floatingLabel && e3.floatingLabel.destroy()), e3.element.add(e3._text).add(e3._upArrow).add(e3._downArrow).off(_2), e3._upArrowEventHandler.destroy(), e3._downArrowEventHandler.destroy(), e3._form && e3._form.off("reset", e3._resetHandler), s2.fn.destroy.call(e3);
        }, min: function(e3) {
          return this._option("min", e3);
        }, max: function(e3) {
          return this._option("max", e3);
        }, step: function(e3) {
          return this._option("step", e3);
        }, value: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3._value;
          (e3 = n3._parse(e3)) === n3._adjust(e3) && (n3._update(e3), n3._old = n3._value, n3.floatingLabel && n3.floatingLabel.refresh());
        }, focus: function() {
          this._focusin();
        }, _adjust: function(e3) {
          var t3 = this.options, n3 = t3.min, i3 = t3.max;
          return e3 === E || (n3 !== E && e3 < n3 ? e3 = n3 : i3 !== E && e3 > i3 && (e3 = i3)), e3;
        }, _arrows: function() {
          var t3, i3 = this, a3 = function() {
            clearTimeout(i3._spinning), t3.removeClass(C);
          }, r3 = i3.options, o3 = r3.spinners, s3 = i3.element;
          (t3 = s3.siblings(".k-icon-button"))[0] || (t3 = e2(P("increase", r3.upArrowText, r3) + P("decrease", r3.downArrowText, r3)).appendTo(i3.wrapper), i3._arrowsWrap = t3.wrapAll('<span class="k-input-spinner k-spin-button"/>').parent()), o3 || (t3.parent().toggle(o3), i3.wrapper.addClass("k-expand-padding")), i3._upArrow = t3.eq(0), i3._upArrowEventHandler = new n2.UserEvents(i3._upArrow, { release: a3 }), i3._downArrow = t3.eq(1), i3._downArrowEventHandler = new n2.UserEvents(i3._downArrow, { release: a3 });
        }, _validation: function() {
          var t3 = this.element;
          this._validationIcon = e2("<span class='k-input-validation-icon k-icon k-i-warning k-hidden'></span>").insertAfter(t3);
        }, _blur: function() {
          var e3 = this;
          e3._toggleText(true), e3._change(e3.element.val());
        }, _click: function(e3) {
          var t3 = this;
          clearTimeout(t3._focusing), t3._focusing = setTimeout(function() {
            var n3, a3, r3, o3 = e3.target, s3 = i2(o3)[0], l3 = o3.value.substring(0, s3), d3 = t3._format(t3.options.format), u3 = d3[","], c3 = 0;
            u3 && (a3 = new RegExp("\\" + u3, "g"), r3 = new RegExp("(-)?(" + d3.symbol + ")?([\\d\\" + u3 + "]+)(\\" + d3["."] + ")?(\\d+)?")), r3 && (n3 = r3.exec(l3)), n3 && (c3 = n3[0].replace(a3, "").length, -1 != l3.indexOf("(") && t3._value < 0 && c3++), t3._focusin(), i2(t3.element[0], c3), t3.selectValue();
          });
        }, selectValue: function() {
          this.options.selectOnFocus && this.element[0].select();
        }, _getFactorValue: function(e3) {
          var t3 = this.options.factor;
          return t3 && 1 !== t3 && null !== (e3 = n2.parseFloat(e3)) && (e3 /= t3), e3;
        }, _change: function(e3) {
          var t3 = this;
          e3 = t3._getFactorValue(e3), t3._update(e3), e3 = t3._value, t3._old != e3 && (t3._old = e3, t3._typing || t3.element.trigger(h2), t3.trigger(h2)), t3._typing = false;
        }, _culture: function(e3) {
          return e3 || p2(this.options.culture);
        }, _focusin: function() {
          var e3 = this;
          e3.wrapper.addClass(k2), e3._toggleText(false), e3.element[0].focus();
        }, _focusout: function() {
          var e3 = this;
          clearTimeout(e3._focusing), e3.wrapper.removeClass(k2).removeClass(w), e3._blur(), e3._removeInvalidState();
        }, _format: function(e3, t3) {
          var n3 = this._culture(t3).numberFormat;
          return (e3 = e3.toLowerCase()).indexOf("c") > -1 ? n3 = n3.currency : e3.indexOf("p") > -1 && (n3 = n3.percent), n3;
        }, _input: function() {
          var t3, i3 = this, a3 = i3.options, r3 = i3.element.addClass(g2).show()[0], o3 = r3.accessKey;
          (t3 = i3.wrapper.find(x + g2).first()).length < 2 && (t3 = e2('<input type="text"/>').attr(n2.attr("validate"), false).insertBefore(r3));
          try {
            r3.setAttribute("type", "text");
          } catch (e3) {
            r3.type = "text";
          }
          t3[0].title = r3.title, t3[0].tabIndex = r3.tabIndex, t3[0].style.cssText = r3.style.cssText, t3.prop("placeholder", a3.placeholder), o3 && (t3.attr("accesskey", o3), r3.accessKey = ""), i3._text = t3.addClass(r3.className).attr({ role: "spinbutton", "aria-valuemin": a3.min !== E ? a3.min * a3.factor : a3.min, "aria-valuemax": a3.max !== E ? a3.max * a3.factor : a3.max, autocomplete: "off" });
        }, _keydown: function(e3) {
          var t3 = this, n3 = e3.keyCode;
          n3 === a2.NUMPAD_DOT && (t3._numPadDot = true), n3 != a2.DOWN ? n3 != a2.UP ? n3 != a2.ENTER ? (n3 != a2.TAB && (t3._typing = true), t3._cachedCaret = i2(t3.element)) : t3._change(t3.element.val()) : t3._step(1) : t3._step(-1);
        }, _keyup: function() {
          this._removeInvalidState();
        }, _inputHandler: function() {
          var e3 = this.element, t3 = e3.val(), n3 = this.options.min, a3 = this._format(this.options.format), r3 = a3["."], o3 = null !== n3 && n3 >= 0 && "-" === t3.charAt(0);
          this._numPadDot && r3 !== x && (t3 = t3.replace(x, r3), this.element.val(t3), this._numPadDot = false), this._isPasted && this._parse(t3) && (t3 = this._parse(t3).toString().replace(x, a3["."])), this._numericRegex(a3).test(t3) && !o3 ? this._oldText = t3 : (this._blinkInvalidState(), this.element.val(this._oldText), this._cachedCaret && (i2(e3, this._cachedCaret[0]), this._cachedCaret = null)), this._isPasted = false;
        }, _blinkInvalidState: function() {
          var e3 = this;
          e3._addInvalidState(), clearTimeout(e3._invalidStateTimeout), e3._invalidStateTimeout = setTimeout(e3._removeInvalidState.bind(e3), 100);
        }, _addInvalidState: function() {
          this.wrapper.addClass(S), this._validationIcon.removeClass("k-hidden");
        }, _removeInvalidState: function() {
          var e3 = this;
          e3.wrapper.removeClass(S), e3._validationIcon.addClass("k-hidden"), e3._invalidStateTimeout = null;
        }, _numericRegex: function(e3) {
          var t3 = this, n3 = e3["."], i3 = t3.options.decimals, a3 = "*";
          return n3 === x && (n3 = "\\" + n3), i3 === E && (i3 = e3.decimals), 0 === i3 && t3.options.restrictDecimals ? D : (t3.options.restrictDecimals && (a3 = "{0," + i3 + "}"), t3._separator !== n3 && (t3._separator = n3, t3._floatRegExp = new RegExp("^(-)?(((\\d+(" + n3 + "\\d" + a3 + ")?)|(" + n3 + "\\d" + a3 + ")))?$")), t3._floatRegExp);
        }, _paste: function(e3) {
          var t3 = this, n3 = e3.target, i3 = n3.value, a3 = t3._format(t3.options.format);
          t3._isPasted = true, setTimeout(function() {
            var e4 = t3._parse(n3.value);
            e4 === E ? t3._update(i3) : (n3.value = e4.toString().replace(x, a3["."]), t3._adjust(e4) === e4 && t3._numericRegex(a3).test(n3.value) || (i3 = t3._getFactorValue(n3.value), t3._update(i3)));
          });
        }, _option: function(e3, n3) {
          var i3 = this, a3 = i3.element, r3 = i3.options;
          if (n3 === t2) return r3[e3];
          ((n3 = i3._parse(n3)) || "step" !== e3) && (r3[e3] = n3, a3.add(i3._text).attr("aria-value" + e3, n3), a3.attr(e3, n3));
        }, _spin: function(e3, t3) {
          var n3 = this;
          t3 = t3 || 500, clearTimeout(n3._spinning), n3._spinning = setTimeout(function() {
            n3._spin(e3, 50);
          }, t3), n3._step(e3);
        }, _step: function(e3) {
          var t3 = this, n3 = t3.element, i3 = t3._value, a3 = t3._parse(n3.val()) || 0, r3 = t3.options.decimals || 2;
          l2() != n3[0] && t3._focusin(), t3.options.factor && a3 && (a3 /= t3.options.factor), a3 = +(a3 + t3.options.step * e3).toFixed(r3), a3 = t3._adjust(a3), t3._update(a3), t3._typing = false, i3 !== a3 && t3.trigger(v2);
        }, _toggleHover: function(t3) {
          e2(t3.currentTarget).toggleClass(w, "mouseenter" === t3.type);
        }, _toggleText: function(e3) {
          var t3 = this;
          t3._text.toggle(e3), e3 ? t3._text.removeAttr("aria-hidden") : t3._text.attr("aria-hidden", "true"), t3.element.toggle(!e3);
        }, _parse: function(e3, t3) {
          return u2(e3, this._culture(t3), this.options.format);
        }, _round: function(e3, t3) {
          return (this.options.round ? n2._round : H)(e3, t3);
        }, _update: function(e3) {
          var t3, i3, a3 = this, r3 = a3.options, o3 = r3.factor, s3 = r3.format, l3 = r3.decimals, d3 = a3._culture(), u3 = a3._format(s3, d3);
          l3 === E && (l3 = u3.decimals), (i3 = (e3 = a3._parse(e3, d3)) !== E) && (e3 = parseFloat(a3._round(e3, l3), 10)), a3._value = e3 = a3._adjust(e3), a3._placeholder(n2.toString(e3, s3, d3)), i3 ? (o3 && (e3 = parseFloat(a3._round(e3 * o3, l3), 10)), -1 !== (e3 = e3.toString()).indexOf("e") && (e3 = a3._round(+e3, l3)), t3 = e3, e3 = e3.replace(x, u3["."])) : (e3 = null, t3 = null), a3.element.val(e3), a3._oldText = e3, a3.element.add(a3._text).attr("aria-valuenow", t3);
        }, _placeholder: function(e3) {
          var t3 = this._text;
          t3.val(e3), c2 || e3 || t3.val(this.options.placeholder), t3.attr("title", this.element.attr("title") || t3.val());
        }, _label: function() {
          var i3, a3, r3 = this, o3 = r3.element, s3 = r3.options, l3 = o3.attr("id");
          null !== s3.label && (i3 = !!A(s3.label) && s3.label.floating, a3 = A(s3.label) ? s3.label.content : s3.label, i3 && (r3._floatingLabelContainer = r3.wrapper.wrap("<span></span>").parent(), r3.floatingLabel = new n2.ui.FloatingLabel(r3._floatingLabelContainer, { widget: r3 })), n2.isFunction(a3) && (a3 = a3.call(r3)), a3 || (a3 = ""), l3 || (l3 = s3.name + "_" + n2.guid(), o3.attr("id", l3)), r3._inputLabel = e2("<label class='k-label k-input-label' for='" + l3 + "'>" + a3 + "</label>'").insertBefore(r3.wrapper), r3.element.attr("disabled") === t2 && r3.element.attr("readonly") === t2 && r3._inputLabel.on("click" + _2, r3.focus.bind(r3)));
        }, _wrapper: function() {
          var e3, t3 = this.element, n3 = t3[0];
          (e3 = t3.parents(".k-numerictextbox")).is("span.k-numerictextbox") || (e3 = t3.hide().wrap("<span/>").parent()), e3[0].style.cssText = n3.style.cssText, n3.style.width = "", this.wrapper = e3.addClass("k-numerictextbox k-input").addClass(n3.className).removeClass("input-validation-error").css("display", "");
        }, _reset: function() {
          var t3 = this, n3 = t3.element, i3 = n3.attr("form"), a3 = i3 ? e2("#" + i3) : n3.closest("form");
          a3[0] && (t3._resetHandler = function() {
            setTimeout(function() {
              t3.value(n3[0].value), t3.max(t3._initialOptions.max), t3.min(t3._initialOptions.min);
            });
          }, t3._form = a3.on("reset", t3._resetHandler));
        } });
        function P(e3, t3, n3) {
          var i3 = "increase" === e3 ? "arrow-n" : "arrow-s", a3 = "increase" === e3 ? "increase" : "decrease";
          return r2.renderButton('<button role="button" tabindex="-1" unselectable="on" class="k-spinner-' + a3 + '" aria-label="' + t3 + '" title="' + t3 + '"></button>', F({}, n3, { icon: i3, shape: null, rounded: null }));
        }
        function H(e3, t3) {
          var n3 = parseFloat(e3, 10).toString().split(x);
          return n3[1] && (n3[1] = n3[1].substring(0, t3)), n3.join(x);
        }
        n2.cssProperties.registerPrefix("NumericTextBox", "k-input-"), n2.cssProperties.registerValues("NumericTextBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), o2.plugin(z);
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.parseColor, o2 = n2.ui.Popup.TabKeyTrap, s2 = e2.extend, l2 = ".kendoColorTools", d2 = "keydown" + l2, u2 = "k-disabled", c2 = a2.extend({ init: function(e3, t3) {
          var n3 = this;
          a2.fn.init.call(n3, e3, t3), e3 = n3.element, t3 = n3.options, e3.is("input") ? (n3._initialValue(), n3._preventDefaultLabelClick()) : n3._value = r2(t3.value), n3._tabIndex = e3.attr("tabIndex") || 0, t3._standalone && (n3._triggerSelect = n3._triggerChange);
        }, options: { name: "ColorSelector", ARIATemplate: 'Current selected color is #=data || "none"#', value: null, _standalone: true }, events: ["change", "select", "forceSelect", "cancel"], color: function(e3) {
          return e3 !== t2 && (this._value = r2(e3), this.element.is("input") && this._updateInput(this._value), this._updateUI(this._value)), this._value;
        }, value: function(e3) {
          return (e3 = this.color(e3)) && (e3 = this.options.opacity ? e3.toCssRgba() : e3.toCss()), e3 || null;
        }, enable: function(e3) {
          0 === arguments.length && (e3 = true), this.element.is("input") && this.element.attr("disabled", !e3), this.wrapper.toggleClass(u2, !e3), this._onEnable(e3);
        }, _attachFocusEvents: function() {
          this.wrapper.on(d2, this._navKeydown.bind(this)).on("focusout" + l2, this._navFocusout.bind(this));
        }, _initialValue: function() {
          var e3 = this.element, t3 = this.options.value || e3.attr("value");
          t3 && (this._value = r2(t3, true)), this.element.val(t3);
        }, _innerTabindex: function(e3) {
          this.wrapper.find(".k-draghandle, .k-button, .k-input-inner").attr("tabindex", e3);
        }, _isInputTypeColor: function() {
          var e3 = this.element[0];
          return /^input$/i.test(e3.tagName) && /^color$/i.test(e3.type);
        }, _navFocusout: function() {
          var e3 = this, t3 = e3.wrapper[0];
          setTimeout(function() {
            t3.contains(document.activeElement) || e3._releaseInnerFocus();
          });
        }, _navKeydown: function(e3) {
          var i3 = this.wrapper;
          e3.keyCode === n2.keys.ENTER && i3.attr("tabindex") ? (e3.preventDefault(), this._trapInnerFocus()) : e3.keyCode === n2.keys.ESC && i3.attr("tabindex") === t2 && (this._releaseInnerFocus(), this.wrapper.trigger("focus"));
        }, _releaseInnerFocus: function() {
          this._tabKeyTrap.removeTrap(), this.wrapper.attr("tabindex", this._tabIndex), this._innerTabindex(-1);
        }, _select: function(e3, t3) {
          var n3 = this._value;
          e3 = this.color(e3), t3 || (e3 && (!n3 || !e3.equals(n3)) || null === e3 && e3 !== n3 ? (this.element.trigger("change"), this.trigger("change", { value: this.value() })) : this._standalone || this.trigger("cancel"));
        }, _navigation: function() {
          var e3 = this.value();
          e3 && e3.indexOf("rgba") > -1 && (e3 = e3.replace("rgba", "RGBA")), this.options._otOfPicker ? (this._innerTabindex(-1), this._attachFocusEvents(), this._tabKeyTrap = new o2(this.wrapper), this._ariaTemplate = n2.template(this.options.ARIATemplate), this.wrapper.attr({ "aria-label": this._ariaTemplate(e3 || ""), tabindex: this._tabIndex })) : (this.wrapper.removeAttr("tabindex"), this.wrapper.removeAttr("aria-label"), this.wrapper.removeAttr("role"), this.wrapper.removeAttr("aria-keyshortcuts"));
        }, _trapInnerFocus: function() {
          this._innerTabindex(0), this.wrapper.removeAttr("tabindex"), this.wrapper.find(".k-hsv-draghandle").trigger("focus"), this._tabKeyTrap.trap();
        }, _triggerSelect: function(e3) {
          p2(this, "select", e3);
        }, _triggerChange: function(e3) {
          p2(this, "change", e3);
        }, destroy: function() {
          this.element && this.element.off(l2), this.wrapper && (this.wrapper.off(d2), this.wrapper.off(l2).find("*").off(l2), this.wrapper = null), a2.fn.destroy.call(this);
        }, _preventDefaultLabelClick: function() {
          var e3 = this.element, t3 = e3.closest("label"), n3 = e3.attr("id");
          n3 && (t3 = t3.add('label[for="' + n3 + '"]')), t3.on("click", function(e4) {
            e4.preventDefault();
          });
        }, _updateUI: e2.noop, _updateInput: function(e3) {
          var t3, i3 = "";
          e3 && (i3 = this._isInputTypeColor() || 1 == e3.a ? e3.toCss() : e3.toCssRgba(), this.element.val(i3)), this.options._otOfPicker && (this._ariaTemplate || (this._ariaTemplate = n2.template(this.options.ARIATemplate)), (t3 = this.value()) && t3.indexOf("rgba") > -1 && (t3 = t3.replace("rgba", "RGBA")), this.wrapper.attr("aria-label", this._ariaTemplate(t3 || "")));
        }, _selectOnHide: function() {
          return null;
        }, _cancel: function() {
          this.trigger("cancel");
        } });
        function p2(e3, t3, n3) {
          ((n3 = r2(n3)) && !n3.equals(e3.color()) || n3 !== e3.color()) && ("change" == t3 && (e3._value = n3, e3._updateInput(e3._value)), n3 && 1 != n3.a ? n3 = n3.toCssRgba() : n3 && (n3 = n3.toCss()), e3.trigger(t3, { value: n3 }));
        }
        s2(i2, { colorpicker: { ColorSelector: c2 } });
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = kendo.ui.colorpicker, i2 = e2.extend, a2 = kendo.Color, r2 = kendo.parseColor;
        function o2(e3, t3) {
          return n3 = s2(l2(e3, t3)), i3 = s2(l2(t3, { r: 0, g: 0, b: 0, a: 1 })), (Math.max(n3, i3) + 0.05) / (Math.min(n3, i3) + 0.05);
          var n3, i3;
        }
        function s2(e3) {
          var t3 = [e3.r, e3.g, e3.b].map(function(e4) {
            return (e4 /= 255) <= 0.03928 ? e4 / 12.92 : Math.pow((e4 + 0.055) / 1.055, 2.4);
          });
          return 0.2126 * t3[0] + 0.7152 * t3[1] + 0.0722 * t3[2];
        }
        function l2(e3, t3) {
          var n3 = d2(e3.r, 0, 255), i3 = d2(e3.g, 0, 255), a3 = d2(e3.b, 0, 255), r3 = d2(e3.a, 0, 1), o3 = d2(t3.r, 0, 255), s3 = d2(t3.g, 0, 255), l3 = d2(t3.b, 0, 255);
          return { r: Math.round((1 - r3) * o3 + r3 * n3), g: Math.round((1 - r3) * s3 + r3 * i3), b: Math.round((1 - r3) * l3 + r3 * a3) };
        }
        function d2(e3, n3, i3) {
          return null === (a3 = e3) || a3 === t2 || isNaN(e3) || e3 <= n3 ? n3 : e3 >= i3 ? i3 : e3;
          var a3;
        }
        function u2(e3, t3) {
          if (0 === e3.length) return "";
          var n3 = e3.reduce(function(e4, n4, i3, a3) {
            return 0 === i3 ? kendo.format("M {0},{1}", n4[0], n4[1]) : kendo.format("{0} {1}", e4, t3(n4, i3, a3));
          }, "");
          return kendo.format('<path d="{0}" fill="none" stroke="white" stroke-width="1"/>', n3);
        }
        function c2(e3, t3) {
          var n3 = t3[0] - e3[0], i3 = t3[1] - e3[1];
          return { length: Math.sqrt(Math.pow(n3, 2) + Math.pow(i3, 2)), angle: Math.atan2(i3, n3) };
        }
        i2(n2, { contrastToolUtils: { getContrastFromTwoRGBAs: o2, renderSvgCurveLine: function(e3, t3, n3) {
          var s3, l3, p2 = function(s4, l4, u3, c3, h3) {
            var f3 = (u3 + c3) / 2, m3 = i2({}, t3, { s: l4 / e3.width, v: 1 - f3 / e3.height }), g3 = o2(r2(function(e4) {
              var t4 = d2(e4.h, 0, 359.9), n4 = d2(e4.s, 0, 1), i3 = d2(e4.v, 0, 1), r3 = d2(e4.a, 0, 1);
              return a2.fromHSV(t4, n4, i3, r3).toCssRgba();
            }(m3)).toBytes(), r2(n3).toBytes());
            return u3 + 0.5 > c3 ? g3 < s4 + 1 && g3 > s4 - 1 ? f3 : null : h3(g3, s4) ? p2(s4, l4, u3, c3 - (c3 - u3) / 2, h3) : p2(s4, l4, u3 + (c3 - u3) / 2, c3, h3);
          }, h2 = function(e4, t4) {
            return e4 > t4;
          }, f2 = function(e4, t4) {
            return e4 < t4;
          }, m2 = function(t4, n4, i3) {
            for (var a3 = [], r3 = 0; r3 <= e3.width; r3 += e3.width / n4) {
              var o3 = p2(t4, r3, 0, e3.height, i3 ? f2 : h2);
              null !== o3 && a3.push([r3, o3]);
            }
            return a3;
          }, g2 = (l3 = c2, s3 = function(e4, t4, n4, i3) {
            var a3 = 0.1, r3 = l3(t4 || e4, n4 || e4), o3 = r3.angle + (i3 ? Math.PI : 0), s4 = r3.length * a3;
            return [e4[0] + Math.cos(o3) * s4, e4[1] + Math.sin(o3) * s4];
          }, function(e4, t4, n4) {
            var i3 = s3(n4[t4 - 1], n4[t4 - 2], e4), a3 = s3(e4, n4[t4 - 1], n4[t4 + 1], true);
            return kendo.format("C {0},{1} {2},{3} {4},{5}", i3[0], i3[1], a3[0], a3[1], e4[0], e4[1]);
          });
          return '<svg xmlns="http://www.w3.org/2000/svg" style="position: absolute; overflow: visible; pointer-events: none; left: 0px; top: 0px; z-index: 3;" >' + (u2(m2(4.5, 16, false), g2) + u2(m2(4.5, 16, true), g2) + u2(m2(7, 16, false), g2) + u2(m2(7, 16, true), g2)) + "</svg>";
        } } });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.Observable, r2 = n2.parseColor, o2 = e2.extend, s2 = n2.Color, l2 = n2.keys, d2 = "#ffffff", u2 = "#000000", c2 = "keydown.kendoColorTools", p2 = i2.colorpicker.ColorSelector, h2 = i2.colorpicker.contrastToolUtils;
        function f2(e3) {
          e3.preventDefault();
        }
        var m2 = a2.extend({ init: function(e3, t3) {
          var i3 = this;
          i3.element = e3, i3.options = t3, i3._viewModel = n2.observable({ switchMode: i3.switchMode.bind(i3), keydown: i3.keydown.bind(i3), mode: function(e4) {
            return e4 === this.get("format");
          }, format: t3.format, formats: t3.formats, rgb: null, hex: function() {
            return null !== this.get("rgb") && this.get("rgb").toCss({ alpha: t3.opacity });
          } }), i3._changeHandler = i3.change.bind(i3), i3._viewModel.bind("change", i3._changeHandler), i3._render(), i3.element.on(c2, i3.keydown.bind(i3)), a2.fn.init.call(i3);
        }, _template: n2.template(`# if (options.formats && options.formats.length > 1) { #<div class="k-vstack"><button class="k-colorgradient-toggle-mode" data-#:ns#role="button" data-#:ns#icon="arrows-kpi" data data-#:ns#bind="click: switchMode" data-#:ns#fill-mode="flat" data-#:ns#size="#: options.size #" title="#: options.messages.toggleFormat #"></button></div># } ## if (options.formats && options.formats.indexOf("hex") >= 0) { #<div class="k-vstack k-flex-1" data-#:ns#bind="visible: mode('hex')"><input type="text" data-#:ns#bind="value: hex" data-#:ns#role="textbox" data-#:ns#size="#: options.size #" tabindex="#:options.tabindex#"  aria-label="#: options.messages.hex #"/><label class="k-colorgradient-input-label">HEX</label></div># } ## if (options.formats && options.formats.indexOf("rgb") >= 0) { #<div  class="k-vstack" data-#:ns#bind="visible: mode('rgb')"><input tabindex="#:options.tabindex#" data-#:ns#bind="value: rgb.r" data-#:ns#role="numerictextbox" data-#:ns#size="#: options.size #" data-#:ns#max="255" data-#:ns#min="0" data-#:ns#decimals="0" data-#:ns#spinners="false" data-#:ns#format="n0"  aria-label="#: options.messages.red #" /><label class="k-colorgradient-input-label">R</label></div><div  class="k-vstack" data-#:ns#bind="visible: mode('rgb')"><input tabindex="#:options.tabindex#" data-#:ns#bind="value: rgb.g" data-#:ns#role="numerictextbox" data-#:ns#size="#: options.size #" data-#:ns#max="255" data-#:ns#min="0" data-#:ns#decimals="0" data-#:ns#spinners="false" data-#:ns#format="n0"  aria-label="#: options.messages.green #" /><label class="k-colorgradient-input-label">G</label></div><div  class="k-vstack" data-#:ns#bind="visible: mode('rgb')"><input tabindex="#:options.tabindex#" data-#:ns#bind="value: rgb.b" data-#:ns#role="numerictextbox" data-#:ns#size="#: options.size #" data-#:ns#max="255" data-#:ns#min="0" data-#:ns#decimals="0" data-#:ns#spinners="false" data-#:ns#format="n0"  aria-label="#: options.messages.blue #"/><label class="k-colorgradient-input-label">B</label></div>#if(options.opacity){#<div  class="k-vstack" data-#:ns#bind="visible: mode('rgb')"><input tabindex="#:options.tabindex#" data-#:ns#bind="value: rgb.a" data-#:ns#role="numerictextbox" data-#:ns#size="#: options.size #" data-#:ns#step="0.1" data-#:ns#max="1" data-#:ns#min="0" data-#:ns#decimals="1" data-#:ns#spinners="false" data-#:ns#format="n1"  aria-label="#: options.messages.alpha #" /><label class="k-colorgradient-input-label">A</label></div># } ## } #`), destroy: function() {
          var e3 = this;
          e3._viewModel.unbind("change", e3._changeHandler), n2.unbind(e3.element), n2.destroy(e3.element), e3.element.off(c2), delete e3._viewModel, delete e3._changeHandler;
        }, change: function(e3) {
          var t3 = this;
          e3.field.indexOf("rgb") >= 0 ? (t3._color = t3._tryParseColor(t3._viewModel.rgb.toCssRgba()), t3._viewModel.set("hex", t3._color.toCss({ alpha: t3.options.opacity }))) : "hex" === e3.field && (t3._color = t3._tryParseColor(e3.sender[e3.field]), t3._viewModel.set("rgb", t3._color)), t3._preventChangeEvent || t3.trigger("change", { value: t3._color });
        }, keydown: function(t3) {
          var n3 = this, i3 = e2(t3.target).data("kendoTextBox");
          t3.keyCode === l2.ENTER && e2(t3.target).is("input") && (i3 && i3._change && i3._change(), n3.trigger("change", { value: n3._color }), n3.trigger("select", { value: n3._color }));
        }, reset: function() {
          var e3 = this;
          e3._preventChangeEvent = true, e3._viewModel.set("rgb", r2(u2)), delete e3._preventChangeEvent;
        }, switchMode: function() {
          var e3 = this, t3 = e3._viewModel, n3 = t3.format, i3 = t3.formats.indexOf(n3) + 1;
          i3 = i3 >= t3.formats.length ? 0 : i3, e3._preventChangeEvent = true, e3._viewModel.set("format", t3.formats[i3]), delete e3._preventChangeEvent;
        }, value: function(e3) {
          var t3 = this;
          t3._color = e3 && e3.toBytes() || r2(u2), t3._preventChangeEvent = true, t3._viewModel.set("rgb", t3._color), delete t3._preventChangeEvent;
        }, _render: function() {
          var e3 = this;
          e3.element.append(e3._template({ ns: n2.ns, guid: n2.guid(), options: e3.options })).parent(), n2.bind(e3.element, e3._viewModel), e3.element.attr("data-" + n2.ns + "stop", "stop");
        }, _tryParseColor: function(e3) {
          try {
            e3 = r2(e3) || this._color;
          } catch (t3) {
            e3 = this._color;
          }
          return e3;
        } }), g2 = p2.extend({ init: function(t3, i3) {
          var a3, r3 = this;
          p2.fn.init.call(r3, t3, i3), (i3 = r3.options = n2.deepExtend({}, r3.options, i3)).messages.previewInput && (i3.messages.hex = i3.messages.previewInput), i3.messages = i3.messages ? e2.extend(r3.options.messages, i3.messages) : r3.options.messages, t3 = r3.element, r3._wrapper(), r3._sliders(), r3._hsvArea(), a3 = r3._value, r3._gradientInputs(), r3._updateUI(a3), r3._navigation();
        }, options: { name: "ColorGradient", opacity: false, hsvDragARIATemplate: 'Color well with two-dimensional slider for selecting saturation and value. Selected color is #=data || "none"#', input: true, format: "hex", formats: ["rgb", "hex"], contrastTool: false, size: "medium", messages: { contrastRatio: "Contrast ratio:", fail: "Fail", pass: "Pass", hex: "HEX", toggleFormat: "Toggle format", red: "Red channel", green: "Green channel", blue: "Blue channel", alpha: "Alpha channel" }, _otOfPicker: true }, _template: n2.template('<div class="k-colorgradient-canvas k-hstack"><div class="k-hsv-rectangle"><div class="k-hsv-gradient"></div><div role="slider" aria-orientation="undefined" class="k-hsv-draghandle k-draghandle"></div></div><div class="k-hsv-controls k-hstack"><input class="k-hue-slider k-colorgradient-slider" /># if (opacity) { #<input class="k-alpha-slider k-colorgradient-slider" /># } #</div></div># if (input) { #<div class="k-colorgradient-inputs k-hstack"></div># } ## if (contrastTool) { #<div class="k-colorgradient-color-contrast k-vbox"></div># } #'), focus: function() {
          this._hsvHandle.focus();
        }, setBackgroundColor: function(t3) {
          var n3 = this;
          n3.options.contrastTool && (n3.options.contrastTool = e2.isPlainObject(n3.options.contrastTool) ? o2({}, n3.options.contrastTool, { backgroundColor: t3 }) : { backgroundColor: t3 }, n3._updateColorContrast(n3.color() || r2(d2)));
        }, _getHSV: function(e3, t3, n3, i3) {
          var a3 = this, o3 = a3._hsvRect, l3 = o3.width(), d3 = o3.height(), c3 = this._hsvHandle.position();
          return l3 && d3 ? (null == e3 && (e3 = a3._hueSlider.value()), null == t3 && (t3 = c3.left / l3), null == n3 && (n3 = 1 - c3.top / d3), null == i3 && (i3 = a3._opacitySlider ? a3._opacitySlider.value() / 100 : 1), s2.fromHSV(e3, t3, n3, i3)) : a3.color() ? a3.color().toHSV() : r2(u2);
        }, _gradientInputs: function() {
          var e3 = this, t3 = e3.options;
          e3._colorgradientInputs.length && (e3._colorInput = new m2(e3._colorgradientInputs, o2({}, t3, { tabindex: 0 })), e3._colorInput.bind("change", function(t4) {
            e3._updateUI(t4.value, true);
          }), e3._colorInput.bind("select", function(t4) {
            var n3 = r2(t4.value);
            e3._select(n3), e3.trigger("forceSelect", { value: e3.value() });
          }));
        }, _hsvArea: function() {
          var e3, t3, i3 = this, a3 = i3.wrapper.find(".k-hsv-rectangle"), r3 = a3.find(".k-draghandle").attr("tabIndex", 0).on(c2, (e3 = i3._hsvKeydown, t3 = i3, function() {
            return e3.apply(t3, arguments);
          })), o3 = this.value();
          function s3(e4, t4) {
            var n3, a4, r4 = this.offset, o4 = e4 - r4.left, s4 = t4 - r4.top, l3 = this.width, d3 = this.height;
            n3 = (o4 = o4 < 0 ? 0 : o4 > l3 ? l3 : o4) / l3, a4 = 1 - (s4 = s4 < 0 ? 0 : s4 > d3 ? d3 : s4) / d3, i3._svChange(n3, a4);
          }
          o3 && o3.indexOf("rgba") > -1 && (o3 = o3.replace("rgba", "RGBA")), this._hsvDragAriaTemplate || (this._hsvDragAriaTemplate = n2.template(this.options.hsvDragARIATemplate)), r3.attr("aria-label", this._hsvDragAriaTemplate(o3 || "")), i3._hsvEvents = new n2.UserEvents(a3, { global: true, press: function(e4) {
            this.offset = n2.getOffset(a3), this.width = a3.width(), this.height = a3.height(), r3.focus(), s3.call(this, e4.x.location, e4.y.location);
          }, start: function() {
            a3.addClass("k-dragging"), r3.focus();
          }, move: function(e4) {
            e4.preventDefault(), s3.call(this, e4.x.location, e4.y.location);
          }, end: function() {
            a3.removeClass("k-dragging");
          } }), i3._hsvRect = a3, i3._hsvHandle = r3;
        }, _hsvKeydown: function(e3) {
          var t3 = this;
          function n3(n4, i4) {
            var a3 = t3._getHSV();
            a3[n4] += i4 * (e3.shiftKey ? 0.01 : 0.05), a3[n4] < 0 && (a3[n4] = 0), a3[n4] > 1 && (a3[n4] = 1), t3._updateUI(a3), f2(e3);
          }
          function i3(n4) {
            var i4 = t3._getHSV();
            i4.h += n4 * (e3.shiftKey ? 1 : 5), i4.h < 0 && (i4.h = 0), i4.h > 359 && (i4.h = 359), t3._updateUI(i4), f2(e3);
          }
          switch (e3.keyCode) {
            case l2.LEFT:
              e3.ctrlKey ? i3(-1) : n3("s", -1);
              break;
            case l2.RIGHT:
              e3.ctrlKey ? i3(1) : n3("s", 1);
              break;
            case l2.UP:
              n3(e3.ctrlKey && t3._opacitySlider ? "a" : "v", 1);
              break;
            case l2.DOWN:
              n3(e3.ctrlKey && t3._opacitySlider ? "a" : "v", -1);
              break;
            case l2.ENTER:
              t3._select(t3._getHSV());
              break;
            case l2.F2:
              t3._colorInput.element.find("input").trigger("focus").select();
              break;
            case l2.ESC:
              t3._cancel();
          }
        }, _onEnable: function(e3) {
          var t3 = this.wrapper;
          this._hueSlider.enable(e3), this._opacitySlider && this._opacitySlider.enable(e3), t3.find("input").attr("disabled", !e3), this.options._standalone && (e3 ? t3.removeAttr("aria-disabled") : t3.attr("aria-disabled", true));
        }, _reset: function() {
          var e3 = this;
          e3._colorInput && e3._colorInput.reset(), e3._resetHsv(), e3._resetColorContrast();
        }, _resetColorContrast: function() {
          var e3 = this, t3 = e3.options.contrastTool;
          e3._contrastTool.length && e3._updateColorContrast(t3.backgroundColor ? r2(t3.backgroundColor) : r2(d2));
        }, _resetHsv: function() {
          var e3 = r2(u2);
          this._updateHsv(e3);
        }, _sliders: function() {
          var e3 = this, t3 = e3.wrapper, n3 = t3.find(".k-hue-slider"), i3 = t3.find(".k-alpha-slider");
          function a3(t4) {
            e3._updateUI(e3._getHSV(t4.value, null, null, null));
          }
          function r3(t4) {
            e3._updateUI(e3._getHSV(null, null, null, t4.value / 100));
          }
          n3.attr("aria-label", "hue"), e3._hueSlider = n3.kendoSlider({ min: 0, max: 360, tickPlacement: "none", showButtons: false, orientation: "vertical", slide: a3, change: a3 }).data("kendoSlider"), i3.attr("aria-label", "opacity"), e3._opacitySlider = i3.kendoSlider({ min: 0, max: 100, tickPlacement: "none", showButtons: false, orientation: "vertical", slide: r3, change: r3 }).data("kendoSlider");
        }, _svChange: function(e3, t3) {
          var n3 = this._getHSV(null, e3, t3, null);
          this._updateUI(n3);
        }, _updateColorContrast: function(e3) {
          var t3 = this, i3 = t3.options.contrastTool, a3 = i3.backgroundColor ? r2(i3.backgroundColor) : r2(d2), o3 = h2.getContrastFromTwoRGBAs(r2(e3.toCssRgba()), a3), s3 = n2.template('<div class="k-contrast-ratio"><span class="k-contrast-ratio-text">#:messages.contrastRatio# #:kendo.toString(ratio, "n2")#</span><span class="k-contrast-validation k-text-success">#if (ratio > 4.5) {#<span class="k-icon k-i-check"></span>#}##if (ratio > 7) {#<span class="k-icon k-i-check"></span>#}#</span></div>'), l3 = n2.template('<div><span>#:level#: #:limit# </span>#if (ratio > limit) {#<span class="k-contrast-validation k-text-success">#:messages.pass# <span class="k-icon k-i-check"></span></span>#} else {#<span class="k-contrast-validation k-text-error">#:messages.fail# <span class="k-icon k-i-close"></span></span>#}#</div>'), u3 = "";
          u3 += s3({ messages: t3.options.messages, ratio: o3 }), u3 += l3({ messages: t3.options.messages, ratio: o3, limit: 4.5, level: "AA" }), u3 += l3({ messages: t3.options.messages, ratio: o3, limit: 7, level: "AAA" }), t3._contrastTool.find(".k-contrast-ratio, div").remove(), t3._contrastTool.append(u3), t3._updateContrastSvg(a3);
        }, _updateContrastSvg: function(t3) {
          var n3, i3 = this._hsvRect, a3 = "k-color-contrast-svg", r3 = { width: i3.width(), height: i3.height() };
          r3.width && r3.height && (n3 = e2(h2.renderSvgCurveLine(r3, this._getHSV(), t3)).addClass(a3), i3.find("." + a3).remove(), i3.append(n3));
        }, _updateHsv: function(e3) {
          var t3 = this, n3 = t3._hsvRect;
          e3 = e3.toHSV(), t3._hsvHandle.css({ left: e3.s * n3.width() + "px", top: (1 - e3.v) * n3.height() + "px" }), t3._hueElements.css("background-color", s2.fromHSV(e3.h, 1, 1, 1).toCss()), t3._hueSlider.value(e3.h), t3._opacitySlider && (t3._opacitySlider.wrapper.find(".k-slider-track").css("background", "linear-gradient(to top, transparent, " + s2.fromHSV(e3.h, 1, 1, 1).toCss()), t3._opacitySlider.value(100 * e3.a)), t3._updateHsvAria(e3.s, e3.v);
        }, _updateHsvAria: function(e3, t3) {
          var n3 = this.value();
          n3 && n3.indexOf("rgba") > -1 && (n3 = n3.replace("rgba", "RGBA")), this._hsvHandle.attr({ "aria-label": this._hsvDragAriaTemplate(n3 || ""), "aria-valuenow": Math.round(100 * e3), "aria-valuetext": "saturation: " + Math.round(100 * e3) + "%, value: " + Math.round(100 * t3) + "%" });
        }, _updateUI: function(e3, t3) {
          var n3 = this;
          e3 ? (!t3 && n3._colorInput && n3._colorInput.value(e3), n3._triggerSelect(e3), n3._updateHsv(e3), n3._contrastTool.length && n3._updateColorContrast(e3)) : n3._reset();
        }, _wrapper: function() {
          var t3, n3 = this.options;
          (t3 = this.element.is("input") ? this.element.addClass("k-hidden").wrap("<div>").parent() : this.element).addClass("k-colorgradient").attr({ role: "textbox", "aria-keyshortcuts": "Enter" }).append(this._template(n3)), this._hueElements = e2(".k-hsv-rectangle, .k-alpha-slider .k-slider-track", t3), this._colorgradientInputs = e2(".k-colorgradient-inputs", t3), this._contrastTool = e2(".k-colorgradient-color-contrast", t3), this.wrapper = t3;
        }, destroy: function() {
          this._hsvEvents.destroy(), this._hueSlider.destroy(), this._opacitySlider && this._opacitySlider.destroy(), this._colorInput && this._colorInput.destroy(), this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle = this._hueElements = this._selectedColor = this._colorAsText = this._contrastTool = null, p2.fn.destroy.call(this);
        } });
        i2.plugin(g2);
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.parseColor, r2 = n2.keys, o2 = ".", s2 = "background-color", l2 = "k-selected", d2 = "k-focus", u2 = "k-colorpalette-tile", c2 = i2.colorpicker.ColorSelector;
        function p2(e3) {
          e3.preventDefault();
        }
        function h2(e3, t3) {
          return function() {
            return e3.apply(t3, arguments);
          };
        }
        var f2 = c2.extend({ init: function(e3, t3) {
          var i3 = this;
          c2.fn.init.call(i3, e3, t3), i3._tabIndex = this.element.attr("tabindex") || 0, i3._wrapper(), t3 = i3.options, i3._selectedID = (t3.ariaId || n2.guid()) + "_selected", i3._ariaTemplate = n2.template(i3.options.ARIATemplate), i3._value && (i3._updateUI(i3._value), i3.wrapper.find(".k-focus").removeClass(d2)), i3.wrapper.attr("aria-label", i3._ariaTemplate(i3.value() || "")), i3._attachEvents();
        }, focus: function() {
          this.wrapper && !this.wrapper.is("[unselectable='on']") && this.wrapper.trigger("focus");
        }, options: { name: "ColorPalette", columns: 10, tileSize: null, palette: "basic" }, _attachEvents: function() {
          var e3 = this;
          e3.wrapper.on("click.kendoColorTools", o2 + u2, function(t3) {
            e3._select(t3.currentTarget);
          }).on("keydown.kendoColorTools", h2(e3._keydown, e3)).on("blur.kendoColorTools", function() {
            e3.wrapper.find(o2 + u2).removeClass(d2);
          }).on("focus.kendoColorTools", h2(e3._focus, e3));
        }, _colors: function() {
          var t3 = this.options, n3 = t3.palette || "basic";
          return "websafe" == n3 ? (n3 = "FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000", t3.columns = 18) : "basic" == n3 && (n3 = "000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7"), "string" == typeof n3 && (n3 = n3.split(",")), Array.isArray(n3) && (n3 = e2.map(n3, function(e3) {
            return a2(e3);
          })), n3;
        }, _current: function(t3) {
          this.wrapper.find(o2 + u2).removeClass(d2).removeAttr("id"), e2(t3).addClass(d2).attr("id", this._selectedID), this.wrapper.removeAttr("aria-activedescendant").attr("aria-activedescendant", this._selectedID);
        }, _focus: function() {
          var e3 = this.wrapper;
          0 === e3.find("#" + this._selectedID).length && this._current(e3.find(o2 + u2).first());
        }, _keydown: function(e3) {
          var t3, n3, i3 = this.wrapper.find(o2 + u2), a3 = i3.filter(".k-focus").get(0) || i3.filter(".k-selected").get(0), s3 = e3.keyCode;
          if (a3 && (n3 = Array.prototype.indexOf.call(a3.parentNode.children, a3)), s3 == r2.LEFT) t3 = a3 ? a3.previousSibling : i3[i3.length - 1];
          else if (s3 == r2.RIGHT) t3 = a3 ? a3.nextSibling : i3[0];
          else if (s3 == r2.DOWN) t3 = a3 ? a3.parentNode.nextSibling ? a3.parentNode.nextSibling.children[n3] : null : i3[0];
          else if (s3 == r2.UP) t3 = a3 ? a3.parentNode.previousSibling ? a3.parentNode.previousSibling.children[n3] : null : i3.get[i3.length - 1];
          else if (s3 == r2.ENTER) {
            if (p2(e3), a3) return this._select(a3), void this.trigger("forceSelect", { value: this.value() });
          } else s3 == r2.ESC && this._cancel();
          t3 && 1 !== t3.nodeType && (t3 = null), t3 && (p2(e3), this._current(t3));
        }, _onEnable: function(e3) {
          this.options._standalone && (e3 ? (this.wrapper.attr("tabindex", this._tabIndex), this.wrapper.removeAttr("aria-disabled")) : (this.wrapper.removeAttr("tabindex"), this.wrapper.attr("aria-disabled", true)));
        }, _select: function(t3) {
          var n3 = this.wrapper.find(o2 + u2);
          t3 = e2(t3), c2.fn._select.call(this, t3.css(s2)), n3.removeClass(l2).removeAttr("aria-selected"), t3.addClass(l2).attr("aria-selected", true);
        }, _template: n2.template('<div class="k-colorpalette-table-wrap"><table class="k-colorpalette-table k-palette" role="presentation"><tr role="row"># for (var i = 0; i < colors.length; ++i) { ## var selected = colors[i].equals(value); ## if (i && i % columns == 0) { # </tr><tr role="row"> # } #<td role="gridcell" unselectable="on" style="background-color:#= colors[i].toCss() #"#= selected ? " aria-selected=true" : "" # #=(id && i === 0) ? "id=\\""+id+"\\" " : "" # class="k-colorpalette-tile#= selected ? " k-selected" : "" #" aria-label="#= colors[i].toCss() #"></td># } #</tr></table></div>'), _tileSize: function() {
          var e3, t3, n3 = this.options.tileSize;
          if (n3) {
            if (/number|string/.test(typeof n3)) e3 = t3 = parseFloat(n3);
            else {
              if ("object" != typeof n3) throw new Error("Unsupported value for the 'tileSize' argument");
              e3 = parseFloat(n3.width), t3 = parseFloat(n3.height);
            }
            this.wrapper.find(o2 + u2).css({ width: e3, height: t3 });
          }
        }, _updateUI: function(t3) {
          var n3 = null, i3 = this.wrapper.find(o2 + u2);
          this.wrapper.find(o2 + u2).each(function() {
            var i4 = a2(e2(this).css(s2));
            if (i4 && i4.equals(t3)) return n3 = this, false;
          }), this._current(n3), i3.removeClass(l2), n3 && (e2(n3).addClass(l2), this.wrapper.attr("aria-label", this._ariaTemplate(this.value() || "")));
        }, _wrapper: function() {
          var t3, n3 = this.options, i3 = this._colors();
          (t3 = this.element.is("input") ? this.element.addClass("k-hidden").wrap("<div>").parent() : this.element).addClass("k-colorpalette").attr("role", "grid").append(e2(this._template({ colors: i3, columns: n3.columns, tileSize: n3.tileSize, value: this._value, id: n3.ariaId }))).attr("tabindex", this._tabIndex), this.wrapper = t3, this._tileSize();
        } });
        i2.plugin(f2);
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.html, r2 = n2.Color, o2 = e2.extend, s2 = "background-color", l2 = ".kendoColorTools", d2 = "click" + l2, u2 = i2.colorpicker.ColorSelector, c2 = n2.keys, p2 = "k-no-color", h2 = "k-selected", f2 = ".k-color-preview-mask", m2 = "aria-pressed", g2 = "aria-disabled", v2 = { gradient: i2.ColorGradient, palette: i2.ColorPalette };
        var _2 = u2.extend({ init: function(e3, t3) {
          var i3 = this;
          t3 && false === t3.autoupdate && (t3._standalone = false), u2.fn.init.call(i3, e3, t3), t3 = i3.options = n2.deepExtend({}, i3.options, t3), e3 = i3.element, i3._wrapper();
          var a3 = i3.color();
          i3._changeView(t3.view), i3._setViewSize(), a3 ? (i3._updateUI(a3), i3._previousColor.children(f2).css(s2, a3.toDisplay()), i3._selectedColor.children(f2).css(s2, a3.toDisplay())) : (i3._selectedColor.addClass(p2), i3._previousColor.addClass(p2)), i3._attachEvents(), i3._navigation();
        }, destroy: function() {
          var e3 = this;
          u2.fn.destroy.call(this), e3._view && (e3._view.destroy(), e3._viewsContainer.empty()), e3.element.off(l2), e3._selectedColor = e3._previousColor = e3._viewsContainer = e3._view = null;
        }, options: { name: "FlatColorPicker", opacity: false, buttons: false, input: true, preview: true, clearButton: false, format: "hex", formats: ["rgb", "hex"], view: "gradient", views: ["gradient", "palette"], palette: null, autoupdate: true, backgroundColor: null, columns: 10, tileSize: 24, messages: { apply: "Apply", cancel: "Cancel", noColor: "no color", clearColor: "Clear color", previewInput: null, contrastRatio: "Contrast ratio:", fail: "Fail", pass: "Pass", hex: "HEX", toggleFormat: "Toggle format", red: "Red", green: "Green", blue: "Blue", alpha: "Alpha", gradient: "Gradient view", palette: "Palette view" }, size: "medium", _otOfPicker: true }, setBackgroundColor: function(e3) {
          var t3 = this;
          t3._view && t3._view.setBackgroundColor && t3._view.setBackgroundColor(e3);
        }, _attachEvents: function() {
          var t3, n3, i3 = this;
          i3.wrapper.on("keydown.kendoColorTools", (t3 = i3._keydown, n3 = i3, function() {
            return t3.apply(n3, arguments);
          })).on(d2, ".k-coloreditor-reset", function() {
            i3._clearColor = true, i3._updateUI(null), i3._view.value(null);
          }).on(d2, ".k-coloreditor-apply", function() {
            i3._clearColor ? i3._select(null) : i3._select(i3._view.color());
          }).on(d2, ".k-coloreditor-cancel", function() {
            delete i3._clearColor, i3._updateUI(i3.color()), i3._cancel();
          }).on(d2, ".k-button[data-view]", function(t4) {
            var n4 = e2(t4.target).closest("[data-view]");
            n4.is("." + h2) || (i3.wrapper.find(".k-button[data-view]").removeClass(h2).attr(m2, false), n4.addClass(h2).attr(m2, true), i3._changeView(n4.data("view")));
          });
        }, _select: function(e3) {
          u2.fn._select.call(this, e3), this._updatePreviousColor(e3);
        }, _updatePreviousColor: function(e3) {
          var t3 = this;
          e3 ? (t3._previousColor.removeClass(p2), t3._previousColor.children(f2).css(s2, e3.toDisplay())) : (t3._previousColor.addClass(p2), t3._previousColor.children(f2).css(s2, ""));
        }, _changeView: function(t3) {
          var n3, i3, a3 = this, o3 = e2.extend({}, a3.options), s3 = v2[t3];
          a3._view && a3._view._colorInput && (a3.options.format = a3._view._colorInput._viewModel.format), a3.options.view = t3, delete o3.name, delete o3.change, delete o3.select, delete o3.cancel, delete o3._standalone, a3._view && (n3 = a3._view.color(), a3._view.destroy(), a3._viewsContainer.empty()), n3 && (n3 = n3.toHSV(), i3 = r2.fromHSV(a3._cachedHue || 0, n3.s, n3.v, n3.a), a3._cachedHue = n3.toHSV().h, n3 = n3.equals(i3) ? i3 : n3), o3._otOfPicker = false, s3 && (a3._view = new v2[t3](e2("<div></div>").appendTo(a3._viewsContainer), o3), a3._view.value(n3), a3._view.bind("change", function(e3) {
            delete a3._clearColor, a3._updateUI(e3.sender.color(), true);
          }), a3._view.bind("forceSelect", function(e3) {
            delete a3._clearColor, a3._select(e3.sender.color());
          }));
        }, _onEnable: function(e3) {
          var t3 = this;
          t3._view && t3._view._onEnable(e3), t3.options._standalone && (e3 ? t3.wrapper.removeAttr(g2) : t3.wrapper.attr(g2, true));
        }, focus: function() {
          this._view && this._view.focus();
        }, _updateUI: function(e3, t3) {
          var n3 = this;
          e3 && e3.toDisplay ? (n3._selectedColor.removeClass(p2), n3._selectedColor.children(f2).css(s2, e3.toDisplay())) : (n3._selectedColor.addClass(p2), n3._selectedColor.children(f2).css(s2, "")), n3._triggerSelect(e3), n3.options.autoupdate && n3._updatePreviousColor(e3), t3 || n3._view.value(e3);
        }, _setViewSize: function() {
          var e3 = this, t3 = e3.wrapper[0], n3 = parseInt(e3.options.tileSize.width || e3.options.tileSize, 10), i3 = parseInt(e3.options.tileSize.width || e3.options.tileSize, 10), a3 = e3.options.columns;
          t3.style.setProperty("--kendo-color-preview-columns", a3), t3.style.setProperty("--kendo-color-preview-width", n3 + "px"), t3.style.setProperty("--kendo-color-preview-height", i3 + "px");
        }, _keydown: function(e3) {
          e3.keyCode == c2.ESC && this._cancel();
        }, _template: function() {
          var e3 = this.options, t3 = o2({}, e3, { fillMode: "flat", themeColor: "base", rounded: "medium" });
          return n2.template('<div class="k-coloreditor-header k-hstack"># if (views && views.length > 1) { #<div class="k-coloreditor-header-actions k-hstack"><div role="group" class="k-button-group k-button-group-flat">' + a2.renderButton('<button aria-pressed="false" data-view="gradient" title="#:messages.gradient#"></button>', o2({ icon: "color-canvas" }, t3)) + a2.renderButton('<button aria-pressed="false" data-view="palette" title="#:messages.palette#"></button>', o2({ icon: "palette" }, t3)) + '</div></div># } #<div class="k-spacer"></div><div class="k-coloreditor-header-actions k-hstack"># if (clearButton) { #' + a2.renderButton('<button class="k-coloreditor-reset" title="#:messages.clearColor#"></button>', o2({ icon: "reset-color" }, t3)) + '# } ## if (preview) { #<div class="k-coloreditor-preview k-vstack"><span class="k-coloreditor-preview-color k-color-preview"><span class="k-color-preview-mask"></span></span><span class="k-coloreditor-current-color k-color-preview"><span class="k-color-preview-mask"></span></span></div># } #</div></div><div class="k-coloreditor-views k-vstack"></div># if (buttons) { #<div class="k-coloreditor-footer k-actions k-hstack k-justify-content-end">' + a2.renderButton('<button class="k-coloreditor-cancel" title="#:messages.cancel#">#: messages.cancel #</button>', o2({}, t3, { fillMode: "solid" })) + a2.renderButton('<button class="k-coloreditor-apply" title="#:messages.apply#">#: messages.apply #</button>', o2({}, t3, { fillMode: "solid", themeColor: "primary" })) + "</div># } #")(e3);
        }, _wrapper: function() {
          var t3, n3 = this.options;
          (t3 = this.element.is("input") ? this.element.addClass("k-hidden").wrap("<div>").parent() : this.element).addClass("k-flatcolorpicker k-coloreditor").attr({ role: "textbox", "aria-keyshortcuts": "Enter" }).append(this._template()), this._selectedColor = e2(".k-coloreditor-preview-color", t3), this._previousColor = e2(".k-coloreditor-current-color", t3), this._viewsContainer = e2(".k-coloreditor-views", t3), t3.find(".k-button[data-view=" + n3.view + "]").addClass(h2).attr(m2, true), this.wrapper = t3;
        } });
        i2.plugin(_2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.Color, o2 = n2.parseColor, s2 = n2.keys, l2 = ".kendoColorTools", d2 = "click" + l2, u2 = "keydown" + l2, c2 = i2.colorpicker.ColorSelector, p2 = i2.FlatColorPicker, h2 = a2.extend({ init: function(t3, i3) {
          var r3 = this;
          i3 && i3.palette && !i3.view && (i3.view = "palette"), a2.fn.init.call(r3, t3, i3), i3 = r3.options = n2.deepExtend({}, r3.options, i3);
          var s3 = (t3 = r3.element).attr("value") || t3.val();
          s3 = o2(s3 || i3.value, true), r3._value = i3.value = s3;
          var l3 = n2.html.renderButton('<button class="k-input-button" unselectable="on" aria-label="select" tabindex="-1"></button>', e2.extend({}, r3.options, { icon: "arrow-s" })), d3 = r3._inputWrapper = r3.wrapper = e2(r3._template(e2.extend({}, r3.options, { _buttonHtml: l3 })));
          r3._applyCssClasses(), t3.hide().after(d3), t3.is("input") && (t3.appendTo(d3), r3._preventDefaultLabelClick()), r3._tabIndex = t3.attr("tabIndex") || 0, r3.enable(!t3.attr("disabled"));
          var u3 = t3.attr("accesskey");
          u3 && (t3.attr("accesskey", null), d3.attr("accesskey", u3)), r3.bind("activate", function(e3) {
            e3.isDefaultPrevented() || r3.toggle();
          }), r3._updateUI(s3);
        }, destroy: function() {
          this.wrapper.off(l2).find("*").off(l2), this._popup && (this._selector.destroy(), this._popup.destroy()), this._selector = this._popup = this.wrapper = null, a2.fn.destroy.call(this);
        }, enable: function(e3) {
          var t3 = this, n3 = t3.wrapper, i3 = n3.find(".k-input-button");
          0 === arguments.length && (e3 = true), t3.element.attr("disabled", !e3), n3.attr("aria-disabled", !e3), i3.off(l2).on("mousedown" + l2, f2), n3.addClass("k-disabled").removeAttr("tabIndex").add("*", n3).off(l2), e3 ? n3.removeClass("k-disabled").attr("tabIndex", t3._tabIndex).on("mouseenter" + l2, function() {
            n3.addClass("k-hover");
          }).on("mouseleave" + l2, function() {
            n3.removeClass("k-hover");
          }).on("focus" + l2, function() {
            n3.addClass("k-focus");
          }).on("blur" + l2, function() {
            n3.removeClass("k-focus");
          }).on(u2, m2(t3._keydown, t3)).on(d2, ".k-input-button", m2(t3.toggle, t3)).on(d2, ".k-input-inner", function() {
            t3.trigger("activate");
          }) : t3.close();
        }, _template: n2.template('<span role="textbox" aria-haspopup="true" class="k-colorpicker k-picker k-icon-picker"><span  class="k-input-inner"><span class="k-value-icon k-color-preview #: toolIcon ? "k-icon-color-preview" : "" #"># if (toolIcon) { #<span class="k-color-preview-icon k-icon #= toolIcon #"></span># } #<span class="k-color-preview-mask"></span></span></span >#= _buttonHtml #</span>'), options: { name: "ColorPicker", closeOnSelect: false, contrastTool: false, palette: null, columns: 10, toolIcon: null, value: null, messages: { apply: "Apply", cancel: "Cancel", noColor: "no color", clearColor: "Clear color", previewInput: null, contrastRatio: "Contrast ratio:", fail: "Fail", pass: "Pass", hex: "HEX", toggleFormat: "Toggle format", red: "Red", green: "Green", blue: "Blue", alpha: "Alpha", gradient: "Gradient view", palette: "Palette view" }, opacity: false, buttons: true, preview: true, clearButton: false, input: true, format: "hex", formats: ["rgb", "hex"], view: "gradient", views: ["gradient", "palette"], backgroundColor: null, ARIATemplate: 'Current selected color is #=data || "none"#', size: "medium", rounded: "medium", fillMode: "solid" }, events: ["activate", "change", "select", "open", "close"], open: function() {
          this.element.prop("disabled") || this._getPopup().open();
        }, close: function() {
          var e3 = this._selector && this._selector.options || {};
          e3._closing = true, this._getPopup().close(), delete e3._closing;
        }, toggle: function() {
          this.element.prop("disabled") || this._getPopup().toggle();
        }, setBackgroundColor: function(e3) {
          var t3 = this, n3 = function() {
            t3._selector.setBackgroundColor(e3);
          };
          t3.options.contrastTool.backgroundColor = e3, t3._selector && t3._popup && t3._popup.visible() ? t3._selector.setBackgroundColor(e3) : t3._popup && (t3._popup.unbind("activate", n3), t3._popup.bind("activate", n3));
        }, _noColorIcon: function() {
          return this.wrapper.find(".k-color-preview");
        }, color: c2.fn.color, value: c2.fn.value, _select: c2.fn._select, _triggerSelect: c2.fn._triggerSelect, _isInputTypeColor: c2.fn._isInputTypeColor, _preventDefaultLabelClick: function() {
          var e3 = this, t3 = e3.element, n3 = t3.closest("label"), i3 = t3.attr("id");
          i3 && (n3 = n3.add('label[for="' + i3 + '"]')), n3.on("click", function(t4) {
            e3.open(), t4.preventDefault();
          });
        }, _updateUI: function(e3, t3) {
          this._updateInput(e3), this._triggerSelect(e3), this.wrapper.find(".k-color-preview-mask").css("background-color", e3 ? e3.toDisplay() : ""), this._noColorIcon().toggleClass("k-no-color", !e3), this._selector && !t3 && this._selector.value(e3);
        }, _updateInput: function(e3) {
          var t3 = "";
          e3 && (t3 = this._isInputTypeColor() || 1 == e3.a ? e3.toCss() : e3.toCssRgba(), this.element.val(t3)), this._ariaTemplate || (this._ariaTemplate = n2.template(this.options.ARIATemplate)), this.wrapper.attr("aria-label", this._ariaTemplate(t3));
        }, _keydown: function(e3) {
          var t3 = e3.keyCode;
          this._getPopup().visible() ? (t3 == s2.ESC ? this._selector._cancel() : this._selector._keydown(e3), f2(e3)) : t3 != s2.ENTER && t3 != s2.DOWN || (this.open(), f2(e3));
        }, _getPopup: function() {
          var t3 = this, i3 = t3._popup;
          if (!i3) {
            var a3, s3 = t3.options;
            a3 = p2, s3.autoupdate = true !== s3.buttons, delete s3.select, delete s3.change, delete s3.cancel, s3._otOfPicker = false;
            var l3 = n2.guid(), d3 = e2('<div id="' + l3 + '" class="k-colorpicker-popup"></div>').appendTo(document.body), u3 = t3._selector = new a3(e2("<div></div>").appendTo(d3), s3);
            t3.wrapper.attr("aria-owns", l3), t3._popup = i3 = d3.kendoPopup({ anchor: t3.wrapper, adjustSize: { width: 5, height: 0 } }).data("kendoPopup"), u3.bind({ select: function(e3) {
              t3._updateUI(o2(e3.value), true);
            }, change: function(e3) {
              t3.options.buttons ? t3._select(u3.color()) : t3._updateUI(o2(e3.value), true), (t3.options.buttons || "palette" === t3._selector.options.view && t3.options.closeOnSelect) && t3.close();
            }, cancel: function() {
              t3.close();
            } }), i3.bind({ close: function(n3) {
              if (t3.trigger("close")) n3.preventDefault();
              else {
                t3.wrapper.removeClass("k-focus");
                var i4 = u3.color();
                t3.options.buttons ? t3._select(t3.color()) : t3._select(i4), (i4 = t3.color()) && i4.h && (t3._cachedHue = i4.h), event && event instanceof MouseEvent && 0 === e2(event.target).parents(".k-colorpicker-popup").length || setTimeout(function() {
                  t3.wrapper && !t3.wrapper.is("[unselectable='on']") && t3.wrapper.trigger("focus");
                }, 0);
              }
            }, open: function(e3) {
              t3.trigger("open") ? e3.preventDefault() : t3.wrapper.addClass("k-focus");
            }, activate: function() {
              var e3, n3 = t3.color();
              n3 && (n3 = n3.toHSV(), e3 = r2.fromHSV(t3._cachedHue || 0, n3.s, n3.v, n3.a), n3 = n3.equals(e3) ? e3 : n3), u3.value(n3), u3.focus(), t3.wrapper.addClass("k-focus");
            } });
          }
          return i3;
        } });
        function f2(e3) {
          e3.preventDefault();
        }
        function m2(e3, t3) {
          return function() {
            return e3.apply(t3, arguments);
          };
        }
        i2.plugin(h2), n2.cssProperties.registerPrefix("ColorPicker", "k-picker-"), n2.cssProperties.registerValues("ColorPicker", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = "change", o2 = "disabled", s2 = "checked", l2 = a2.extend({ init: function(e3, t3) {
          var i3 = this;
          a2.fn.init.call(i3, e3, t3), i3._wrapper(), i3._initSettings(), i3._attachEvents(), n2.notify(i3, n2.ui);
        }, events: [r2], options: { name: "ToggleInputBase" }, NS: ".kendoToggleInputBase", RENDER_INPUT: e2.noop, check: function(e3) {
          var t3 = this, n3 = t3.element[0];
          if (void 0 === e3) return n3.checked;
          n3.checked !== e3 && (t3.options.checked = n3.checked = e3), e3 ? t3.element.attr(s2, s2) : t3.element.prop(s2, false);
        }, destroy: function() {
          a2.fn.destroy.call(this), this.wrapper.off(this.NS);
        }, enable: function(e3) {
          var t3 = this.element;
          void 0 === e3 && (e3 = true), this.options.enabled = e3, e3 ? t3.prop(o2, false) : t3.attr(o2, o2);
        }, toggle: function() {
          this.check(!this.element[0].checked);
        }, _attachEvents: function() {
          this.element.on(r2 + this.NS, this._change.bind(this));
        }, _change: function() {
          var e3 = this.element[0].checked;
          this.trigger(r2, { checked: e3 });
        }, _initSettings: function() {
          var e3 = this, t3 = e3.element[0], n3 = e3.options;
          null === n3.checked && (n3.checked = t3.checked), e3.check(n3.checked), n3.enabled = n3.enabled && !e3.element.attr(o2), e3.enable(n3.enabled);
        }, _wrapper: function() {
          var t3 = this, n3 = t3.options;
          (0, t3.RENDER_INPUT)(t3.element, e2.extend({}, n3)), t3.element.removeClass("input-validation-error"), t3.wrapper = t3.element;
        } });
        i2.plugin(l2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.html.HTMLBase, a2 = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          i2.fn.init.call(n3, e3, t3), n3._wrapper(), n3._addClasses();
        }, options: { label: null, labelPosition: "after", labelId: null, encoded: true }, _wrapper: function() {
          var t3 = this, i3 = t3.element[0], a3 = t3.options, r3 = i3.id;
          t3.wrapper = t3.element.addClass(a3.inputClass).prop("type", a3.type), !r3 && a3.label && (i3.id = r3 = n2.guid()), a3.label && (t3.labelEl = e2("<label for='" + r3 + "' class='" + a3.labelClass + "'>"), a3.encoded ? t3.labelEl.text(a3.label) : t3.labelEl.html(a3.label), a3.labelId && t3.labelEl.attr("id", a3.labelId), a3.optional && t3.labelEl.append("<span class='" + a3.optionalClass + "'>" + a3.optionalText + "</span>"), t3.element[a3.labelPosition](t3.labelEl));
        }, html: function() {
          var e3 = this, t3 = "after" === e3.options.labelPosition, n3 = i2.fn.html.call(e3);
          return e3.labelEl ? t3 ? n3 + e3.labelEl[0].outerHTML : e3.labelEl[0].outerHTML + n3 : n3;
        } }), r2 = a2.extend({ init: function(e3, t3) {
          a2.fn.init.call(this, e3, t3), this._addClasses();
        }, options: { name: "HTMLCheckBox", inputClass: "k-checkbox", labelClass: "k-checkbox-label", optionalClass: "k-label-optional", optionalText: "(Optional)", type: "checkbox", rounded: "medium", size: "medium", stylingOptions: ["size", "rounded"] } }), o2 = a2.extend({ init: function(e3, t3) {
          a2.fn.init.call(this, e3, t3), this._addClasses();
        }, options: { name: "HTMLRadioButton", inputClass: "k-radio", labelClass: "k-radio-label", optionalClass: "k-label-optional", optionalText: "(Optional)", type: "radio", size: "medium", stylingOptions: ["size"] } });
        e2.extend(n2.html, { renderCheckBox: function(n3, i3) {
          return (arguments[0] === t2 || e2.isPlainObject(arguments[0])) && (i3 = n3, n3 = e2("<input />")), new r2(n3, i3).html();
        }, renderRadioButton: function(n3, i3) {
          return (arguments[0] === t2 || e2.isPlainObject(arguments[0])) && (i3 = n3, n3 = e2("<input />")), new o2(n3, i3).html();
        }, HTMLInput: a2, HTMLCheckBox: r2, HTMLRadioButton: o2 }), n2.cssProperties.registerPrefix("HTMLCheckBox", "k-checkbox-"), n2.cssProperties.registerValues("HTMLCheckBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), n2.cssProperties.registerPrefix("HTMLRadioButton", "k-radio-");
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.ToggleInputBase.extend({ options: { name: "CheckBox", checked: null, enabled: true, encoded: true, label: null, rounded: "medium", size: "medium" }, RENDER_INPUT: n2.html.renderCheckBox, NS: ".kendoCheckBox", value: function(e3) {
          return "string" == typeof e3 && (e3 = "true" === e3), this.check.apply(this, [e3]);
        } });
        n2.cssProperties.registerPrefix("CheckBox", "k-checkbox-"), n2.cssProperties.registerValues("CheckBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), i2.plugin(a2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = ".kendoValidator", r2 = "k-invalid-msg", o2 = new RegExp(r2, "i"), s2 = "k-invalid", l2 = "k-valid", d2 = "k-validation-summary", u2 = "k-text-error", c2 = "k-messagebox k-messagebox-error", p2 = "aria-invalid", h2 = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i, f2 = /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i, m2 = ":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])", g2 = ":checkbox:not([disabled],[readonly])", v2 = "[type=number],[type=range]", _2 = "blur", b2 = "name", k2 = "form", w = "novalidate", y = "validate", x = "change", C = "validateInput", T = function(e3, t3) {
          return "string" == typeof t3 && (t3 = new RegExp("^(?:" + t3 + ")$")), t3.test(e3);
        }, S = function(e3, t3, n3) {
          var i3 = e3.val();
          return !e3.filter(t3).length || "" === i3 || T(i3, n3);
        }, I = function(e3, t3) {
          return !!e3.length && null != e3[0].attributes[t3];
        };
        function D(t3) {
          return e2.parseHTML ? e2(e2.parseHTML(t3)) : e2(t3);
        }
        function E(t3, i3) {
          for (var a3, r3 = e2(), s3 = 0, l3 = t3.length; s3 < l3; s3++) a3 = t3[s3], o2.test(a3.className) && a3.getAttribute(n2.attr("for")) === i3 && (r3 = r3.add(a3));
          return r3;
        }
        function A(e3, t3) {
          return !!e3 && ("string" == typeof e3.nodeName && "LABEL" === e3.nodeName && ("string" == typeof e3.getAttribute("for") && "string" == typeof t3.getAttribute("id") && e3.getAttribute("for") === t3.getAttribute("id")));
        }
        n2.ui.validator || (n2.ui.validator = { rules: {}, messages: {}, allowSubmit: e2.noop, validateOnInit: e2.noop });
        var F = i2.extend({ init: function(t3, a3) {
          var r3 = this, o3 = function(t4) {
            var i3, a4 = n2.ui.validator.ruleResolvers || {}, r4 = {};
            for (i3 in a4) e2.extend(true, r4, a4[i3].resolve(t4));
            return r4;
          }(t3), s3 = "[" + n2.attr("validate") + "!=false]";
          (a3 = a3 || {}).rules = e2.extend({}, n2.ui.validator.rules, o3.rules, a3.rules), a3.messages = e2.extend({}, n2.ui.validator.messages, o3.messages, a3.messages), i2.fn.init.call(r3, t3, a3), r3._errorTemplate = n2.template(r3.options.errorTemplate), r3._summaryTemplate = n2.template(r3.options.validationSummary.template || '<ul>#for(var i = 0; i < errors.length; i += 1){#<li><a data-field="#=errors[i].field#" href="\\#">#= errors[i].message #</a></li># } #</ul>'), r3.element.is(k2) && r3.element.attr(w, w), r3._inputSelector = m2 + s3, r3._checkboxSelector = g2 + s3, r3._errors = {}, r3._attachEvents(), r3._isValidated = false, r3._validateOnInit() && r3.validate();
        }, events: [y, x, C], options: { name: "Validator", errorTemplate: '<span class="k-form-error">#= message #</span>', messages: { required: "{0} is required", pattern: "{0} is not valid", min: "{0} should be greater than or equal to {1}", max: "{0} should be smaller than or equal to {1}", step: "{0} is not valid", email: "{0} is not valid email", url: "{0} is not valid URL", date: "{0} is not valid date", dateCompare: "End date should be greater than or equal to the start date", captcha: "The text you entered doesn't match the image." }, rules: { required: function(e3) {
          var t3 = !e3.attr("name") && !e3.is(":checked"), n3 = e3.attr("name"), i3 = n3 && n3.indexOf("'") > -1 ? '"' : "'", a3 = e3.attr("name") && !this.element.find("input[name=" + i3 + e3.attr("name") + i3 + "]:checked").length, r3 = e3.filter("[type=checkbox]").length && (t3 || a3), o3 = e3.filter("[type=radio]").length && !this.element.find("input[name=" + i3 + e3.attr("name") + i3 + "]:checked").length, s3 = e3.val();
          return !(I(e3, "required") && (!s3 || "" === s3 || 0 === s3.length || r3 || o3));
        }, pattern: function(e3) {
          return !e3.filter("[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]").filter("[pattern]").length || "" === e3.val() || T(e3.val(), e3.attr("pattern"));
        }, min: function(e3) {
          return !e3.filter(v2 + ",[" + n2.attr("type") + "=number]").filter("[min]").length || "" === e3.val() || (parseFloat(e3.attr("min")) || 0) <= n2.parseFloat(e3.val());
        }, max: function(e3) {
          return !e3.filter(v2 + ",[" + n2.attr("type") + "=number]").filter("[max]").length || "" === e3.val() || (parseFloat(e3.attr("max")) || 0) >= n2.parseFloat(e3.val());
        }, step: function(e3) {
          if (e3.filter(v2 + ",[" + n2.attr("type") + "=number]").filter("[step]").length && "" !== e3.val()) {
            var t3, i3 = parseFloat(e3.attr("min")) || 0, a3 = parseFloat(e3.attr("step")) || 1, r3 = parseFloat(e3.val()), o3 = (s3 = ((s3 = a3) + "").split(".")).length > 1 ? s3[1].length : 0;
            return o3 ? (t3 = Math.pow(10, o3), Math.floor((r3 - i3) * t3) % (a3 * t3) / Math.pow(100, o3) == 0) : (r3 - i3) % a3 == 0;
          }
          var s3;
          return true;
        }, email: function(e3) {
          return S(e3, "[type=email],[" + n2.attr("type") + "=email]", h2);
        }, url: function(e3) {
          return S(e3, "[type=url],[" + n2.attr("type") + "=url]", f2);
        }, date: function(e3) {
          return !e3.filter("[type^=date],[" + n2.attr("type") + "=date]").length || "" === e3.val() || null !== n2.parseDate(e3.val(), e3.attr(n2.attr("format")));
        }, captcha: function(e3) {
          if (e3.filter("[" + n2.attr("role") + "=captcha]").length) {
            var t3 = this, i3 = n2.widgetInstance(e3), a3 = function(e4) {
              return null != e4;
            };
            if (e3.data("captcha_validating") || a3(i3.isValid()) || !i3.getCaptchaId() || (e3.data("captcha_validating", true), t3._validating = true, i3.validate().done(function() {
              t3._validating = false, t3._checkElement(e3);
            }).fail(function(e4) {
              t3._validating = false, e4.error && "handler_not_defined" === e4.error && window.console.warn("Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.");
            })), a3(i3.isValid())) return e3.removeData("captcha_validating"), i3.isValid();
          }
          return true;
        } }, validateOnBlur: true, validationSummary: false }, _allowSubmit: function() {
          return n2.ui.validator.allowSubmit(this.element, this.errors());
        }, _validateOnInit: function() {
          return n2.ui.validator.validateOnInit(this.element);
        }, destroy: function() {
          i2.fn.destroy.call(this), this.element.off(a2), this.validationSummary && (this.validationSummary.off(a2), this.validationSummary = null);
        }, value: function() {
          return !!this._isValidated && 0 === this.errors().length;
        }, _submit: function(e3) {
          return !(!this.validate() && !this._allowSubmit() || this._validating) || (e3.stopPropagation(), e3.stopImmediatePropagation(), e3.preventDefault(), false);
        }, _checkElement: function(e3) {
          var t3 = this.value();
          this.validateInput(e3), this.value() !== t3 && this.trigger(x);
        }, _attachEvents: function() {
          var t3 = this;
          t3.element.is(k2) && t3.element.on("submit" + a2, t3._submit.bind(t3)), t3.options.validateOnBlur && (t3.element.is(m2) ? (t3.element.on(_2 + a2, function() {
            t3._checkElement(t3.element);
          }), t3.element.is(g2) && t3.element.on("click" + a2, function() {
            t3._checkElement(t3.element);
          })) : (t3.element.on(_2 + a2, t3._inputSelector, function() {
            t3._checkElement(e2(this));
          }), t3.element.on("click" + a2, t3._checkboxSelector, function() {
            t3._checkElement(e2(this));
          })));
        }, validate: function() {
          var e3, t3, n3, i3 = false, a3 = this.value();
          if (this._errors = {}, this.element.is(m2)) i3 = this.validateInput(this.element);
          else {
            var r3 = false;
            for (t3 = 0, n3 = (e3 = this.element.find(this._inputSelector)).length; t3 < n3; t3++) this.validateInput(e3.eq(t3)) || (r3 = true);
            i3 = !r3;
          }
          return this.options.validationSummary && !a3 && this.showValidationSummary(), this.trigger(y, { valid: i3, errors: this.errors() }), a3 !== i3 && this.trigger(x), i3;
        }, validateInput: function(t3) {
          t3 = e2(t3), this._isValidated = true;
          var i3, a3, r3 = this, o3 = r3._errorTemplate, d3 = r3._checkValidity(t3), c3 = d3.valid, h3 = t3.attr(b2) || "", f3 = r3._findMessageContainer(h3).add(t3.next(".k-invalid-msg").filter(function() {
            var t4 = e2(this);
            return !t4.filter("[" + n2.attr("for") + "]").length || t4.attr(n2.attr("for")) === h3;
          })).addClass("k-hidden"), m3 = c3 ? "" : r3._extractMessage(t3, d3.key), g3 = c3 ? "" : D(o3({ message: (a3 = m3, a3.replace(/&amp/g, "&amp;").replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&lt;/g, "<").replace(/&gt;/g, ">")), field: h3 })), v3 = !t3.attr(p2), _3 = t3.is(".k-input-inner"), k3 = t3.parent(".k-input");
          if (t3.removeAttr(p2), t3.hasClass("k-hidden") && (i3 = n2.widgetInstance(t3.closest(".k-signature"))), c3 || t3.data("captcha_validating")) delete r3._errors[h3];
          else {
            r3._errors[h3] = m3;
            var w2 = f3.attr("id");
            if (r3._decorateMessageContainer(g3, h3), w2 && g3.attr("id", w2), 0 !== f3.length) f3.replaceWith(g3);
            else {
              i3 = i3 || n2.widgetInstance(t3);
              var y2 = t3.parent().get(0), x2 = t3.next().get(0), T2 = t3.prev().get(0);
              !i3 && t3.is("[type=radio]") && (i3 = n2.widgetInstance(t3.closest(".k-radio-list"))), !i3 && t3.is("[type=checkbox]") && (i3 = n2.widgetInstance(t3.closest(".k-checkbox-list"))), i3 && i3.wrapper && (i3.element !== i3.wrapper || "Signature" == i3.options.name) ? g3.insertAfter(i3.wrapper) : y2 && "LABEL" === y2.nodeName ? g3.insertAfter(y2) : x2 && A(x2, t3[0]) ? g3.insertAfter(x2) : T2 && A(T2, t3[0]) ? g3.insertAfter(t3) : _3 && k3.length ? g3.insertAfter(k3) : g3.insertAfter(t3);
            }
            g3.removeClass("k-hidden"), t3.attr(p2, true);
          }
          if (v3 !== c3 && this.trigger(C, { valid: c3, input: t3, error: m3, field: h3 }), (i3 = i3 && "Signature" == i3.options.name ? i3 : n2.widgetInstance(t3)) && (i3._inputWrapper || i3.wrapper) || (t3.toggleClass(s2, !c3), t3.toggleClass(l2, c3)), i3) {
            var S2 = i3._inputWrapper || i3.wrapper, I2 = i3._inputLabel;
            S2 && (S2.toggleClass(s2, !c3), S2.toggleClass(l2, c3)), I2 && I2.toggleClass(u2, !c3);
          }
          if (v3 !== c3) {
            var E2 = g3 ? g3.attr("id") : f3.attr("id");
            r3._associateMessageContainer(t3, E2), this.options.validationSummary && this.options.validateOnBlur && this.showValidationSummary();
          }
          return c3;
        }, hideMessages: function() {
          var e3 = "." + r2, t3 = this.element;
          this._disassociateMessageContainers(), t3.is(m2) ? t3.next(e3).addClass("k-hidden") : t3.find(e3).addClass("k-hidden");
        }, reset: function() {
          var e3 = this, t3 = e3.element.find(".k-invalid"), n3 = e3.element.find(".k-text-error");
          e3._errors = [], e3.hideMessages(), e3.hideValidationSummary(), t3.removeAttr(p2), t3.removeClass(s2), n3.removeClass(u2);
        }, _findMessageContainer: function(t3) {
          for (var i3, a3 = n2.ui.validator.messageLocators, r3 = e2(), o3 = 0, s3 = this.element.length; o3 < s3; o3++) r3 = r3.add(E(this.element[o3].getElementsByTagName("*"), t3));
          for (i3 in a3) r3 = r3.add(a3[i3].locate(this.element, t3));
          return r3;
        }, _decorateMessageContainer: function(e3, t3) {
          var i3, a3 = n2.ui.validator.messageLocators;
          for (i3 in e3.addClass(r2).attr(n2.attr("for"), t3 || ""), e3.attr("id") || e3.attr("id", t3 + "-error"), a3) a3[i3].decorate(e3, t3);
        }, _extractMessage: function(e3, t3) {
          var i3, a3 = this.options.messages[t3], r3 = e3.attr(b2);
          return n2.ui.Validator.prototype.options.messages[t3] || (i3 = n2.isFunction(a3) ? a3(e3) : a3), a3 = n2.isFunction(a3) ? a3(e3) : a3, n2.format(e3.attr(n2.attr(t3 + "-msg")) || e3.attr("validationMessage") || i3 || a3 || e3.attr("title") || "", r3, e3.attr(t3) || e3.attr(n2.attr(t3)));
        }, _checkValidity: function(e3) {
          var t3, n3 = this.options.rules;
          for (t3 in n3) if (!n3[t3].call(this, e3)) return { valid: false, key: t3 };
          return { valid: true };
        }, errors: function() {
          var e3, t3 = [], n3 = this._errors;
          for (e3 in n3) t3.push(n3[e3]);
          return t3;
        }, setOptions: function(e3) {
          e3.validationSummary && this.hideValidationSummary(), n2.deepExtend(this.options, e3), this.destroy(), this.init(this.element, this.options), this._setEvents(this.options);
        }, _getInputNames: function() {
          for (var t3 = this.element.find(this._inputSelector), n3 = [], i3 = 0, a3 = t3.length; i3 < a3; i3++) {
            var r3 = e2(t3[i3]);
            I(r3, b2) && (-1 === n3.indexOf(r3.attr(b2)) || 0 === r3.closest(".k-checkbox-list").length && 0 === r3.closest(".k-radio-list").length) && n3.push(r3.attr(b2));
          }
          return n3;
        }, _associateMessageContainer: function(e3, t3) {
          var i3 = n2.getWidgetFocusableElement(e3);
          i3 && t3 && n2.toggleAttribute(i3, "aria-describedby", t3);
        }, _disassociateMessageContainers: function() {
          for (var t3, n3, i3 = this, a3 = i3.element.find(".k-invalid").addBack(), o3 = 0; o3 < a3.length; o3 += 1) (t3 = e2(a3[o3])).is("input") && (n3 = i3._findMessageContainer(t3.attr(b2)).add(t3.next("." + r2)).attr("id"), i3._associateMessageContainer(t3, n3));
        }, _errorsByName: function() {
          for (var e3 = this, t3 = e3._getInputNames(), n3 = [], i3 = 0; i3 < t3.length; i3 += 1) {
            var a3 = t3[i3];
            e3._errors[a3] && n3.push({ field: a3, message: e3._errors[a3] });
          }
          return n3;
        }, _renderSummary: function() {
          var t3, n3 = this, i3 = this.options.validationSummary, r3 = this.element.prev();
          return (t3 = i3.container ? e2(i3.container) : r3 && r3.hasClass(d2) ? r3 : e2("<div />").insertBefore(n3.element)).addClass([d2, c2].join(" ")), t3.attr("role", "alert"), t3.on("click" + a2, n3._summaryClick.bind(n3)), t3;
        }, _summaryClick: function(t3) {
          t3.preventDefault();
          var i3, a3 = e2(t3.target), r3 = this.element.find("[name='" + a3.data("field") + "']");
          r3.length && (i3 = n2.getWidgetFocusableElement(r3)) && i3.trigger("focus");
        }, showValidationSummary: function() {
          var e3, t3 = this, n3 = t3.validationSummary, i3 = t3._errorsByName();
          n3 || (n3 = t3.validationSummary = t3._renderSummary()), e3 = D(t3._summaryTemplate({ errors: i3 })), n3.html(e3), n3.toggleClass("k-hidden", !i3.length);
        }, hideValidationSummary: function() {
          var e3 = this.validationSummary;
          e3 && e3.addClass("k-hidden");
        } });
        n2.ui.plugin(F);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = e2.extend, o2 = n2.isFunction, s2 = e2.isPlainObject, l2 = e2.inArray, d2 = /("|\%|'|\[|\]|\$|\.|\,|\:|\;|\+|\*|\&|\!|\#|\(|\)|<|>|\=|\?|\@|\^|\{|\}|\~|\/|\||`)/g, u2 = "change", c2 = "equalSet", p2 = ["url", "email", "number", "date", "boolean"];
        function h2(e3) {
          return (e3 = null != e3 ? e3 : "").type || n2.type(e3) || "string";
        }
        function f2(e3) {
          var t3, i3, a3 = (e3.model.fields || e3.model)[e3.field], r3 = h2(a3), d3 = a3 ? a3.validation : {}, u3 = a3 ? a3.attributes : {}, c3 = n2.attr("type"), f3 = n2.attr("bind"), m3 = { id: e3.id || e3.field, name: e3.field, title: e3.title ? e3.title : e3.field };
          for (t3 in d3) {
            if (i3 = d3[t3], l2(t3, p2) >= 0) m3[c3] = t3;
            else if (!o2(i3)) {
              var g3 = n2.getCulture();
              if ("number" == typeof i3 && g3.name.length) {
                var v3 = g3.numberFormat, _3 = i3.toString().replace(".", v3["."]);
                m3[t3] = _3;
              } else m3[t3] = s2(i3) ? i3.value || t3 : i3;
            }
            m3[n2.attr(t3 + "-msg")] = i3.message, m3.autocomplete = "off";
          }
          for (var b3 in u3) m3[b3] = u3[b3];
          return l2(r3, p2) >= 0 && (m3[c3] = r3), m3[f3] = ("boolean" === r3 ? "checked:" : "value:") + e3.field, m3;
        }
        function m2(e3, t3) {
          var n3 = e3.attr("id");
          return n3 && (t3.id = n3, e3.removeAttr("id")), t3;
        }
        var g2 = ["AutoComplete", "CheckBox", "CheckBoxGroup", "ColorGradient", "ColorPicker", "ColorPalette", "ComboBox", "DateInput", "DatePicker", "DateTimePicker", "DropDownTree", "Editor", "FlatColorPicker", "MaskedTextBox", "MultiColumnComboBox", "MultiSelect", "NumericTextBox", "RadioGroup", "Rating", "Slider", "Switch", "TimePicker", "DropDownList", "TextBox", "TextArea", "Captcha", "Signature"], v2 = { hidden: function(t3, n3) {
          var i3 = f2(n3);
          e2('<input type="hidden"/>').attr(i3).appendTo(t3);
        }, number: function(t3, i3) {
          var a3 = f2(i3);
          e2('<input type="text"/>').attr(a3).appendTo(t3).kendoNumericTextBox({ format: i3.format }), e2("<span " + n2.attr("for") + '="' + i3.field + '" class="k-invalid-msg k-hidden"/>').appendTo(t3);
        }, date: function(t3, i3) {
          var a3 = f2(i3), r3 = i3.format;
          r3 && (r3 = n2._extractFormat(r3)), a3[n2.attr("format")] = r3, e2('<input type="text"/>').attr(a3).appendTo(t3).kendoDatePicker({ format: i3.format }), e2("<span " + n2.attr("for") + '="' + i3.field + '" class="k-invalid-msg k-hidden"/>').appendTo(t3);
        }, string: function(t3, n3) {
          var i3 = f2(n3);
          e2('<input type="text"/>').attr(i3).appendTo(t3).kendoTextBox();
        }, boolean: function(t3, n3) {
          var i3 = f2(n3);
          k2(e2('<input type="checkbox" />').attr(i3).kendoCheckBox().appendTo(t3), t3, n3);
        }, values: function(t3, i3) {
          var a3 = f2(i3), r3 = n2.stringify(function(e3) {
            var t4, n3, i4, a4, r4, o3;
            if (e3 && e3.length) for (o3 = [], t4 = 0, n3 = e3.length; t4 < n3; t4++) r4 = (i4 = e3[t4]).text || i4.value || i4, a4 = null == i4.value ? i4.text || i4 : i4.value, o3[t4] = { text: r4, value: a4 };
            return o3;
          }(i3.values));
          e2("<select " + n2.attr("text-field") + '="text"' + n2.attr("value-field") + '="value"' + n2.attr("source") + "='" + (r3 ? r3.replace(/\'/g, "&apos;") : r3) + "'" + n2.attr("role") + '="dropdownlist"/>').attr(a3).appendTo(t3), e2("<span " + n2.attr("for") + '="' + i3.field + '" class="k-invalid-msg  k-hidden"/>').appendTo(t3);
        }, kendoEditor: function(t3, n3) {
          var i3 = f2(n3), a3 = n3.editor, r3 = "kendo" + a3, o3 = n3.editorOptions, s3 = function(e3, t4) {
            if (e3.length) return "DropDownTree" === e3 && t4 && t4.checkboxes || "MultiSelect" === e3 ? "<select />" : "RadioGroup" === e3 || "CheckBoxGroup" === e3 ? "<ul />" : "Signature" === e3 ? "<div></div>" : "Editor" === e3 || "TextArea" === e3 ? "<textarea />" : "<input />";
          }(a3, o3);
          k2(e2(s3).attr(i3).appendTo(t3)[r3](o3), t3, n3);
        } }, _2 = { number: function(t3, n3) {
          var i3 = f2(n3);
          i3 = m2(t3, i3), e2('<input type="number"/>').attr(i3).appendTo(t3);
        }, date: function(t3, n3) {
          var i3 = f2(n3);
          i3 = m2(t3, i3), e2('<input type="date"/>').attr(i3).appendTo(t3);
        }, string: function(t3, n3) {
          var i3 = f2(n3);
          i3 = m2(t3, i3), e2('<input type="text" />').attr(i3).appendTo(t3);
        }, boolean: function(t3, n3) {
          var i3 = f2(n3);
          i3 = m2(t3, i3), e2('<input type="checkbox" />').attr(i3).appendTo(t3);
        }, values: function(t3, n3) {
          var i3 = f2(n3), a3 = n3.values, r3 = e2("<select />");
          for (var o3 in i3 = m2(t3, i3), a3) e2('<option value="' + a3[o3].value + '">' + a3[o3].text + "</option>").appendTo(r3);
          r3.attr(i3).appendTo(t3);
        } };
        function b2(e3, t3) {
          var n3, i3, a3 = e3 && e3.validation || {};
          for (n3 in a3) i3 = a3[n3], s2(i3) && i3.value && (i3 = i3.value), o2(i3) && (t3[n3] = i3);
        }
        function k2(t3, n3, i3) {
          (i3 && i3.shouldRenderHidden || false) && (t3.val(true), n3.append(e2("<input type='hidden' name='" + i3.field + "' value='false' data-skip='true' data-validate='false'/>")));
        }
        var w = a2.extend({ init: function(e3, t3) {
          var n3 = this;
          t3.target && (t3.$angular = t3.target.options.$angular, t3.target.pane && (n3._isMobile = true)), a2.fn.init.call(n3, e3, t3), n3._validateProxy = n3._validate.bind(n3), n3.refresh();
        }, events: [u2], options: { name: "Editable", editors: v2, mobileEditors: _2, clearContainer: true, validateOnBlur: true, validationSummary: false, errorTemplate: '<div class="k-tooltip k-tooltip-error k-validator-tooltip"><span class="k-tooltip-icon k-icon k-i-warning"></span><span class="k-tooltip-content">#= message #</span><span class="k-callout k-callout-n"></span></div>', skipFocus: false }, editor: function(t3, i3) {
          var a3 = this, o3 = a3._isMobile ? _2 : a3.options.editors, l3 = s2(t3), u3 = l3 ? t3.field : t3, c3 = a3.options.model || {}, p3 = l3 && t3.values ? "values" : h2(i3), f3 = l3 && "string" == typeof t3.editor && "hidden" === t3.editor, m3 = l3 && !f3 && t3.editor, v3 = l3 && -1 !== e2.inArray(t3.editor, g2), b3 = m3 ? t3.editor : o3[f3 ? "hidden" : p3], k3 = a3.element.find("[" + n2.attr("container-for") + "=" + u3.replace(d2, "\\$1") + "]");
          b3 = b3 || o3.string, v3 ? b3 = o3.kendoEditor : m3 && "string" == typeof t3.editor && (b3 = function(e3) {
            e3.append(t3.editor);
          }), b3(k3 = k3.length ? k3 : a3.element, r2(true, {}, l3 ? t3 : { field: u3 }, { model: c3 }));
        }, _validate: function(t3) {
          var i3, a3 = this, r3 = t3.value, o3 = a3._validationEventInProgress, s3 = {}, l3 = n2.attr("bind"), c3 = t3.field.replace(d2, "\\$1"), p3 = new RegExp("(value|checked)\\s*:\\s*" + c3 + "\\s*(,|$)");
          s3[t3.field] = t3.value, (i3 = e2(":input[" + l3 + '*="' + c3 + '"]', a3.element).filter("[" + n2.attr("validate") + "!='false']").filter(function() {
            return p3.test(e2(this).attr(l3));
          })).length > 1 && (i3 = i3.filter(function() {
            var t4 = e2(this);
            return !t4.is(":radio") || t4.val() == r3;
          }));
          try {
            a3._validationEventInProgress = true, (!a3.validatable.validateInput(i3) || !o3 && a3.trigger(u2, { values: s3 })) && t3.preventDefault();
          } finally {
            a3._validationEventInProgress = false;
          }
        }, end: function() {
          return this.validatable.validate();
        }, destroy: function() {
          var e3 = this;
          e3.angular("cleanup", function() {
            return { elements: e3.element };
          }), a2.fn.destroy.call(e3), e3.options.model.unbind("set", e3._validateProxy), e3.options.model.unbind(c2, e3._validateProxy), n2.unbind(e3.element), e3.validatable && e3.validatable.destroy(), n2.destroy(e3.element), e3.element.removeData("kendoValidator"), e3.element.is("[" + n2.attr("role") + "=editable]") && e3.element.removeAttr(n2.attr("role"));
        }, refresh: function() {
          var t3, i3, a3, r3, o3, l3, d3 = this, u3 = d3.options.fields || [], p3 = d3.options.clearContainer ? d3.element.empty() : d3.element, h3 = d3.options.model || {}, f3 = {};
          for (Array.isArray(u3) || (u3 = [u3]), t3 = 0, i3 = u3.length; t3 < i3; t3++) a3 = u3[t3], r3 = s2(a3) ? a3.field : a3, b2(o3 = (h3.fields || h3)[r3], f3), d3.editor(a3, o3);
          if (d3.options.target && d3.angular("compile", function() {
            return { elements: p3, data: p3.map(function() {
              return { dataItem: h3 };
            }) };
          }), !i3) for (r3 in l3 = h3.fields || h3) b2(l3[r3], f3);
          !function(t4) {
            t4.find(":input:not(:button, .k-combobox .k-input, .k-checkbox-list .k-checkbox, .k-radio-list .k-radio, [" + n2.attr("role") + "=listbox], [" + n2.attr("role") + "=upload], [" + n2.attr("skip") + "], [type=file])").each(function() {
              var t5 = n2.attr("bind"), i4 = this.getAttribute(t5) || "", a4 = "checkbox" === this.type || "radio" === this.type ? "checked:" : "value:", r4 = this.getAttribute("name") === w.antiForgeryTokenName, o4 = this.name;
              -1 === i4.indexOf(a4) && o4 && !r4 && (i4 += (i4.length ? "," : "") + a4 + o4, e2(this).attr(t5, i4));
            });
          }(p3), d3.validatable && d3.validatable.destroy(), n2.bind(p3, d3.options.model), d3.options.validateOnBlur && (d3.options.model.unbind("set", d3._validateProxy).bind("set", d3._validateProxy), d3.options.model.unbind(c2, d3._validateProxy).bind(c2, d3._validateProxy)), d3.validatable = new n2.ui.Validator(p3, { validateOnBlur: d3.options.validateOnBlur, validationSummary: d3.options.validationSummary, errorTemplate: d3.options.errorTemplate || void 0, rules: f3 }), d3.options.skipFocus || p3.find(":kendoFocusable").eq(0).trigger("focus");
        } });
        w.antiForgeryTokenName = "__RequestVerificationToken", i2.plugin(w);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.keys, o2 = n2.template, s2 = ".k-i-arrow-end-left", l2 = ".k-i-arrow-end-right", d2 = ".k-i-arrow-60-left", u2 = ".k-i-arrow-60-right", c2 = "k-pager-md k-pager-sm", p2 = ":kendoFocusable:not([tabindex='-1'])", h2 = "change", f2 = ".kendoPager", m2 = "click", g2 = Number.MAX_VALUE, v2 = false, _2 = n2.template('<a href="\\#" role="button" title="#=text#" aria-label="#=text#" class="k-link k-pager-nav #= wrapClassName #"><span class="k-icon #= className #"></span></a>');
        function b2(e3) {
          return e3.template({ idx: e3.idx, text: e3.text, ns: n2.ns, numeric: e3.numeric, title: e3.title || "", tabindex: e3.navigatable ? 0 : -1, navigatable: e3.navigatable });
        }
        function k2(e3, t3, n3, i3) {
          return e3({ idx: t3, text: n3 || t3, selected: i3 || false });
        }
        function w(e3, t3, n3, i3) {
          return _2({ className: e3.substring(1), text: t3, wrapClassName: n3 || "", id: i3 || "" });
        }
        function y(e3, t3, i3, a3) {
          e3.find(t3).parent().attr(n2.attr("page"), i3).attr("tabindex", a3 ? -1 : 0).attr("aria-disabled", a3).toggleClass("k-disabled", a3);
        }
        function x(e3, t3) {
          y(e3, s2, 1, t3 <= 1);
        }
        function C(e3, t3) {
          y(e3, d2, Math.max(1, t3 - 1), t3 <= 1);
        }
        function T(e3, t3, n3) {
          y(e3, u2, Math.min(n3, t3 + 1), t3 >= n3);
        }
        function S(e3, t3, n3) {
          y(e3, l2, n3, t3 >= n3);
        }
        var I = a2.extend({ init: function(t3, i3) {
          var r3, o3, c3, p3 = this;
          if (a2.fn.init.call(p3, t3, i3), i3 = p3.options, p3._createDataSource(i3), p3.linkTemplate = n2.template(p3.options.linkTemplate), p3.selectTemplate = n2.template(p3.options.selectTemplate), p3.numericSelectItemTemplate = n2.template(p3.options.numericSelectItemTemplate), r3 = p3.page(), o3 = p3.totalPages(), p3._refreshHandler = p3.refresh.bind(p3), p3.dataSource.bind(h2, p3._refreshHandler), p3.downEvent = n2.applyEventMap("down", n2.guid()), v2 = n2.support.isRtl(t3), i3.navigatable && (p3._id = p3.element.attr("id") || n2.guid()), p3._template(), i3.previousNext && (p3.element.find(s2).length || (p3.element.append(w(s2, i3.messages.first, "k-pager-first", p3._id)), x(p3.element, r3)), p3.element.find(d2).length || (p3.element.append(w(d2, i3.messages.previous, null, p3._id)), C(p3.element, r3))), i3.numeric && (p3._numericWrap || (p3._numericWrap = p3.element.find(".k-pager-numbers-wrap"), 0 === p3._numericWrap.length && (p3._numericWrap = e2("<div class='k-pager-numbers-wrap' />").appendTo(p3.element))), p3._numericSelect || (p3._numericSelect = p3._numericWrap.find(".k-dropdown"), 0 === p3._numericSelect.length && (p3._numericSelect = e2("<select aria-label='" + p3.options.messages.numbersSelectLabel + "' class='k-dropdown k-picker k-dropdown-list' />").appendTo(p3._numericWrap))), p3.list || (p3.list = p3._numericWrap.find(".k-pager-numbers"), 0 === p3.list.length && (p3.list = e2('<ul class="k-pager-numbers" />').appendTo(p3._numericWrap))), i3.dataSource && !i3.dataSource.total() && (p3._numericSelect.empty().append("<option value='0' />"), p3.list.empty().append(p3.selectTemplate({ text: 0, tabindex: i3.navigatalbe ? 0 : -1, navigatable: i3.navigatable, title: n2.format(i3.messages.pageButtonLabel, 0) })))), i3.input && (p3.element.find(".k-pager-input").length || p3.element.append('<span class="k-pager-input k-label">' + i3.messages.page + '<span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input class="k-input-inner" /></span>' + n2.format(i3.messages.of, o3) + "</span>"), p3.element.on("keydown" + f2, ".k-pager-input input", p3._keydown.bind(p3))), i3.previousNext && (p3.element.find(u2).length || (p3.element.append(w(u2, i3.messages.next, null, p3._id)), T(p3.element, r3, o3)), p3.element.find(l2).length || (p3.element.append(w(l2, i3.messages.last, "k-pager-last", p3._id)), S(p3.element, r3, o3))), i3.pageSizes) {
            if (!p3.element.find(".k-pager-sizes").length) {
              var g3 = i3.pageSizes.length ? i3.pageSizes : ["all", 5, 10, 20], _3 = e2.map(g3, function(e3) {
                return e3.toLowerCase && "all" === e3.toLowerCase() ? "<option value='all'>" + i3.messages.allPages + "</option>" : "<option>" + e3 + "</option>";
              });
              e2('<span class="k-pager-sizes k-label"><select></select>' + i3.messages.itemsPerPage + "</span>").appendTo(p3.element).find("select").html(_3.join("")).end().appendTo(p3.element);
            }
            p3.element.find(".k-pager-sizes select").val(p3.pageSize()), n2.ui.DropDownList && p3.element.find(".k-pager-sizes select").show().attr("aria-label", i3.messages.pageSizeDropDownLabel).kendoDropDownList(), p3.element.on(h2 + f2, ".k-pager-sizes select", p3._change.bind(p3));
          }
          i3.refresh && (p3.element.find(".k-pager-refresh").length || p3.element.append('<a role="button" href="#" class="k-pager-refresh k-link" title="' + i3.messages.refresh + '" aria-label="' + i3.messages.refresh + '"><span class="k-icon k-i-reload"></span></a>'), p3.element.on(m2 + f2, ".k-pager-refresh", p3._refreshClick.bind(p3))), i3.info && (p3.element.find(".k-pager-info").length || p3.element.append('<span class="k-pager-info k-label" />')), p3.element.on(m2 + f2, "a", p3._click.bind(p3)).on(h2 + f2, "select.k-dropdown", p3._numericSelectChange.bind(p3)).addClass("k-pager-wrap k-widget k-floatwrap"), i3.autoBind && p3.refresh(), p3._resizeHandler = p3.resize.bind(p3, true), e2(window).on("resize" + f2, p3._resizeHandler), (c3 = p3._getWidthSizeClass(p3.element.outerWidth())) && p3.element.addClass(c3), p3._navigatable(), n2.notify(p3);
        }, destroy: function() {
          var t3 = this;
          a2.fn.destroy.call(t3), t3.element.off(f2), t3.dataSource.unbind(h2, t3._refreshHandler), t3._refreshHandler = null, e2(window).off("resize" + f2, this._resizeHandler), n2.destroy(t3.element), t3.element = t3.list = null;
        }, events: [h2], options: { name: "Pager", ARIATemplate: "Page navigation, page #=page# of #=totalPages#", selectTemplate: '<li><span role="button" aria-current="page" tabindex="#=tabindex#" aria-label="#=title#" class="k-link k-selected">#=text#</span></li>', linkTemplate: '<li><a role="button" tabindex="#=tabindex#" href="\\#" class="k-link" data-#=ns#page="#=idx#" #if (title !== "") {# title="#=title#" #}#>#=text#</a></li>', numericSelectItemTemplate: '<option value="#= idx #" #if (selected) {# selected="selected" #}#>#= text #</option>', buttonCount: 10, autoBind: true, numeric: true, info: true, input: false, previousNext: true, pageSizes: false, refresh: false, responsive: true, navigatable: false, messages: { allPages: "All", display: "{0} - {1} of {2} items", empty: "No items to display", page: "Page", of: "of {0}", itemsPerPage: "items per page", pageButtonLabel: "Page {0}", pageSizeDropDownLabel: "Page sizes drop down", numbersSelectLabel: "Page select", first: "Go to the first page", previous: "Go to the previous page", next: "Go to the next page", last: "Go to the last page", refresh: "Refresh", morePages: "More pages" } }, setDataSource: function(e3) {
          var t3 = this;
          t3.dataSource.unbind(h2, t3._refreshHandler), t3.dataSource = t3.options.dataSource = e3, e3.bind(h2, t3._refreshHandler), t3.options.autoBind && e3.fetch();
        }, _aria: function() {
          this.element.attr({ role: "application", "aria-roledescription": "pager", "aria-keyshortcuts": "Enter ArrowRight ArrowLeft" });
        }, _resize: function(e3) {
          if (e3.width) {
            var t3 = this._getWidthSizeClass(e3.width), n3 = this.element;
            t3 ? n3.hasClass(t3) || (n3.removeClass(c2), n3.addClass(t3)) : n3.removeClass(c2);
          }
        }, _createDataSource: function(e3) {
          this.dataSource = n2.data.DataSource.create(e3.dataSource);
        }, refresh: function(t3) {
          var i3, a3, r3, o3 = this, s3 = 1, l3 = o3.page(), d3 = "", u3 = "", c3 = o3.options, p3 = o3.pageSize(), h3 = o3._collapsedTotal(), f3 = o3.dataSource._isGroupPaged() ? o3.dataSource.groupsTotal(true) : o3.dataSource.total(), m3 = o3.totalPages(), v3 = o3.linkTemplate, _3 = c3.navigatable, w2 = o3.numericSelectItemTemplate, y2 = c3.buttonCount;
          if (!t3 || "itemchange" != t3.action) {
            if (c3.numeric) {
              for (l3 > y2 && (s3 = 0 === (r3 = l3 % y2) ? l3 - y2 + 1 : l3 - r3 + 1), a3 = Math.min(s3 + y2 - 1, m3), s3 > 1 && (d3 += b2({ template: v3, navigatable: _3, idx: s3 - 1, text: "...", numeric: false, title: c3.messages.morePages }), u3 += k2(w2, s3 - 1, c3.messages.morePages)), i3 = s3; i3 <= a3; i3++) d3 += b2({ template: i3 == l3 ? o3.selectTemplate : v3, navigatable: _3, idx: i3, text: i3, numeric: true, title: n2.format(c3.messages.pageButtonLabel, i3) }), u3 += k2(w2, i3, i3, i3 == l3);
              a3 < m3 && (d3 += b2({ template: v3, navigatable: _3, idx: i3, text: "...", numeric: w2, title: c3.messages.morePages }), u3 += k2(w2, i3, c3.messages.morePages)), "" === d3 && (d3 = o3.selectTemplate({ text: 0, tabindex: _3 ? 0 : -1, navigatable: _3, title: n2.format(c3.messages.pageButtonLabel, 0) }), u3 = e2("<option value='0' />")), o3.list.html(d3), o3._numericSelect.html(u3);
            }
            if (c3.info && (d3 = f3 > 0 ? n2.format(c3.messages.display, o3.dataSource.options.endless ? 1 : Math.min((l3 - 1) * (o3.dataSource.pageSize() || 0) + 1, h3), Math.min(l3 * p3, h3), f3) : c3.messages.empty, o3.element.find(".k-pager-info").html(d3)), c3.input && o3.element.find(".k-pager-input").html(o3.options.messages.page + '<span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input class="k-input-inner" aria-label="' + o3.options.messages.page + " " + l3 + '"></span>' + n2.format(c3.messages.of, m3)).find("input").val(l3).attr("disabled", f3 < 1).attr("aria-disabled", f3 < 1).toggleClass("k-disabled", f3 < 1), c3.previousNext && (x(o3.element, l3), C(o3.element, l3), T(o3.element, l3, m3), S(o3.element, l3, m3)), c3.pageSizes) {
              var I2 = p3;
              o3.element.find(".k-pager-sizes option[value='all']").length > 0 && (p3 === this.dataSource.total() || p3 == g2) && (p3 = "all", I2 = c3.messages.allPages), o3.element.find(".k-pager-sizes select").val(p3).filter("[" + n2.attr("role") + "=dropdownlist]").kendoDropDownList("value", p3).kendoDropDownList("text", I2);
            }
            o3._restoreFocus(s3, a3, m3), o3._excludeChildrenFromTab(), o3._updateAria();
          }
        }, _excludeChildrenFromTab: function() {
          var t3 = n2._activeElement();
          !this.options.navigatable || t3 !== this.element[0] && e2.contains(this.element[0], t3) || this.element.find(p2).attr("tabindex", -1);
        }, _restoreFocus: function(e3, t3, n3) {
          var i3 = this;
          i3.options.navigatable && (i3._focusSelected && (i3.element.find(".k-selected").trigger("focus"), i3._focusSelected = null), null !== i3._focusMore && (t3 < n3 && i3._focusMore && i3.list.find("li").last().find("a").trigger("focus"), !i3._focusMore && e3 > 1 && i3.list.find("li").first().find("a").trigger("focus"), i3._focusMore = null));
        }, _restoreTabIndexes: function() {
          this.element.find("[tabindex='-1']:not(.k-disabled)").attr("tabindex", 0);
        }, _collapsedTotal: function() {
          return this.dataSource.total();
        }, _keydown: function(e3) {
          if (e3.keyCode === n2.keys.ENTER) {
            var t3 = this.element.find(".k-pager-input").find("input"), i3 = parseInt(t3.val(), 10);
            (isNaN(i3) || i3 < 1 || i3 > this.totalPages()) && (i3 = this.page()), t3.val(i3), this.page(i3);
          }
        }, _refreshClick: function(e3) {
          e3.preventDefault(), this.dataSource.read();
        }, _change: function(e3) {
          var n3 = e3.currentTarget.value, i3 = parseInt(n3, 10), a3 = this.dataSource;
          isNaN(i3) ? "all" == (n3 + "").toLowerCase() && (a3._pageSize = t2, a3._take = t2, a3._skip = 0, a3.fetch()) : a3.pageSize(i3);
        }, _template: function() {
          this._ariaTemplate = o2(this.options.ARIATemplate).bind(this);
        }, _updateAria: function() {
          this.options.navigatable && this.element.attr("aria-label", this._ariaTemplate({ page: this.page(), totalPages: this.totalPages() }));
        }, _navigatable: function() {
          var e3 = this;
          e3.options.navigatable && (e3._aria(), e3.element.attr("id", e3._id), e3._template(), e3._updateAria(), e3._tabindex(e3.element), e3.element.on("keydown" + f2, e3, e3._keyDown.bind(e3)), e3.element.on("focusout" + f2, function() {
            e3.element.removeClass("k-focus");
          }), e3.element.on("focusin" + f2, function(t3) {
            e3.element.addClass("k-focus"), t3.target === e3.element[0] ? e3.element.find(p2).attr("tabindex", -1) : e3.element.removeClass("k-focus");
          }));
        }, _keyDown: function(t3) {
          var n3, i3, a3 = this, o3 = e2(t3.target), s3 = false;
          o3[0] === a3.element[0] && t3.keyCode == r2.ENTER && (a3._restoreTabIndexes(), a3.element.find(p2).first().trigger("focus"), s3 = true), o3[0] !== a3.element[0] && t3.keyCode == r2.ESC && (a3.element.trigger("focus"), s3 = true), o3[0] === a3.element[0] && t3.keyCode == r2.HOME && (a3.page(1), s3 = true), o3[0] === a3.element[0] && t3.keyCode == r2.END && (a3.page(a3.totalPages()), s3 = true), o3[0] !== a3.element[0] || t3.keyCode != (v2 ? r2.LEFT : r2.RIGHT) && t3.keyCode != r2.PAGEDOWN || (a3.page(a3.page() + 1), s3 = true), o3[0] !== a3.element[0] || t3.keyCode != (v2 ? r2.RIGHT : r2.LEFT) && t3.keyCode != r2.PAGEUP || (a3.page(a3.page() - 1 || 1), s3 = true), o3[0] !== a3.element[0] && t3.keyCode == r2.TAB && (i3 = (n3 = a3.element.find(p2)).index(o3), t3.shiftKey ? i3 - 1 < 0 ? n3.last().trigger("focus") : n3.eq(i3 - 1).trigger("focus") : i3 + 1 < n3.length ? n3.eq(i3 + 1).trigger("focus") : n3.first().trigger("focus"), s3 = true), s3 && (t3.preventDefault(), t3.stopPropagation());
        }, _numericSelectChange: function(e3) {
          var t3 = e3.currentTarget, n3 = t3.value, i3 = parseInt(n3, 10);
          t3.blur(), this.page(i3);
        }, _click: function(t3) {
          var i3 = e2(t3.currentTarget);
          t3.preventDefault(), this.options.navigatable && (i3.attr("title") == this.options.messages.morePages ? this._focusMore = i3.parent().index() : i3.hasClass("k-pager-refresh") || i3.hasClass("k-pager-nav") || (this._focusSelected = true)), i3.is(".k-disabled") || this.page(parseInt(i3.attr(n2.attr("page")), 10));
        }, totalPages: function() {
          return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));
        }, pageSize: function() {
          return this.dataSource.pageSize() || this.dataSource.total();
        }, page: function(e3) {
          if (!e3) return this.dataSource.total() > 0 ? this.dataSource.page() : 0;
          this.trigger("pageChange", { index: e3 }) || (this.dataSource.page(e3), this.trigger(h2, { index: e3 }));
        }, _getWidthSizeClass: function(e3) {
          var t3 = c2.split(" ");
          return this.options.responsive ? e3 <= 480 ? t3[1] : e3 <= 600 ? t3[0] : null : null;
        } });
        i2.plugin(I);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = "change", a2 = "cancel", r2 = "dataBound", o2 = "dataBinding", s2 = n2.ui.Widget, l2 = n2.keys, d2 = "", u2 = "> *:not(.k-loading-mask)", c2 = "progress", p2 = "error", h2 = "k-focus", f2 = "k-selected", m2 = "k-edit-item", g2 = "k-listview-pager", v2 = "k-listview-item", _2 = "role", b2 = "aria-label", k2 = "aria-multiselectable", w = "aria-activedescendant", y = "edit", x = "remove", C = "save", T = "touchstart", S = ".kendoListView", I = n2._activeElement, D = n2.ui.progress, E = n2.data.DataSource, A = n2.ui.DataBoundWidget.extend({ init: function(e3, t3) {
          var i3 = this;
          t3 = Array.isArray(t3) ? { dataSource: t3 } : t3, s2.fn.init.call(i3, e3, t3), t3 = i3.options, i3.wrapper = e3 = i3.element, e3[0].id ? i3._itemId = e3[0].id + "_lv_active" : i3._itemId = n2.guid() + "_lv_active", i3._element(), i3._layout(), i3._dataSource(), i3._setContentHeight(), i3._templates(), i3._navigatable(), i3._selectable(), i3._pageable(), i3._crudHandlers(), i3._scrollable(), i3.options.autoBind && i3.dataSource.fetch(), n2.notify(i3);
        }, events: [i2, a2, o2, r2, y, x, C, "kendoKeydown"], options: { name: "ListView", ariaLabel: null, autoBind: true, selectable: false, navigatable: false, pageable: false, height: null, template: d2, altTemplate: d2, editTemplate: d2, contentTemplate: "<div data-content='true' />", contentElement: "div", bordered: true, borders: "", layout: "", flex: { direction: "row", wrap: "nowrap" }, grid: {}, scrollable: false }, setOptions: function(e3) {
          s2.fn.setOptions.call(this, e3), this._layout(), this._templates(), this.selectable && (this.selectable.destroy(), this.selectable = null), this._selectable();
        }, _templates: function() {
          var e3 = this.options;
          this.template = n2.template(e3.template || d2), this.altTemplate = n2.template(e3.altTemplate || e3.template), this.editTemplate = n2.template(e3.editTemplate || d2);
        }, _item: function(e3) {
          return this.content.children()[e3]();
        }, items: function() {
          return this.content.children(":not(.k-loading-mask)");
        }, dataItem: function(t3) {
          var i3 = n2.attr("uid"), a3 = e2(t3).closest("[" + i3 + "]").attr(i3);
          return this.dataSource.getByUid(a3);
        }, setDataSource: function(e3) {
          this.options.dataSource = e3, this._dataSource(), this.options.autoBind && e3.fetch(), "endless" === this.options.scrollable && this._bindScrollable();
        }, _unbindDataSource: function() {
          var e3 = this;
          e3.dataSource.unbind(i2, e3._refreshHandler).unbind(c2, e3._progressHandler).unbind(p2, e3._errorHandler);
        }, _dataSource: function() {
          var n3 = this, a3 = n3.options.pageable, r3 = n3.options.dataSource;
          e2.isPlainObject(a3) && a3.pageSize !== t2 && (r3.pageSize = a3.pageSize), n3.dataSource && n3._refreshHandler ? n3._unbindDataSource() : (n3._refreshHandler = n3.refresh.bind(n3), n3._progressHandler = n3._progress.bind(n3), n3._errorHandler = n3._error.bind(n3)), n3.dataSource = E.create(r3).bind(i2, n3._refreshHandler).bind(c2, n3._progressHandler).bind(p2, n3._errorHandler);
        }, _progress: function(e3) {
          var t3 = this.wrapper;
          e3 && this.content.height() && (t3 = this.content), D(t3, e3, { opacity: true });
        }, _error: function() {
          D(this.content, false);
        }, _element: function() {
          var t3 = this.options, n3 = t3.height;
          this.element.addClass("k-widget k-listview"), t3.contentElement ? this.content = e2(document.createElement(t3.contentElement)).appendTo(this.element) : this.content = this.element, n3 && this.element.css("height", n3);
        }, _layout: function() {
          var e3 = this, n3 = e3.options, i3 = n3.flex, a3 = n3.grid, r3 = e3.element, o3 = ["k-widget", "k-listview"], s3 = e3.content, l3 = ["k-listview-content"];
          r3.add(s3).removeClass(function(e4, t3) {
            if (t3.indexOf("k-") >= 0) return true;
          }), true === n3.bordered && o3.push("k-listview-bordered"), "string" == typeof n3.borders && n3.borders !== d2 && o3.push("k-listview-borders-" + n3.borders), "string" == typeof n3.contentPadding && n3.contentPadding !== d2 && l3.push("k-listview-content-padding-" + n3.contentPadding), "string" == typeof n3.layout && n3.layout !== d2 && l3.push("k-d-" + n3.layout), "flex" === n3.layout && "object" == typeof i3 && ("string" == typeof i3.direction && "" !== i3.direction && l3.push("k-flex-" + i3.direction), "string" == typeof i3.wrap && "" !== i3.wrap && l3.push("k-flex-" + i3.wrap)), "grid" === n3.layout && "object" == typeof a3 && ("number" == typeof a3.cols ? s3.css("grid-template-columns", "repeat(" + a3.cols + ", 1fr)") : "string" == typeof a3.cols && s3.css("grid-template-columns", a3.cols), "number" == typeof a3.rows ? s3.css("grid-template-rows", "repeat(" + a3.rows + ", " + (a3.rowHeight !== t2 ? a3.rowHeight : "1fr") + ")") : "string" == typeof a3.rows && s3.css("grid-template-rows", a3.rows), ("number" == typeof a3.gutter || "string" == typeof a3.gutter) && s3.css("grid-gap", a3.gutter)), e3.element.addClass(o3.join(" ")), e3.content.addClass(l3.join(" "));
        }, _setContentHeight: function() {
          var e3, t3 = this;
          t3.options.scrollable && t3.wrapper.is(":visible") && (e3 = t3.wrapper.innerHeight(), t3.content.height(e3));
        }, refresh: function(e3) {
          var t3, i3, a3, s3, l3, d3 = this, u3 = d3.dataSource.view(), c3 = "", p3 = d3.template, h3 = d3.altTemplate, f3 = d3.options.selectable ? "option" : "listitem", m3 = I(), g3 = d3._endlessFetchInProgress, b3 = g3 ? d3._skipRerenderItemsCount : 0, k3 = d3.options.scrollable;
          if ("itemchange" !== (e3 = e3 || {}).action) {
            if (!d3.trigger(o2, { action: e3.action || "rebind", items: e3.items, index: e3.index })) {
              for (d3._angularItems("cleanup"), g3 || d3._destroyEditable(), s3 = b3, l3 = u3.length; s3 < l3; s3++) c3 += s3 % 2 ? h3(u3[s3]) : p3(u3[s3]);
              for (g3 ? d3.content.append(c3) : d3.content.html(c3), i3 = d3.items().not(".k-loading-mask"), d3._ariaAttributes(u3.length), s3 = b3, l3 = u3.length; s3 < l3; s3++) (a3 = i3.eq(s3)).addClass(v2), a3.attr(n2.attr("uid"), u3[s3].uid).attr(_2, f3), d3.options.selectable && a3.attr("aria-selected", "false"), d3.options.pageable && (a3.attr("aria-setsize", d3.dataSource.total()), a3.attr("aria-posinset", d3.dataSource.indexOf(d3.dataItem(a3)) + 1));
              d3.content[0] === m3 && d3.options.navigatable && (d3._focusNext ? d3.current(d3.current().next()) : k3 || d3.current(i3.eq(0))), d3.element.attr(w) && 0 === d3.element.find("#" + d3.element.attr(w)).length && d3.element.removeAttr(w), d3._setContentHeight(), d3._angularItems("compile"), d3._progress(false), d3._endlessFetchInProgress = null, d3.trigger(r2, { action: e3.action || "rebind", items: e3.items, index: e3.index });
            }
          } else d3._hasBindingTarget() || d3.editable || (t3 = e3.items[0], (a3 = d3.items().filter("[" + n2.attr("uid") + "=" + t3.uid + "]")).length > 0 && (s3 = a3.index(), d3.angular("cleanup", function() {
            return { elements: [a3] };
          }), a3.replaceWith(p3(t3)), (a3 = d3.items().eq(s3)).attr(n2.attr("uid"), t3.uid), d3.angular("compile", function() {
            return { elements: [a3], data: [{ dataItem: t3 }] };
          }), d3.trigger("itemChange", { item: a3, data: t3 })));
        }, _ariaAttributes: function(e3) {
          var t3 = this.content, i3 = this.options.selectable;
          this._ariaLabelValue = this._ariaLabelValue || this.options.ariaLabel, 0 === e3 ? (t3.removeAttr(_2), t3.removeAttr(k2), t3.attr(b2) && (this._ariaLabelValue = t3.attr(b2), t3.removeAttr(b2))) : (t3.attr(_2, i3 ? "listbox" : "list"), i3 && n2.ui.Selectable.parseOptions(i3).multiple && t3.attr(k2, true), this._ariaLabelValue && t3.attr(b2, this._ariaLabelValue));
        }, _pageable: function() {
          var t3, i3, a3 = this, r3 = a3.options.pageable, o3 = a3.options.navigatable;
          r3 && ((t3 = a3.wrapper.find("." + g2)).length || (t3 = e2("<div />").addClass(g2)), "top" === r3.position ? t3.addClass(n2.format("{0}-{1}", g2, r3.position)).prependTo(a3.wrapper) : t3.appendTo(a3.wrapper), a3.pager && a3.pager.destroy(), "object" == typeof r3 && r3 instanceof n2.ui.Pager ? a3.pager = r3 : (t3 = r3.pagerId ? e2("#" + r3.pagerId) : t3, i3 = e2.extend({}, r3, { dataSource: a3.dataSource, navigatable: o3, pagerId: null }), a3.pager = new n2.ui.Pager(t3, i3)));
        }, _selectable: function() {
          var t3, a3, r3 = this, o3 = r3.options.selectable, s3 = r3.options.navigatable;
          o3 && (t3 = n2.ui.Selectable.parseOptions(o3).multiple, r3.selectable = new n2.ui.Selectable(r3.element, { aria: true, multiple: t3, filter: r3.options.contentElement ? ".k-listview-content " + u2 : u2, change: function() {
            r3.trigger(i2);
          } }), s3 && r3.element.on("keydown" + S, function(n3) {
            if (e2(n3.target).is(r3.element) && n3.keyCode === l2.SPACEBAR) {
              if (a3 = r3.current(), n3.target == n3.currentTarget && n3.preventDefault(), t3) if (n3.ctrlKey) {
                if (a3 && a3.hasClass(f2)) return a3.removeClass(f2), void r3.trigger(i2);
              } else r3.selectable.clear();
              else r3.selectable.clear();
              r3.selectable.value(a3), r3.trigger(i2);
            }
          }));
        }, _scrollable: function() {
          var e3 = this, t3 = e3.options.scrollable;
          t3 && (e3.content.css({ "overflow-y": "scroll", position: "relative", "-webkit-overflow-scrolling": "touch" }), "endless" === t3 && e3._bindScrollable());
        }, _bindScrollable: function() {
          var e3 = this, t3 = e3._endlessPageSize = e3.dataSource.options.pageSize;
          e3.content.off("scroll" + S).on("scroll" + S, function() {
            this.scrollTop + this.clientHeight - this.scrollHeight >= -15 && !e3._endlessFetchInProgress && e3._endlessPageSize < e3.dataSource.total() && (e3._skipRerenderItemsCount = e3._endlessPageSize, e3._endlessPageSize = e3._skipRerenderItemsCount + t3, e3.dataSource.options.endless = true, e3._endlessFetchInProgress = true, e3.dataSource.pageSize(e3._endlessPageSize));
          });
        }, current: function(e3) {
          var n3 = this, i3 = n3.element, a3 = n3._current, r3 = n3._itemId;
          if (e3 === t2) return a3;
          a3 && a3[0] && (a3[0].id === r3 && a3.removeAttr("id"), a3.removeClass(h2), i3.removeAttr(w)), e3 && e3[0] && (r3 = e3[0].id || r3, n3._scrollTo(e3[0]), i3.attr(w, r3), e3.addClass(h2).attr("id", r3)), n3._current = e3;
        }, _scrollTo: function(t3) {
          var n3, i3 = this.content, a3 = false, r3 = "scroll";
          "auto" === i3.css("overflow") || i3.css("overflow") === r3 || i3.css("overflow-y") === r3 ? n3 = i3[0] : (n3 = window, a3 = true);
          var o3 = function(i4, o4) {
            var s3 = a3 ? e2(t3).offset()[i4.toLowerCase()] : t3["offset" + i4], l3 = t3["client" + o4], d3 = e2(n3)[r3 + i4](), u3 = e2(n3)[o4.toLowerCase()]();
            s3 + l3 > d3 + u3 ? e2(n3)[r3 + i4](s3 + l3 - u3) : s3 < d3 && e2(n3)[r3 + i4](s3);
          };
          o3("Top", "Height"), o3("Left", "Width");
        }, _navigatable: function() {
          var t3 = this, i3 = t3.options.navigatable, a3 = t3.element, r3 = t3.content;
          i3 && (t3._tabindex(), a3.on("focus" + S, function() {
            var e3 = t3._current;
            e3 && e3.is(":visible") || (e3 = t3._item("first")), t3.current(e3);
          }).on("focusout" + S, function() {
            t3._current && t3._current.removeClass(h2);
          }).on("keydown" + S, t3, function(i4) {
            var a4, o3 = i4.keyCode, s3 = t3.current(), d3 = e2(i4.target), u3 = !d3.is(":button, textarea, a, a > .t-icon, input"), c3 = d3.is(":text, :password"), p3 = n2.preventDefault, h3 = r3.find("." + m2), f3 = I(), v3 = t3.options.scrollable;
            if (!(d3.hasClass(g2) || !u3 && !c3 && o3 !== l2.ESC || c3 && o3 !== l2.ESC && o3 !== l2.ENTER)) {
              if (o3 !== l2.UP && o3 !== l2.LEFT || (s3 && s3[0] && (s3 = s3.prev()), s3 && s3[0] ? t3.current(s3) : v3 || t3.current(t3._item("last")), p3(i4)), o3 !== l2.DOWN && o3 !== l2.RIGHT || (v3 ? "endless" !== t3.options.scrollable || s3.next().length ? (s3 = s3.next()) && s3[0] && t3.current(s3) : (t3.content[0].scrollTop = t3.content[0].scrollHeight, t3._focusNext = true) : (s3 = s3.next(), t3.current(s3 && s3[0] ? s3 : t3._item("first"))), p3(i4)), o3 === l2.PAGEUP && (t3.current(null), t3.dataSource.page(t3.dataSource.page() - 1), p3(i4)), o3 === l2.PAGEDOWN && (t3.current(null), t3.dataSource.page(t3.dataSource.page() + 1), p3(i4)), o3 === l2.HOME && (t3.current(t3._item("first")), p3(i4)), o3 === l2.END && (t3.current(t3._item("last")), p3(i4)), o3 === l2.ENTER) if (0 !== h3.length && (u3 || c3)) {
                a4 = t3.items().index(h3), f3 && f3.blur(), t3.save();
                t3.one("dataBound", function() {
                  t3.element.trigger("focus"), t3.current(t3.items().eq(a4));
                });
              } else "" !== t3.options.editTemplate && t3.edit(s3);
              if (o3 === l2.ESC) {
                if (0 === (h3 = r3.find("." + m2)).length) return;
                a4 = t3.items().index(h3), t3.cancel(), t3.element.trigger("focus"), t3.current(t3.items().eq(a4));
              }
            }
          }), a3.on("mousedown" + S + " " + T + S, t3.options.contentElement ? ".k-listview-content " + u2 : u2, function(i4) {
            t3.current(e2(i4.currentTarget)), e2(i4.target).is(":button, a, :input, a > .k-icon, textarea") || n2.focusElement(a3);
          }.bind(t3)));
        }, clearSelection: function() {
          this.selectable.clear();
        }, select: function(t3) {
          var n3 = this.selectable;
          return (t3 = e2(t3)).length ? (n3.options.multiple || (n3.clear(), t3 = t3.first()), void n3.value(t3)) : n3.value();
        }, _destroyEditable: function() {
          var e3 = this;
          e3.editable && (e3.editable.destroy(), delete e3.editable);
        }, _modelFromElement: function(e3) {
          var t3 = e3.attr(n2.attr("uid"));
          return this.dataSource.getByUid(t3);
        }, _closeEditable: function() {
          var e3, t3, i3, a3 = this, r3 = a3.editable, o3 = a3.options.selectable ? "option" : "listitem", s3 = a3.template;
          return r3 && (r3.element.index() % 2 && (s3 = a3.altTemplate), a3.angular("cleanup", function() {
            return { elements: [r3.element] };
          }), e3 = a3._modelFromElement(r3.element), a3._destroyEditable(), i3 = r3.element.index(), r3.element.replaceWith(s3(e3)), (t3 = a3.items().eq(i3)).addClass(v2), t3.attr(n2.attr("uid"), e3.uid), t3.attr(_2, o3), a3._hasBindingTarget() && n2.bind(t3, e3), a3.angular("compile", function() {
            return { elements: [t3], data: [{ dataItem: e3 }] };
          })), true;
        }, edit: function(e3) {
          var t3, i3, a3 = this, r3 = a3._modelFromElement(e3), o3 = r3.uid;
          a3.cancel(), i3 = (e3 = a3.items().filter("[" + n2.attr("uid") + "=" + o3 + "]")).index(), e3.replaceWith(a3.editTemplate(r3)), t3 = a3.items().eq(i3).addClass(m2).attr(n2.attr("uid"), r3.uid), a3.editable = t3.kendoEditable({ model: r3, clearContainer: false, errorTemplate: false, target: a3 }).data("kendoEditable"), a3.trigger(y, { model: r3, item: t3 });
        }, save: function() {
          var e3, t3 = this, n3 = t3.editable;
          if (n3) {
            var i3 = n3.element;
            e3 = t3._modelFromElement(i3), n3.end() && !t3.trigger(C, { model: e3, item: i3 }) && (t3._closeEditable(), t3.dataSource.sync());
          }
        }, remove: function(e3) {
          var t3 = this, n3 = t3.dataSource, i3 = t3._modelFromElement(e3);
          t3.editable && (n3.cancelChanges(t3._modelFromElement(t3.editable.element)), t3._closeEditable()), t3.trigger(x, { model: i3, item: e3 }) || (e3.attr("id") === t3.element.attr(w) && t3.element.removeAttr(w), e3.hide(), n3.remove(i3), n3.sync());
        }, add: function() {
          var e3, t3 = this, n3 = t3.dataSource, i3 = n3.indexOf((n3.view() || [])[0]);
          i3 < 0 && (i3 = 0), t3.cancel(), e3 = n3.insert(i3, {}), t3.edit(t3.element.find("[data-uid='" + e3.uid + "']"));
        }, cancel: function() {
          var e3 = this, t3 = e3.dataSource;
          if (e3.editable) {
            var n3 = e3.editable.element, i3 = e3._modelFromElement(n3);
            e3.trigger(a2, { model: i3, container: n3 }) || (t3.cancelChanges(i3), e3._closeEditable());
          }
        }, _crudHandlers: function() {
          var t3 = this, i3 = T + S, a3 = "click" + S;
          t3.content.on(i3 + " " + a3, ".k-edit-button", function(i4) {
            i4.preventDefault();
            var a4 = e2(this).closest("[" + n2.attr("uid") + "]");
            setTimeout(function() {
              t3.edit(a4);
            });
          }), t3.content.on(i3 + " " + a3, ".k-delete-button", function(i4) {
            i4.preventDefault();
            var a4 = e2(this).closest("[" + n2.attr("uid") + "]");
            setTimeout(function() {
              t3.remove(a4);
            });
          }), t3.content.on(a3, ".k-update-button", function(e3) {
            t3.save(), e3.preventDefault();
          }), t3.content.on(a3, ".k-cancel-button", function(e3) {
            t3.cancel(), e3.preventDefault();
          });
        }, destroy: function() {
          var e3 = this;
          s2.fn.destroy.call(e3), e3._unbindDataSource(), e3._destroyEditable(), e3.element.off(S), e3.content.off(S), e3._endlessFetchInProgress = e3._endlessPageSize = e3._skipRerenderItemsCount = e3._focusNext = null, e3.pager && e3.pager.destroy(), n2.destroy(e3.element);
        } });
        n2.ui.plugin(A);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.antiForgeryTokens, r2 = n2.logToConsole, o2 = /\.([^\.]+)$/, s2 = ".kendoUpload", l2 = "select", d2 = "upload", u2 = "success", c2 = "error", p2 = "complete", h2 = "cancel", f2 = "clear", m2 = "pause", g2 = "resume", v2 = "progress", _2 = "remove", b2 = "invalidMaxFileSize", k2 = "invalidMinFileSize", w = "invalidFileExtension", y = "k-focus", x = "tabindex", C = "k-i-upload", T = "k-i-warning", S = "k-i-check", I = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          i2.fn.init.call(a3, e3, t3), a3.name = e3.name, a3.multiple = a3.options.multiple, a3.directory = a3.options.directory, a3.localization = a3.options.localization;
          var r3 = a3.element;
          a3.wrapper = r3.closest(".k-upload"), 0 === a3.wrapper.length && (a3.wrapper = a3._wrapInput(r3)), a3._activeInput(r3), a3.toggle(a3.options.enabled);
          var o3 = a3._ns = s2 + "-" + n2.guid();
          r3.closest("form").on("submit" + o3, a3._onParentFormSubmit.bind(a3)).on("reset" + o3, a3._onParentFormReset.bind(a3)), a3._initUploadModule(), a3._toggleDropZone(), a3.wrapper.on("click", ".k-upload-action", a3._onFileAction.bind(a3)).on("click", ".k-clear-selected", a3._onClearSelected.bind(a3)).on("click", ".k-upload-selected", a3._onUploadSelected.bind(a3)).on("keydown", a3._onKeyDown.bind(a3)).on("focusout", a3._focusout.bind(a3)), a3.element.val() && a3._onInputChange({ target: a3.element });
        }, events: [l2, d2, u2, c2, p2, h2, f2, v2, _2, m2, g2], options: { name: "Upload", enabled: true, multiple: true, directory: false, showFileList: true, template: "", files: [], async: { autoRetryAfter: 0, bufferChunkSize: 1e7, maxAutoRetries: 1, removeVerb: "POST", autoUpload: true, withCredentials: true, accept: "*/*; q=0.5, application/json", useArrayBuffer: false }, localization: { select: "Select files...", cancel: "Cancel", retry: "Retry", remove: "Remove", pause: "Pause", resume: "Resume", clearSelectedFiles: "Clear", uploadSelectedFiles: "Upload", dropFilesHere: "Drop files here to upload", invalidFiles: "Invalid file(s). Please check file upload requirements.", statusUploading: "uploading", statusUploaded: "uploaded", statusWarning: "warning", statusFailed: "failed", headerStatusUploading: "Uploading...", headerStatusPaused: "Paused", headerStatusUploaded: "Done", uploadSuccess: "File(s) uploaded successfully.", uploadFail: "File(s) failed to upload.", invalidMaxFileSize: "File size too large.", invalidMinFileSize: "File size too small.", invalidFileExtension: "File type not allowed." }, validation: { allowedExtensions: [], maxFileSize: 0, minFileSize: 0 }, dropZone: "" }, _initUploadModule: function() {
          var e3 = this, t3 = e3.options;
          if (t3.async.saveUrl) {
            e3._module = e3._supportsFormData() ? new A(e3) : new E(e3), e3._async = true;
            var n3 = t3.files;
            n3.length > 0 && e3._renderInitialFiles(n3);
          } else e3._module = new D(e3);
        }, setOptions: function(t3) {
          var n3 = this, a3 = n3.element;
          e2(n3.options.dropZone).off(n3._ns), i2.fn.setOptions.call(n3, t3), n3.multiple = n3.options.multiple, n3.directory = n3.options.directory, a3.attr("multiple", !!n3._supportsMultiple() && n3.multiple), n3.directory && (a3.attr("webkitdirectory", n3.directory), a3.attr("directory", n3.directory)), n3.toggle(n3.options.enabled), n3._initUploadModule(), n3._toggleDropZone();
        }, enable: function(e3) {
          e3 = void 0 === e3 || e3, this.toggle(e3);
        }, disable: function() {
          this.toggle(false);
        }, toggle: function(e3) {
          e3 = void 0 === e3 ? e3 : !e3, this.wrapper.toggleClass("k-disabled", e3), this.element.prop("disabled", e3);
        }, focus: function() {
          this.element.trigger("focus");
        }, destroy: function() {
          var t3 = this, n3 = e2(t3.options.dropZone);
          e2(document).add(e2(".k-dropzone", t3.wrapper)).add(t3.wrapper.closest("form")).off(t3._ns), n3.length > 0 && n3.off(t3._ns), e2(t3.element).off(s2), i2.fn.destroy.call(t3);
        }, pause: function(t3) {
          this._module.onPause({ target: e2(t3, this.wrapper) });
          var n3 = t3.find(".k-i-pause-sm");
          n3.removeClass("k-i-pause-sm").addClass("k-i-play-sm").attr("title", this.localization.resume), e2(n3).parent().attr("aria-label", this.localization.resume);
        }, resume: function(t3) {
          this._module.onResume({ target: e2(t3, this.wrapper) });
          var n3 = t3.find(".k-i-play-sm");
          n3.removeClass("k-i-play-sm").addClass("k-i-pause-sm").attr("title", this.localization.pause), e2(n3).parent().attr("aria-label", this.localization.pause);
        }, upload: function() {
          this._module.onSaveSelected();
        }, getFiles: function() {
          for (var t3, n3 = [], i3 = this.wrapper.find(".k-file"), a3 = 0; a3 < i3.length; a3++) if (t3 = e2(i3[a3]).data("fileNames")) for (var r3 = 0; r3 < t3.length; r3++) n3.push(t3[r3]);
          return n3;
        }, clearAllFiles: function() {
          var e3 = this;
          e3.wrapper.find(".k-file").each(function(t3, n3) {
            e3._removeFileByDomElement(n3, false);
          });
        }, removeAllFiles: function() {
          var e3 = this;
          e3.wrapper.find(".k-file").each(function(t3, n3) {
            e3._removeFileByDomElement(n3, true);
          });
        }, removeFileByUid: function(e3) {
          this._removeFileByUid(e3, true);
        }, clearFileByUid: function(e3) {
          this._removeFileByUid(e3, false);
        }, _removeFileByUid: function(t3, i3) {
          var a3;
          "string" == typeof t3 && (a3 = e2(".k-file[" + n2.attr("uid") + '="' + t3 + '"]', this.wrapper)).length > 0 && this._removeFileByDomElement(a3, i3);
        }, clearFile: function(e3) {
          this._removeFile(e3, false);
        }, removeFile: function(e3) {
          this._removeFile(e3, true);
        }, _removeFile: function(t3, n3) {
          var i3, a3 = this, r3 = a3.wrapper.find(".k-file");
          "function" == typeof t3 && r3.each(function(r4, o3) {
            i3 = e2(o3).data("fileNames"), t3(i3) && a3._removeFileByDomElement(o3, n3);
          });
        }, _removeFileByDomElement: function(t3, n3) {
          var i3 = this, a3 = { target: e2(t3, i3.wrapper) };
          i3.options.async.saveUrl ? (e2(t3).hasClass("k-file-progress") ? i3._module.onCancel(a3) : i3._module.onRemove(a3, {}, n3), 0 === e2(".k-file", i3.wrapper).length ? i3._hideHeaderUploadstatus() : i3._updateHeaderUploadStatus()) : i3._module.onRemove(a3, {}, n3);
        }, _addInput: function(t3) {
          if (t3[0].nodeType) {
            var n3 = this, i3 = t3.clone().val("");
            i3.insertAfter(n3.element).data("kendo" + n3.options.prefix + n3.options.name, n3), e2(n3.element).hide().attr(x, "-1").removeAttr("id").off(s2), n3._activeInput(i3), n3.element.trigger("focus");
          }
        }, _activeInput: function(t3) {
          var n3 = this, i3 = n3.wrapper;
          n3.element = t3, n3.directory && (t3.attr("webkitdirectory", n3.directory), t3.attr("directory", n3.directory)), t3.attr("multiple", !!n3._supportsMultiple() && n3.multiple).attr("autocomplete", "off").on("click" + s2, function(e3) {
            i3.hasClass("k-disabled") && e3.preventDefault();
          }).on("focus" + s2, function() {
            e2(this).parent().addClass(y);
          }).on("blur" + s2, function() {
            e2(this).parent().removeClass(y);
          }).on("change" + s2, n3._onInputChange.bind(n3));
        }, _adjustFocusState: function(e3, t3) {
          e3.removeClass(y), e3.attr(x, -1), t3.addClass(y), t3.attr(x, 0);
        }, _arrowKeyNavigation: function(e3, t3, i3) {
          var a3, r3 = this, o3 = n2.keys;
          t3 === o3.DOWN ? (e3.preventDefault(), e3.stopPropagation(), a3 = r3.wrapper.find(".k-upload-files .k-file").first(), i3.length > 0 && (i3.hasClass("k-upload-action") && (i3.removeClass(y), i3 = i3.closest(".k-file")), a3 = i3.next()), r3._adjustFocusState(i3, a3), a3 && 0 !== a3.length || (a3 = r3.wrapper.find(".k-clear-selected"))) : t3 === o3.UP ? (e3.preventDefault(), e3.stopPropagation(), a3 = r3.wrapper.find(".k-upload-files .k-file:last"), i3.length > 0 && (i3.hasClass("k-upload-action") && (i3.removeClass(y), i3 = i3.closest(".k-file")), a3 = i3.prev()), r3._adjustFocusState(i3, a3)) : t3 === o3.RIGHT ? (i3.hasClass("k-upload-action") ? (a3 = i3.next(".k-upload-action")) && 0 !== a3.length || (a3 = i3.parent().find(".k-upload-action:first")) : i3.length > 0 && (a3 = i3.find(".k-upload-action:first")), a3 && a3.length > 0 && (i3.removeClass(y), a3.addClass(y))) : t3 === o3.LEFT && (i3.hasClass("k-upload-action") ? (a3 = i3.prev(".k-upload-action")) && 0 !== a3.length || (a3 = i3.parent().find(".k-upload-action:last")) : i3.length > 0 && (a3 = i3.find(".k-upload-action:last")), a3 && a3.length > 0 && (i3.removeClass(y), a3.addClass(y))), a3 && 0 !== a3.length || t3 !== o3.UP && t3 !== o3.DOWN || (a3 = r3.element), a3 && a3.length > 0 && (r3._preventFocusRemove = true, a3.trigger("focus"));
        }, _asyncCommandKeyNavigation: function(t3, i3, a3) {
          var r3 = this, o3 = n2.keys, s3 = e2(i3, r3.wrapper);
          if (r3._retryClicked = false, t3 === o3.ESC && i3.find(".k-i-cancel").length > 0) r3.trigger(h2, a3), r3._module.onCancel({ target: s3 }), r3._checkAllComplete(), r3._updateHeaderUploadStatus(), r3._preventFocusRemove = true, r3.element.trigger("focus");
          else if (t3 === o3.SPACEBAR) i3.find(".k-i-pause-sm").length > 0 ? (r3.trigger(m2, a3), r3.pause(i3), r3._updateHeaderUploadStatus()) : i3.find(".k-i-play-sm").length > 0 && (r3.trigger(g2, a3), r3.resume(i3));
          else if (t3 === o3.ENTER && !i3.is(".k-file-progress, .k-file-success, .k-file-invalid")) {
            if (r3.options.async.chunkSize && !r3.options.async.concurrent && e2(".k-file-progress", r3.wrapper).length > 0) return;
            e2(".k-i-warning", i3).remove(), e2(".k-progressbar", i3).finish().show(), r3._module.metaData[s3.data("uid")] || r3._module.prepareChunk(s3), r3._module.onRetry({ target: s3 }), r3._retryClicked = true;
          }
        }, _commandKeyNavigation: function(t3, i3) {
          var a3 = this, r3 = n2.keys, o3 = i3.data("fileNames"), s3 = a3._filesContainValidationErrors(o3), l3 = { files: o3, headers: {} };
          t3 === r3.DELETE ? a3.trigger(_2, l3) || (a3._module.onRemove({ target: e2(i3, a3.wrapper) }, l3, !s3), a3._preventFocusRemove = true, a3.element.trigger("focus")) : t3 === r3.TAB ? (i3.removeClass(y), i3.attr(x, -1)) : a3.options.async.saveUrl && a3._asyncCommandKeyNavigation(t3, i3, l3);
        }, _focusout: function() {
          var e3 = this.wrapper.find(".k-upload-files .k-file.k-focus");
          this._preventFocusRemove ? this._preventFocusRemove = false : (e3.removeClass(y), e3.attr(x, -1));
        }, _onKeyDown: function(e3) {
          var t3 = this, i3 = t3.wrapper.find(".k-upload-files .k-file.k-focus,.k-upload-action.k-focus"), a3 = n2.keys, r3 = [a3.DELETE, a3.ESC, a3.ENTER, a3.SPACEBAR, a3.TAB], o3 = e3.keyCode;
          o3 === a3.DOWN || o3 === a3.UP || o3 === a3.LEFT || o3 === a3.RIGHT ? t3._arrowKeyNavigation(e3, o3, i3) : i3.length > 0 && i3.hasClass("k-file") && r3.indexOf(o3) > -1 && !t3.wrapper.hasClass("k-disabled") && (o3 === a3.SPACEBAR && (e3.preventDefault(), e3.stopPropagation()), t3._commandKeyNavigation(o3, i3));
        }, _onInputChange: function(t3) {
          var n3 = this, i3 = e2(t3.target), a3 = N(n3._inputFiles(i3), n3._isAsyncNonBatch());
          R(a3, n3.options.validation), n3.trigger(l2, { files: a3 }) ? (n3._addInput(i3), i3.remove()) : n3._module.onSelect({ target: i3 }, a3);
        }, _readDirectory: function(t3) {
          var n3 = new e2.Deferred(), i3 = t3.createReader(), a3 = [], r3 = function() {
            i3.readEntries(function(e3) {
              e3.length ? (a3 = a3.concat(e3), r3()) : n3.resolve(a3);
            }, n3.reject);
          };
          return r3(), n3.promise();
        }, _readFile: function(e3) {
          var t3 = this, n3 = e3.fullPath;
          e3.file(function(e4) {
            e4.relativePath = n3.slice(1), t3.droppedFolderFiles.push(e4), t3.droppedFolderCounter--, 0 === t3.droppedFolderCounter && setTimeout(function() {
              0 === t3.droppedFolderCounter && t3.droppedFolderFiles.length && (t3._proceedDroppedItems(t3.droppedFolderFiles), t3.droppedFolderFiles = []);
            }, 0);
          }, function() {
            r2("File error.");
          });
        }, _traverseFileTree: function(e3, t3) {
          var n3 = this;
          t3 || n3.droppedFolderCounter--, this._readDirectory(e3).then(function(e4) {
            n3.droppedFolderCounter += e4.length;
            for (var t4 = 0; t4 < e4.length; t4++) e4[t4].isFile ? n3._readFile(e4[t4]) : e4[t4].isDirectory && n3._traverseFileTree(e4[t4]);
          });
        }, _onDrop: function(e3) {
          var t3, n3 = e3.originalEvent.dataTransfer, i3 = this, a3 = n3.files;
          if (j(e3), i3.options.directoryDrop && n3.items) {
            t3 = n3.items.length, i3.droppedFolderCounter = 0, i3.droppedFolderFiles = [];
            for (var r3 = 0; r3 < t3; r3++) if (n3.items[r3].webkitGetAsEntry) {
              var o3 = n3.items[r3].webkitGetAsEntry();
              o3.isDirectory ? i3._traverseFileTree(o3, true) : o3.isFile && i3.droppedFolderFiles.push(n3.files[r3]);
            } else i3._proceedDroppedItems(a3);
          } else i3._proceedDroppedItems(a3);
        }, _proceedDroppedItems: function(t3) {
          var n3 = this, i3 = N(P(t3), n3._isAsyncNonBatch());
          t3.length > 0 && !n3.wrapper.hasClass("k-disabled") && (!n3.multiple && i3.length > 1 && i3.splice(1, i3.length - 1), R(i3, n3.options.validation), n3.trigger(l2, { files: i3 }) || n3._module.onSelect({ target: e2(".k-dropzone", n3.wrapper) }, i3));
        }, _filesContainValidationErrors: function(t3) {
          var n3 = false;
          return e2(t3).each(function(e3, t4) {
            if (t4.validationErrors && t4.validationErrors.length > 0) return n3 = true, false;
          }), n3;
        }, _isAsyncNonBatch: function() {
          return this._async && !this.options.async.batch || false;
        }, _renderInitialFiles: function(e3) {
          var t3 = this, n3 = 0;
          for (e3 = N(e3, true), n3 = 0; n3 < e3.length; n3++) {
            var i3 = e3[n3], a3 = t3._enqueueFile(i3.name, { fileNames: [i3] });
            a3.addClass("k-file-success").data("files", [e3[n3]]), t3._supportsRemove() && t3._fileAction(a3, _2);
          }
        }, _prepareTemplateData: function(e3, t3) {
          var n3 = t3.fileNames, i3 = {}, a3 = 0, r3 = 0;
          for (r3 = 0; r3 < n3.length; r3++) a3 += n3[r3].size;
          return i3.name = e3, i3.size = a3, i3.files = t3.fileNames, i3;
        }, _prepareDefaultSingleFileEntryTemplate: function(t3) {
          var i3 = t3.fileNames[0], a3 = B(t3.fileNames), r3 = n2.getFileGroup(i3.extension, true), o3 = i3.validationErrors, s3 = "";
          return o3 && o3.length > 0 ? s3 += "<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div><span class='k-file-invalid-group-wrapper'><span class='k-file-group k-icon k-i-" + r3 + "'></span><span class='k-file-state'></span></span><span class='k-file-name-size-wrapper'><span class='k-file-name k-file-name-invalid' title='" + i3.name + "'>" + i3.name + "</span><span class='k-file-validation-message !k-text-error'>" + this.localization[o3[0]] + "</span></span>" : s3 += "<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div><span class='k-file-group-wrapper'><span class='k-file-group k-icon k-i-" + r3 + "'></span><span class='k-file-state'></span></span><span class='k-file-name-size-wrapper'><span class='k-file-name' title='" + i3.name + "'>" + i3.name + "</span><span class='k-file-size'>" + a3 + "</span></span>", e2(s3 += "<strong class='k-upload-status'></strong>");
        }, _prepareDefaultMultipleFileEntriesTemplate: function(t3) {
          var n3, i3, a3 = t3.fileNames, r3 = this._filesContainValidationErrors(a3), o3 = B(a3), s3 = "";
          for (s3 += r3 ? "<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div><span class='k-multiple-files-invalid-group-wrapper'><span class='k-file-group k-icon k-i-files'></span>" : "<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div><span class='k-multiple-files-group-wrapper'><span class='k-file-group k-icon k-i-files'></span>", s3 += "<span class='k-file-state'></span></span>", a3.sort(function(e3, t4) {
            return e3.validationErrors ? -1 : t4.validationErrors ? 1 : 0;
          }), s3 += "<span class='k-multiple-files-wrapper'>", n3 = 0; n3 < a3.length; n3++) {
            var l3 = B([i3 = a3[n3]]);
            s3 += "<span class='k-file-name-size-wrapper'>", i3.validationErrors && i3.validationErrors.length > 0 ? s3 += "<span class='k-file-name k-file-name-invalid' title='" + i3.name + "'>" + i3.name + "</span>" : s3 += "<span class='k-file-name' title='" + i3.name + "'>" + i3.name + "</span>", s3 += "<span class='k-file-size'>" + l3 + "</span></span>";
          }
          return s3 += r3 ? "<span class='k-file-validation-message !k-text-error'>" + this.localization.invalidFiles + "</span>" : "<span class='k-file-information'>Total: " + a3.length + " files, " + o3 + "</span>", e2(s3 += "</span><strong class='k-upload-status'></strong>");
        }, _enqueueFile: function(t3, i3) {
          var a3, r3, o3, s3, l3 = this, d3 = i3.fileNames[0].uid, u3 = e2(".k-upload-files", l3.wrapper), c3 = l3.options.template;
          return 0 === u3.length && (u3 = e2("<ul class='k-upload-files k-reset'></ul>").appendTo(l3.wrapper), l3.options.showFileList || u3.hide(), l3.wrapper.removeClass("k-upload-empty")), a3 = e2(".k-file", u3), c3 ? (o3 = l3._prepareTemplateData(t3, i3), c3 = n2.template(c3), (r3 = e2("<li class='k-file'>" + c3(o3) + "</li>")).find(".k-upload-action").addClass("k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base"), l3.angular("compile", function() {
            return { elements: r3, data: [o3] };
          })) : r3 = 1 === i3.fileNames.length ? l3._prepareDefaultSingleFileEntryTemplate(i3) : l3._prepareDefaultMultipleFileEntriesTemplate(i3), r3.attr(n2.attr("uid"), d3).appendTo(u3).data(i3), l3._async || e2(".k-progress", r3).width("100%"), !l3.multiple && a3.length > 0 && (s3 = { files: a3.data("fileNames"), headers: {} }, l3.trigger(_2, s3) || l3._module.onRemove({ target: e2(a3, l3.wrapper) }, s3)), r3;
        }, _removeFileEntry: function(t3) {
          var n3, i3, a3, r3 = this, o3 = t3.closest(".k-upload-files");
          t3.remove(), n3 = e2(".k-file", o3), i3 = e2(".k-file-success, .k-file-error", o3), a3 = e2(".k-file-invalid", o3), i3.length !== n3.length && a3.length !== n3.length || this._hideActionButtons(), 0 === n3.length ? (o3.remove(), r3.wrapper.addClass("k-upload-empty"), r3._hideHeaderUploadstatus()) : r3._updateHeaderUploadStatus();
        }, _fileAction: function(e3, t3, n3) {
          var i3, a3 = { remove: "k-i-x", cancel: "k-i-cancel", retry: "k-i-retry", pause: "k-i-pause-sm" }, r3 = { remove: "k-i-close", cancel: "k-i-cancel", retry: "k-i-reload-sm", pause: "k-i-pause-sm" };
          a3.hasOwnProperty(t3) && (n3 || this._clearFileAction(e3), this.options.template ? (i3 = e3.find(".k-upload-action").first()).find(".k-icon").length ? i3.next(".k-upload-action").length && i3.next(".k-upload-action").addClass("k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button").append("<span class='k-button-icon k-icon " + r3[t3] + " " + a3[t3] + "' title='" + this.localization[t3] + "'aria-label='" + this.localization[t3] + "'></span>").show() : i3.addClass("k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button").append("<span class='k-button-icon k-icon " + r3[t3] + " " + a3[t3] + "' title='" + this.localization[t3] + "'aria-label='" + this.localization[t3] + "'></span>").show() : (n3 || e3.find(".k-upload-status .k-upload-action").remove(), e3.find(".k-upload-status").append(this._renderAction(a3[t3], this.localization[t3], r3[t3]))));
        }, _fileState: function(t3, n3) {
          var i3 = this.localization, a3 = { uploading: { text: i3.statusUploading }, uploaded: { text: i3.statusUploaded }, failed: { text: i3.statusFailed } }[n3];
          a3 && e2("span.k-file-state", t3).text(a3.text);
        }, _renderAction: function(t3, n3, i3) {
          return "" !== t3 ? e2("<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-label='" + n3 + "' tabindex='-1'><span class='k-button-icon k-icon " + i3 + " " + t3 + "' title='" + n3 + "'></span></button>").on("focus", function() {
            e2(this).addClass(y);
          }).on("blur", function() {
            e2(this).removeClass(y);
          }) : e2(`<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'><span class="k-button-text">` + n3 + "</span></button>");
        }, _clearFileAction: function(t3) {
          e2(".k-upload-action", t3).empty().hide();
        }, _onFileAction: function(t3) {
          var n3 = this;
          if (!n3.wrapper.hasClass("k-disabled")) {
            var i3 = e2(t3.target).closest(".k-upload-action"), a3 = i3.find(".k-icon"), r3 = i3.closest(".k-file"), o3 = r3.data("fileNames"), s3 = n3._filesContainValidationErrors(o3), l3 = { files: o3, headers: {} };
            n3._retryClicked = false, a3.hasClass("k-i-x") ? n3.trigger(_2, l3) || (n3._module.onRemove({ target: e2(r3, n3.wrapper) }, l3, !s3), n3.element.trigger("focus")) : a3.hasClass("k-i-cancel") ? (n3.trigger(h2, l3), n3._module.onCancel({ target: e2(r3, n3.wrapper) }), n3._checkAllComplete(), n3._updateHeaderUploadStatus(), n3.element.trigger("focus")) : a3.hasClass("k-i-pause-sm") ? (n3.trigger(m2, l3), n3.pause(r3), n3._updateHeaderUploadStatus()) : a3.hasClass("k-i-play-sm") ? (n3.trigger(g2, l3), n3.resume(r3)) : a3.hasClass("k-i-retry") && (e2(".k-i-warning", r3).remove(), e2(".k-progressbar", r3).finish().show(), n3._module.onRetry({ target: e2(r3, n3.wrapper) }), n3._retryClicked = true), r3.addClass(y);
          }
          return false;
        }, _onUploadSelected: function() {
          return this.wrapper.hasClass("k-disabled") || this._module.onSaveSelected(), false;
        }, _onClearSelected: function() {
          var e3 = this;
          return e3.wrapper.hasClass("k-disabled") || e3.trigger(f2, {}) || e3.clearAllFiles(), false;
        }, _onFileProgress: function(t3, n3) {
          n3 > 100 && (n3 = 100), e2(".k-progressbar", t3.target).removeClass("k-hidden"), this.options.template || (0 === e2(".k-upload-pct", t3.target).length && e2(".k-upload-status", t3.target).prepend("<span class='k-upload-pct'></span>"), 100 !== n3 ? e2(".k-upload-pct", t3.target).text(n3 + "%") : e2(".k-upload-pct", t3.target).remove()), e2(".k-progress", t3.target).width(n3 + "%"), this.trigger(v2, { files: K(t3).data("fileNames"), percentComplete: n3 });
        }, _onUploadSuccess: function(e3, t3, n3) {
          var i3 = this, a3 = K(e3), r3 = a3.data("fileNames"), o3 = a3.find(".k-file-information"), s3 = a3.find(".k-file-size");
          i3.trigger(u2, { files: a3.data("fileNames"), response: t3, operation: "upload", XMLHttpRequest: n3 }) ? i3._setUploadErrorState(a3) : (i3._fileState(a3, "uploaded"), a3.removeClass("k-file-progress").addClass("k-file-success"), o3.length > 0 ? o3.addClass("k-hidden").after('<span class="k-file-validation-message !k-text-success">' + r3.length + " " + i3.localization.uploadSuccess + "</span>") : s3.length > 0 && s3.addClass("k-hidden").after('<span class="k-file-validation-message !k-text-success">' + i3.localization.uploadSuccess + "</span>"), i3._updateHeaderUploadStatus(), i3._supportsRemove() ? i3._fileAction(a3, _2) : i3._clearFileAction(a3)), i3._hideUploadProgress(a3), i3._checkAllComplete();
        }, _onUploadError: function(e3, t3) {
          var n3 = this, i3 = n3._module, a3 = K(e3), o3 = a3.data("uid");
          n3._setUploadErrorState(a3), n3.trigger(c2, { operation: "upload", files: a3.data("fileNames"), XMLHttpRequest: t3 }), r2("Server response: " + t3.responseText), n3.options.async.chunkSize ? i3._decreasePosition && i3._decreasePosition(o3) : n3._hideUploadProgress(a3), n3._checkAllComplete(), this.options.async.autoRetryAfter && this._autoRetryAfter(a3);
        }, _autoRetryAfter: function(e3) {
          var t3 = this, n3 = this._module.retries;
          n3 && (n3[e3.data("uid")] || (n3[e3.data("uid")] = 1), n3[e3.data("uid")] <= this.options.async.maxAutoRetries && (n3[e3.data("uid")]++, setTimeout(function() {
            t3._module.performUpload(e3);
          }, this.options.async.autoRetryAfter)));
        }, _setUploadErrorState: function(t3) {
          var n3, i3 = this, a3 = t3.data("fileNames"), r3 = t3.find(".k-file-information"), o3 = t3.find(".k-file-size");
          i3._fileState(t3, "failed"), t3.removeClass("k-file-progress").addClass("k-file-error"), r3.length > 0 ? r3.addClass("k-hidden").after('<span class="k-file-validation-message !k-text-error">' + a3.length + " " + i3.localization.uploadFail + "</span>") : o3.length > 0 && o3.addClass("k-hidden").after('<span class="k-file-validation-message !k-text-error">' + i3.localization.uploadFail + "</span>"), i3._updateUploadProgress(t3), (n3 = e2(".k-upload-pct", t3)).length > 0 && n3.remove(), this._updateHeaderUploadStatus(), this._fileAction(t3, "retry"), this._fileAction(t3, _2, true), i3._retryClicked && t3.trigger("focus");
        }, _updateUploadProgress: function(t3) {
          var n3 = this;
          if (n3.options.async.chunkSize) {
            var i3 = t3.data("uid");
            if (n3._module.metaData) {
              var a3 = n3._module.metaData[i3];
              if (a3) {
                var r3 = a3.totalChunks ? Math.round(a3.chunkIndex / a3.totalChunks * 100) : 100;
                n3._onFileProgress({ target: e2(t3, n3.wrapper) }, r3);
              }
            }
          } else e2(".k-progress", t3).width("100%");
        }, _hideUploadProgress: function(t3) {
          e2(".k-progressbar", t3).delay(1e3).fadeOut(2e3, function() {
            e2(this).find(".k-progress").css("width", "0%");
          });
        }, _showActionButtons: function() {
          var t3 = this, n3 = e2(".k-action-buttons", t3.wrapper), i3 = e2(".k-upload-selected", t3.wrapper), a3 = e2(".k-clear-selected", t3.wrapper);
          0 === i3.length && (i3 = t3._renderAction("", this.localization.uploadSelectedFiles).addClass("k-upload-selected").addClass("k-button-solid-primary").removeClass("k-button-solid-base"), a3 = t3._renderAction("", this.localization.clearSelectedFiles).addClass("k-clear-selected")), n3.length || (n3 = e2("<div />").addClass("k-action-buttons").append(a3, i3)), this.wrapper.append(n3);
        }, _hideActionButtons: function() {
          e2(".k-action-buttons", this.wrapper).remove();
        }, _showHeaderUploadStatus: function(t3) {
          var n3 = this, i3 = n3.localization, a3 = e2(".k-dropzone", n3.wrapper), r3 = e2(".k-upload-status-total", n3.wrapper);
          0 !== r3.length && r3.remove(), e2(".k-dropzone-hint", n3.wrapper).addClass("k-hidden"), r3 = '<strong class="k-upload-status k-upload-status-total"><span class="k-icon"></span></strong>', t3 ? (r3 = e2(r3).append(i3.headerStatusUploading)).find(".k-icon").addClass(C) : (r3 = e2(r3).append(i3.headerStatusUploaded)).find(".k-icon").addClass(T), a3.length > 0 ? a3.append(r3) : e2(".k-upload-button", n3.wrapper).after(r3);
        }, _updateHeaderUploadStatus: function() {
          var t3, n3, i3 = this, a3 = e2(".k-upload-status-total", this.wrapper), r3 = e2(".k-file", i3.wrapper).not(".k-file-success, .k-file-error, .k-file-invalid"), o3 = e2(".k-file-invalid", i3.wrapper), s3 = e2(".k-file-error", i3.wrapper), l3 = e2(".k-file", i3.wrapper).find(".k-i-play-sm");
          !l3.length || l3.length !== r3.length && i3.options.async.concurrent ? (0 === r3.length || o3.length > 0 || s3.length > 0) && (t3 = e2(".k-file.k-file-error, .k-file.k-file-invalid", i3.wrapper), a3 = e2(".k-upload-status-total", i3.wrapper), n3 = e2(".k-icon", a3).removeClass().addClass("k-icon").addClass(0 !== t3.length ? T : S), a3.html(n3).append(i3.localization.headerStatusUploaded)) : (n3 = e2(".k-icon", a3).removeClass().addClass("k-icon").addClass("k-i-pause-sm"), a3.html(n3).append(i3.localization.headerStatusPaused));
        }, _hideHeaderUploadstatus: function() {
          var t3 = this.options.dropZone;
          e2(".k-upload-status-total", this.wrapper).remove(), "" === t3 && e2(".k-dropzone-hint", this.wrapper).removeClass("k-hidden");
        }, _onParentFormSubmit: function() {
          var t3 = this.element;
          if (void 0 !== this._module.onAbort && this._module.onAbort(), !t3.value) {
            var n3 = e2(t3);
            n3.attr("disabled", "disabled"), window.setTimeout(function() {
              n3.prop("disabled", false);
            }, 0);
          }
        }, _onParentFormReset: function() {
          e2(".k-upload-files", this.wrapper).remove();
        }, _supportsFormData: function() {
          return "undefined" != typeof FormData;
        }, _supportsMultiple: function() {
          var e3 = this._userAgent().indexOf("Windows") > -1;
          return !(n2.support.browser.opera || n2.support.browser.safari && e3);
        }, _supportsDrop: function() {
          var e3 = this._userAgent().toLowerCase();
          return !(!/chrome/.test(e3) && /safari/.test(e3) && /windows/.test(e3)) && this._supportsFormData() && this.options.async.saveUrl;
        }, _userAgent: function() {
          return navigator.userAgent;
        }, _setupDropZone: function() {
          var t3 = this, n3 = t3._ns, i3 = e2(".k-dropzone", t3.wrapper).on("dragenter" + n3, j).on("dragover" + n3, function(e3) {
            e3.originalEvent && (e3.originalEvent.dataTransfer.dropEffect = "copy"), e3.preventDefault();
          }).on("drop" + n3, t3._onDrop.bind(t3));
          i3.find(".k-dropzone-hint").length || i3.append(e2("<em class='k-dropzone-hint'>" + t3.localization.dropFilesHere + "</em>")), q(i3, n3, function() {
            i3.closest(".k-upload").hasClass("k-disabled") || i3.addClass("k-dropzone-hovered");
          }, function() {
            i3.removeClass("k-dropzone-hovered");
          }), t3._bindDocumentDragEventWrappers(i3);
        }, _setupCustomDropZone: function() {
          var t3 = this, n3 = e2(t3.options.dropZone);
          t3.wrapper.find(".k-dropzone-hint").length ? e2(".k-dropzone-hint", t3.wrapper).addClass("k-hidden") : e2(".k-dropzone", t3.wrapper).append(e2("<em class='k-dropzone-hint k-hidden'>" + t3.localization.dropFilesHere + "</em>"));
          var i3 = t3._ns;
          n3.on("dragenter" + i3, j).on("dragover" + i3, function(e3) {
            e3.originalEvent && (e3.originalEvent.dataTransfer.dropEffect = "copy"), e3.preventDefault();
          }).on("drop" + i3, t3._onDrop.bind(t3)), q(n3, i3, function(i4) {
            t3.wrapper.hasClass("k-disabled") || (n3.removeClass("k-dropzone-hovered"), n3.addClass("k-dropzone-hovered"), e2(i4.target).addClass("k-dropzone-hovered"));
          }, function() {
            n3.removeClass("k-dropzone-hovered"), n3.find(".k-dropzone-hovered").removeClass("k-dropzone-hovered");
          }), t3._bindDocumentDragEventWrappers(n3);
        }, _bindDocumentDragEventWrappers: function(t3) {
          var n3 = this, i3 = n3._ns;
          q(e2(document), i3, function() {
            n3.wrapper.hasClass("k-disabled") || (t3.addClass("k-dropzone-active"), t3.closest(".k-upload").removeClass("k-upload-empty"), t3.find(".k-dropzone-hint").removeClass("k-hidden"));
          }, function() {
            t3.removeClass("k-dropzone-active"), t3.find(".k-dropzone-hint").addClass("k-hidden"), 0 === e2("li.k-file", t3.closest(".k-upload")).length && t3.closest(".k-upload").addClass("k-upload-empty");
          });
        }, _toggleDropZone: function() {
          var t3 = this, n3 = t3.options.dropZone;
          t3._supportsDrop() && (e2(n3).off(t3._ns), e2(".k-dropzone", t3.wrapper).off(t3._ns), "" !== n3 ? t3._setupCustomDropZone() : t3._setupDropZone());
        }, _supportsRemove: function() {
          return !!this.options.async.removeUrl;
        }, _submitRemove: function(t3, n3, i3, r3) {
          var o3 = this.options.async.removeField || "fileNames", s3 = e2.extend(n3.data, a2());
          s3[o3] = t3, jQuery2.ajax({ type: this.options.async.removeVerb, dataType: "json", dataFilter: W, url: this.options.async.removeUrl, traditional: true, data: s3, headers: n3.headers, success: i3, error: r3, xhrFields: { withCredentials: this.options.async.withCredentials } });
        }, _wrapInput: function(t3) {
          var n3 = this, i3 = n3.options, a3 = !!t3.attr("id") && e2("[for='" + t3.attr("id") + "']").length > 0;
          return t3.wrap("<div class='k-widget k-upload'><div class='k-dropzone'><div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button'></div></div></div>"), i3.async.saveUrl ? t3.closest(".k-upload").addClass("k-upload-async") : t3.closest(".k-upload").addClass("k-upload-sync"), t3.closest(".k-upload").addClass("k-upload-empty"), t3.closest(".k-button").append("<span>" + n3.localization.select + "</span>"), a3 || t3.attr("aria-label") || t3.attr("aria-label", n3.localization.select), t3.closest(".k-upload");
        }, _checkAllComplete: function() {
          0 === e2(".k-file.k-file-progress", this.wrapper).length && this.trigger(p2);
        }, _inputFiles: function(e3) {
          return z(e3);
        } }), D = function(e3) {
          this.name = "syncUploadModule", this.element = e3.wrapper, this.upload = e3, this.element.closest("form").attr("enctype", "multipart/form-data").attr("encoding", "multipart/form-data");
        };
        D.prototype = { onSelect: function(t3, n3) {
          var i3 = this.upload, a3 = e2(t3.target), r3 = i3._filesContainValidationErrors(n3);
          i3._addInput(a3);
          var o3 = { fileNames: n3 };
          r3 ? a3.remove() : o3.relatedInput = a3;
          var s3 = i3._enqueueFile(F(a3), o3);
          r3 && i3._hideUploadProgress(s3), i3._fileAction(s3, _2);
        }, onRemove: function(e3) {
          var t3 = K(e3), n3 = t3.data("relatedInput");
          n3 && n3.remove(), this.upload._removeFileEntry(t3);
        } };
        var E = function(e3) {
          this.name = "iframeUploadModule", this.element = e3.wrapper, this.upload = e3, this.iframes = [];
        };
        I._frameId = 0, E.prototype = { onSelect: function(t3, n3) {
          var i3 = this.upload, a3 = e2(t3.target), r3 = i3._filesContainValidationErrors(n3), o3 = this.prepareUpload(a3, n3, r3);
          i3.options.async.autoUpload ? r3 ? (i3._fileAction(o3, _2), i3._showHeaderUploadStatus(false)) : this.performUpload(o3) : (i3._fileAction(o3, _2), r3 ? i3._updateHeaderUploadStatus() : i3._showActionButtons()), r3 && i3._hideUploadProgress(o3);
        }, prepareUpload: function(t3, n3, i3) {
          var a3, r3, o3, s3, l3 = this.upload, d3 = e2(l3.element), u3 = l3.options.async.saveField || t3.attr("name");
          return l3._addInput(t3), t3.attr("name", u3), i3 ? (t3.remove(), r3 = { fileNames: n3 }) : (o3 = this.createFrame(l3.name + "_" + I._frameId++), this.registerFrame(o3), s3 = this.createForm(l3.options.async.saveUrl, o3.attr("name")).append(d3), r3 = { frame: o3, relatedInput: d3, fileNames: n3 }), a3 = l3._enqueueFile(F(t3), r3), o3 && o3.data({ form: s3, file: a3 }), a3;
        }, performUpload: function(t3) {
          var n3 = { files: t3.data("fileNames") }, i3 = t3.data("frame"), r3 = this.upload, o3 = t3.find(".k-file-validation-message"), s3 = t3.find(".k-file-information"), l3 = t3.find(".k-file-size");
          if (r3.trigger(d2, n3)) r3._removeFileEntry(i3.data("file")), this.cleanupFrame(i3), this.unregisterFrame(i3);
          else {
            r3._hideActionButtons(), r3._showHeaderUploadStatus(true), i3.appendTo(document.body);
            var u3 = i3.data("form").attr("action", r3.options.async.saveUrl).appendTo(document.body);
            for (var c3 in n3.data = e2.extend({}, n3.data, a2()), n3.data) {
              var p3 = u3.find("input[name='" + c3 + "']");
              0 === p3.length && (p3 = e2("<input>", { type: "hidden", name: c3 }).prependTo(u3)), p3.val(n3.data[c3]);
            }
            r3._fileAction(t3, h2), r3._fileState(t3, "uploading"), e2(t3).removeClass("k-file-error").addClass("k-file-progress"), o3.length > 0 && o3.remove(), s3.length > 0 ? s3.removeClass("k-hidden") : l3.length > 0 && l3.removeClass("k-hidden"), i3.one("load", this.onIframeLoad.bind(this)), u3[0].submit();
          }
        }, onSaveSelected: function() {
          var t3 = this, n3 = t3.upload;
          e2(".k-file", this.element).each(function() {
            var i3 = e2(this), a3 = G(i3), r3 = n3._filesContainValidationErrors(i3.data("fileNames"));
            a3 || r3 || t3.performUpload(i3);
          });
        }, onIframeLoad: function(t3) {
          var n3, i3 = e2(t3.target);
          try {
            n3 = i3.contents().text();
          } catch (e3) {
            n3 = "Error trying to get server response: " + e3;
          }
          this.processResponse(i3, n3);
        }, processResponse: function(t3, n3) {
          var i3 = t3.data("file"), a3 = this, r3 = { responseText: n3 };
          U(n3, function(n4) {
            e2.extend(r3, { statusText: "OK", status: "200" }), a3.upload._onFileProgress({ target: e2(i3, a3.upload.wrapper) }, 100), a3.upload._onUploadSuccess({ target: e2(i3, a3.upload.wrapper) }, n4, r3), a3.cleanupFrame(t3), a3.unregisterFrame(t3);
          }, function() {
            e2.extend(r3, { statusText: "error", status: "500" }), a3.upload._onUploadError({ target: e2(i3, a3.upload.wrapper) }, r3);
          });
        }, onCancel: function(t3) {
          var n3 = e2(t3.target).data("frame");
          this.stopFrameSubmit(n3), this.cleanupFrame(n3), this.unregisterFrame(n3), this.upload._removeFileEntry(n3.data("file"));
        }, onRetry: function(e3) {
          var t3 = K(e3);
          this.performUpload(t3);
        }, onRemove: function(e3, t3, n3) {
          var i3 = this, a3 = i3.upload, r3 = K(e3), o3 = r3.data("frame");
          o3 ? (i3.unregisterFrame(o3), a3._removeFileEntry(r3), i3.cleanupFrame(o3)) : r3.hasClass("k-file-success") ? V(r3, a3, t3, n3) : a3._removeFileEntry(r3);
        }, onAbort: function() {
          var t3 = this.element, n3 = this;
          e2.each(this.iframes, function() {
            e2("input", this.data("form")).appendTo(t3), n3.stopFrameSubmit(this[0]), this.data("form").remove(), this.remove();
          }), this.iframes = [];
        }, createFrame: function(t3) {
          return e2("<iframe name='" + t3 + "' id='" + t3 + "' style='display:none;' />");
        }, createForm: function(t3, n3) {
          return e2("<form enctype='multipart/form-data' method='POST' action='" + t3 + "' target='" + n3 + "'/>");
        }, stopFrameSubmit: function(e3) {
          void 0 !== e3.stop ? e3.stop() : e3.document && e3.document.execCommand("Stop");
        }, registerFrame: function(e3) {
          this.iframes.push(e3);
        }, unregisterFrame: function(t3) {
          this.iframes = e2.grep(this.iframes, function(e3) {
            return e3.attr("name") != t3.attr("name");
          });
        }, cleanupFrame: function(e3) {
          var t3 = e3.data("form");
          e3.data("file").data("frame", null), setTimeout(function() {
            t3.remove(), e3.remove();
          }, 1);
        } };
        var A = function(e3) {
          this.name = "formDataUploadModule", this.element = e3.wrapper, this.upload = e3, this.position = {}, this.metaData = {}, this.cancelled = {}, this.resume = {}, this.paused = {}, this.retries = {};
        };
        function F(t3) {
          return e2.map(z(t3), function(e3) {
            return e3.name;
          }).join(", ");
        }
        function z(e3) {
          var t3, n3, i3 = e3[0];
          return i3.files ? P(i3.files) : [{ name: (t3 = i3.value, n3 = t3.lastIndexOf("\\"), -1 != n3 ? t3.substr(n3 + 1) : t3), extension: H(i3.value), size: null }];
        }
        function P(t3) {
          return e2.map(t3, function(e3) {
            return i3 = (t4 = e3).name || t4.fileName, { name: n2.htmlEncode(i3), extension: H(i3), size: "number" == typeof t4.size ? t4.size : t4.fileSize, rawFile: t4 };
            var t4, i3;
          });
        }
        function H(e3) {
          var t3 = e3.match(o2);
          return t3 ? t3[0] : "";
        }
        function N(t3, i3) {
          var a3 = n2.guid();
          return e2.map(t3, function(e3) {
            return e3.uid = i3 ? n2.guid() : a3, e3;
          });
        }
        function R(t3, n3) {
          for (var i3, a3 = (i3 = n3.allowedExtensions, e2.map(i3, function(e3) {
            return ("." === e3.substring(0, 1) ? e3 : "." + e3).toLowerCase();
          })), r3 = n3.maxFileSize, o3 = n3.minFileSize, s3 = 0; s3 < t3.length; s3++) O(t3[s3], a3), M(t3[s3], o3, r3);
        }
        function O(t3, n3) {
          n3.length > 0 && n3.indexOf(t3.extension.toLowerCase()) < 0 && (t3.validationErrors = t3.validationErrors || [], -1 === e2.inArray(w, t3.validationErrors) && t3.validationErrors.push(w));
        }
        function M(t3, n3, i3) {
          0 !== n3 && t3.size < n3 && (t3.validationErrors = t3.validationErrors || [], -1 === e2.inArray(k2, t3.validationErrors) && t3.validationErrors.push(k2)), 0 !== i3 && t3.size > i3 && (t3.validationErrors = t3.validationErrors || [], -1 === e2.inArray(b2, t3.validationErrors) && t3.validationErrors.push(b2));
        }
        function B(e3) {
          var t3 = 0;
          if ("number" != typeof e3[0].size) return "";
          for (var n3 = 0; n3 < e3.length; n3++) e3[n3].size && (t3 += e3[n3].size);
          return (t3 /= 1024) < 1024 ? t3.toFixed(2) + " KB" : (t3 / 1024).toFixed(2) + " MB";
        }
        function L(t3) {
          return !t3.multiple && e2(".k-file", t3.wrapper).length > 1;
        }
        function V(t3, n3, i3, a3) {
          if (n3._supportsRemove()) {
            var o3 = t3.data("fileNames"), s3 = e2.map(o3, function(e3) {
              return e3.name;
            });
            false !== a3 ? n3._submitRemove(s3, i3, function(e3, i4, a4) {
              n3.trigger(u2, { operation: "remove", files: o3, response: e3, XMLHttpRequest: a4 }) || n3._removeFileEntry(t3);
            }, function(e3) {
              L(n3) && n3._removeFileEntry(t3), n3.trigger(c2, { operation: "remove", files: o3, XMLHttpRequest: e3 }), r2("Server response: " + e3.responseText);
            }) : n3._removeFileEntry(t3);
          } else !L(n3) && a3 || n3._removeFileEntry(t3);
        }
        function U(e3, t3, n3) {
          var i3 = false, a3 = "";
          try {
            a3 = JSON.parse(W(e3)), i3 = true;
          } catch (e4) {
            n3();
          }
          i3 && t3(a3);
        }
        function W(e3) {
          return void 0 !== e3 && "" !== e3 || (e3 = "{}"), e3;
        }
        function j(e3) {
          e3.originalEvent && (e3.originalEvent.dataTransfer.dropEffect = "copy"), e3.stopPropagation(), e3.preventDefault();
        }
        function q(e3, t3, n3, i3) {
          var a3, r3;
          e3.on("dragenter" + t3, function(e4) {
            n3(e4), r3 = /* @__PURE__ */ new Date(), a3 || (a3 = setInterval(function() {
              /* @__PURE__ */ new Date() - r3 > 100 && (i3(), clearInterval(a3), a3 = null);
            }, 100));
          }).on("dragover" + t3, function() {
            r3 = /* @__PURE__ */ new Date();
          });
        }
        function G(e3) {
          return e3.is(".k-file-progress, .k-file-success, .k-file-error");
        }
        function K(t3) {
          return e2(t3.target).closest(".k-file");
        }
        A.prototype = { onSelect: function(t3, n3) {
          var i3, a3, r3 = this.upload, o3 = this, s3 = e2(t3.target), l3 = this.prepareUpload(s3, n3);
          e2.each(l3, function(t4) {
            i3 = r3._filesContainValidationErrors(e2(this.data("fileNames"))), r3.options.async.autoUpload ? i3 ? (r3._fileAction(this, _2), r3._showHeaderUploadStatus(false)) : r3.options.async.chunkSize ? (o3.prepareChunk(this), a3 = this.prev(), (r3.options.async.concurrent || 0 === t4 && !a3.length || 0 === t4 && a3.hasClass("k-file-success")) && o3.performUpload(this)) : o3.performUpload(this) : (r3._fileAction(this, _2), i3 ? r3._updateHeaderUploadStatus() : (r3._showActionButtons(), this.addClass("k-toupload"))), i3 && r3._hideUploadProgress(this);
          });
        }, prepareUpload: function(t3, n3) {
          var i3 = this.enqueueFiles(n3);
          return t3.is("input") && (e2.each(i3, function() {
            e2(this).data("relatedInput", t3);
          }), t3.data("relatedFileEntries", i3), this.upload._addInput(t3)), i3;
        }, enqueueFiles: function(t3) {
          var n3, i3, a3, r3, o3 = this.upload, s3 = t3.length, l3 = [];
          if (true === o3.options.async.batch) n3 = e2.map(t3, function(e3) {
            return e3.name;
          }).join(", "), (o3.directory || o3.options.directoryDrop) && e2(t3).each(function() {
            (this.rawFile.webkitRelativePath || this.rawFile.relativePath) && (this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath);
          }), (r3 = o3._enqueueFile(n3, { fileNames: t3 })).data("files", t3), l3.push(r3);
          else for (i3 = 0; i3 < s3; i3++) n3 = (a3 = t3[i3]).name, (o3.directory || o3.options.directoryDrop) && (a3.rawFile.webkitRelativePath || a3.rawFile.relativePath) && (a3.name = a3.rawFile.webkitRelativePath || a3.rawFile.relativePath), (r3 = o3._enqueueFile(n3, { fileNames: [a3] })).data("files", [a3]), l3.push(r3);
          return l3;
        }, performUpload: function(t3) {
          var n3, i3 = this.upload, r3 = this.createFormData(), o3 = this.createXHR(), s3 = { files: t3.data("fileNames"), XMLHttpRequest: o3 }, l3 = t3.find(".k-file-validation-message"), u3 = t3.find(".k-file-information"), c3 = t3.find(".k-file-size");
          if (i3.trigger(d2, s3)) this.removeFileEntry(t3);
          else {
            if (0 === t3.find(".k-i-cancel").length && (i3.options.async.chunkSize && i3._fileAction(t3, m2), i3._fileAction(t3, h2, i3.options.async.chunkSize)), i3.wrapper.find(".k-toupload").length || i3._hideActionButtons(), i3._showHeaderUploadStatus(true), s3.formData) r3 = s3.formData;
            else {
              for (var p3 in s3.data = e2.extend({}, s3.data, a2()), s3.data) r3.append(p3, s3.data[p3]);
              (n3 = t3.data("files")) && this.populateFormData(r3, n3);
            }
            i3._fileState(t3, "uploading"), e2(t3).removeClass("k-file-error").addClass("k-file-progress"), l3.length > 0 && l3.remove(), u3.length > 0 ? u3.removeClass("k-hidden") : c3.length > 0 && c3.removeClass("k-hidden"), i3.options.async.useArrayBuffer && window.FileReader ? this._readFile(i3.options.async.saveUrl, r3, t3, o3) : this.postFormData(i3.options.async.saveUrl, r3, t3, o3);
          }
        }, _readFile: function(t3, n3, i3, a3) {
          var r3 = this, o3 = r3.upload, s3 = i3.data("files")[0], l3 = new FileReader();
          l3.onload = function(l4) {
            try {
              r3.fileArrayBuffer ? r3.fileArrayBuffer = r3._appendBuffer(r3.fileArrayBuffer, l4.target.result) : r3.fileArrayBuffer = l4.target.result;
            } catch (t4) {
              return void o3._onUploadError({ target: e2(i3, o3.wrapper) }, a3);
            }
            r3.position[s3.uid] > s3.size ? (r3.postFormData(o3.options.async.saveUrl, r3.fileArrayBuffer, i3, a3), r3.fileArrayBuffer = null) : r3._readFile(t3, n3, i3, a3);
          }, l3.onerror = function() {
            o3._onUploadError({ target: e2(i3, o3.wrapper) }, a3);
          }, l3.readAsArrayBuffer(r3._getCurrentChunk(s3.rawFile, s3.uid));
        }, _appendBuffer: function(e3, t3) {
          var n3 = new Uint8Array(e3.byteLength + t3.byteLength);
          return n3.set(new Uint8Array(e3), 0), n3.set(new Uint8Array(t3), e3.byteLength), n3.buffer;
        }, onSaveSelected: function() {
          var t3 = this, n3 = t3.upload;
          e2(".k-toupload", this.element).filter(function() {
            var t4 = e2(this), i3 = G(t4), a3 = n3._filesContainValidationErrors(t4.data("fileNames"));
            return !i3 && !a3;
          }).each(function(i3) {
            var a3 = e2(this), r3 = a3.prev();
            a3.removeClass("k-toupload"), n3.options.async.chunkSize ? (t3.prepareChunk(a3), (n3.options.async.concurrent || 0 === i3 && !r3.length || 0 === i3 && r3.hasClass("k-file-success") || r3.hasClass("k-file-error")) && t3.performUpload(a3)) : t3.performUpload(a3);
          });
        }, onCancel: function(e3) {
          var t3 = K(e3);
          this.upload.options.async.chunkSize && (this.cancelled[t3.data("uid")] = true), this.stopUploadRequest(t3), this.removeFileEntry(t3);
        }, onPause: function(e3) {
          var t3 = K(e3).data("uid"), n3 = this.upload.options.async;
          n3.chunkSize && (this.retries[t3] = n3.maxAutoRetries + 1, this.paused[t3] = true, this.resume[t3] = false);
        }, onResume: function(e3) {
          var t3 = K(e3), n3 = t3.data("uid");
          this.upload.options.async.chunkSize && (delete this.paused[n3], this.resume[n3] = true, this.retries[t3.data("uid")] = 1, this._increaseChunkIndex(n3), this.performUpload(t3));
        }, onRetry: function(e3) {
          var t3 = K(e3), n3 = this.upload.options.async;
          n3.chunkSize && (this.retries[t3.data("uid")] = n3.maxAutoRetries + 1, delete this.paused[t3.data("uid")]), this.performUpload(t3);
        }, onRemove: function(e3, t3, n3) {
          var i3 = this.upload, a3 = K(e3), r3 = this.upload.options.async;
          r3.chunkSize && (this.retries[a3.data("uid")] = r3.maxAutoRetries + 1), a3.hasClass("k-file-success") ? V(a3, i3, t3, n3) : this.removeFileEntry(a3);
        }, createXHR: function() {
          return new XMLHttpRequest();
        }, postFormData: function(e3, t3, n3, i3) {
          var a3 = this;
          n3.data("request", i3), i3.addEventListener("load", function(e4) {
            a3.onRequestSuccess.call(a3, e4, n3);
          }, false), i3.addEventListener(c2, function(e4) {
            a3.onRequestError.call(a3, e4, n3);
          }, false), i3.upload.addEventListener("progress", function(e4) {
            a3.onRequestProgress.call(a3, e4, n3);
          }, false), i3.open("POST", e3, true), i3.withCredentials = this.upload.options.async.withCredentials;
          var r3 = this.upload.options.async.accept;
          r3 && i3.setRequestHeader("Accept", r3), i3.send(t3);
        }, createFormData: function() {
          return new FormData();
        }, populateFormData: function(e3, t3) {
          var n3, i3, a3, r3 = t3.length, o3 = this.upload;
          if (o3.options.async.chunkSize) {
            a3 = t3[0].uid, n3 = this._getCurrentChunk(t3[0].rawFile, a3), e3.append(o3.options.async.saveField || o3.name, n3);
            var s3 = JSON.stringify(this.metaData[a3]);
            e3.append("metadata", s3);
          } else for (i3 = 0; i3 < r3; i3++) e3.append(o3.options.async.saveField || o3.name, t3[i3].rawFile);
          return e3;
        }, onRequestSuccess: function(t3, n3) {
          var i3 = t3.target, a3 = this;
          function r3() {
            a3.upload._onUploadError({ target: e2(n3, a3.upload.wrapper) }, i3);
          }
          i3.status >= 200 && i3.status <= 299 ? U(i3.responseText, function(t4) {
            var r4 = a3.upload.options.async.batch, o3 = a3.upload.options.async.chunkSize, s3 = a3.upload.options.async.concurrent, l3 = t4.fileUid;
            a3.paused[l3] || a3.cancelled[l3] || (delete a3.retries[l3], !o3 || r4 || t4.uploaded ? !o3 || r4 || s3 || !n3.next().length || n3.next().hasClass("k-toupload") ? (a3.upload._onFileProgress({ target: e2(n3, a3.upload.wrapper) }, 100), a3.upload._onUploadSuccess({ target: e2(n3, a3.upload.wrapper) }, t4, i3), a3.cleanupFileEntry(n3)) : (a3.upload._onFileProgress({ target: e2(n3, a3.upload.wrapper) }, 100), a3._resetChunkIndex(l3), a3.upload._onUploadSuccess({ target: e2(n3, a3.upload.wrapper) }, t4, i3), a3.performUpload(n3.next())) : (a3._increaseChunkIndex(l3), a3.performUpload(n3)));
          }, r3) : r3();
        }, onRequestError: function(t3, n3) {
          var i3 = t3.target;
          this.upload._onUploadError({ target: e2(n3, this.upload.wrapper) }, i3);
        }, cleanupFileEntry: function(t3) {
          var n3 = t3.data("relatedInput"), i3 = true;
          n3 && (e2.each(n3.data("relatedFileEntries") || [], function() {
            this.parent().length > 0 && this[0] != t3[0] && (i3 = i3 && this.hasClass("k-file-success"));
          }), i3 && n3.remove());
        }, removeFileEntry: function(e3) {
          var t3 = this.upload.options.async.chunkSize, n3 = this.upload.options.async.concurrent, i3 = this.upload.wrapper.find(".k-upload-selected").length > 0;
          this.cleanupFileEntry(e3), !t3 || n3 || i3 || e3.next().length && this.performUpload(e3.next()), this.upload._removeFileEntry(e3);
        }, onRequestProgress: function(t3, n3) {
          var i3, a3 = Math.round(100 * t3.loaded / t3.total), r3 = n3.data("uid");
          this.upload.options.async.chunkSize && (a3 = (i3 = this.metaData[r3]) && i3.totalChunks ? Math.round(i3.chunkIndex / i3.totalChunks * 100) : 100), this.upload._onFileProgress({ target: e2(n3, this.upload.wrapper) }, a3);
        }, stopUploadRequest: function(e3) {
          e3.data("request") && e3.data("request").abort();
        }, prepareChunk: function(e3) {
          var t3 = e3.data("files")[0], n3 = t3.rawFile, i3 = t3.uid, a3 = this.upload.options.async.chunkSize;
          this.position[i3] = 0, this.metaData[i3] = { chunkIndex: 0, contentType: n3.type, fileName: n3.name, relativePath: t3.name, totalFileSize: n3.size, totalChunks: Math.ceil(n3.size / a3), uploadUid: i3 };
        }, _decreaseChunkIndex: function(e3) {
          this.metaData[e3].chunkIndex--;
        }, _increaseChunkIndex: function(e3) {
          this.metaData[e3].chunkIndex++;
        }, _resetChunkIndex: function(e3) {
          this.metaData[e3].chunkIndex = 0;
        }, _decreasePosition: function(e3) {
          this.position[e3] -= this.upload.options.async.chunkSize;
        }, _getCurrentChunk: function(e3, t3) {
          var n3, i3 = this.position[t3], a3 = this.upload.options.async, r3 = a3.chunkSize || a3.bufferChunkSize;
          return this.position[t3] || (this.position[t3] = 0), this.position[t3] += r3, (n3 = this._getChunker(e3)) ? e3[n3](i3, this.position[t3]) : e3;
        }, _getChunker: function(e3) {
          return e3.slice ? "slice" : e3.mozSlice ? "mozSlice" : e3.webkitSlice ? "webkitSlice" : null;
        } }, n2.ui.plugin(I);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = e2.extend, r2 = e2.isPlainObject, o2 = ".kendoBreadcrumb", s2 = "aria-hidden", l2 = "click", d2 = "blur", u2 = "keydown", c2 = "change", p2 = ".", h2 = { widget: "k-widget k-breadcrumb", overlay: "k-breadcrumb-container", textbox: "k-input-inner", textboxWrapper: "k-textbox k-input k-input-md k-rounded-md k-input-solid", link: "k-breadcrumb-link", item: "k-breadcrumb-item", delimiter: "k-breadcrumb-delimiter-icon", rootItem: "k-breadcrumb-root-item", rootLink: "k-breadcrumb-root-link", overflowIcon: "k-breadcrumb-overflow-icon", focused: "k-focus", hidden: "k-hidden", inputWrapper: "k-breadcrumb-input-container" }, f2 = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          t3 = t3 || {}, i2.fn.init.call(a3, e3, t3), a3._wrapper(), t3.editable && (a3._editable(), a3._tabindex()), a3.wrapper.on(l2 + o2, "a:not(.k-disabled)", a3._click.bind(a3)), t3.value || t3.bindToLocation || !t3.items ? a3._value() : t3.items && a3.items(t3.items), a3._resizeHandler = n2.onResize(function() {
            a3.resize(true);
          });
        }, options: { editable: false, navigational: false, bindToLocation: false, items: null, name: "Breadcrumb", gap: 0, rootIcon: "home", delimiterIcon: "arrow-chevron-right", messages: { rootTitle: "Go to root" } }, events: [c2, l2], destroy: function() {
          var e3 = this;
          i2.fn.destroy.call(e3), n2.unbindResize(e3._resizeHandler), e3.wrapper.add(e3.wrapper.find("input")).add(e3.wrapper.find("a")).off(o2);
        }, items: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3.options.items;
          n3.options.items = e3, n3._segments = e3, n3.refresh();
        }, _update: function(e3) {
          var t3 = this;
          e3 !== t3.value() && (t3._generateSegments(e3), t3.refresh(), t3.trigger(c2, { sender: this, value: e3 }));
        }, _generateSegments: function(e3) {
          var t3, n3, i3 = this, a3 = i3.options.items;
          if (n3 = i3._split(e3), a3) {
            i3._segments = [];
            for (var r3 = 0; r3 < n3.length; r3++) "" !== (t3 = i3._path(a3.slice(0, r3 + 1))) && e3.indexOf(t3) > -1 && a3[r3] && a3[r3].text === n3[r3] ? i3._segments.push(a3[r3]) : i3._segments.push(n3[r3]);
          } else i3.options.items = i3._segments = n3;
        }, _click: function(t3) {
          var n3 = this, i3 = n3.options, a3 = e2(t3.target).closest(p2 + h2.item), r3 = a3.prevAll().addBack(), o3 = n3._getItems(r3), s3 = n3._path(o3), d3 = n3._segments[a3.index()];
          i3.navigational || t3.preventDefault(), n3.trigger(l2, { sender: n3, originalEvent: t3, isRoot: "rootitem" === d3.type, item: d3 }) || n3._update(s3);
        }, _getItems: function(t3) {
          var n3 = this;
          return e2.map(t3, function(t4) {
            return n3._segments[e2(t4).index()] || t4.innerText;
          });
        }, _edit: function() {
          var e3 = this, t3 = e3.input;
          e3.oldValue = e3.value(), e3.inputWrapper.css("height", e3.wrapper.height()), e3.overlay.hide(), e3.input.val(e3.value()), e3.input.attr(s2, false), e3.inputWrapper.show(), setTimeout(function() {
            t3.select();
          });
        }, _blur: function(e3) {
          var t3 = this, n3 = t3.input, i3 = t3.inputWrapper, a3 = t3.wrapper, r3 = t3.overlay, o3 = n3.val().replace(/\/{2,}/g, "/");
          r3.is(":visible") || (e3 && (o3 = t3.oldValue), n3.attr(s2, true), i3.hide(), r3.show(), n3.val(""), t3._update(o3), a3.removeClass(h2.focused));
        }, _keydown: function(e3) {
          var t3 = this, i3 = e3.keyCode, a3 = i3 === n2.keys.ENTER, r3 = i3 === n2.keys.ESC;
          (a3 || r3) && (t3._blur(r3), setTimeout(function() {
            t3.overlay.find("a").first().trigger("focus");
          }));
        }, isNavigational: function(e3) {
          var t3 = e3.hasClass(h2.textbox) || e3.closest(p2 + h2.item);
          return e3[0] !== this.wrapper[0] && (t3 && !e3.hasClass("k-breadcrumb-last-item"));
        }, _wrapperKeydown: function(t3) {
          var i3 = e2(t3.target), a3 = this.isNavigational(i3);
          t3.keyCode !== n2.keys.ENTER || a3 || this._edit();
        }, _wrapperClick: function(t3) {
          var n3 = e2(t3.target);
          this.isNavigational(n3) || this._edit();
        }, _wrapperFocus: function(t3) {
          e2(t3.target).addClass(h2.focused);
        }, _wrapperBlur: function(t3) {
          e2(t3.target).removeClass(h2.focused);
        }, _wrapper: function() {
          var t3 = this, n3 = this.element, i3 = n3.is("input"), a3 = e2('<div class="' + h2.inputWrapper + '"><span class="' + h2.textboxWrapper + '"></span></div>');
          t3.wrapper = i3 ? n3.wrap(e2("<nav />")).parent() : n3, i3 ? (t3.element.wrap(a3).addClass(h2.textbox), t3.inputWrapper = t3.wrapper.find(p2 + h2.inputWrapper).hide()) : t3.inputWrapper = t3.wrapper.append(a3).find(p2 + h2.inputWrapper).hide(), t3.wrapper.addClass(h2.widget), t3.wrapper.attr("aria-label", "Breadcrumb"), t3.overlay = t3.wrapper.append(e2("<ol />").addClass(h2.overlay)).find(p2 + h2.overlay);
        }, _editable: function() {
          var t3 = this, n3 = t3.element.is("input");
          t3.input = n3 ? t3.element : e2("<input />"), t3.inputWrapper.find(p2 + h2.textboxWrapper.split(" ")[0]).append(t3.input), t3.input.addClass(h2.textbox).attr(s2, true), t3.input.on(d2 + o2, t3._blur.bind(t3, false)).on(u2 + o2, t3._keydown.bind(t3)), t3.wrapper.on("focus" + o2, t3._wrapperFocus.bind(t3)).on(d2 + o2, t3._wrapperBlur.bind(t3)).on(u2 + o2, t3._wrapperKeydown.bind(t3)).on(l2 + o2, t3._wrapperClick.bind(t3));
        }, _value: function() {
          var e3 = this, t3 = e3.options;
          t3.value ? e3.value(t3.value) : t3.bindToLocation ? e3.value(window.location.href.replace(/http(s?):\/\//, "").replace(/\/$/, "")) : e3.value("");
        }, _split: function(e3) {
          return e3.split("/").filter(function(e4, t3) {
            return !(t3 > 0 && "" === e4);
          });
        }, isRtl: function() {
          return n2.support.isRtl(this.wrapper);
        }, refresh: function() {
          var i3, o3, s3, l3, d3 = this, u3 = d3.options, c3 = u3.messages, p3 = d3.options.delimiterIcon, f3 = "", m2 = "", g2 = "" === d3.value(), v2 = d3._segments;
          for ("arrow-chevron-right" == p3 && d3.isRtl() && (p3 = "arrow-chevron-left"), o3 = 0, s3 = v2.length; o3 < s3; o3++) i3 = v2[o3], l3 = o3 === v2.length - 1, i3 !== t2 && (f3 ? m2 += i3.text || i3 || "" : m2 = "/", "string" == typeof i3 ? (i3 = { type: f3 ? "item" : "rootitem", href: u3.navigational ? m2 : "#", text: i3, showIcon: !f3, showText: !!f3, icon: f3 ? "" : u3.rootIcon, itemClass: f3 ? "" : "k-breadcrumb-root-item", linkClass: f3 ? "" : h2.rootLink, delimiterIcon: p3, renderDelimiter: !l3 && !g2, lastSegment: l3, iconClass: "" }, d3._segments.splice(o3, 1, i3)) : r2(i3) && (i3 = a2({}, i3, { type: i3.type ? i3.type.toLowerCase() : "item" }), "rootitem" === (i3 = a2({}, i3, { text: i3.text || "", title: i3.text || "", icon: i3.icon || ("rootitem" === i3.type ? u3.rootIcon : ""), iconClass: i3.iconClass || "", lastSegment: l3, renderDelimiter: !l3 && v2.length > 1, href: u3.navigational ? i3.href : "#", delimiterIcon: p3, itemClass: i3.itemClass || "", linkClass: i3.linkClass || "", showIcon: i3.showIcon === t2 ? "rootitem" === i3.type && "item" !== i3.type : i3.showIcon, showText: i3.showText === t2 ? "item" === i3.type && "rootitem" !== i3.type : i3.showText })).type && (i3.itemClass += " k-breadcrumb-root-item", i3.linkClass += " " + h2.rootLink)), "rootitem" === i3.type && "" === i3.text && (i3.title = c3.rootTitle), m2 += m2.match(/\/$/) ? "" : "/", f3 += n2.template(this.itemTemplate)(i3));
          this.overlay.empty().append(e2(f3)), this.resize(true);
        }, itemTemplate: '<li class="k-breadcrumb-item #:itemClass# #if(lastSegment){#k-breadcrumb-last-item#}#"><a href="#:href#" class="#:linkClass# #if(type !== "rootitem"){# k-breadcrumb-link#}##if(showText && showIcon){# k-breadcrumb-icontext-link#}##if(showIcon && !showText){# k-breadcrumb-icon-link#}##if(lastSegment && type !== "rootitem"){# k-disabled#}#"#if(lastSegment){# aria-current="page"#}##if(lastSegment && type !== "rootitem"){# aria-disabled="true" #}#title="#:text || title#">#if(showIcon) {#<span class="#if(icon){#k-icon k-i-#:icon##}# #:iconClass#"></span>#}##if(showText) {##:text##}#</a>#if(renderDelimiter) {#<span class="k-breadcrumb-delimiter-icon k-icon k-i-#:delimiterIcon#" aria-hidden="true"></span>#}##if(type === "rootitem" && renderDelimiter) {#<span class="k-breadcrumb-delimiter-icon k-hidden k-icon k-i-#:delimiterIcon#" aria-hidden="true"></span>#}#</li>', _displayOverflowIcons: function(e3) {
          var t3 = this.wrapper.find(p2 + h2.rootItem);
          e3 ? t3.find(p2 + h2.delimiter).addClass(h2.overflowIcon).removeClass(h2.hidden) : t3.find(p2 + h2.overflowIcon).removeClass(h2.overflowIcon).last().addClass(h2.hidden);
        }, _shrinkItems: function() {
          var t3, i3 = this, a3 = i3.wrapper, r3 = i3.overlay, o3 = i3.overlay.find(p2 + h2.item + ":visible:not(.k-breadcrumb-root-item)"), s3 = a3.width() - i3.options.gap;
          if (1 != o3.length) {
            for (var l3 = 0; l3 < o3.length; l3 += 1) if (t3 = e2(o3[l3]), n2._outerWidth(r3) >= s3) {
              if (l3 == o3.length - 1) break;
              t3.hide(), i3._displayOverflowIcons(true);
            }
          }
        }, _showItem: function(e3, t3, i3) {
          return !!(e3.length && i3 > t3 + n2._outerWidth(e3, true)) && (e3.show(), true);
        }, _stretchItems: function() {
          var t3, i3, a3 = this, r3 = a3.wrapper, o3 = a3.overlay, s3 = a3.overlay.find(p2 + h2.item + ":hidden:not(.k-breadcrumb-root-item)"), l3 = r3.width() - a3.options.gap;
          s3.length || a3._displayOverflowIcons(false);
          for (var d3 = s3.length - 1; d3 >= 0 && (t3 = e2(s3[d3]), !((i3 = n2._outerWidth(o3)) > l3) && this._showItem(t3, i3, l3)); d3--) ;
        }, _resize: function() {
          this._shrinkItems(), this._stretchItems();
        }, getSize: function() {
          return n2.dimensions(this.wrapper);
        }, value: function(e3) {
          var n3 = this;
          return e3 !== t2 ? (n3._generateSegments(e3), void n3.refresh()) : n3._path(n3._segments);
        }, _path: function(t3) {
          return e2.map(t3, function(e3) {
            var t4 = r2(e3) ? e3.text : e3;
            return "/" === t4 ? "" : t4;
          }).join("/");
        } });
        n2.ui.plugin(f2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = e2.isPlainObject, r2 = e2.extend, o2 = n2.support.placeholder, s2 = n2.isFunction, l2 = /(^\/|\/$)/g, d2 = "change", u2 = "apply", c2 = "error", p2 = "click", h2 = ".kendoFileBrowser", f2 = ".kendoSearchBox", m2 = "name", g2 = "size", v2 = "type", _2 = { field: v2, dir: "asc" }, b2 = n2.template('<div class="k-listview-item k-listview-item-empty"><span class="k-file-preview"><span class="k-file-icon k-icon k-i-none"></span></span><span class="k-file-name">${text}</span></div>');
        function k2(e3, n3) {
          return e3 !== t2 && e3.match(/\/$/) || (e3 = (e3 || "") + "/"), e3 + n3;
        }
        function w(e3) {
          if (!e3) return "";
          var t3 = " bytes";
          return e3 >= 1073741824 ? (t3 = " GB", e3 /= 1073741824) : e3 >= 1048576 ? (t3 = " MB", e3 /= 1048576) : e3 >= 1024 && (t3 = " KB", e3 /= 1024), Math.round(100 * e3) / 100 + t3;
        }
        r2(true, n2.data, { schemas: { filebrowser: { data: function(e3) {
          return e3.items || e3 || [];
        }, model: { id: "name", fields: { name: "name", size: "size", type: "type" } } } } }), r2(true, n2.data, { transports: { filebrowser: n2.data.RemoteTransport.extend({ init: function(t3) {
          n2.data.RemoteTransport.fn.init.call(this, e2.extend(true, {}, this.options, t3));
        }, _call: function(t3, i3) {
          i3.data = e2.extend({}, i3.data, { path: this.options.path() }), s2(this.options[t3]) ? this.options[t3].call(this, i3) : n2.data.RemoteTransport.fn[t3].call(this, i3);
        }, read: function(e3) {
          this._call("read", e3);
        }, create: function(e3) {
          this._call("create", e3);
        }, destroy: function(e3) {
          this._call("destroy", e3);
        }, update: function() {
        }, options: { read: { type: "POST" }, update: { type: "POST" }, create: { type: "POST" }, destroy: { type: "POST" } } }) } });
        var y = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          t3 = t3 || {}, i2.fn.init.call(n3, e3, t3), n3.element.addClass("k-filebrowser"), n3.element.on(p2 + h2, ".k-filebrowser-toolbar button:not(.k-disabled):has(.k-i-close)", n3._deleteClick.bind(n3)).on(p2 + h2, ".k-filebrowser-toolbar button:not(.k-disabled):has(.k-i-folder-add)", n3._addClick.bind(n3)).on("keydown" + h2, ".k-listview-item.k-selected input", n3._directoryKeyDown.bind(n3)).on("blur" + h2, ".k-listview-item.k-selected input", n3._directoryBlur.bind(n3)), n3._dataSource(), n3.refresh(), n3.path(n3.options.path);
        }, options: { name: "FileBrowser", messages: { uploadFile: "Upload", orderBy: "Arrange by", orderByName: "Name", orderBySize: "Size", directoryNotFound: "A directory with this name was not found.", emptyFolder: "Empty Folder", deleteFile: 'Are you sure you want to delete "{0}"?', invalidFileType: 'The selected file "{0}" is not valid. Supported file types are {1}.', overwriteFile: 'A file with name "{0}" already exists in the current directory. Do you want to overwrite it?', dropFilesHere: "drop file here to upload", search: "Search" }, transport: {}, path: "/", fileTypes: "*.*" }, events: [c2, d2, u2], destroy: function() {
          var e3 = this;
          i2.fn.destroy.call(e3), e3.dataSource.unbind(c2, e3._errorHandler), e3.element.add(e3.list).add(e3.toolbar).off(h2), n2.destroy(e3.element);
        }, value: function() {
          var e3, t3 = this, i3 = t3._selectedItem(), a3 = t3.options.transport.fileUrl;
          if (i3 && "f" === i3.get(v2)) return e3 = k2(t3.path(), i3.get(m2)).replace(l2, ""), a3 && (e3 = s2(a3) ? a3(e3) : n2.format(a3, encodeURIComponent(e3))), e3;
        }, _selectedItem: function() {
          var e3 = this.listView.select();
          if (e3.length) return this.dataSource.getByUid(e3.attr(n2.attr("uid")));
        }, _toolbar: function() {
          var t3 = this, i3 = n2.template('<div class="k-widget k-filebrowser-toolbar k-toolbar k-floatwrap"># if (showCreate) { #<button type="button" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button"><span class="k-i-button-icon k-icon k-i-folder-add"></span></button># } ## if (showUpload) { # <div class="k-widget k-upload"><div class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button"><span class="k-button-icon k-icon k-i-plus"></span><span class="k-button-text">#=messages.uploadFile#</span><input type="file" name="file" /></div></div># } ## if (showDelete) { #<button type="button" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-disabled"><span class="k-button-icon k-icon k-i-close"></span></button># } #<div class="k-tiles-arrange"><label>#=messages.orderBy#: <select></select></label></div><span class="k-toolbar-spacer"></span><input data-role="searchbox" /></div>'), a3 = t3.options.messages, r3 = [{ text: a3.orderByName, value: "name" }, { text: a3.orderBySize, value: "size" }];
          t3.toolbar = e2(i3({ messages: a3, showUpload: t3.options.transport.uploadUrl, showCreate: t3.options.transport.create, showDelete: t3.options.transport.destroy })).appendTo(t3.element).find(".k-upload input").kendoUpload({ multiple: false, localization: { dropFilesHere: a3.dropFilesHere }, async: { saveUrl: t3.options.transport.uploadUrl, autoUpload: true }, upload: t3._fileUpload.bind(t3), error: function(e3) {
            t3._error({ xhr: e3.XMLHttpRequest, status: "error" });
          } }).end(), t3.upload = t3.toolbar.find(".k-upload input").data("kendoUpload"), t3.arrangeBy = t3.toolbar.find(".k-tiles-arrange select").kendoDropDownList({ dataSource: r3, dataTextField: "text", dataValueField: "value", change: function() {
            t3.orderBy(this.value());
          } }).data("kendoDropDownList"), t3.searchBox = t3.toolbar.find("input[data-role='searchbox']").kendoSearchBox({ label: t3.options.messages.search, change: function() {
            t3.search(this.value());
          } }).data("kendoSearchBox"), t3._attachDropzoneEvents();
        }, _attachDropzoneEvents: function() {
          var t3, n3, i3, a3, r3, o3 = this;
          o3.options.transport.uploadUrl && (t3 = e2(document.documentElement), n3 = o3._dropEnter.bind(o3), i3 = o3._dropLeave.bind(o3), t3.on("dragenter" + h2, function() {
            n3(), r3 = /* @__PURE__ */ new Date(), a3 || (a3 = setInterval(function() {
              /* @__PURE__ */ new Date() - r3 > 100 && (i3(), clearInterval(a3), a3 = null);
            }, 100));
          }).on("dragover" + h2, function() {
            r3 = /* @__PURE__ */ new Date();
          }), o3._scrollHandler = o3._positionDropzone.bind(o3));
        }, _dropEnter: function() {
          this._positionDropzone(), e2(document).on("scroll" + h2, this._scrollHandler);
        }, _dropLeave: function() {
          this._removeDropzone(), e2(document).off("scroll" + h2, this._scrollHandler);
        }, _positionDropzone: function() {
          var e3 = this.element, t3 = e3.offset();
          this.toolbar.find(".k-dropzone").addClass("k-filebrowser-dropzone").offset(t3).css({ width: e3[0].clientWidth, height: e3[0].clientHeight, lineHeight: e3[0].clientHeight + "px" });
        }, _removeDropzone: function() {
          this.toolbar.find(".k-dropzone").removeClass("k-filebrowser-dropzone").css({ width: "", height: "", lineHeight: "", top: "", left: "" });
        }, _deleteClick: function() {
          var e3 = this, t3 = e3.listView.select(), i3 = n2.format(e3.options.messages.deleteFile, t3.find(".k-file-name").text());
          t3.length && e3._showMessage(i3, "confirm") && e3.listView.remove(t3);
        }, _addClick: function() {
          this.createDirectory();
        }, _getFieldName: function(e3) {
          return function(e4, t3) {
            var n3 = e4[t3];
            return a2(n3) ? n3.from || n3.field || t3 : n3;
          }(this.dataSource.reader.model.fields, e3);
        }, _fileUpload: function(e3) {
          var t3, i3 = this, a3 = i3.options, r3 = a3.fileTypes, o3 = new RegExp(("(" + r3.split(",").join(")|(") + ")").replace(/\*\./g, ".*."), "i"), s3 = e3.files[0].name, l3 = e3.files[0].size, d3 = m2, u3 = g2;
          o3.test(s3) ? (e3.data = { path: i3.path() }, (t3 = i3._createFile(s3, l3)) ? i3.upload.one("success", function(e4) {
            var a4 = i3._insertFileToList(t3);
            a4._override && (a4.set(d3, e4.response[i3._getFieldName(d3)]), a4.set(u3, e4.response[i3._getFieldName(u3)]), i3.listView.dataSource.pushUpdate(a4)), i3._tiles = i3.listView.items().filter("[" + n2.attr("type") + "=f]");
          }) : e3.preventDefault()) : (e3.preventDefault(), i3._showMessage(n2.format(a3.messages.invalidFileType, s3, r3)));
        }, _findFile: function(e3) {
          var t3, n3, i3, a3 = this.dataSource.data();
          for (e3 = e3.toLowerCase(), t3 = 0, i3 = a3.length; t3 < i3; t3++) if ("f" === a3[t3].get("type") && a3[t3].get("name").toLowerCase() === e3) {
            n3 = a3[t3];
            break;
          }
          return n3;
        }, _createFile: function(e3, t3) {
          var i3 = this, a3 = {}, r3 = i3._findFile(e3);
          return r3 ? i3._showMessage(n2.format(i3.options.messages.overwriteFile, e3), "confirm") ? (r3._override = true, r3) : null : (a3.type = "f", a3.name = e3, a3.size = t3, a3);
        }, _insertFileToList: function(e3) {
          var t3;
          if (e3._override) return e3;
          for (var n3 = this.dataSource, i3 = n3.view(), a3 = 0, r3 = i3.length; a3 < r3; a3++) if ("f" === i3[a3].get(v2)) {
            t3 = a3;
            break;
          }
          return n3.insert(++t3, e3);
        }, createDirectory: function() {
          var e3, t3, i3 = this, a3 = 0, r3 = v2, o3 = m2, s3 = i3.dataSource.data(), l3 = i3._nameDirectory(), d3 = new i3.dataSource.reader.model();
          for (e3 = 0, t3 = s3.length; e3 < t3; e3++) "d" === s3[e3].get(r3) && (a3 = e3);
          d3.set(r3, "d"), d3.set(o3, l3), i3.listView.one("dataBound", function() {
            var e4 = i3.listView.items().filter("[" + n2.attr("uid") + "=" + d3.uid + "]");
            e4.length && this.edit(e4), this.element.scrollTop(e4.attr("offsetTop") - this.element[0].offsetHeight), setTimeout(function() {
              i3.listView.element.find(".k-edit-item input").select();
            });
          }).one("save", function(e4) {
            var t4 = e4.model.get(o3);
            t4 ? e4.model.set(o3, i3._nameExists(t4, d3.uid) ? i3._nameDirectory() : t4) : e4.model.set(o3, l3);
          }), i3.dataSource.insert(++a3, d3);
        }, _directoryKeyDown: function(e3) {
          13 == e3.keyCode && e3.currentTarget.blur();
        }, _directoryBlur: function() {
          this.listView.save();
        }, _nameExists: function(e3, t3) {
          var n3, i3, a3 = this.dataSource.data();
          for (n3 = 0, i3 = a3.length; n3 < i3; n3++) if ("d" === a3[n3].get("type") && a3[n3].get("name").toLowerCase() === e3.toLowerCase() && a3[n3].uid !== t3) return true;
          return false;
        }, _nameDirectory: function() {
          var t3, n3, i3, a3 = "New folder", r3 = this.dataSource.data(), o3 = [], s3 = m2;
          for (n3 = 0, i3 = r3.length; n3 < i3; n3++) "d" === r3[n3].get("type") && r3[n3].get(s3).toLowerCase().indexOf(a3.toLowerCase()) > -1 && o3.push(r3[n3].get(s3));
          if (e2.inArray(a3, o3) > -1) {
            n3 = 2;
            do {
              t3 = a3 + " (" + n3 + ")", n3++;
            } while (e2.inArray(t3, o3) > -1);
            a3 = t3;
          }
          return a3;
        }, orderBy: function(e3) {
          this.dataSource.sort([{ field: v2, dir: "asc" }, { field: e3, dir: "asc" }]);
        }, search: function(e3) {
          this.dataSource.filter({ field: m2, operator: "contains", value: e3 });
        }, _content: function() {
          var t3 = this;
          t3.list = e2('<div class="k-filemanager-listview" />').appendTo(t3.element).on("dblclick" + h2, ".k-listview-item", t3._dblClick.bind(t3)), t3.listView = new n2.ui.ListView(t3.list, { layout: "flex", flex: { direction: "row", wrap: "wrap" }, dataSource: t3.dataSource, template: t3._itemTmpl(), editTemplate: t3._editTmpl(), selectable: true, autoBind: false, dataBinding: function(e3) {
            t3.toolbar.find(".k-i-close").parent().addClass("k-disabled"), "remove" !== e3.action && "sync" !== e3.action || (e3.preventDefault(), n2.ui.progress(t3.listView.content, false));
          }, dataBound: function() {
            t3.dataSource.view().length ? t3._tiles = this.items().filter("[" + n2.attr("type") + "=f]") : this.content.append(b2({ text: t3.options.messages.emptyFolder }));
          }, change: t3._listViewChange.bind(t3) });
        }, _dblClick: function(t3) {
          var i3 = this, a3 = e2(t3.currentTarget);
          if (a3.hasClass("k-edit-item") && i3._directoryBlur(), a3.filter("[" + n2.attr("type") + "=d]").length) {
            var r3 = i3.dataSource.getByUid(a3.attr(n2.attr("uid")));
            r3 && (i3.path(k2(i3.path(), r3.get(m2))), i3.breadcrumbs.value("/" + i3.path()));
          } else a3.filter("[" + n2.attr("type") + "=f]").length && i3.trigger(u2);
        }, _listViewChange: function() {
          var e3 = this._selectedItem();
          e3 && (this.toolbar.find(".k-i-close").parent().removeClass("k-disabled"), this.trigger(d2, { selected: e3 }));
        }, _dataSource: function() {
          var e3 = this, t3 = e3.options, i3 = t3.transport, o3 = r2({}, _2), s3 = { field: m2, dir: "asc" }, l3 = { type: i3.type || "filebrowser", sort: [o3, s3] };
          a2(i3) && (i3.path = e3.path.bind(e3), l3.transport = i3), a2(t3.schema) ? l3.schema = t3.schema : i3.type && a2(n2.data.schemas[i3.type]) && n2.data.schemas[i3.type], e3.dataSource && e3._errorHandler ? e3.dataSource.unbind(c2, e3._errorHandler) : e3._errorHandler = e3._error.bind(e3), e3.dataSource = n2.data.DataSource.create(l3).bind(c2, e3._errorHandler);
        }, _navigation: function() {
          var t3 = this, n3 = e2('<div class="k-floatwrap"><nav></nav></div>').appendTo(this.element);
          t3.breadcrumbs = n3.find("nav").first().kendoBreadcrumb({ editable: true, gap: 50, value: t3.options.path || "/", change: function() {
            t3.path(this.value());
          } }).data("kendoBreadcrumb");
        }, _error: function(e3) {
          var t3, n3 = this;
          if (!n3.trigger(c2, e3)) {
            t3 = e3.xhr.status, "error" == e3.status ? "404" == t3 ? n3._showMessage(n3.options.messages.directoryNotFound) : "0" != t3 && n3._showMessage("Error! The requested URL returned " + t3 + " - " + e3.xhr.statusText) : "timeout" == t3 && n3._showMessage("Error! Server timeout.");
            var i3 = n3.dataSource;
            i3.hasChanges() && i3.cancelChanges();
          }
        }, _showMessage: function(e3, t3) {
          return window[t3 || "alert"](e3);
        }, refresh: function() {
          var e3 = this;
          e3._navigation(), e3._toolbar(), e3._content();
        }, _editTmpl: function() {
          var e3 = '<div class="k-listview-item k-selected" ' + n2.attr("uid") + '="#=uid#" ';
          return e3 += n2.attr("type") + '="${type}">', e3 += '#if(type == "d") { #', e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-folder"></span></div>', e3 += "#}else{#", e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-loading"></span></div>', e3 += "#}#", e3 += '#if(type == "d") { #', e3 += '<span class="k-file-name"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input class="k-input-inner" ' + n2.attr("bind") + '="value:name"/></span></span>', e3 += "#}#", e3 += "</div>", n2.template(e3).bind({ sizeFormatter: w });
        }, _itemTmpl: function() {
          var e3 = '<div class="k-listview-item" ' + n2.attr("uid") + '="#=uid#" ';
          return e3 += n2.attr("type") + '="${type}">', e3 += '#if(type == "d") { #', e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-folder"></span></div>', e3 += "#}else{#", e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-file"></span></div>', e3 += "#}#", e3 += '<span class="k-file-name">${name}</span>', e3 += '#if(type == "f") { # <span class="k-file-size">${this.sizeFormatter(size)}</span> #}#', e3 += "</div>", n2.template(e3).bind({ sizeFormatter: w });
        }, path: function(e3) {
          var n3 = this, i3 = n3._path || "";
          return e3 !== t2 ? (n3._path = e3.replace(l2, "") + "/", void n3.dataSource.read({ path: n3._path })) : (i3 && (i3 = i3.replace(l2, "")), "/" === i3 || "" === i3 ? "" : i3 + "/");
        } }), x = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          t3 = t3 || {}, i2.fn.init.call(n3, e3, t3), o2 && n3.element.attr("placeholder", n3.options.label), n3._wrapper(), n3.element.on("keydown" + f2, n3._keydown.bind(n3)).on("change" + f2, n3._updateValue.bind(n3)), n3.wrapper.on(p2 + f2, "a", n3._click.bind(n3)), o2 || n3.element.on("focus" + f2, n3._focus.bind(n3)).on("blur" + f2, n3._blur.bind(n3));
        }, options: { name: "SearchBox", label: "Search", value: "" }, events: [d2], destroy: function() {
          var e3 = this;
          e3.wrapper.add(e3.element).add(e3.label).off(f2), i2.fn.destroy.call(e3);
        }, _keydown: function(e3) {
          13 === e3.keyCode && this._updateValue();
        }, _click: function(e3) {
          e3.preventDefault(), this._updateValue();
        }, _updateValue: function() {
          var e3 = this, t3 = e3.element.val();
          t3 !== e3.value() && (e3.value(t3), e3.trigger(d2));
        }, _blur: function() {
          this._updateValue(), this._toggleLabel();
        }, _toggleLabel: function() {
          o2 || this.label.toggle(!this.element.val());
        }, _focus: function() {
          this.label.hide();
        }, _wrapper: function() {
          var t3 = this.element, n3 = t3.parents(".k-search-wrap");
          t3[0].style.width = "", t3.addClass("k-input-inner"), n3.length || (n3 = t3.wrap(e2('<div class="k-widget k-search-wrap"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"></span></div>')).parents(".k-search-wrap"), o2 || e2('<label style="display:block">' + this.options.label + "</label>").insertBefore(t3), e2('<span class="k-input-suffix"><a href="#" class="k-icon k-i-zoom k-search"/></span>').appendTo(n3.find(".k-textbox"))), this.wrapper = n3, this.label = n3.find(">label");
        }, value: function(e3) {
          var n3 = this;
          return e3 !== t2 ? (n3.options.value = e3, n3.element.val(e3), void n3._toggleLabel()) : n3.options.value;
        } });
        n2.ui.plugin(y), n2.ui.plugin(x);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.FileBrowser, a2 = e2.isPlainObject, r2 = e2.extend, o2 = n2.isFunction, s2 = /(^\/|\/$)/g, l2 = "error", d2 = ".kendoImageBrowser", u2 = "name", c2 = "size", p2 = "type", h2 = { field: p2, dir: "asc" }, f2 = n2.template('<div class="k-listview-item k-listview-item-empty"><span class="k-file-preview"><span class="k-file-icon k-icon k-i-none"></span></span><span class="k-file-name">${text}</span></div>');
        function m2(e3) {
          if (!e3) return "";
          var t3 = " bytes";
          return e3 >= 1073741824 ? (t3 = " GB", e3 /= 1073741824) : e3 >= 1048576 ? (t3 = " MB", e3 /= 1048576) : e3 >= 1024 && (t3 = " KB", e3 /= 1024), Math.round(100 * e3) / 100 + t3;
        }
        r2(true, n2.data, { schemas: { imagebrowser: { data: function(e3) {
          return e3.items || e3 || [];
        }, model: { id: "name", fields: { name: "name", size: "size", type: "type" } } } } }), r2(true, n2.data, { transports: { imagebrowser: n2.data.RemoteTransport.extend({ init: function(t3) {
          n2.data.RemoteTransport.fn.init.call(this, e2.extend(true, {}, this.options, t3));
        }, _call: function(t3, i3) {
          i3.data = e2.extend({}, i3.data, { path: this.options.path() }), o2(this.options[t3]) ? this.options[t3].call(this, i3) : n2.data.RemoteTransport.fn[t3].call(this, i3);
        }, read: function(e3) {
          this._call("read", e3);
        }, create: function(e3) {
          this._call("create", e3);
        }, destroy: function(e3) {
          this._call("destroy", e3);
        }, update: function() {
        }, options: { read: { type: "POST" }, update: { type: "POST" }, create: { type: "POST" }, destroy: { type: "POST" } } }) } });
        var g2 = i2.extend({ init: function(e3, t3) {
          t3 = t3 || {}, i2.fn.init.call(this, e3, t3), this.element.addClass("k-imagebrowser");
        }, options: { name: "ImageBrowser", fileTypes: "*.png,*.gif,*.jpg,*.jpeg" }, value: function() {
          var e3, i3 = this, a3 = i3._selectedItem(), r3 = i3.options.transport.imageUrl;
          if (a3 && "f" === a3.get(p2)) return e3 = function(e4, n3) {
            return e4 !== t2 && e4.match(/\/$/) || (e4 = (e4 || "") + "/"), e4 + n3;
          }(i3.path(), a3.get(u2)).replace(s2, ""), r3 && (e3 = o2(r3) ? r3(e3) : n2.format(r3, encodeURIComponent(e3))), e3;
        }, _fileUpload: function(e3) {
          var i3, a3 = this, r3 = a3.options, o3 = r3.fileTypes, s3 = new RegExp(("(" + o3.split(",").join(")|(") + ")").replace(/\*\./g, ".*."), "i"), l3 = e3.files[0].name, d3 = e3.files[0].size, p3 = u2, h3 = c2;
          s3.test(l3) ? (e3.data = { path: a3.path() }, (i3 = a3._createFile(l3, d3)) ? (i3._uploading = true, a3.upload.one("error", function() {
            i3 = t2;
          }), a3.upload.one("success", function(e4) {
            if (i3) {
              delete i3._uploading;
              var t3 = a3._insertFileToList(i3);
              t3.set(p3, e4.response[a3._getFieldName(p3)]), t3.set(h3, e4.response[a3._getFieldName(h3)]), a3._tiles = a3.listView.items().filter("[" + n2.attr("type") + "=f]"), a3._scroll();
            }
          })) : e3.preventDefault()) : (e3.preventDefault(), a3._showMessage(n2.format(r3.messages.invalidFileType, l3, o3)));
        }, _content: function() {
          var t3 = this;
          t3.list = e2('<div class="k-filemanager-listview" />').appendTo(t3.element).on("dblclick" + d2, ".k-listview-item", t3._dblClick.bind(t3)), t3.listView = new n2.ui.ListView(t3.list, { layout: "flex", flex: { direction: "row", wrap: "wrap" }, dataSource: t3.dataSource, template: t3._itemTmpl(), editTemplate: t3._editTmpl(), selectable: true, autoBind: false, dataBinding: function(e3) {
            t3.toolbar.find(".k-i-close").parent().addClass("k-disabled"), "remove" !== e3.action && "sync" !== e3.action || (e3.preventDefault(), n2.ui.progress(t3.listView.content, false));
          }, dataBound: function() {
            t3.dataSource.view().length ? (t3._tiles = this.items().filter("[" + n2.attr("type") + "=f]"), t3._scroll()) : this.content.append(f2({ text: t3.options.messages.emptyFolder }));
          }, change: t3._listViewChange.bind(t3) }), t3.listView.content.on("scroll" + d2, t3._scroll.bind(t3));
        }, _dataSource: function() {
          var e3 = this, t3 = e3.options, i3 = t3.transport, o3 = r2({}, h2), s3 = { field: u2, dir: "asc" }, d3 = { type: i3.type || "imagebrowser", sort: [o3, s3] };
          a2(i3) && (i3.path = e3.path.bind(e3), d3.transport = i3), a2(t3.schema) ? d3.schema = t3.schema : i3.type && a2(n2.data.schemas[i3.type]) && n2.data.schemas[i3.type], e3.dataSource && e3._errorHandler ? e3.dataSource.unbind(l2, e3._errorHandler) : e3._errorHandler = e3._error.bind(e3), e3.dataSource = n2.data.DataSource.create(d3).bind(l2, e3._errorHandler);
        }, _loadImage: function(t3) {
          var i3 = this, a3 = e2(t3), r3 = i3.dataSource.getByUid(a3.attr(n2.attr("uid"))), s3 = r3.get(u2), l3 = i3.options.transport.thumbnailUrl, c3 = e2("<img />", { alt: s3 }), p3 = "?";
          r3._uploading || (c3.hide().on("load" + d2, function() {
            e2(this).prev().remove().end().addClass("k-image k-file-image").fadeIn();
          }), a3.find(".k-i-loading").after(c3), o2(l3) ? l3 = l3(i3.path(), encodeURIComponent(s3)) : (l3.indexOf("?") >= 0 && (p3 = "&"), l3 = l3 + p3 + "path=" + encodeURIComponent(i3.path() + s3), r3._override && (l3 += "&_=" + (/* @__PURE__ */ new Date()).getTime(), delete r3._override)), c3.attr("src", l3), t3.loaded = true);
        }, _scroll: function() {
          var t3 = this;
          t3.options.transport && t3.options.transport.thumbnailUrl && (clearTimeout(t3._timeout), t3._timeout = setTimeout(function() {
            var i3 = n2._outerHeight(t3.listView.content), a3 = t3.listView.content.scrollTop(), r3 = a3 + i3;
            t3._tiles.each(function() {
              var n3, i4 = (n3 = this).offsetTop - e2(n3).height(), o3 = i4 + this.offsetHeight;
              if ((i4 >= a3 && i4 < r3 || o3 >= a3 && o3 < r3) && t3._loadImage(this), i4 > r3) return false;
            }), t3._tiles = t3._tiles.filter(function() {
              return !this.loaded;
            });
          }, 250));
        }, _itemTmpl: function() {
          var e3 = '<div class="k-listview-item" ' + n2.attr("uid") + '="#=uid#" ';
          return e3 += n2.attr("type") + '="${type}">', e3 += '#if(type == "d") { #', e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-folder"></span></div>', e3 += "#}else{#", this.options.transport && this.options.transport.thumbnailUrl ? e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-loading"></span></div>' : e3 += '<div class="k-file-preview"><span class="k-file-icon k-icon k-i-file"></span></div>', e3 += "#}#", e3 += '<span class="k-file-name">${name}</span>', e3 += '#if(type == "f") { # <span class="k-file-size">${this.sizeFormatter(size)}</span> #}#', e3 += "</div>", n2.template(e3).bind({ sizeFormatter: m2 });
        } });
        n2.ui.plugin(g2);
      }(window.kendo.jQuery), function(e2) {
        var t2 = e2.Observable.extend({ init: function(t3) {
          e2.Observable.fn.init.call(this, t3), this.clear();
        }, events: ["undo", "redo"], push: function(e3) {
          this.stack = this.stack.slice(0, this.currentCommandIndex + 1), this.currentCommandIndex = this.stack.push(e3) - 1;
        }, undo: function() {
          if (this.canUndo()) {
            var e3 = this.stack[this.currentCommandIndex--];
            e3.undo(), this.trigger("undo", { command: e3 });
          }
        }, redo: function() {
          if (this.canRedo()) {
            var e3 = this.stack[++this.currentCommandIndex];
            e3.redo(), this.trigger("redo", { command: e3 });
          }
        }, clear: function() {
          this.stack = [], this.currentCommandIndex = -1;
        }, canUndo: function() {
          return this.currentCommandIndex >= 0;
        }, canRedo: function() {
          return this.currentCommandIndex != this.stack.length - 1;
        } });
        e2.deepExtend(e2, { util: { UndoRedoStack: t2 } });
      }(kendo), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class, a2 = n2.ui.Widget, r2 = n2.support.mobileOS, o2 = n2.support.browser, s2 = e2.extend, l2 = n2.deepExtend, d2 = n2.keys, u2 = "select", c2 = "select.k-select-overlay", p2 = "k-placeholder", h2 = i2.extend({ init: function(e3) {
          this.options = e3;
        }, getHtml: function() {
          var e3 = this.options;
          return n2.template(e3.template, { useWithBlock: false })(e3);
        } }), f2 = { editorWrapperTemplate: '<table cellspacing="0" cellpadding="0" class="k-widget k-editor" role="presentation"><tbody><tr role="presentation"><td class="k-editor-toolbar-wrap" role="presentation"><ul class="k-toolbar k-editor-toolbar" role="toolbar"></ul></td></tr><tr><td class="k-editable-area k-editor-content"></td></tr></tbody></table>', buttonTemplate: '# var iconCssClass = "k-icon k-i-" + kendo.toHyphens(data.cssClass.replace("k-", ""));## var dataPopup = data.popup ? "data-popup" : "";#<button type="button" tabindex="0" role="button" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-tool" #= dataPopup # title="#= data.title #" aria-label="#= data.title #"><span class="#= iconCssClass #"></span><span class="k-tool-text k-button-text">#= data.title #</span></button>', iconTextButtonTemplate: '# var iconCssClass = "k-icon k-i-" + kendo.toHyphens(data.cssClass.replace("k-", ""));## var dataPopup = data.popup ? "data-popup" : "";#<button type="button" tabindex="0" role="button" class="k-i-import k-button k-button-md k-rounded-md k-button-solid k-button-solid-base" #= dataPopup # title="#= data.title #" aria-label="#= data.title #"><span class="k-button-icon #= iconCssClass #"></span><span class="k-button-text">#= data.title #</span></button>', tableWizardButtonTemplate: '# var iconCssClass = "k-icon k-i-" + kendo.toHyphens(data.cssClass.replace("k-", ""));## var dataPopup = data.popup ? "data-popup" : "";#<button type="button" tabindex="0" role="button" class="k-tool k-button k-button-md k-rounded-md k-button-solid k-button-solid-base" #= dataPopup # title="#= data.title #" aria-label="#= data.title #"><span class="#= iconCssClass #"></span><span class="k-tool-text">#= data.title #</span></button>', colorPickerTemplate: '<input class="k-colorpicker k-icon k-i-#= data.cssClass.replace("k-", "") #" />', comboBoxTemplate: '<select title="#= data.title #" aria-label="#= data.title #" class="#= data.cssClass #"></select>', dropDownListTemplate: '<span class="k-editor-dropdown"><select title="#= data.title #" aria-label="#= data.title #" class="#= data.cssClass #"></select></span>', separatorTemplate: '<span class="k-separator"></span>', overflowAnchorTemplate: '<button type="button" tabindex="0" role="button" class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-tool k-overflow-anchor" data-popup title="#= data.title #" aria-label="#= data.title #" aria-haspopup="true" aria-expanded="false"><span class="k-icon k-i-more-vertical k-button-icon"></span></button>', formatByName: function(t3, n3) {
          for (var i3 = 0; i3 < n3.length; i3++) if (e2.inArray(t3, n3[i3].tags) >= 0) return n3[i3];
        }, getToolCssClass: function(e3) {
          var t3 = { superscript: "sup-script", subscript: "sub-script", justifyLeft: "align-left", justifyCenter: "align-center", justifyRight: "align-right", justifyFull: "align-justify", insertUnorderedList: "list-unordered", insertOrderedList: "list-ordered", insertUpperRomanList: "list-roman-upper", insertLowerRomanList: "list-roman-lower", import: "import", indent: "indent-increase", outdent: "indent-decrease", createLink: "link-horizontal", unlink: "unlink-horizontal", insertImage: "image", insertFile: "file-add", viewHtml: "html", foreColor: "foreground-color", backColor: "paint", createTable: "table-insert", addColumnLeft: "table-column-insert-left", addColumnRight: "table-column-insert-right", addRowAbove: "table-row-insert-above", addRowBelow: "table-row-insert-below", deleteRow: "table-row-delete", deleteColumn: "table-column-delete", mergeCellsHorizontally: "cells-merge-horizontally", mergeCellsVertically: "cells-merge-vertically", splitCellHorizontally: "cell-split-horizontally", splitCellVertically: "cell-split-vertically", tableWizard: "table-properties", tableWizardInsert: "table-wizard", tableAlignLeft: "table-position-left", tableAlignCenter: "table-position-center", tableAlignRight: "table-position-right", cleanFormatting: "clear-css", copyFormat: "copy-format", applyFormat: "apply-format" }[e3];
          return t3 || e3;
        }, registerTool: function(e3, t3) {
          var n3 = t3.options;
          n3 && n3.template && (n3.template.options.cssClass = "k-" + f2.getToolCssClass(e3)), t3.name || (t3.options.name = e3, t3.name = e3.toLowerCase()), x.defaultTools[e3] = t3;
        }, registerFormat: function(e3, t3) {
          x.fn.options.formats[e3] = t3;
        }, cacheComments: function(e3, t3) {
          for (var n3 in t3) e3 = e3.replace(t3[n3], "{" + n3 + "}");
          return e3;
        }, retrieveComments: function(e3, t3) {
          for (var n3 in t3) e3 = e3.replace("{" + n3 + "}", t3[n3]);
          return e3;
        } }, m2 = void 0 !== document.documentElement.contentEditable, g2 = ["bold", "italic", "underline"], v2 = ["justifyLeft", "justifyCenter", "justifyRight"], _2 = ["insertUnorderedList", "insertOrderedList"], b2 = ["indent", "outdent"], k2 = ["copyFormat", "applyFormat"], w = ["createLink", "unlink"], y = ["tableWizard", "createTable", "addColumnLeft", "addColumnRight", "addRowAbove", "addRowBelow", "deleteRow", "deleteColumn", "mergeCellsHorizontally", "mergeCellsVertically", "splitCellHorizontally", "splitCellVertically", "tableAlignLeft", "tableAlignCenter", "tableAlignRight"], x = a2.extend({ init: function(i3, r3) {
          var o3, d3, u3, c3, p3, h3, g3 = this, v3 = n2.ui.editor, _3 = v3.Dom;
          if (m2) {
            if (a2.fn.init.call(g3, i3, r3), g3.options = l2({}, g3.options, r3), g3.options.tools = g3.options.tools.slice(), h3 = (i3 = g3.element)[0], c3 = _3.name(h3), this._registerHandler(i3.closest("form"), "submit", g3.update.bind(g3, t2)), (u3 = s2({}, g3.options)).editor = g3, "textarea" == c3 ? (g3._wrapTextarea(), d3 = g3.wrapper.find(".k-editor-toolbar"), h3.id && d3.attr("aria-controls", h3.id)) : (g3.element.attr("contenteditable", true).addClass("k-widget k-editor k-editor-inline"), u3.popup = true, d3 = e2('<ul class="k-toolbar k-editor-toolbar" role="toolbar" />').insertBefore(i3)), g3.toolbar = new v3.Toolbar(d3[0], u3), g3.toolbar.bindTo(g3), "textarea" == c3 && setTimeout(function() {
              var e3 = g3.wrapper[0].style.height, t3 = parseInt(e3, 10), n3 = g3.wrapper.height();
              e3.indexOf("px") > 0 && !isNaN(t3) && n3 > t3 && g3.wrapper.height(t3 - (n3 - t3));
            }), g3._resizable(), g3._initializeContentElement(g3), g3.keyboard = new v3.Keyboard([new v3.BackspaceHandler(g3), new v3.TypingHandler(g3), new v3.SystemHandler(g3), new v3.SelectAllHandler(g3)]), g3.clipboard = new v3.Clipboard(this), g3.undoRedoStack = new n2.util.UndoRedoStack(), r3 && r3.value) o3 = r3.value;
            else if (g3.textarea) {
              (o3 = h3.value).replace(/\s/g, "").length || (o3 = o3.replace(/\s/g, "")), g3.options.encoded && h3.defaultValue && h3.defaultValue.trim().length && (o3 = h3.defaultValue);
              var b3 = v3.Serializer.htmlToDom(o3, e2("<div></div>")[0], g3.options.deserialization);
              p3 = _3.getAllComments(b3), o3 = (o3 = f2.cacheComments(o3, p3)).replace(/[\r\n\v\f\t ]+/gi, " "), o3 = f2.retrieveComments(o3, p3);
            } else o3 = h3.innerHTML;
            g3.value(o3 || "\uFEFF"), this._registerHandler(document, { mousedown: function() {
              g3._endTyping();
            }, mouseup: function(e3) {
              g3._mouseup(e3);
            } }), g3._initializeImmutables(), "textarea" == c3 && g3._ariaLabel(g3.wrapper.find("iframe")), g3.toolbar.resize(), n2.notify(g3);
          }
        }, setOptions: function(e3) {
          var t3 = this;
          a2.fn.setOptions.call(t3, e3), e3.tools && t3.toolbar.bindTo(t3), this._initializePlaceholder();
        }, _togglePlaceholder: function(t3) {
          var n3 = this, i3 = n3.body, a3 = e2(i3), r3 = n3.options.placeholder;
          n3.textarea && r3 && (a3.attr("aria-label", function() {
            return t3 ? r3 : "";
          }), a3.toggleClass(p2, t3));
        }, _endTyping: function() {
          var e3 = this.keyboard;
          try {
            e3.isTypingInProgress() && (e3.endTyping(true), this.saveSelection());
          } catch (e4) {
          }
        }, _selectionChange: function() {
          this._selectionStarted = false, this.saveSelection(), this.trigger("select", {});
        }, _resizable: function() {
          var i3 = this.options.resizable;
          if ((e2.isPlainObject(i3) ? i3.content === t2 || true === i3.content : i3) && this.textarea) {
            var a3 = e2("<div class='k-resize-handle'><span class='k-icon k-i-arrow-45-down-right'></span></div>").insertAfter(this.textarea);
            if (this.wrapper.addClass("k-resizable"), this.wrapper.kendoResizable(s2({}, this.options.resizable, { draggableElement: a3, start: function(t3) {
              var n3 = this.editor = e2(t3.currentTarget).closest(".k-editor");
              this.initialSize = n3.height(), n3.find("td").last().append("<div class='k-overlay' />");
            }, resize: function(e3) {
              var t3 = e3.y.initialDelta, n3 = this.initialSize + t3, i4 = this.options.min || 0, a4 = this.options.max || 1 / 0;
              n3 = Math.min(a4, Math.max(i4, n3)), this.editor.height(n3);
            }, resizeend: function() {
              this.editor.find(".k-overlay").remove(), this.editor = null;
            } })), n2.support.mobileOS.ios) this.wrapper.getKendoResizable().draggable.options.ignore = c2;
          }
        }, _initializeElementResizing: function() {
          var e3 = this;
          n2.ui.editor.ElementResizingFactory.current.create(e3), e3._showElementResizeHandlesProxy = e3._showElementResizeHandles.bind(e3), e3.bind(u2, e3._showElementResizeHandlesProxy);
        }, _destroyElementResizing: function() {
          var e3 = this, t3 = e3.elementResizing;
          t3 && (t3.destroy(), e3.elementResizing = null), e3._showElementResizeHandlesProxy && e3.unbind(u2, e3._showElementResizeHandlesProxy);
        }, _showElementResizeHandles: function() {
          var e3 = this.elementResizing;
          e3 && e3.element && e3.element.parentNode ? e3.showResizeHandles() : !e3 || e3.element && e3.element.parentNode || this._destroyElementResizing();
        }, _initializeColumnResizing: function() {
          n2.ui.editor.ColumnResizing.create(this);
        }, _destroyColumnResizing: function() {
          var e3 = this;
          e3.columnResizing && (e3.columnResizing.destroy(), e3.columnResizing = null);
        }, _initializeRowResizing: function() {
          n2.ui.editor.RowResizing.create(this);
        }, _destroyRowResizing: function() {
          var e3 = this;
          e3.rowResizing && (e3.rowResizing.destroy(), e3.rowResizing = null);
        }, _wrapTextarea: function() {
          var t3 = this, n3 = t3.element, i3 = n3[0].style.width, a3 = n3[0].style.height, r3 = f2.editorWrapperTemplate, o3 = e2(r3).insertBefore(n3), s3 = o3.find(".k-editable-area");
          o3.css({ width: i3, height: a3 }), n3.attr("autocomplete", "off").appendTo(s3).addClass("k-content k-raw-content").css("display", "none"), t3.textarea = n3, t3.wrapper = o3;
        }, _createContentElement: function(t3) {
          var i3, a3, s3, l3, d3 = this, u3 = d3.textarea, c3 = d3.options.domain, p3 = c3 || document.domain, h3 = "", f3 = 'javascript:""';
          return u3.hide(), i3 = e2("<iframe />", { title: d3.options.messages.editAreaTitle, frameBorder: "0" })[0], e2(i3).css("display", "").addClass("k-content k-iframe").attr("tabindex", u3[0].tabIndex).insertBefore(u3), (c3 || p3 != location.hostname) && (f3 = "javascript:document.write('" + (h3 = '<script>document.domain="' + p3 + '"<\/script>') + "')", i3.src = f3), i3.src || (i3.src = ""), a3 = i3.contentWindow || i3, s3 = a3.document || i3.contentDocument, e2(i3).one("load", function() {
            d3.toolbar.decorateFrom(s3.body);
          }), l3 = document.getElementsByTagName("html")[0].getAttribute("lang") || "en", s3.open(), s3.write("<!DOCTYPE html><html lang='" + l3 + "'><head><meta charset='utf-8' /><title>Kendo UI Editor content</title><style>html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}body{padding:0;margin:0;}body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;" + (n2.support.isRtl(u3) ? "direction:rtl;" : "") + (r2.ios ? "word-break:keep-all;" : "") + (o2.edge || o2.chrome ? "height:100%;" : "") + "}h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}ul,ol{padding-left:2.5em}span{-ms-high-contrast-adjust:none;}a{color:#00a}code{font-size:1.23em}telerik\\3Ascript{display: none;}.k-table{width:100%;border-spacing:0;margin: 0 0 1em;}.k-table td{min-width:1px;padding:.2em .3em;}.k-table,.k-table td{outline:0;border: 1px dotted #ccc;}.k-table th{outline:0;border: 1px dotted #999;}.k-table p{margin:0;padding:0;}.k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}.k-column-resize-handle {width: 100%; height: 100%;}.k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}.k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}.k-row-resize-handle {display: table; width: 100%; height: 100%;}.k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}.k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}.k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}.k-element-resize-handle {width: 100%; height: 100%;}.k-element-resize-handle.k-resize-east{cursor:e-resize;}.k-element-resize-handle.k-resize-north{cursor:n-resize;}.k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}.k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}.k-element-resize-handle.k-resize-south{cursor:s-resize;}.k-element-resize-handle.k-resize-southeast{cursor:se-resize;}.k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}.k-element-resize-handle.k-resize-west{cursor:w-resize;}.k-table.k-element-resizing{opacity:0.6;}.k-placeholder{color:grey}k\\:script{display:none;}</style>" + h3 + e2.map(t3, function(e3) {
            return "<link rel='stylesheet' href='" + e3 + "'>";
          }).join("") + "</head><body autocorrect='off' contenteditable='true'></body></html>"), s3.close(), a3;
        }, _blur: function() {
          var e3 = this.textarea, t3 = e3 ? e3.val() : this._oldValue, n3 = this.options.encoded ? this.encodedValue() : this.value();
          this.update(), e3 && e3.trigger("blur"), n3 != t3 && (this.trigger("change"), e3 && e3.trigger("change"));
        }, _spellCorrect: function(e3) {
          var t3, i3 = false;
          this._registerHandler(e3.body, { contextmenu: function() {
            e3.one("select", function() {
              t3 = null;
            }), e3._spellCorrectTimeout = setTimeout(function() {
              t3 = new n2.ui.editor.RestorePoint(e3.getRange(), e3.body), i3 = false;
            }, 10);
          }, input: function() {
            t3 && (!n2.support.browser.mozilla || i3 ? n2.ui.editor._finishUpdate(e3, t3) : i3 = true);
          } });
        }, _registerHandler: function(t3, i3, a3) {
          var r3, o3, s3 = ".kendoEditor";
          if (t3 = e2(t3), this._handlers || (this._handlers = []), t3.length) if (e2.isPlainObject(i3)) for (var l3 in i3) i3.hasOwnProperty(l3) && this._registerHandler(t3, l3, i3[l3]);
          else for (r3 = n2.applyEventMap(i3).split(" "), o3 = 0; o3 < r3.length; o3++) this._handlers.push({ element: t3, type: r3[o3] + s3, handler: a3 }), t3.on(r3[o3] + s3, a3);
        }, _deregisterHandlers: function() {
          for (var e3 = this._handlers, t3 = 0; t3 < e3.length; t3++) {
            var n3 = e3[t3];
            n3.element.off(n3.type, n3.handler);
          }
          this._handlers = [];
        }, _initializeContentElement: function() {
          var i3, a3, r3, o3 = this;
          if (o3.textarea) {
            if (o3.window = o3._createContentElement(o3.options.stylesheets), !(i3 = o3.document = o3.window.contentDocument || o3.window.document).body) {
              var s3 = i3.createElement("body");
              s3.setAttribute("contenteditable", "true"), s3.setAttribute("autocorrect", "off"), i3.getElementsByTagName("html")[0].appendChild(s3);
              var l3 = setInterval(function() {
                e2(o3.document).find("body").length > 1 && (e2(o3.document).find("body").last().remove(), window.clearInterval(l3));
              }, 10);
            }
            o3.body = i3.body, a3 = o3.window, r3 = i3, this._registerHandler(i3, "mouseup", this._mouseup.bind(this));
          } else o3.window = window, i3 = o3.document = document, o3.body = o3.element[0], a3 = o3.body, r3 = o3.body, o3.toolbar.decorateFrom(o3.body);
          this._registerHandler(a3, "blur", this._blur.bind(this)), o3._registerHandler(r3, "down", o3._mousedown.bind(o3));
          try {
            i3.execCommand("enableInlineTableEditing", null, false);
          } catch (e3) {
          }
          n2.support.touch && this._registerHandler(i3, { keydown: function() {
            n2._activeElement() != i3.body && o3.window.focus();
          } }), this._initializePlaceholder(), this._spellCorrect(o3), this._registerHandler(o3.document, { "mouseover dragenter": function(t3) {
            var n3 = e2(o3.body).height();
            e2(o3.body.parentElement).height() > n3 && "html" === t3.target.nodeName.toLowerCase() && (o3._cachedHeight = "" + o3.body.style.height, o3.body.style.height = "100%");
          }, "mouseout dragleave drop contextmenu": function(e3) {
            var n3 = function() {
              o3._cachedHeight !== t2 && e3.target === o3.body && (o3.body.style.height = o3._cachedHeight, delete o3._cachedHeight);
            };
            "contextmenu" === e3.type ? setTimeout(function() {
              n3();
            }, 10) : n3();
          } }), this._registerHandler(o3.body, { keydown: function(e3) {
            var t3;
            if ((e3.keyCode === d2.BACKSPACE || e3.keyCode === d2.DELETE) && "true" !== o3.body.getAttribute("contenteditable")) return false;
            if (e3.keyCode === d2.F10) return setTimeout(o3.toolbar.focus.bind(o3.toolbar), 100), o3.toolbar.preventPopupHide = true, void e3.preventDefault();
            if (e3.keyCode == d2.LEFT || e3.keyCode == d2.RIGHT) {
              t3 = o3.getRange();
              var n3 = e3.keyCode == d2.LEFT, i4 = t3[n3 ? "startContainer" : "endContainer"], a4 = t3[n3 ? "startOffset" : "endOffset"], r4 = a4 + (n3 ? -1 : 1), s4 = n3 ? r4 : a4;
              3 == i4.nodeType && "\uFEFF" == i4.nodeValue[s4] && (t3.setStart(i4, r4), t3.collapse(true), o3.selectRange(t3));
            }
            var l4 = o3.toolbar.tools, u3 = o3.keyboard.toolFromShortcut(l4, e3), c3 = u3 ? l4[u3].options : {};
            if (u3 && !c3.keyPressCommand) return e3.preventDefault(), /^(undo|redo)$/.test(u3) || o3.keyboard.endTyping(true), o3.trigger("keydown", e3), o3.exec(u3), o3._runPostContentKeyCommands(e3), false;
            o3.keyboard.clearTimeout(), o3.keyboard.keydown(e3);
          }, keypress: function(e3) {
            setTimeout(function() {
              o3._runPostContentKeyCommands(e3), o3._showElementResizeHandles();
            }, 0);
          }, keyup: function(t3) {
            var n3 = [d2.BACKSPACE, d2.TAB, d2.PAGEUP, d2.PAGEDOWN, d2.END, d2.HOME, d2.LEFT, d2.UP, d2.RIGHT, d2.DOWN, d2.INSERT, d2.DELETE];
            (e2.inArray(t3.keyCode, n3) > -1 || 65 == t3.keyCode && t3.ctrlKey && !t3.altKey && !t3.shiftKey) && (window.clearTimeout(this._refreshInterval), this._refreshInterval = window.setTimeout(function() {
              o3._selectionChange();
            }, 200)), o3.keyboard.keyup(t3);
          }, click: function(e3) {
            var t3;
            "img" === n2.ui.editor.Dom.name(e3.target) && ((t3 = o3.createRange()).selectNode(e3.target), o3.selectRange(t3));
          }, "cut copy paste drop dragover": function(e3) {
            o3.clipboard["on" + e3.type](e3);
          }, focusin: function() {
            o3.body.hasAttribute("contenteditable") && (e2(this).addClass("k-active"), o3.toolbar.show(), o3._togglePlaceholder(false));
          }, focusout: function() {
            setTimeout(function() {
              var t3 = n2._activeElement(), i4 = o3.body, a4 = o3.toolbar;
              if (a4.options.popup) {
                var r4 = a4.window.element.get(0);
                r4 && !e2.contains(r4, t3) && r4 != t3 && (a4.preventPopupHide = false);
              }
              t3 == i4 || e2.contains(i4, t3) || a4.focused() || a4.preventPopupHide || (e2(i4).removeClass("k-active"), a4.hide()), o3._togglePlaceholder(!o3.value().trim());
            }, 10);
          } }), o3._initializeColumnResizing(), o3._initializeRowResizing(), o3._initializeElementResizing();
        }, _initializePlaceholder: function() {
          var t3, n3, i3 = this, a3 = i3.options.placeholder;
          i3.textarea && a3 && (t3 = "<style id='placeholder'>.k-placeholder:before { content: '" + a3 + "'; }</style>", (n3 = e2(i3.document.head)).find("#placeholder").remove(), n3.append(t3), i3._togglePlaceholder(!i3.value().trim()));
        }, _initializeImmutables: function() {
          var e3 = this, t3 = n2.ui.editor;
          e3.options.immutables && (e3.immutables = new t3.Immutables(e3));
        }, _mousedown: function(t3) {
          var n3 = this;
          if (n3._selectionStarted = true, e2(n3.body).parents(".k-window").length && t3.stopPropagation(), !o2.gecko) {
            var i3 = e2(t3.target).closest("a[href]");
            (2 == t3.which || 1 == t3.which && t3.ctrlKey) && i3 && i3.is("a[href]") && window.open(i3.attr("href"), "_new"), t3.target.tagName && "html" === t3.target.tagName.toLowerCase() && setTimeout(function() {
              n3.body.focus();
            }, 0);
          }
        }, _mouseup: function(t3) {
          var i3 = this;
          n2.support.mobileOS.ios && t3 && e2(t3.target).is(c2) || i3._selectionStarted && setTimeout(function() {
            i3._selectionChange();
          }, 1);
        }, _runPostContentKeyCommands: function(e3) {
          for (var t3 = this.getRange(), n3 = this.keyboard.toolsFromShortcut(this.toolbar.tools, e3), i3 = 0; i3 < n3.length; i3++) {
            var a3 = n3[i3], r3 = a3.options;
            if (r3.keyPressCommand) new r3.command({ range: t3 }).changesContent() && (this.keyboard.endTyping(true), this.exec(a3.name));
          }
        }, refresh: function() {
          var e3 = this;
          if (e3.textarea) {
            e3._destroyResizings();
            var t3 = e3.value();
            e3.textarea.val(t3), e3.wrapper.find("iframe").remove(), e3._initializeContentElement(e3), e3.value(t3);
          }
        }, events: ["select", "change", "execute", "error", "paste", "keydown", "keyup"], options: { name: "Editor", messages: { bold: "Bold", italic: "Italic", underline: "Underline", strikethrough: "Strikethrough", superscript: "Superscript", subscript: "Subscript", justifyCenter: "Center text", justifyLeft: "Align text left", justifyRight: "Align text right", justifyFull: "Justify", insertUnorderedList: "Insert unordered list", insertOrderedList: "Insert ordered list", indent: "Indent", outdent: "Outdent", createLink: "Insert hyperlink", unlink: "Remove hyperlink", insertImage: "Insert image", insertFile: "Insert file", insertHtml: "Insert HTML", viewHtml: "View HTML", fontName: "Select font family", fontNameInherit: "(inherited font)", fontSize: "Select font size", fontSizeInherit: "(inherited size)", formatBlock: "Format", formatting: "Format", foreColor: "Color", backColor: "Background color", style: "Styles", emptyFolder: "Empty Folder", editAreaTitle: "Editable area. Press F10 for toolbar.", uploadFile: "Upload", overflowAnchor: "More tools", orderBy: "Arrange by:", orderBySize: "Size", orderByName: "Name", invalidFileType: 'The selected file "{0}" is not valid. Supported file types are {1}.', deleteFile: 'Are you sure you want to delete "{0}"?', overwriteFile: 'A file with name "{0}" already exists in the current directory. Do you want to overwrite it?', directoryNotFound: "A directory with this name was not found.", imageWebAddress: "Web address", imageAltText: "Alternate text", imageWidth: "Width (px)", imageHeight: "Height (px)", fileWebAddress: "Web address", fileTitle: "Title", fileText: "Text", linkWebAddress: "Web address", linkText: "Text", linkToolTip: "ToolTip", linkOpenInNewWindow: "Open link in new window", dialogUpdate: "Update", dialogInsert: "Insert", dialogOk: "Ok", dialogCancel: "Cancel", cleanFormatting: "Clean formatting", createTable: "Create a table", createTableHint: "Create a {0} x {1} table", addColumnLeft: "Add column on the left", addColumnRight: "Add column on the right", addRowAbove: "Add row above", addRowBelow: "Add row below", deleteRow: "Delete row", deleteColumn: "Delete column", mergeCellsHorizontally: "Merge cells horizontally", mergeCellsVertically: "Merge cells vertically", splitCellHorizontally: "Split cells horizontally", splitCellVertically: "Split cells vertically", tableAlignLeft: "Table Align Left", tableAlignCenter: "Table Align Center", tableAlignRight: "Table Align Right", tableWizard: "Table Wizard", tableTab: "Table", cellTab: "Cell", accessibilityTab: "Accessibility", caption: "Caption", summary: "Summary", width: "Width", height: "Height", units: "Units", cellSpacing: "Cell Spacing", cellPadding: "Cell Padding", cellMargin: "Cell Margin", alignment: "Alignment", background: "Background", cssClass: "CSS Class", id: "ID", border: "Border", borderStyle: "Border Style", collapseBorders: "Collapse borders", wrapText: "Wrap text", associateCellsWithHeaders: "Associate headers", alignLeft: "Align Left", alignCenter: "Align Center", alignRight: "Align Right", alignLeftTop: "Align Left Top", alignCenterTop: "Align Center Top", alignRightTop: "Align Right Top", alignLeftMiddle: "Align Left Middle", alignCenterMiddle: "Align Center Middle", alignRightMiddle: "Align Right Middle", alignLeftBottom: "Align Left Bottom", alignCenterBottom: "Align Center Bottom", alignRightBottom: "Align Right Bottom", alignRemove: "Remove Alignment", columns: "Columns", rows: "Rows", selectAllCells: "Select All Cells", exportAs: "Export As", import: "Import", print: "Print", headerRows: "Header Rows", headerColumns: "Header Cols", tableSummaryPlaceholder: "Summary attribute is not HTML5 compatible.", associateNone: "None", associateScope: "Associate using 'scope' attribute", associateIds: "Associate using Ids", copyFormat: "Copy format", applyFormat: "Apply format", borderNone: "None", undo: "Undo", redo: "Redo" }, placeholder: "", formats: {}, encoded: true, domain: null, resizable: false, deserialization: { custom: null }, serialization: { entities: true, semantic: true, scripts: false, optimizeTags: false, keepEOL: false }, pasteCleanup: { all: false, css: false, custom: null, keepNewLines: false, msAllFormatting: false, msConvertLists: true, msTags: true, none: false, span: false }, stylesheets: [], dialogOptions: { modal: true, resizable: false, draggable: true, animation: false }, imageBrowser: null, fileBrowser: null, fontName: [{ text: "Arial", value: "Arial, Helvetica, sans-serif" }, { text: "Courier New", value: '"Courier New", Courier, monospace' }, { text: "Georgia", value: "Georgia, serif" }, { text: "Impact", value: "Impact, Charcoal, sans-serif" }, { text: "Lucida Console", value: '"Lucida Console", Monaco, monospace' }, { text: "Tahoma", value: "Tahoma, Geneva, sans-serif" }, { text: "Times New Roman", value: '"Times New Roman", Times, serif' }, { text: "Trebuchet MS", value: '"Trebuchet MS", Helvetica, sans-serif' }, { text: "Verdana", value: "Verdana, Geneva, sans-serif" }], fontSize: [{ text: "1 (8pt)", value: "xx-small" }, { text: "2 (10pt)", value: "x-small" }, { text: "3 (12pt)", value: "small" }, { text: "4 (14pt)", value: "medium" }, { text: "5 (18pt)", value: "large" }, { text: "6 (24pt)", value: "x-large" }, { text: "7 (36pt)", value: "xx-large" }], formatBlock: [{ text: "Paragraph", value: "p" }, { text: "Quotation", value: "blockquote" }, { text: "Heading 1", value: "h1" }, { text: "Heading 2", value: "h2" }, { text: "Heading 3", value: "h3" }, { text: "Heading 4", value: "h4" }, { text: "Heading 5", value: "h5" }, { text: "Heading 6", value: "h6" }], tools: [].concat.call(["formatting"], g2, ["undo", "redo"], v2, k2, _2, b2, w, ["insertImage"], y) }, destroy: function() {
          a2.fn.destroy.call(this), this._endTyping(true), this._deregisterHandlers(), clearTimeout(this._spellCorrectTimeout), this._focusOutside(), this.toolbar.destroy(), this._destroyUploadWidget(), this._destroyResizings(), n2.destroy(this.wrapper);
        }, _destroyResizings: function() {
          var e3 = this;
          e3._destroyElementResizing(), n2.ui.editor.ElementResizingFactory.current.dispose(e3), e3._destroyRowResizing(), n2.ui.editor.RowResizing.dispose(e3), e3._destroyColumnResizing(), n2.ui.editor.ColumnResizing.dispose(e3);
        }, _focusOutside: function() {
          n2.support.browser.msie && this.textarea && e2("<input style='position:fixed;left:1px;top:1px;width:1px;height:1px;font-size:0;border:0;opacity:0' />").appendTo(document.body).trigger("focus").trigger("blur").remove();
        }, _destroyUploadWidget: function() {
          var e3 = this;
          e3._uploadWidget && (e3._uploadWidget.destroy(), e3._uploadWidget = null);
        }, state: function(e3) {
          var t3, i3, a3 = x.defaultTools[e3], r3 = a3 && (a3.options.finder || a3.finder), o3 = n2.ui.editor.RangeUtils;
          return !!r3 && (t3 = this.getRange(), !(i3 = o3.textNodes(t3)).length && t3.collapsed && (i3 = [t3.startContainer]), r3.getFormat ? r3.getFormat(i3) : r3.isFormatted(i3));
        }, value: function(e3) {
          var i3 = this.body, a3 = n2.ui.editor, r3 = this.options, o3 = a3.Serializer.domToXhtml(i3, r3.serialization);
          if (e3 === t2) return o3;
          e3 != o3 && (a3.Serializer.htmlToDom(e3, i3, r3.deserialization), this.selectionRestorePoint = null, this.update(), this.toolbar.refreshTools());
        }, saveSelection: function(t3) {
          var i3 = (t3 = t3 || this.getRange()).commonAncestorContainer, a3 = this.body;
          (i3 == a3 || e2.contains(a3, i3)) && (this.selectionRestorePoint = new n2.ui.editor.RestorePoint(t3, a3));
        }, _focusBody: function() {
          var e3, t3 = this.body, i3 = this.wrapper && this.wrapper.find("iframe")[0], a3 = this.document.documentElement, r3 = n2._activeElement();
          !i3 && t3.scrollHeight > t3.clientHeight ? (e3 = t3.scrollTop, t3.focus(), t3.scrollTop = e3) : r3 != t3 && r3 != i3 && (e3 = a3.scrollTop, t3.focus(), a3.scrollTop = e3);
        }, restoreSelection: function() {
          this._focusBody(), this.selectionRestorePoint && this.selectRange(this.selectionRestorePoint.toRange());
        }, focus: function() {
          this.restoreSelection();
        }, update: function(e3) {
          e3 = e3 || this.options.encoded ? this.encodedValue() : this.value(), this.textarea ? (this.textarea.val(e3), this._togglePlaceholder(!e3.trim())) : this._oldValue = e3;
        }, encodedValue: function() {
          return n2.ui.editor.Dom.encode(this.value());
        }, createRange: function(e3) {
          return n2.ui.editor.RangeUtils.createRange(e3 || this.document);
        }, getSelection: function() {
          return n2.ui.editor.SelectionUtils.selectionFromDocument(this.document);
        }, selectRange: function(e3) {
          this._focusBody();
          var t3 = this.getSelection();
          t3.removeAllRanges(), t3.addRange(e3), this.saveSelection(e3);
        }, getRange: function() {
          var e3 = this.getSelection(), t3 = e3 && e3.rangeCount > 0 ? e3.getRangeAt(0) : this.createRange(), n3 = this.document;
          return t3.startContainer != n3 || t3.endContainer != n3 || t3.startOffset || t3.endOffset || (t3.setStart(this.body, 0), t3.collapse(true)), t3;
        }, _containsRange: function(e3) {
          var t3 = n2.ui.editor.Dom, i3 = this.body;
          return e3 && t3.isAncestorOrSelf(i3, e3.startContainer) && t3.isAncestorOrSelf(i3, e3.endContainer);
        }, _deleteSavedRange: function() {
          "_range" in this && delete this._range;
        }, selectedHtml: function() {
          return n2.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());
        }, paste: function(t3, i3) {
          this.focus();
          var a3 = new n2.ui.editor.InsertHtmlCommand(e2.extend({ range: this.getRange(), html: t3 }, i3));
          a3.editor = this, a3.exec();
        }, exec: function(e3, t3) {
          var n3, i3, a3 = this, r3 = null;
          if (!e3) throw new Error("kendoEditor.exec(): `name` parameter cannot be empty");
          if ("true" !== a3.body.getAttribute("contenteditable") && "print" !== e3 && "pdf" !== e3 && "exportAs" !== e3) return false;
          if (e3 = e3.toLowerCase(), a3.keyboard.isTypingInProgress() || (a3._focusBody(), a3.selectRange(a3._range || a3.getRange())), !(i3 = a3.toolbar.toolById(e3))) {
            for (var o3 in x.defaultTools) if (o3.toLowerCase() == e3) {
              i3 = x.defaultTools[o3];
              break;
            }
          }
          if (i3) {
            if (n3 = a3.getRange(), i3.command && (r3 = i3.command(s2({ range: n3, body: a3.body, immutables: !!a3.immutables }, t3))), a3.trigger("execute", { name: e3, command: r3 })) return;
            if (/^(undo|redo)$/i.test(e3)) a3.undoRedoStack[e3]();
            else if (r3 && (a3.execCommand(r3), r3.async)) return void (r3.change = a3._selectionChange.bind(a3));
            a3._selectionChange();
          }
        }, execCommand: function(e3) {
          e3.managesUndoRedo || this.undoRedoStack.push(e3), e3.editor = this, e3.exec();
        } });
        x.defaultTools = {}, n2.ui.plugin(x);
        var C = i2.extend({ init: function(e3) {
          this.options = e3;
        }, initialize: function(e3, t3) {
          e3.attr({ unselectable: "on", title: t3.title, "aria-label": t3.title });
        }, command: function(e3) {
          return new this.options.command(e3);
        }, update: e2.noop });
        C.exec = function(e3, t3, n3) {
          e3.exec(t3, { value: n3 });
        };
        var T = C.extend({ command: e2.noop, update: function(e3, t3, n3) {
          switch (this.options.name) {
            case "undo":
              e3.attr("disabled", !n3.canUndo());
              break;
            case "redo":
              e3.attr("disabled", !n3.canRedo());
          }
        } });
        f2.registerTool("separator", new C({ template: new h2({ template: f2.separatorTemplate }) })), f2.registerTool("undo", new T({ key: "Z", ctrl: true, template: new h2({ template: f2.buttonTemplate, title: "Undo" }) })), f2.registerTool("redo", new T({ key: "Y", ctrl: true, template: new h2({ template: f2.buttonTemplate, title: "Redo" }) }));
        var S = "\uFEFF", I = S;
        (o2.msie || o2.edge) && (I = S = "&nbsp;"), s2(n2.ui, { editor: { ToolTemplate: h2, EditorUtils: f2, Tool: C, emptyElementContent: S, emptyTableCellContent: I } }), n2.PDFMixin && (n2.PDFMixin.extend(x.prototype), x.prototype._drawPDF = function() {
          return n2.drawing.drawDOM(this.body, this.options.pdf);
        }, x.prototype.saveAsPDF = function() {
          var t3 = new e2.Deferred(), i3 = t3.promise(), a3 = { promise: i3 };
          if (!this.trigger("pdfExport", a3)) {
            var r3 = this.options.pdf;
            return this._drawPDF(t3).then(function(e3) {
              return n2.drawing.exportPDF(e3, r3);
            }).done(function(e3) {
              n2.saveAs({ dataURI: e3, fileName: r3.fileName, proxyURL: r3.proxyURL, proxyTarget: r3.proxyTarget, forceProxy: r3.forceProxy }), t3.resolve();
            }).fail(function(e3) {
              t3.reject(e3);
            }), i3;
          }
        });
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = e2.map, i2 = e2.extend, a2 = t2.support.browser, r2 = "style", o2 = "float", s2 = "cssFloat", l2 = "styleFloat", d2 = "class", u2 = "k-marker";
        function c2(e3) {
          var t3, n3, i3 = {};
          for (t3 = 0, n3 = e3.length; t3 < n3; t3++) i3[e3[t3]] = true;
          return i3;
        }
        var p2 = c2("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed".split(",")), h2 = "p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption".split(","), f2 = h2.concat(["ul", "ol", "li"]), m2 = c2(f2), g2 = c2("area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr".split(",")), v2 = "span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby".split(","), _2 = c2(v2), b2 = c2("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected".split(",")), k2 = ["hgroup", "ol", "ul", "dl", "object", "video", "audio", "table", "colgroup", "tbody", "thead", "tfoot", "tr", "select", "optgroup"], w = function(e3) {
          1 == e3.nodeType && e3.normalize();
        };
        a2.msie && a2.version >= 8 && (w = function(e3) {
          if (1 == e3.nodeType && e3.firstChild) {
            var t3 = e3.firstChild, n3 = t3;
            for (w(n3); n3 = n3.nextSibling; ) w(n3), 3 == n3.nodeType && 3 == t3.nodeType && (n3.nodeValue = t3.nodeValue + n3.nodeValue, z.remove(t3)), t3 = n3;
          }
        });
        var y, x = /^\s+$/, C = /^[\n\r\t]+$/, T = /rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/i, S = /\ufeff/g, I = /^(\s+|\ufeff)$/, D = "color,padding-left,padding-right,padding-top,padding-bottom,background-color,background-attachment,background-image,background-position,background-repeat,border-top-style,border-top-width,border-top-color,border-bottom-style,border-bottom-width,border-bottom-color,border-left-style,border-left-width,border-left-color,border-right-style,border-right-width,border-right-color,font-family,font-size,font-style,font-variant,font-weight,line-height".split(","), E = /[<>\&]/g, A = /[\u00A0-\u2666<>\&]/g, F = { 34: "quot", 38: "amp", 39: "apos", 60: "lt", 62: "gt", 160: "nbsp", 161: "iexcl", 162: "cent", 163: "pound", 164: "curren", 165: "yen", 166: "brvbar", 167: "sect", 168: "uml", 169: "copy", 170: "ordf", 171: "laquo", 172: "not", 173: "shy", 174: "reg", 175: "macr", 176: "deg", 177: "plusmn", 178: "sup2", 179: "sup3", 180: "acute", 181: "micro", 182: "para", 183: "middot", 184: "cedil", 185: "sup1", 186: "ordm", 187: "raquo", 188: "frac14", 189: "frac12", 190: "frac34", 191: "iquest", 192: "Agrave", 193: "Aacute", 194: "Acirc", 195: "Atilde", 196: "Auml", 197: "Aring", 198: "AElig", 199: "Ccedil", 200: "Egrave", 201: "Eacute", 202: "Ecirc", 203: "Euml", 204: "Igrave", 205: "Iacute", 206: "Icirc", 207: "Iuml", 208: "ETH", 209: "Ntilde", 210: "Ograve", 211: "Oacute", 212: "Ocirc", 213: "Otilde", 214: "Ouml", 215: "times", 216: "Oslash", 217: "Ugrave", 218: "Uacute", 219: "Ucirc", 220: "Uuml", 221: "Yacute", 222: "THORN", 223: "szlig", 224: "agrave", 225: "aacute", 226: "acirc", 227: "atilde", 228: "auml", 229: "aring", 230: "aelig", 231: "ccedil", 232: "egrave", 233: "eacute", 234: "ecirc", 235: "euml", 236: "igrave", 237: "iacute", 238: "icirc", 239: "iuml", 240: "eth", 241: "ntilde", 242: "ograve", 243: "oacute", 244: "ocirc", 245: "otilde", 246: "ouml", 247: "divide", 248: "oslash", 249: "ugrave", 250: "uacute", 251: "ucirc", 252: "uuml", 253: "yacute", 254: "thorn", 255: "yuml", 402: "fnof", 913: "Alpha", 914: "Beta", 915: "Gamma", 916: "Delta", 917: "Epsilon", 918: "Zeta", 919: "Eta", 920: "Theta", 921: "Iota", 922: "Kappa", 923: "Lambda", 924: "Mu", 925: "Nu", 926: "Xi", 927: "Omicron", 928: "Pi", 929: "Rho", 931: "Sigma", 932: "Tau", 933: "Upsilon", 934: "Phi", 935: "Chi", 936: "Psi", 937: "Omega", 945: "alpha", 946: "beta", 947: "gamma", 948: "delta", 949: "epsilon", 950: "zeta", 951: "eta", 952: "theta", 953: "iota", 954: "kappa", 955: "lambda", 956: "mu", 957: "nu", 958: "xi", 959: "omicron", 960: "pi", 961: "rho", 962: "sigmaf", 963: "sigma", 964: "tau", 965: "upsilon", 966: "phi", 967: "chi", 968: "psi", 969: "omega", 977: "thetasym", 978: "upsih", 982: "piv", 8226: "bull", 8230: "hellip", 8242: "prime", 8243: "Prime", 8254: "oline", 8260: "frasl", 8472: "weierp", 8465: "image", 8476: "real", 8482: "trade", 8501: "alefsym", 8592: "larr", 8593: "uarr", 8594: "rarr", 8595: "darr", 8596: "harr", 8629: "crarr", 8656: "lArr", 8657: "uArr", 8658: "rArr", 8659: "dArr", 8660: "hArr", 8704: "forall", 8706: "part", 8707: "exist", 8709: "empty", 8711: "nabla", 8712: "isin", 8713: "notin", 8715: "ni", 8719: "prod", 8721: "sum", 8722: "minus", 8727: "lowast", 8730: "radic", 8733: "prop", 8734: "infin", 8736: "ang", 8743: "and", 8744: "or", 8745: "cap", 8746: "cup", 8747: "int", 8756: "there4", 8764: "sim", 8773: "cong", 8776: "asymp", 8800: "ne", 8801: "equiv", 8804: "le", 8805: "ge", 8834: "sub", 8835: "sup", 8836: "nsub", 8838: "sube", 8839: "supe", 8853: "oplus", 8855: "otimes", 8869: "perp", 8901: "sdot", 8968: "lceil", 8969: "rceil", 8970: "lfloor", 8971: "rfloor", 9001: "lang", 9002: "rang", 9674: "loz", 9824: "spades", 9827: "clubs", 9829: "hearts", 9830: "diams", 338: "OElig", 339: "oelig", 352: "Scaron", 353: "scaron", 376: "Yuml", 710: "circ", 732: "tilde", 8194: "ensp", 8195: "emsp", 8201: "thinsp", 8204: "zwnj", 8205: "zwj", 8206: "lrm", 8207: "rlm", 8211: "ndash", 8212: "mdash", 8216: "lsquo", 8217: "rsquo", 8218: "sbquo", 8220: "ldquo", 8221: "rdquo", 8222: "bdquo", 8224: "dagger", 8225: "Dagger", 8240: "permil", 8249: "lsaquo", 8250: "rsaquo", 8364: "euro" }, z = { block: m2, inline: _2, findNodeIndex: function(e3, t3) {
          var n3 = 0;
          if (!e3) return -1;
          for (; e3 = e3.previousSibling; ) t3 && 3 == e3.nodeType || n3++;
          return n3;
        }, isDataNode: function(e3) {
          return e3 && null !== e3.nodeValue && null !== e3.data;
        }, isAncestorOf: function(t3, n3) {
          try {
            return !z.isDataNode(t3) && (e2.contains(t3, z.isDataNode(n3) ? n3.parentNode : n3) || n3.parentNode == t3);
          } catch (e3) {
            return false;
          }
        }, isAncestorOrSelf: function(e3, t3) {
          return z.isAncestorOf(e3, t3) || e3 == t3;
        }, findClosestAncestor: function(e3, t3) {
          if (z.isAncestorOf(e3, t3)) for (; t3 && t3.parentNode != e3; ) t3 = t3.parentNode;
          return t3;
        }, getAllComments: function(e3) {
          for (var t3 = [], n3 = document.createNodeIterator(e3, NodeFilter.SHOW_COMMENT, function() {
            return NodeFilter.FILTER_ACCEPT;
          }, false), i3 = n3.nextNode(); i3; ) t3.push(i3.nodeValue), i3 = n3.nextNode();
          return t3;
        }, getNodeLength: function(e3) {
          return z.isDataNode(e3) ? e3.length : e3.childNodes.length;
        }, splitDataNode: function(e3, t3) {
          for (var n3, i3 = e3.cloneNode(false), a3 = "", r3 = e3.nextSibling; r3 && 3 == r3.nodeType && r3.nodeValue; ) a3 += r3.nodeValue, n3 = r3, r3 = r3.nextSibling, z.remove(n3);
          e3.deleteData(t3, e3.length), i3.deleteData(0, t3), i3.nodeValue += a3, z.insertAfter(i3, e3);
        }, attrEquals: function(e3, n3) {
          for (var i3 in n3) {
            var a3 = e3[i3];
            if (i3 == o2 && (a3 = e3[t2.support.cssFloat ? s2 : l2]), "object" == typeof a3) {
              if (!z.attrEquals(a3, n3[i3])) return false;
            } else if (a3 != n3[i3]) return false;
          }
          return true;
        }, blockParentOrBody: function(e3) {
          return z.parentOfType(e3, f2) || e3.ownerDocument.body;
        }, blockParents: function(t3) {
          var n3, i3, a3 = [];
          for (n3 = 0, i3 = t3.length; n3 < i3; n3++) {
            var r3 = z.parentOfType(t3[n3], z.blockElements);
            r3 && e2.inArray(r3, a3) < 0 && a3.push(r3);
          }
          return a3;
        }, windowFromDocument: function(e3) {
          return e3.defaultView || e3.parentWindow;
        }, normalize: w, blockElements: f2, nonListBlockElements: h2, inlineElements: v2, empty: p2, fillAttrs: b2, nodeTypes: { ELEMENT_NODE: 1, ATTRIBUTE_NODE: 2, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, ENTITY_REFERENCE_NODE: 5, ENTITY_NODE: 6, PROCESSING_INSTRUCTION_NODE: 7, COMMENT_NODE: 8, DOCUMENT_NODE: 9, DOCUMENT_TYPE_NODE: 10, DOCUMENT_FRAGMENT_NODE: 11, NOTATION_NODE: 12 }, toHex: function(e3) {
          var t3 = T.exec(e3);
          return t3 ? "#" + n2(t3.slice(1), function(e4) {
            return (e4 = parseInt(e4, 10).toString(16)).length > 1 ? e4 : "0" + e4;
          }).join("") : e3;
        }, encode: function(e3, t3) {
          var n3 = !t3 || t3.entities ? A : E;
          return e3.replace(n3, function(e4) {
            var t4 = e4.charCodeAt(0), n4 = F[t4];
            return n4 ? "&" + n4 + ";" : e4;
          });
        }, isBom: function(e3) {
          return e3 && 3 === e3.nodeType && /^[\ufeff]+$/.test(e3.nodeValue);
        }, stripBom: function(e3) {
          return (e3 || "").replace(S, "");
        }, stripBomNode: function(e3) {
          z.isBom(e3) && e3.parentNode.removeChild(e3);
        }, insignificant: function(e3) {
          var t3 = e3.attributes;
          return "k-marker" == e3.className || z.is(e3, "br") && ("k-br" == e3.className || t3._moz_dirty || t3._moz_editor_bogus_node) || z.is(e3, "span") && "k-br" == e3.className;
        }, tableCell: function(e3) {
          return z.is(e3, "td") || z.is(e3, "th");
        }, significantNodes: function(t3) {
          return e2.grep(t3, function(e3) {
            var t4 = z.name(e3);
            return "br" != t4 && (!z.insignificant(e3) && (!z.emptyTextNode(e3) && !(1 == e3.nodeType && !p2[t4] && z.emptyNode(e3))));
          });
        }, emptyTextNode: function(e3) {
          return e3 && 3 == e3.nodeType && I.test(e3.nodeValue);
        }, emptyNode: function(e3) {
          return 1 == e3.nodeType && !z.significantNodes(e3.childNodes).length;
        }, name: function(e3) {
          return e3.nodeName.toLowerCase();
        }, significantChildNodes: function(t3) {
          return e2.grep(t3.childNodes, function(e3) {
            return 3 != e3.nodeType || !z.isWhitespace(e3);
          });
        }, lastTextNode: function(e3) {
          var t3 = null;
          if (3 == e3.nodeType) return e3;
          for (var n3 = e3.lastChild; n3; n3 = n3.previousSibling) if (t3 = z.lastTextNode(n3)) return t3;
          return t3;
        }, is: function(e3, t3) {
          return e3 && z.name(e3) == t3;
        }, isMarker: function(e3) {
          return e3.className == u2;
        }, isWhitespace: function(e3) {
          return x.test(e3.nodeValue);
        }, allowsTextContent: function(e3) {
          var t3 = true;
          return k2.every(function(n3) {
            return !z.is(e3, n3) || (t3 = false, false);
          }), t3;
        }, allWhitespaceContent: function(e3) {
          for (var t3 = e3.firstChild; t3 && z.isWhitespace(t3); ) t3 = t3.nextSibling;
          return !t3;
        }, isEmptyspace: function(e3) {
          return C.test(e3.nodeValue);
        }, htmlIndentSpace: function(t3) {
          if (!z.isDataNode(t3) || !z.isWhitespace(t3)) return false;
          if (C.test(t3.nodeValue)) return true;
          var n3 = function(e3, t4) {
            for (; e3[t4]; ) if (e3 = e3[t4], z.significantNodes([e3]).length > 0) return e3;
          }, i3 = t3.parentNode, a3 = n3(t3, "previousSibling"), r3 = n3(t3, "nextSibling");
          if (S.test(t3.nodeValue)) return !(!a3 && !r3);
          if (e2(i3).is("tr,tbody,thead,tfoot,table,ol,ul")) return true;
          if (z.isBlock(i3) || z.is(i3, "body")) {
            var o3 = a3 && z.isBlock(a3), s3 = r3 && z.isBlock(r3);
            if (!r3 && o3 || !a3 && s3 || o3 && s3) return true;
          }
          return false;
        }, isBlock: function(e3) {
          return m2[z.name(e3)];
        }, isSelfClosing: function(e3) {
          return g2[z.name(e3)];
        }, isEmpty: function(e3) {
          return p2[z.name(e3)];
        }, isInline: function(e3) {
          return _2[z.name(e3)];
        }, isBr: function(e3) {
          return "br" == z.name(e3);
        }, list: function(e3) {
          var t3 = e3 ? z.name(e3) : "";
          return "ul" == t3 || "ol" == t3 || "dl" == t3;
        }, scrollContainer: function(e3) {
          var t3 = z.windowFromDocument(e3), n3 = (t3.contentWindow || t3).document || t3.ownerDocument || t3;
          return n3 = "BackCompat" == n3.compatMode ? n3.body : n3.scrollingElement || n3.documentElement;
        }, scrollTo: function(t3, n3) {
          var i3, a3, r3, o3, s3 = t3.ownerDocument, l3 = z.windowFromDocument(s3).innerHeight, d3 = z.scrollContainer(s3);
          z.isDataNode(t3) ? n3 ? (o3 = z.create(s3, "span", { innerHTML: "&#xfeff;" }), z.insertBefore(o3, t3), i3 = e2(o3)) : i3 = e2(t3.parentNode) : i3 = e2(t3), a3 = i3.offset().top, r3 = i3[0].offsetHeight, !n3 && r3 || (r3 = parseInt(i3.css("line-height"), 10) || Math.ceil(1.2 * parseInt(i3.css("font-size"), 10)) || 15), o3 && z.remove(o3), r3 + a3 > d3.scrollTop + l3 && (d3.scrollTop = r3 + a3 - l3);
        }, persistScrollTop: function(e3) {
          y = z.scrollContainer(e3).scrollTop;
        }, offset: function(e3, t3) {
          for (var n3 = { top: e3.offsetTop, left: e3.offsetLeft }, i3 = e3.offsetParent; i3 && (!t3 || z.isAncestorOf(t3, i3)); ) n3.top += i3.offsetTop, n3.left += i3.offsetLeft, i3 = i3.offsetParent;
          return n3;
        }, restoreScrollTop: function(e3) {
          "number" == typeof y && (z.scrollContainer(e3).scrollTop = y, y = void 0);
        }, insertAt: function(e3, t3, n3) {
          e3.insertBefore(t3, e3.childNodes[n3] || null);
        }, insertBefore: function(e3, t3) {
          return t3.parentNode ? t3.parentNode.insertBefore(e3, t3) : t3;
        }, insertAfter: function(e3, t3) {
          return t3.parentNode.insertBefore(e3, t3.nextSibling);
        }, remove: function(e3) {
          e3.parentNode && e3.parentNode.removeChild(e3);
        }, removeChildren: function(e3) {
          for (; e3.firstChild; ) e3.removeChild(e3.firstChild);
        }, removeTextSiblings: function(e3) {
          for (var t3 = e3.parentNode; e3.nextSibling && 3 == e3.nextSibling.nodeType; ) t3.removeChild(e3.nextSibling);
          for (; e3.previousSibling && 3 == e3.previousSibling.nodeType; ) t3.removeChild(e3.previousSibling);
        }, trim: function(e3) {
          for (var t3 = e3.childNodes.length - 1; t3 >= 0; t3--) {
            var n3 = e3.childNodes[t3];
            z.isDataNode(n3) ? z.stripBom(n3.nodeValue).length || z.remove(n3) : n3.className != u2 && (z.trim(n3), (!z.isEmpty(n3) && 0 === n3.childNodes.length || z.isBlock(n3) && z.allWhitespaceContent(n3)) && z.remove(n3));
          }
          return e3;
        }, closest: function(e3, t3) {
          for ("string" == typeof t3 && (t3 = [t3]); e3 && t3.indexOf(z.name(e3)) < 0; ) e3 = e3.parentNode;
          return e3;
        }, closestBy: function(e3, t3, n3) {
          for (; e3 && !t3(e3); ) {
            if (n3 && n3(e3)) return null;
            e3 = e3.parentNode;
          }
          return e3;
        }, sibling: function(e3, t3) {
          do {
            e3 = e3[t3];
          } while (e3 && 1 != e3.nodeType);
          return e3;
        }, next: function(e3) {
          return z.sibling(e3, "nextSibling");
        }, prev: function(e3) {
          return z.sibling(e3, "previousSibling");
        }, parentOfType: function(e3, t3) {
          do {
            e3 = e3.parentNode;
          } while (e3 && !z.ofType(e3, t3));
          return e3;
        }, ofType: function(t3, n3) {
          return e2.inArray(z.name(t3), n3) >= 0;
        }, changeTag: function(e3, t3, n3) {
          var i3, a3, o3, s3, l3, u3 = z.create(e3.ownerDocument, t3), c3 = e3.attributes;
          if (!n3) for (i3 = 0, a3 = c3.length; i3 < a3; i3++) (l3 = c3[i3]).specified && (o3 = l3.nodeName, s3 = l3.nodeValue, o3 == d2 ? u3.className = s3 : o3 == r2 ? u3.style.cssText = e3.style.cssText : u3.setAttribute(o3, s3));
          for (; e3.firstChild; ) u3.appendChild(e3.firstChild);
          return z.insertBefore(u3, e3), z.remove(e3), u3;
        }, editableParent: function(e3) {
          for (; e3 && (3 == e3.nodeType || "true" !== e3.contentEditable); ) e3 = e3.parentNode;
          return e3;
        }, wrap: function(e3, t3) {
          return z.insertBefore(t3, e3), t3.appendChild(e3), t3;
        }, unwrap: function(e3) {
          for (var t3 = e3.parentNode; e3.firstChild; ) t3.insertBefore(e3.firstChild, e3);
          t3.removeChild(e3);
        }, wrapper: function(t3) {
          var n3 = z.closestBy(t3, function(e3) {
            return e3.parentNode && z.significantNodes(e3.parentNode.childNodes).length > 1;
          });
          return e2(n3).is("body,.k-editor") ? void 0 : n3;
        }, create: function(e3, t3, n3) {
          return z.attr(e3.createElement(t3), n3);
        }, createEmptyNode: function(e3, t3, n3) {
          var i3 = z.attr(e3.createElement(t3), n3);
          return i3.innerHTML = "\uFEFF", i3;
        }, attr: function(e3, t3) {
          for (var n3 in (t3 = i2({}, t3)) && r2 in t3 && (z.style(e3, t3.style), delete t3.style), t3) null === t3[n3] ? (e3.removeAttribute(n3), delete t3[n3]) : "className" == n3 && (e3[n3] = t3[n3]);
          return i2(e3, t3);
        }, mergeAttributes: function(t3, n3, i3) {
          t3.attributes.length && e2.each(t3.attributes, function() {
            "contenteditable" === this.name || i3 && this.name === r2 || e2(n3).attr(this.name, this.value), i3 && this.name === r2 && e2.each(t3.style, function() {
              n3.style[this] = t3.style[this];
            });
          });
        }, style: function(t3, n3) {
          e2(t3).css(n3 || {});
        }, unstyle: function(e3, n3) {
          for (var i3 in n3) i3 == o2 && (i3 = t2.support.cssFloat ? s2 : l2), e3.style[i3] = "";
          "" === e3.style.cssText && e3.removeAttribute(r2);
        }, inlineStyle: function(t3, i3, r3) {
          var o3, s3 = e2(z.create(t3.ownerDocument, i3, r3));
          return t3.appendChild(s3[0]), o3 = n2(D, function(e3) {
            return a2.msie && "line-height" == e3 && "1px" == s3.css(e3) ? "line-height:1.5" : e3 + ":" + s3.css(e3);
          }).join(";"), s3.remove(), o3;
        }, getEffectiveBackground: function(e3) {
          var t3 = e3.css("background-color") || "";
          return t3.indexOf("rgba(0, 0, 0, 0") < 0 && "transparent" !== t3 ? t3 : "html" === e3[0].tagName.toLowerCase() ? "Window" : z.getEffectiveBackground(e3.parent());
        }, innerText: function(e3) {
          var t3 = e3.innerHTML;
          return t3 = (t3 = t3.replace(/<!--(.|\s)*?-->/gi, "")).replace(/<\/?[^>]+?\/?>/gm, "");
        }, removeClass: function(e3, n3) {
          var i3, a3, r3 = " " + e3.className + " ", o3 = n3.split(" ");
          for (i3 = 0, a3 = o3.length; i3 < a3; i3++) r3 = r3.replace(" " + o3[i3] + " ", " ");
          (r3 = t2.trim(r3)).length ? e3.className = r3 : e3.removeAttribute(d2);
        }, commonAncestor: function() {
          var e3, t3, n3, i3, a3, r3 = arguments, o3 = arguments.length, s3 = [], l3 = 1 / 0, d3 = null;
          if (!o3) return null;
          if (1 == o3) return arguments[0];
          for (e3 = 0; e3 < o3; e3++) {
            for (t3 = [], n3 = r3[e3]; n3; ) t3.push(n3), n3 = n3.parentNode;
            s3.push(t3.reverse()), l3 = Math.min(l3, t3.length);
          }
          if (1 == o3) return s3[0][0];
          for (e3 = 0; e3 < l3; e3++) {
            for (i3 = s3[0][e3], a3 = 1; a3 < o3; a3++) if (i3 != s3[a3][e3]) return d3;
            d3 = i3;
          }
          return d3;
        }, closestSplittableParent: function(t3) {
          var i3;
          (i3 = 1 == t3.length ? z.parentOfType(t3[0], ["ul", "ol"]) : z.commonAncestor.apply(null, t3)) || (i3 = z.parentOfType(t3[0], ["p", "td"]) || t3[0].ownerDocument.body), z.isInline(i3) && (i3 = z.blockParentOrBody(i3));
          var a3 = n2(t3, z.editableParent), r3 = z.commonAncestor(a3)[0];
          return e2.contains(i3, r3) && (i3 = r3), i3;
        }, closestEditable: function(t3, n3) {
          var i3, a3 = z.editableParent(t3);
          return ((i3 = z.ofType(t3, n3) ? t3 : z.parentOfType(t3, n3)) && a3 && e2.contains(i3, a3) || !i3 && a3) && (i3 = a3), i3;
        }, closestEditableOfType: function(t3, n3) {
          var i3 = z.closestEditable(t3, n3);
          if (i3 && z.ofType(i3, n3) && !e2(i3).is(".k-editor")) return i3;
        }, filter: function(e3, t3, n3) {
          return z.filterBy(t3, function(t4) {
            return z.name(t4) == e3;
          }, n3);
        }, filterBy: function(e3, t3, n3) {
          for (var i3, a3 = 0, r3 = e3.length, o3 = []; a3 < r3; a3++) ((i3 = t3(e3[a3])) && !n3 || !i3 && n3) && o3.push(e3[a3]);
          return o3;
        }, ensureTrailingBreaks: function(t3) {
          var n3 = e2(t3).find("p,td,th"), i3 = n3.length, a3 = 0;
          if (i3) for (; a3 < i3; a3++) z.ensureTrailingBreak(n3[a3]);
          else z.ensureTrailingBreak(t3);
        }, removeTrailingBreak: function(t3) {
          e2(t3).find("br[type=_moz],.k-br").remove();
        }, ensureTrailingBreak: function(e3) {
          z.removeTrailingBreak(e3);
          var t3, n3 = e3.lastChild, i3 = n3 && z.name(n3);
          (!i3 || "br" != i3 && "img" != i3 || "br" == i3 && "k-br" != n3.className) && ((t3 = e3.ownerDocument.createElement("br")).className = "k-br", e3.appendChild(t3));
        }, reMapTableColumns: function(e3, t3) {
          z._mapColIndices(e3, t3);
        }, clearTableMappings: function(t3, n3) {
          e2(t3).find("[" + n3 + "]").removeAttr(n3);
        }, _mapColIndices: function(e3, t3) {
          for (var n3 = {}, i3 = 0; i3 < e3.rows.length; i3++) for (var a3 = e3.rows[i3].cells, r3 = 0, o3 = 0; o3 < a3.length; o3++, r3++) {
            var s3 = a3[o3];
            if (s3.rowSpan > 1 && this._mapColspan(s3, i3, r3, n3), n3[i3]) for (; n3[i3][r3]; ) r3++;
            s3.setAttribute(t3, r3), s3.colSpan > 1 && (r3 = r3 + s3.colSpan - 1);
          }
        }, _mapColspan: function(e3, t3, n3, i3) {
          for (var a3, r3 = e3.rowSpan, o3 = e3.colSpan, s3 = 0; s3 < o3; s3++) {
            a3 = n3 + s3;
            for (var l3 = t3 + 1; l3 < t3 + r3; l3++) {
              if (i3[l3] || (i3[l3] = {}, i3[l3].length = 0), i3[t3]) for (; i3[t3][a3]; ) a3++;
              i3[l3][a3] = true, i3[l3].length++;
            }
          }
        }, associateWithIds: function(e3) {
          var t3, n3, i3 = this, a3 = 0, r3 = e3.rows, o3 = r3.length, s3 = [], l3 = [];
          if (e3.tHead) a3 = (t3 = e3.tHead.rows).length;
          else for (a3 = i3._getNumberOfHeaderRows(e3), t3 = [], n3 = 0; n3 < a3; n3++) t3.push(r3[n3]);
          for (n3 = 0; n3 < a3; n3++) s3.push([]);
          for (n3 = 0; n3 < o3; n3++) l3.push([]);
          i3._generateIdsForColumns(s3, t3), i3._generateIdsForRows(s3, l3, a3, r3), i3._assignIds(s3, l3, a3, r3);
        }, _generateIdsForColumns: function(e3, t3) {
          var n3, i3, a3, r3, o3, s3, l3, d3, u3, c3, p3 = (/* @__PURE__ */ new Date()).getTime(), h3 = t3 ? t3.length : 0;
          for (l3 = 0; l3 < h3; l3++) for (n3 = t3[l3].cells, a3 = 0, d3 = 0; d3 < n3.length; d3++) {
            for (r3 = "table" + l3 + d3 + ++p3, (i3 = n3[d3]).setAttribute("id", r3), o3 = i3.getAttribute("colspan") || 1, s3 = i3.getAttribute("rowspan") || 1; e3[l3][d3 + a3]; ) a3 += 1;
            for (u3 = 0; u3 < s3; u3++) for (c3 = 0; c3 < o3; c3++) e3[l3 + u3][d3 + a3 + c3] = r3;
          }
        }, _generateIdsForRows: function(t3, n3, i3, a3) {
          var r3, o3, s3, l3, d3, u3, c3, p3, h3, f3, m3, g3, v3, _3 = (/* @__PURE__ */ new Date()).getTime(), b3 = a3.length, k3 = function(e3) {
            v3.push(e3[g3]);
          };
          for (p3 = i3; p3 < b3; p3++) for (r3 = a3[p3], o3 = e2(r3.cells).filter("th"), l3 = 0, h3 = 0; h3 < o3.length; h3++) {
            for (d3 = "table" + p3 + h3 + ++_3, (s3 = o3[h3]).setAttribute("id", d3), u3 = s3.getAttribute("colspan") || 1, c3 = s3.getAttribute("rowspan") || 1; n3[p3][h3 + l3]; ) l3 += 1;
            for (f3 = 0; f3 < c3; f3++) for (m3 = 0; m3 < u3; m3++) n3[p3 + f3][h3 + l3 + m3] = d3;
            g3 = s3.getAttribute("col-index"), v3 = [], t3.forEach(k3), v3 = v3.filter(this._onlyUnique), s3.setAttribute("headers", v3.join(" ").trim());
          }
        }, _assignIds: function(t3, n3, i3, a3) {
          var r3, o3, s3, l3, d3, u3, c3, p3 = a3.length, h3 = function(e3) {
            c3.push(e3[u3]);
          };
          for (l3 = i3; l3 < p3; l3++) for (r3 = a3[l3], o3 = e2(r3.cells).filter("td"), d3 = 0; d3 < o3.length; d3++) s3 = o3[d3], u3 = s3.getAttribute("col-index"), c3 = n3[l3].slice(), t3.forEach(h3), c3 = c3.filter(this._onlyUnique), s3.setAttribute("headers", c3.join(" ").trim());
        }, _getNumberOfColumns: function(t3) {
          var n3, i3, a3, r3 = e2(t3).find("th, td"), o3 = 0;
          for (i3 = 0; i3 < r3.length; i3++) n3 = r3[i3], (a3 = Number(n3.getAttribute("col-index")) + 1) > o3 && (o3 = a3);
          return o3;
        }, _getNumberOfHeaderColumns: function(e3, t3) {
          var n3, i3, a3, r3, o3, s3 = e3.rows, l3 = 0;
          for (a3 = t3; a3 < s3.length; a3++) for (i3 = s3[a3], r3 = 0; r3 < i3.cells.length; r3++) o3 = i3.cells[r3], this.is(o3, "th") && (n3 = Number(o3.getAttribute("col-index")) + 1) > l3 && (l3 = n3);
          return l3;
        }, _getNumberOfHeaderRows: function(e3) {
          var t3, n3, i3, a3, r3 = e3.rows, o3 = e3.tHead && e3.tHead.rows ? e3.tHead.rows.length : 0;
          if (0 === o3) for (a3 = (n3 = r3[0]).cells && n3.cells.length; n3 && a3 && this.is(n3.cells[0], "th"); ) {
            for (t3 = 0; t3 < a3; t3++) i3 = n3 ? n3.cells[t3] : null, this.is(i3, "th") || (n3 = null);
            n3 && (o3 += 1, a3 = (n3 = this.next(n3)) && n3.cells && n3.cells.length);
          }
          return o3;
        }, _onlyUnique: function(e3, t3, n3) {
          return n3.indexOf(e3) === t3;
        } };
        t2.ui.editor.Dom = z;
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.editor, a2 = i2.Dom, r2 = e2.extend, o2 = "xx-small,x-small,small,medium,large,x-large,xx-large".split(","), s2 = /"/g, l2 = /<br[^>]*>/i, d2 = /^\d+(\.\d*)?(px)?$/i, u2 = /<p>(?:&nbsp;)?<\/p>/i, c2 = /(\*?[-#\/\*\\\w]+(?:\[[0-9a-z_-]+\])?)\s*:\s*((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/g, p2 = /^sizzle-\d+/i, h2 = /^k-script-/i, f2 = /\s*onerror\s*=\s*(?:'|")?([^'">\s]*)(?:'|")?/i, m2 = '<br class="k-br">', g2 = "<span class='k-br'>\uFEFF</span>", v2 = document.createElement("div");
        v2.innerHTML = " <hr>";
        var _2 = 3 === v2.firstChild.nodeType;
        v2 = null;
        var b2 = n2.isFunction, k2 = { toEditableHtml: function(e3) {
          return (e3 || "").replace(/<!\[CDATA\[(.*)?\]\]>/g, "<!--[CDATA[$1]]-->").replace(/<(\/?)script([^>]*)>/gi, "<$1k:script$2>").replace(/<img([^>]*)>/gi, function(e4) {
            return e4.replace(f2, "");
          }).replace(/(<\/?img[^>]*>)[\r\n\v\f\t ]+/gi, "$1").replace(/^<(table|blockquote)/i, m2 + "<$1").replace(/^[\s]*(&nbsp;|\u00a0)/i, "$1").replace(/<\/(table|blockquote)>$/i, "</$1>" + m2);
        }, _toEditableImmutables: function(t3) {
          for (var n3 = i2.Immutables.immutable, r3 = a2.emptyTextNode, o3 = t3.firstChild, s3 = t3.lastChild; r3(o3); ) o3 = o3.nextSibling;
          for (; r3(s3); ) s3 = s3.previousSibling;
          o3 && n3(o3) && e2(g2).prependTo(t3), s3 && n3(s3) && e2(g2).appendTo(t3);
        }, _fillEmptyElements: function(t3) {
          e2(t3).find("p,td").each(function() {
            var t4 = e2(this);
            if (/^\s*$/g.test(t4.text()) && !t4.find("img,input").length) {
              for (var i3 = this; i3.children[0] && 3 != i3.children[0].nodeType; ) i3 = i3.children[0];
              1 != i3.nodeType || a2.empty[a2.name(i3)] || (a2.is(i3, "td") ? i3.innerHTML = n2.ui.editor.emptyTableCellContent : i3.innerHTML = n2.ui.editor.emptyElementContent);
            }
          });
        }, _removeSystemElements: function(t3) {
          e2(".k-paste-container", t3).remove();
        }, _resetOrderedLists: function(e3) {
          var t3, n3, i3, a3 = e3.getElementsByTagName("ol");
          for (t3 = 0; t3 < a3.length; t3++) i3 = (n3 = a3[t3]).getAttribute("start"), n3.setAttribute("start", 1), i3 ? n3.setAttribute("start", i3) : n3.removeAttribute(i3);
        }, _preventScriptExecution: function(t3) {
          e2(t3).find("*").each(function() {
            var e3, t4, n3, i3, a3 = this.attributes, r3 = [];
            for (t4 = 0, n3 = a3.length; t4 < n3; t4++) i3 = (e3 = a3[t4]).nodeName, e3.specified && /^on/i.test(i3) && (this.setAttribute("k-script-" + i3, e3.value), r3.push(i3));
            for (t4 = 0, n3 = r3.length; t4 < n3; t4++) this.removeAttribute(r3[t4]);
          });
        }, htmlToDom: function(t3, i3, r3) {
          var o3 = n2.support.browser.msie, s3 = r3 || {}, l3 = s3.immutables;
          return t3 = k2.toEditableHtml(t3), b2(s3.custom) && (t3 = s3.custom(t3) || t3), i3.innerHTML = t3, l3 && l3.deserialize(i3), o3 && (a2.normalize(i3), k2._resetOrderedLists(i3)), k2._preventScriptExecution(i3), k2._fillEmptyElements(i3), k2._removeSystemElements(i3), k2._toEditableImmutables(i3), e2("table", i3).addClass("k-table"), i3;
        }, domToXhtml: function(r3, f3) {
          var m3 = [], g3 = f3 && f3.immutables;
          function v3(t3) {
            return e2.grep(t3, function(e3) {
              return "style" != e3.name;
            });
          }
          function b3(e3, t3) {
            m3.push("<" + t3), x(e3), m3.push(">");
          }
          var k3 = { iframe: { start: function(e3) {
            b3(e3, "iframe");
          }, end: function() {
            m3.push("</iframe>");
          } }, "k:script": { start: function(e3) {
            b3(e3, "script");
          }, end: function() {
            m3.push("<\/script>");
          }, skipEncoding: true }, span: { canOptimize: true, semantic: true, start: function(t3) {
            var n3 = t3.style, i3 = v3(y(t3));
            i3.length && (m3.push("<span"), x(t3, i3), m3.push(">")), "underline" == n3.textDecoration && m3.push("<u>");
            var r4 = [];
            if (n3.color && r4.push('color="' + a2.toHex(n3.color) + '"'), n3.fontFamily && r4.push('face="' + n3.fontFamily + '"'), n3.fontSize) {
              var s3 = e2.inArray(n3.fontSize, o2);
              r4.push('size="' + s3 + '"');
            }
            for (var l3 = [], d3 = ["text-decoration", "color", "font"], u3 = 0; u3 < n3.length; u3++) {
              var c3 = n3[u3];
              d3.filter(function(e3) {
                return c3.startsWith(e3);
              }).length <= 0 && l3.push(c3 + ": " + n3[c3]);
            }
            l3.length && r4.push('style="' + l3.join(";") + '"'), r4.length && m3.push("<font " + r4.join(" ") + ">");
          }, end: function(e3) {
            var t3 = e3.style;
            (t3.color || t3.fontFamily || t3.fontSize) && m3.push("</font>"), "underline" == t3.textDecoration && m3.push("</u>"), v3(y(e3)).length && m3.push("</span>");
          } }, strong: { semantic: true, start: function(e3) {
            b3(e3, "b");
          }, end: function() {
            m3.push("</b>");
          } }, em: { semantic: true, start: function(e3) {
            b3(e3, "i");
          }, end: function() {
            m3.push("</i>");
          } }, b: { semantic: false, start: function(e3) {
            b3(e3, "strong");
          }, end: function() {
            m3.push("</strong>");
          } }, i: { semantic: false, start: function(e3) {
            b3(e3, "em");
          }, end: function() {
            m3.push("</em>");
          } }, u: { semantic: false, start: function(t3) {
            m3.push("<span");
            var n3 = y(t3), i3 = e2(n3).filter(function(e3, t4) {
              return "style" == t4.name;
            })[0], a3 = { nodeName: "style", value: "text-decoration:underline;" };
            i3 && (a3.value = i3.value, /text-decoration/i.test(a3.value) || (a3.value = "text-decoration:underline;" + a3.value), n3.splice(e2.inArray(i3, n3), 1)), n3.push(a3), x(t3, n3), m3.push(">");
          }, end: function() {
            m3.push("</span>");
          } }, font: { canOptimize: true, semantic: false, start: function(e3) {
            m3.push('<span style="');
            var t3 = e3.getAttribute("color"), n3 = o2[e3.getAttribute("size")], i3 = e3.getAttribute("face");
            t3 && (m3.push("color:"), m3.push(a2.toHex(t3)), m3.push(";")), i3 && (m3.push("font-family:"), m3.push(i3), m3.push(";")), n3 && (m3.push("font-size:"), m3.push(n3), m3.push(";")), m3.push('">');
          }, end: function() {
            m3.push("</span>");
          } } };
          function w(e3) {
            var t3, i3 = function(e4) {
              var t4, i4, r4, o3 = n2.trim, l3 = o3(e4), d3 = [];
              for (c2.lastIndex = 0; t4 = c2.exec(l3); ) i4 = o3(t4[1].toLowerCase()), r4 = o3(t4[2]), "font-size-adjust" != i4 && "font-stretch" != i4 && (i4.indexOf("color") >= 0 ? r4 = a2.toHex(r4) : i4.indexOf("font") >= 0 ? r4 = r4.replace(s2, "'") : /\burl\(/g.test(r4) && (r4 = r4.replace(s2, "")), d3.push({ property: i4, value: r4 }));
              return d3;
            }(e3);
            for (t3 = 0; t3 < i3.length; t3++) m3.push(i3[t3].property), m3.push(":"), m3.push(i3[t3].value), m3.push(";");
          }
          function y(e3) {
            var t3, n3, i3, r4, o3, s3, l3 = [], d3 = e3.attributes;
            for (n3 = 0, i3 = d3.length; n3 < i3; n3++) r4 = (t3 = d3[n3]).nodeName, o3 = t3.value, s3 = t3.specified, "value" == r4 && "value" in e3 && e3.value || "type" == r4 && "text" == o3 ? s3 = true : "class" != r4 || o3 ? p2.test(r4) || "complete" == r4 || "altHtml" == r4 || "start" == r4 && a2.is(e3, "ul") || "start" == r4 && a2.is(e3, "ol") && "1" == o3 || r4.indexOf("_moz") >= 0 ? s3 = false : h2.test(r4) ? s3 = !!f3.scripts : "data-role" == r4 && "resizable" == o3 && (a2.is(e3, "tr") || a2.is(e3, "td")) && (s3 = false) : s3 = false, s3 && l3.push(t3);
            return l3;
          }
          function x(i3, r4) {
            var o3, s3, l3, u3, c3;
            if (r4 = r4 || y(i3), a2.is(i3, "img")) {
              var p3 = i3.style.width, f4 = i3.style.height, g4 = e2(i3);
              p3 && d2.test(p3) && (g4.attr("width", parseInt(p3, 10)), a2.unstyle(i3, { width: t2 })), f4 && d2.test(f4) && (g4.attr("height", parseInt(f4, 10)), a2.unstyle(i3, { height: t2 }));
            }
            if (r4.length) for (o3 = 0, s3 = r4.length; o3 < s3; o3++) u3 = (l3 = r4[o3]).nodeName, c3 = l3.value, "class" == u3 && "k-table" == c3 || (u3 = u3.replace(h2, ""), m3.push(" "), m3.push(u3), m3.push('="'), "style" == u3 ? w(c3 || i3.style.cssText) : "src" == u3 || "href" == u3 ? m3.push(n2.htmlEncode(i3.getAttribute(u3, 2))) : m3.push(a2.fillAttrs[u3] ? u3 : c3), m3.push('"'));
          }
          function C(e3, t3, n3) {
            for (var i3 = e3.firstChild; i3; i3 = i3.nextSibling) S(i3, t3, n3);
          }
          function T(e3) {
            return e3.nodeValue.replace(/\ufeff/g, "");
          }
          function S(t3, n3, r4) {
            var o3, s3, l3, d3, u3, c3, p3 = t3.nodeType;
            if (g3 && i2.Immutables.immutable(t3)) m3.push(g3.serialize(t3));
            else if (1 == p3) {
              if (o3 = a2.name(t3), (c3 = e2(t3)).hasClass("k-element-resize-handle-wrapper") || c3.hasClass("k-column-resize-handle-wrapper") || c3.hasClass("k-row-resize-handle-wrapper")) return;
              if (!o3 || a2.insignificant(t3)) return;
              if (!f3.scripts && ("script" == o3 || "k:script" == o3)) return;
              if (s3 = k3[o3]) {
                if (s3.canOptimize && f3.optimizeTags && function(e3) {
                  return 0 === e3.attributes.length;
                }(t3)) return void C(t3, false, s3.skipEncoding);
                if (void 0 === s3.semantic || f3.semantic ^ s3.semantic) return s3.start(t3), C(t3, false, s3.skipEncoding), void s3.end(t3);
              }
              m3.push("<"), m3.push(o3), x(t3), a2.empty[o3] ? m3.push(" />") : (m3.push(">"), C(t3, n3 || a2.is(t3, "pre")), m3.push("</"), m3.push(o3), m3.push(">"));
            } else if (3 == p3) {
              if (function(e3) {
                if (a2.isBom(e3)) {
                  do {
                    if (e3 = e3.parentNode, a2.is(e3, "td") && 1 === e3.childNodes.length) return true;
                    if (1 !== e3.childNodes.length) return false;
                  } while (!a2.isBlock(e3));
                  return true;
                }
                return false;
              }(t3)) return void m3.push("&nbsp;");
              d3 = T(t3), !n3 && _2 && (l3 = t3.parentNode, (u3 = t3.previousSibling) || (u3 = (a2.isInline(l3) ? l3 : t3).previousSibling), u3 && "" !== u3.innerHTML && !a2.isBlock(u3) || (d3 = f3.keepEOL ? d3.replace(/[\r\n\v\f\t ]+/, " ") : d3.replace(/^[\r\n\v\f\t ]+/, "")), d3 = d3.replace(/ +/, " ")), m3.push(r4 ? d3 : a2.encode(d3, f3));
            } else 4 == p3 ? (m3.push("<![CDATA["), m3.push(t3.data), m3.push("]]>")) : 8 == p3 && (t3.data.indexOf("[CDATA[") < 0 ? (m3.push("<!--"), m3.push(t3.data), m3.push("-->")) : (m3.push("<!"), m3.push(t3.data), m3.push(">")));
          }
          function I() {
            n2.isFunction(f3.custom) && (m3 = f3.custom(m3) || m3);
          }
          return k3.script = k3["k:script"], void 0 === (f3 = f3 || {}).semantic && (f3.semantic = true), function(e3) {
            var t3 = e3.childNodes.length;
            return t3 && 3 == e3.firstChild.nodeType && (1 == t3 || 2 == t3 && a2.insignificant(e3.lastChild));
          }(r3) ? (m3 = a2.encode(T(r3.firstChild).replace(/[\r\n\v\f\t ]+/, " "), f3), I(), m3) : (C(r3), m3 = m3.join(""), I(), "" === m3.replace(l2, "").replace(u2, "") ? "" : m3);
        } };
        r2(i2, { Serializer: k2 });
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.DropDownList, a2 = n2.ui.editor.Dom, r2 = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          i2.fn.init.call(a3, e3, t3), n2.support.mobileOS.ios && (this._initSelectOverlay(), this.bind("dataBound", this._initSelectOverlay.bind(this))), a3.text(a3.options.title), a3.element.attr("title", a3.options.title), a3.wrapper.attr("title", a3.options.title), a3.bind("open", function() {
            if (a3.options.autoSize) {
              var e4, t4 = a3.list;
              t4.css({ whiteSpace: "nowrap", width: "auto" }), (e4 = t4.width()) > 0 ? e4 += 20 : e4 = a3._listWidth, t4.css("width", e4 + n2.support.scrollbar()), a3._listWidth = e4;
            }
          });
        }, options: { name: "SelectBox", index: -1, size: "medium", fillMode: "solid", rounded: "medium" }, _initSelectOverlay: function() {
          for (var t3, i3 = this, a3 = i3.value(), r3 = this.dataSource.view(), o2 = "", s2 = n2.htmlEncode, l2 = 0; l2 < r3.length; l2++) o2 += "<option value='" + s2((t3 = r3[l2]).value) + "'", t3.value == a3 && (o2 += " selected"), o2 += ">" + s2(t3.text) + "</option>";
          var d2 = e2("<select class='k-select-overlay'>" + o2 + "</select>"), u2 = e2(this.element).closest(".k-dropdownlist");
          u2.next(".k-select-overlay").remove(), d2.insertAfter(u2), d2.on("change", function() {
            i3.value(this.value), i3.trigger("change");
          });
        }, value: function(e3) {
          var t3 = this, n3 = i2.fn.value.call(t3, e3);
          if (void 0 === e3) return n3;
          i2.fn.value.call(t3) || t3.text(t3.options.title);
        }, decorate: function(t3) {
          var n3, i3, r3, o2, s2 = this.dataSource, l2 = s2.data();
          for (t3 && this.list.css("background-color", a2.getEffectiveBackground(e2(t3))), n3 = 0; n3 < l2.length; n3++) i3 = l2[n3].tag || "span", r3 = l2[n3].className, o2 = (o2 = a2.inlineStyle(t3, i3, { className: r3 })).replace(/"/g, "'"), l2[n3].style = o2 + ";display:inline-block";
          s2.trigger("change");
        } });
        n2.ui.plugin(r2), n2.ui.editor.SelectBox = r2, n2.cssProperties.registerPrefix("SelectBox", "k-picker-"), n2.cssProperties.registerValues("SelectBox", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = e2.extend, a2 = t2.ui.editor, r2 = t2.support.browser, o2 = a2.Dom, s2 = o2.findNodeIndex, l2 = o2.isDataNode, d2 = o2.findClosestAncestor, u2 = o2.getNodeLength, c2 = o2.normalize, p2 = { selectionFromWindow: function(e3) {
          if (e3) return "getSelection" in e3 ? e3.getSelection() : new v2(e3.document);
        }, selectionFromRange: function(e3) {
          var t3 = S.documentFromRange(e3);
          return p2.selectionFromDocument(t3);
        }, selectionFromDocument: function(e3) {
          return p2.selectionFromWindow(o2.windowFromDocument(e3));
        } }, h2 = n2.extend({ init: function(t3) {
          e2.extend(this, { ownerDocument: t3, startContainer: t3, endContainer: t3, commonAncestorContainer: t3, startOffset: 0, endOffset: 0, collapsed: true });
        }, setStart: function(e3, t3) {
          this.startContainer = e3, this.startOffset = t3, m2(this), f2(this, true);
        }, setEnd: function(e3, t3) {
          this.endContainer = e3, this.endOffset = t3, m2(this), f2(this, false);
        }, setStartBefore: function(e3) {
          this.setStart(e3.parentNode, s2(e3));
        }, setStartAfter: function(e3) {
          this.setStart(e3.parentNode, s2(e3) + 1);
        }, setEndBefore: function(e3) {
          this.setEnd(e3.parentNode, s2(e3));
        }, setEndAfter: function(e3) {
          this.setEnd(e3.parentNode, s2(e3) + 1);
        }, selectNode: function(e3) {
          this.setStartBefore(e3), this.setEndAfter(e3);
        }, selectNodeContents: function(e3) {
          this.setStart(e3, 0), this.setEnd(e3, e3[1 === e3.nodeType ? "childNodes" : "nodeValue"].length);
        }, collapse: function(e3) {
          var t3 = this;
          e3 ? t3.setEnd(t3.startContainer, t3.startOffset) : t3.setStart(t3.endContainer, t3.endOffset);
        }, deleteContents: function() {
          var e3 = this, t3 = e3.cloneRange();
          e3.startContainer != e3.commonAncestorContainer && e3.setStartAfter(d2(e3.commonAncestorContainer, e3.startContainer)), e3.collapse(true), function e4(t4) {
            for (; t4.next(); ) t4.hasPartialSubtree() ? e4(t4.getSubtreeIterator()) : t4.remove();
          }(new g2(t3));
        }, cloneContents: function() {
          var e3 = S.documentFromRange(this);
          return function t3(n3) {
            for (var i3, a3 = e3.createDocumentFragment(); i3 = n3.next(); ) i3 = i3.cloneNode(!n3.hasPartialSubtree()), n3.hasPartialSubtree() && i3.appendChild(t3(n3.getSubtreeIterator())), a3.appendChild(i3);
            return a3;
          }(new g2(this));
        }, extractContents: function() {
          var e3 = this, t3 = e3.cloneRange();
          e3.startContainer != e3.commonAncestorContainer && e3.setStartAfter(d2(e3.commonAncestorContainer, e3.startContainer)), e3.collapse(true);
          var n3 = S.documentFromRange(e3);
          return function t4(i3) {
            for (var a3, r3 = n3.createDocumentFragment(); a3 = i3.next(); ) i3.hasPartialSubtree() ? (a3 = a3.cloneNode(false)).appendChild(t4(i3.getSubtreeIterator())) : i3.remove(e3.originalRange), r3.appendChild(a3);
            return r3;
          }(new g2(t3));
        }, insertNode: function(e3) {
          var t3 = this;
          l2(t3.startContainer) ? (t3.startOffset != t3.startContainer.nodeValue.length && o2.splitDataNode(t3.startContainer, t3.startOffset), o2.insertAfter(e3, t3.startContainer)) : o2.insertAt(t3.startContainer, e3, t3.startOffset), t3.setStart(t3.startContainer, t3.startOffset);
        }, cloneRange: function() {
          return e2.extend(new h2(this.ownerDocument), { startContainer: this.startContainer, endContainer: this.endContainer, commonAncestorContainer: this.commonAncestorContainer, startOffset: this.startOffset, endOffset: this.endOffset, collapsed: this.collapsed, originalRange: this });
        }, toString: function() {
          var e3 = this.startContainer.nodeName, t3 = this.endContainer.nodeName;
          return ["#text" == e3 ? this.startContainer.nodeValue : e3, "(", this.startOffset, ") : ", "#text" == t3 ? this.endContainer.nodeValue : t3, "(", this.endOffset, ")"].join("");
        } });
        function f2(e3, t3) {
          (function(e4) {
            try {
              return function(e5, t4, n3, i3) {
                if (e5 == t4) return i3 - n3;
                for (var a3 = t4; a3 && a3.parentNode != e5; ) a3 = a3.parentNode;
                if (a3) return s2(a3) - n3;
                for (a3 = e5; a3 && a3.parentNode != t4; ) a3 = a3.parentNode;
                if (a3) return i3 - s2(a3) - 1;
                for (var r3 = o2.commonAncestor(e5, t4), l3 = e5; l3 && l3.parentNode != r3; ) l3 = l3.parentNode;
                l3 || (l3 = r3);
                for (var d3 = t4; d3 && d3.parentNode != r3; ) d3 = d3.parentNode;
                return d3 || (d3 = r3), l3 == d3 ? 0 : s2(d3) - s2(l3);
              }(e4.startContainer, e4.endContainer, e4.startOffset, e4.endOffset) < 0;
            } catch (e5) {
              return true;
            }
          })(e3) && (t3 ? (e3.commonAncestorContainer = e3.endContainer = e3.startContainer, e3.endOffset = e3.startOffset) : (e3.commonAncestorContainer = e3.startContainer = e3.endContainer, e3.startOffset = e3.endOffset), e3.collapsed = true);
        }
        function m2(e3) {
          e3.collapsed = e3.startContainer == e3.endContainer && e3.startOffset == e3.endOffset;
          for (var t3 = e3.startContainer; t3 && t3 != e3.endContainer && !o2.isAncestorOf(t3, e3.endContainer); ) t3 = t3.parentNode;
          e3.commonAncestorContainer = t3;
        }
        h2.fromNode = function(e3) {
          return new h2(e3.ownerDocument);
        };
        var g2 = n2.extend({ init: function(t3) {
          if (e2.extend(this, { range: t3, _current: null, _next: null, _end: null }), !t3.collapsed) {
            var n3 = t3.commonAncestorContainer;
            this._next = t3.startContainer != n3 || l2(t3.startContainer) ? d2(n3, t3.startContainer) : t3.startContainer.childNodes[t3.startOffset], this._end = t3.endContainer != n3 || l2(t3.endContainer) ? d2(n3, t3.endContainer).nextSibling : t3.endContainer.childNodes[t3.endOffset];
          }
        }, hasNext: function() {
          return !!this._next;
        }, next: function() {
          var e3 = this, t3 = e3._current = e3._next;
          return e3._next = e3._current && e3._current.nextSibling != e3._end ? e3._current.nextSibling : null, l2(e3._current) && (e3.range.endContainer == e3._current && (t3 = t3.cloneNode(true)).deleteData(e3.range.endOffset, t3.length - e3.range.endOffset), e3.range.startContainer == e3._current && (t3 = t3.cloneNode(true)).deleteData(0, e3.range.startOffset)), t3;
        }, traverse: function(e3) {
          var t3, n3 = this;
          for (; n3._current = n3._next, n3._next = n3._current && n3._current.nextSibling != n3._end ? n3._current.nextSibling : null, t3 = n3._current; ) n3.hasPartialSubtree() ? n3.getSubtreeIterator().traverse(e3) : e3(t3);
          return t3;
        }, remove: function(e3) {
          var t3, n3, i3, a3 = this, r3 = a3.range.startContainer == a3._current, d3 = a3.range.endContainer == a3._current;
          if (l2(a3._current) && (r3 || d3)) t3 = r3 ? a3.range.startOffset : 0, i3 = (n3 = d3 ? a3.range.endOffset : a3._current.length) - t3, e3 && (r3 || d3) && (a3._current == e3.startContainer && t3 <= e3.startOffset && (e3.startOffset -= i3), a3._current == e3.endContainer && n3 <= e3.endOffset && (e3.endOffset -= i3)), a3._current.deleteData(t3, i3);
          else {
            var u3 = a3._current.parentNode;
            if (e3 && (a3.range.startContainer == u3 || a3.range.endContainer == u3)) {
              var c3 = s2(a3._current);
              u3 == e3.startContainer && c3 <= e3.startOffset && (e3.startOffset -= 1), u3 == e3.endContainer && c3 < e3.endOffset && (e3.endOffset -= 1);
            }
            o2.remove(a3._current);
          }
        }, hasPartialSubtree: function() {
          return !l2(this._current) && (o2.isAncestorOrSelf(this._current, this.range.startContainer) || o2.isAncestorOrSelf(this._current, this.range.endContainer));
        }, getSubtreeIterator: function() {
          return new g2(this.getSubRange());
        }, getSubRange: function() {
          var e3 = this, t3 = e3.range.cloneRange();
          return t3.selectNodeContents(e3._current), o2.isAncestorOrSelf(e3._current, e3.range.startContainer) && t3.setStart(e3.range.startContainer, e3.range.startOffset), o2.isAncestorOrSelf(e3._current, e3.range.endContainer) && t3.setEnd(e3.range.endContainer, e3.range.endOffset), t3;
        } }), v2 = n2.extend({ init: function(e3) {
          this.ownerDocument = e3, this.rangeCount = 1;
        }, addRange: function(e3) {
          var t3 = this.ownerDocument.body.createTextRange();
          _2(t3, e3, false), _2(t3, e3, true), t3.select();
        }, removeAllRanges: function() {
          var e3 = this.ownerDocument.selection;
          "None" != e3.type && e3.empty();
        }, getRangeAt: function() {
          var e3, t3, n3 = new h2(this.ownerDocument), i3 = this.ownerDocument.selection;
          try {
            if (((e3 = i3.createRange()).item ? e3.item(0) : e3.parentElement()).ownerDocument != this.ownerDocument) return n3;
          } catch (e4) {
            return n3;
          }
          if ("Control" == i3.type) n3.selectNode(e3.item(0));
          else {
            t3 = function(e4) {
              var t4 = e4.duplicate(), n4 = e4.duplicate();
              return t4.collapse(true), n4.collapse(false), o2.commonAncestor(e4.parentElement(), t4.parentElement(), n4.parentElement());
            }(e3), b2(e3, n3, t3, true), b2(e3, n3, t3, false), 9 == n3.startContainer.nodeType && n3.setStart(n3.endContainer, n3.startOffset), 9 == n3.endContainer.nodeType && n3.setEnd(n3.startContainer, n3.endOffset), 0 === e3.compareEndPoints("StartToEnd", e3) && n3.collapse(false);
            var a3 = n3.startContainer, r3 = n3.endContainer, d3 = this.ownerDocument.body;
            if (!(n3.collapsed || 0 !== n3.startOffset || n3.endOffset != u2(n3.endContainer) || a3 == r3 && l2(a3) && a3.parentNode == d3)) {
              for (var c3 = false, p3 = false; 0 === s2(a3) && a3 == a3.parentNode.firstChild && a3 != d3; ) a3 = a3.parentNode, c3 = true;
              for (; s2(r3) == u2(r3.parentNode) - 1 && r3 == r3.parentNode.lastChild && r3 != d3; ) r3 = r3.parentNode, p3 = true;
              a3 == d3 && r3 == d3 && c3 && p3 && (n3.setStart(a3, 0), n3.setEnd(r3, u2(d3)));
            }
          }
          return n3;
        } });
        function _2(e3, t3, n3) {
          var i3, a3 = t3[n3 ? "startContainer" : "endContainer"], r3 = t3[n3 ? "startOffset" : "endOffset"], s3 = 0, d3 = l2(a3), u3 = d3 ? a3 : a3.childNodes[r3] || null, c3 = d3 ? a3.parentNode : a3, p3 = t3.ownerDocument, h3 = p3.body.createTextRange();
          3 != a3.nodeType && 4 != a3.nodeType || (s3 = r3), c3 || (c3 = p3.body), "img" == c3.nodeName.toLowerCase() ? (h3.moveToElementText(c3), h3.collapse(false), e3.setEndPoint(n3 ? "StartToStart" : "EndToStart", h3)) : (i3 = c3.insertBefore(o2.create(p3, "a"), u3), h3.moveToElementText(i3), o2.remove(i3), h3[n3 ? "moveStart" : "moveEnd"]("character", s3), h3.collapse(false), e3.setEndPoint(n3 ? "StartToStart" : "EndToStart", h3));
        }
        function b2(e3, t3, n3, i3) {
          var a3, r3, d3, u3, c3, p3, h3, f3 = o2.create(t3.ownerDocument, "a"), m3 = e3.duplicate(), g3 = i3 ? "StartToStart" : "StartToEnd", v3 = false;
          f3.innerHTML = "\uFEFF", m3.collapse(i3), r3 = m3.parentElement(), o2.isAncestorOrSelf(n3, r3) || (r3 = n3);
          do {
            v3 ? r3.insertBefore(f3, f3.previousSibling) : (r3.appendChild(f3), v3 = true), m3.moveToElementText(f3);
          } while ((a3 = m3.compareEndPoints(g3, e3)) > 0 && f3.previousSibling);
          d3 = f3.nextSibling, -1 == a3 && l2(d3) ? (m3.setEndPoint(i3 ? "EndToStart" : "EndToEnd", e3), o2.remove(f3), p3 = [d3, m3.text.length]) : (u3 = !i3 && f3.previousSibling, c3 = i3 && f3.nextSibling, l2(c3) ? p3 = [c3, 0] : l2(u3) ? p3 = [u3, u3.length] : (h3 = s2(f3), p3 = r3.nextSibling && h3 == r3.childNodes.length - 1 ? [r3.nextSibling, 0] : [r3, h3]), o2.remove(f3)), t3[i3 ? "setStart" : "setEnd"].apply(t3, p3);
        }
        var k2 = n2.extend({ init: function(e3) {
          this.enumerate = function() {
            var t3 = [];
            return new g2(e3).traverse(function e4(n3) {
              if (o2.is(n3, "img") || 3 == n3.nodeType && (!o2.isEmptyspace(n3) || "\uFEFF" == n3.nodeValue)) t3.push(n3);
              else for (n3 = n3.firstChild; n3; ) e4(n3), n3 = n3.nextSibling;
            }), t3;
          };
        } }), w = g2.extend({ hasPartialSubtree: function() {
          var e3 = a2.Immutables && a2.Immutables.immutable;
          return e3 && !e3(this._current) && g2.fn.hasPartialSubtree.call(this);
        }, getSubtreeIterator: function() {
          return new w(this.getSubRange());
        } }), y = n2.extend({ init: function(e3) {
          this.enumerate = function() {
            var t3 = [], n3 = a2.Immutables && a2.Immutables.immutable;
            return new w(e3).traverse(function e4(i3) {
              if (n3 && !n3(i3)) if (o2.is(i3, "img") || 3 == i3.nodeType && (!o2.isEmptyspace(i3) || "\uFEFF" == i3.nodeValue)) t3.push(i3);
              else for (i3 = i3.firstChild; i3; ) e4(i3), i3 = i3.nextSibling;
            }), t3;
          };
        } }), x = n2.extend({ init: function(e3, t3, n3) {
          var i3 = this;
          i3.range = e3, i3.rootNode = S.documentFromRange(e3), i3.body = t3 || i3.getEditable(e3), "body" != o2.name(i3.body) && (i3.rootNode = i3.body), i3.startContainer = i3.nodeToPath(e3.startContainer), i3.endContainer = i3.nodeToPath(e3.endContainer), i3.startOffset = i3.offset(e3.startContainer, e3.startOffset), i3.endOffset = i3.offset(e3.endContainer, e3.endOffset), i3.immutables = n3 && n3.immutables, i3.immutables && (i3.serializedImmutables = a2.Immutables.removeImmutables(i3.body)), i3.html = i3.body.innerHTML, i3.immutables && !i3.serializedImmutables.empty && a2.Immutables.restoreImmutables(i3.body, i3.serializedImmutables);
        }, index: function(e3) {
          for (var t3 = 0, n3 = e3.nodeType; e3 = e3.previousSibling; ) {
            var i3 = e3.nodeType;
            3 == i3 && n3 == i3 || t3++, n3 = i3;
          }
          return t3;
        }, getEditable: function(e3) {
          for (var t3 = e3.commonAncestorContainer; t3 && (3 == t3.nodeType || t3.attributes && (!t3.attributes.contentEditable || "false" == t3.attributes.contentEditable.nodeValue.toLowerCase())); ) t3 = t3.parentNode;
          return t3;
        }, restoreHtml: function() {
          var e3 = this;
          o2.removeChildren(e3.body), e3.body.innerHTML = e3.html, e3.immutables && !e3.serializedImmutables.empty && a2.Immutables.restoreImmutables(e3.body, e3.serializedImmutables);
        }, offset: function(e3, t3) {
          if (3 == e3.nodeType) for (; (e3 = e3.previousSibling) && 3 == e3.nodeType; ) t3 += e3.nodeValue.length;
          return t3;
        }, nodeToPath: function(e3) {
          for (var t3 = []; e3 != this.rootNode; ) t3.push(this.index(e3)), e3 = e3.parentNode;
          return t3;
        }, toRangePoint: function(e3, t3, n3, i3) {
          for (var a3 = this.rootNode, r3 = n3.length, o3 = i3; r3-- && a3; ) a3 = a3.childNodes[n3[r3]];
          for (; a3 && 3 == a3.nodeType && a3.nodeValue.length < o3; ) o3 -= a3.nodeValue.length, a3 = a3.nextSibling;
          a3 && o3 >= 0 && e3[t3 ? "setStart" : "setEnd"](a3, o3);
        }, toRange: function() {
          var e3 = this, t3 = e3.range.cloneRange();
          return e3.toRangePoint(t3, true, e3.startContainer, e3.startOffset), e3.toRangePoint(t3, false, e3.endContainer, e3.endOffset), t3;
        } }), C = n2.extend({ init: function() {
          this.caret = null;
        }, addCaret: function(e3) {
          var t3 = this.caret = o2.create(S.documentFromRange(e3), "span", { className: "k-marker" });
          return e3.insertNode(t3), o2.stripBomNode(t3.previousSibling), o2.stripBomNode(t3.nextSibling), e3.selectNode(t3), t3;
        }, removeCaret: function(e3) {
          var t3 = this, n3 = t3.caret.previousSibling, i3 = 0;
          n3 && (i3 = l2(n3) ? n3.nodeValue.length : s2(n3));
          var a3 = t3.caret.parentNode, d3 = n3 ? s2(n3) : 0;
          o2.remove(t3.caret), c2(a3);
          var u3 = a3.childNodes[d3];
          if (l2(u3)) e3.setStart(u3, i3);
          else if (u3) {
            var p3 = o2.lastTextNode(u3);
            p3 ? e3.setStart(p3, p3.nodeValue.length) : e3[n3 ? "setStartAfter" : "setStartBefore"](u3);
          } else r2.msie || a3.innerHTML || (a3.innerHTML = '<br _moz_dirty="" />'), e3.selectNodeContents(a3);
          e3.collapse(true);
        }, add: function(e3, t3) {
          var n3 = this, i3 = e3.collapsed && !S.isExpandable(e3), a3 = S.documentFromRange(e3);
          t3 && e3.collapsed && (n3.addCaret(e3), e3 = S.expand(e3));
          var r3 = e3.cloneRange();
          if (r3.collapse(false), n3.end = o2.create(a3, "span", { className: "k-marker" }), r3.insertNode(n3.end), (r3 = e3.cloneRange()).collapse(true), n3.start = n3.end.cloneNode(true), r3.insertNode(n3.start), n3._removeDeadMarkers(n3.start, n3.end), i3) {
            var s3 = a3.createTextNode("\uFEFF");
            o2.insertAfter(s3.cloneNode(), n3.start), o2.insertBefore(s3, n3.end);
          }
          return c2(e3.commonAncestorContainer), e3.setStartBefore(n3.start), e3.setEndAfter(n3.end), e3;
        }, _removeDeadMarkers: function(e3, t3) {
          e3.previousSibling && "\uFEFF" == e3.previousSibling.nodeValue && o2.remove(e3.previousSibling), t3.nextSibling && "\uFEFF" == t3.nextSibling.nodeValue && o2.remove(t3.nextSibling);
        }, _normalizedIndex: function(e3) {
          for (var t3 = s2(e3), n3 = e3; n3.previousSibling; ) 3 == n3.nodeType && 3 == n3.previousSibling.nodeType && t3--, n3 = n3.previousSibling;
          return t3;
        }, remove: function(e3) {
          var t3, n3, i3 = this, a3 = i3.start, r3 = i3.end;
          for (c2(e3.commonAncestorContainer); !a3.nextSibling && a3.parentNode; ) a3 = a3.parentNode;
          for (; !r3.previousSibling && r3.parentNode; ) r3 = r3.parentNode;
          t3 = a3.previousSibling && 3 == a3.previousSibling.nodeType && a3.nextSibling && 3 == a3.nextSibling.nodeType, n3 = r3.previousSibling && 3 == r3.previousSibling.nodeType && r3.nextSibling && 3 == r3.nextSibling.nodeType;
          var s3 = (a3 = a3.nextSibling) === (r3 = r3.previousSibling) && o2.isBom(a3);
          s3 && a3.length > 1 && (a3.nodeValue = a3.nodeValue.charAt(0));
          var d3 = s3, u3 = false;
          if (a3 == i3.end && (u3 = !!i3.start.previousSibling, a3 = r3 = i3.start.previousSibling || i3.end.nextSibling, d3 = true), o2.remove(i3.start), o2.remove(i3.end), !a3 || !r3) return e3.selectNodeContents(e3.commonAncestorContainer), void e3.collapse(true);
          var p3 = d3 ? l2(a3) ? a3.nodeValue.length : a3.childNodes.length : 0, h3 = l2(r3) ? r3.nodeValue.length : r3.childNodes.length;
          if (3 == a3.nodeType) for (; a3.previousSibling && 3 == a3.previousSibling.nodeType; ) p3 += (a3 = a3.previousSibling).nodeValue.length;
          if (3 == r3.nodeType) for (; r3.previousSibling && 3 == r3.previousSibling.nodeType; ) h3 += (r3 = r3.previousSibling).nodeValue.length;
          var f3 = a3.parentNode, m3 = r3.parentNode, g3 = this._normalizedIndex(a3), v3 = this._normalizedIndex(r3);
          c2(f3), 3 == a3.nodeType && (a3 = f3.childNodes[g3]), c2(m3), 3 == r3.nodeType && (r3 = m3.childNodes[v3]), d3 ? (3 == a3.nodeType ? e3.setStart(a3, p3) : e3[u3 ? "setStartAfter" : "setStartBefore"](a3), e3.collapse(true)) : (3 == a3.nodeType ? e3.setStart(a3, p3) : e3.setStartBefore(a3), 3 == r3.nodeType ? e3.setEnd(r3, h3) : e3.setEndAfter(r3)), i3.caret && i3.removeCaret(e3);
        } }), T = /[\u0009-\u000d]|\u0020|\u00a0|\ufeff|\.|,|;|:|!|\(|\)|\?/, S = { nodes: function(e3) {
          var t3 = S.textNodes(e3);
          return t3.length || (e3.selectNodeContents(e3.commonAncestorContainer), (t3 = S.textNodes(e3)).length || (t3 = o2.significantChildNodes(e3.commonAncestorContainer))), t3;
        }, textNodes: function(e3) {
          return new k2(e3).enumerate().filter(function(e4) {
            return o2.allowsTextContent(e4.parentElement);
          });
        }, editableTextNodes: function(e3) {
          var t3 = a2.Immutables && a2.Immutables.immutableParent, n3 = [];
          return t3 && !t3(e3.commonAncestorContainer) && (n3 = new y(e3).enumerate().filter(function(e4) {
            return o2.allowsTextContent(e4.parentElement);
          })), n3;
        }, documentFromRange: function(e3) {
          var t3 = e3.startContainer;
          return 9 == t3.nodeType ? t3 : t3.ownerDocument;
        }, createRange: function(e3) {
          return e3.createRange();
        }, selectRange: function(e3) {
          var t3 = S.image(e3);
          t3 && (e3.setStartAfter(t3), e3.setEndAfter(t3));
          var n3 = p2.selectionFromRange(e3);
          n3.removeAllRanges(), n3.addRange(e3);
        }, stringify: function(e3) {
          return t2.format("{0}:{1} - {2}:{3}", o2.name(e3.startContainer), e3.startOffset, o2.name(e3.endContainer), e3.endOffset);
        }, split: function(e3, t3, n3) {
          function i3(i4) {
            var a3 = e3.cloneRange();
            a3.collapse(i4), a3[i4 ? "setStartBefore" : "setEndAfter"](t3);
            var r3 = a3.extractContents();
            n3 && (r3 = o2.trim(r3)), o2[i4 ? "insertBefore" : "insertAfter"](r3, t3);
          }
          i3(true), i3(false);
        }, mapAll: function(t3, n3) {
          var i3 = [];
          return new g2(t3).traverse(function(t4) {
            var a3 = n3(t4);
            a3 && e2.inArray(a3, i3) < 0 && i3.push(a3);
          }), i3;
        }, getAll: function(e3, t3) {
          var n3 = t3;
          return "string" == typeof t3 && (t3 = function(e4) {
            return o2.is(e4, n3);
          }), S.mapAll(e3, function(e4) {
            if (t3(e4)) return e4;
          });
        }, getMarkers: function(e3) {
          return S.getAll(e3, function(e4) {
            return "k-marker" == e4.className;
          });
        }, image: function(e3) {
          var t3 = S.getAll(e3, "img");
          if (1 == t3.length) return t3[0];
        }, isStartOf: function(e3, t3) {
          if (0 !== e3.startOffset) return false;
          for (var n3 = e3.cloneRange(); 0 === n3.startOffset && n3.startContainer != t3; ) {
            for (var i3 = o2.findNodeIndex(n3.startContainer), a3 = n3.startContainer.parentNode; i3 > 0 && a3[i3 - 1] && o2.insignificant(a3[i3 - 1]); ) i3--;
            n3.setStart(a3, i3);
          }
          return 0 === n3.startOffset && n3.startContainer == t3;
        }, isEndOf: function(e3, t3) {
          var n3 = e3.cloneRange();
          n3.collapse(false);
          var i3 = n3.startContainer;
          o2.isDataNode(i3) && n3.startOffset == o2.getNodeLength(i3) && (n3.setStart(i3.parentNode, o2.findNodeIndex(i3) + 1), n3.collapse(true)), n3.setEnd(t3, o2.getNodeLength(t3));
          var a3 = [];
          return new g2(n3).traverse(function(e4) {
            o2.insignificant(e4) || o2.isDataNode(e4) && /^[\ufeff]*$/.test(e4.nodeValue) || a3.push(e4);
          }), !a3.length;
        }, wrapSelectedElements: function(e3) {
          for (var t3 = o2.editableParent(e3.startContainer), n3 = o2.editableParent(e3.endContainer); 0 === e3.startOffset && e3.startContainer != t3; ) e3.setStart(e3.startContainer.parentNode, o2.findNodeIndex(e3.startContainer));
          function i3(e4, t4) {
            var n4 = o2.getNodeLength(t4);
            if (e4 == n4) return true;
            for (var i4 = e4; i4 < n4; i4++) if (!o2.insignificant(t4.childNodes[i4])) return false;
            return true;
          }
          for (; i3(e3.endOffset, e3.endContainer) && e3.endContainer != n3; ) e3.setEnd(e3.endContainer.parentNode, o2.findNodeIndex(e3.endContainer) + 1);
          return e3;
        }, expand: function(e3) {
          var t3 = e3.cloneRange(), n3 = t3.startContainer.childNodes[0 === t3.startOffset ? 0 : t3.startOffset - 1], i3 = t3.endContainer.childNodes[t3.endOffset];
          if (!l2(n3) || !l2(i3)) return t3;
          var a3 = n3.nodeValue, r3 = i3.nodeValue;
          if (!a3 || !r3) return t3;
          var o3 = a3.split("").reverse().join("").search(T), s3 = r3.search(T);
          return o3 && s3 ? (s3 = -1 == s3 ? r3.length : s3, o3 = -1 == o3 ? 0 : a3.length - o3, t3.setStart(n3, o3), t3.setEnd(i3, s3), t3) : t3;
        }, isExpandable: function(e3) {
          var t3 = e3.startContainer, n3 = S.documentFromRange(e3);
          if (t3 == n3 || t3 == n3.body) return false;
          var i3 = e3.cloneRange(), a3 = t3.nodeValue;
          if (!a3) return false;
          var r3 = a3.substring(0, i3.startOffset), o3 = a3.substring(i3.startOffset), s3 = 0, l3 = 0;
          return r3 && (s3 = r3.split("").reverse().join("").search(T)), o3 && (l3 = o3.search(T)), s3 && l3;
        } };
        i2(a2, { SelectionUtils: p2, W3CRange: h2, RangeIterator: g2, W3CSelection: v2, RangeEnumerator: k2, RestorePoint: x, Marker: C, RangeUtils: S });
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class, a2 = n2.ui.editor, r2 = a2.Dom, o2 = n2.template, s2 = a2.RangeUtils, l2 = ["ul", "ol", "tbody", "thead", "table"], d2 = "k-immutable", u2 = "[k-immutable]", c2 = function(t3) {
          return e2(t3).is("body,.k-editor");
        }, p2 = function(e3) {
          return e3.getAttribute && "false" == e3.getAttribute("contenteditable");
        }, h2 = function(e3) {
          return r2.closestBy(e3, p2, c2);
        }, f2 = function(e3) {
          return !!h2(e3.commonAncestorContainer) || !(!h2(e3.startContainer) && !h2(e3.endContainer) || 0 !== s2.editableTextNodes(e3).length);
        }, m2 = function(e3) {
          for (var t3 = "", n3 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", i3 = e3 || 10; i3 > 0; --i3) t3 += n3.charAt(Math.round(Math.random() * (n3.length - 1)));
          return t3;
        }, g2 = function(e3) {
          var t3 = e3 ? e3.options : void 0;
          t3 && t3.finder && t3.finder._initOptions({ immutables: true });
        }, v2 = i2.extend({ init: function(t3) {
          this.editor = t3, this.serializedImmutables = {}, this.options = e2.extend({}, t3 && t3.options && t3.options.immutables);
          var n3 = t3.toolbar.tools;
          g2(n3.justifyLeft), g2(n3.justifyCenter), g2(n3.justifyRight), g2(n3.justifyFull);
        }, serialize: function(e3) {
          var t3, n3 = this._toHtml(e3);
          return -1 === n3.indexOf(d2) ? (t3 = this.randomId(), n3 = n3.replace(/>/, ' k-immutable="' + t3 + '">')) : t3 = n3.match(/k-immutable\s*=\s*['"](.*)['"]/)[1], this.serializedImmutables[t3] = e3, n3;
        }, _toHtml: function(e3) {
          var t3, n3 = this.options.serialization;
          switch (typeof n3) {
            case "string":
              return o2(n3)(e3);
            case "function":
              return n3(e3);
            default:
              return "<" + (t3 = r2.name(e3)) + "></" + t3 + ">";
          }
        }, deserialize: function(t3) {
          var i3 = this, a3 = this.options.deserialization;
          e2(u2, t3).each(function() {
            var t4 = this.getAttribute(d2), r3 = i3.serializedImmutables[t4];
            n2.isFunction(a3) && a3(this, r3), e2(this).replaceWith(r3);
          }), i3.serializedImmutables = {};
        }, randomId: function(e3) {
          return m2(e3);
        }, keydown: function(e3, t3) {
          var i3, a3, r3 = (i3 = e3.keyCode, a3 = n2.keys, i3 === a3.BACKSPACE || i3 == a3.DELETE);
          if (r3 && this._cancelDeleting(e3, t3) || !r3 && this._cancelTyping(e3, t3)) return e3.preventDefault(), true;
        }, _cancelTyping: function(e3, t3) {
          var n3 = this.editor.keyboard;
          return t3.collapsed && !n3.typingInProgress && n3.isTypingKey(e3) && f2(t3);
        }, _cancelDeleting: function(e3, t3) {
          var i3 = n2.keys, a3 = e3.keyCode === i3.BACKSPACE, o3 = e3.keyCode == i3.DELETE;
          if (!a3 && !o3) return false;
          var s3 = false;
          if (t3.collapsed) {
            if (f2(t3)) return true;
            var d3 = this.nextImmutable(t3, o3);
            if (d3 && a3) {
              var u3 = r2.closest(t3.commonAncestorContainer, "li");
              if (u3) {
                var c3 = r2.closest(d3, "li");
                if (c3 && c3 !== u3) return s3;
              }
            }
            if (d3 && !r2.tableCell(d3)) {
              if (r2.parentOfType(d3, l2) === r2.parentOfType(t3.commonAncestorContainer, l2)) {
                for (; d3 && 1 == d3.parentNode.childNodes.length; ) d3 = d3.parentNode;
                if (r2.tableCell(d3)) return s3;
                this._removeImmutable(d3, t3);
              }
              s3 = true;
            }
          }
          return s3;
        }, nextImmutable: function(e3, t3) {
          var n3 = e3.commonAncestorContainer;
          if (r2.isBom(n3) || t3 && s2.isEndOf(e3, n3) || !t3 && s2.isStartOf(e3, n3)) {
            var i3 = this._nextNode(n3, t3);
            if (i3 && r2.isBlock(i3) && !h2(i3)) for (; i3 && i3.children && i3.children[t3 ? 0 : i3.children.length - 1]; ) i3 = i3.children[t3 ? 0 : i3.children.length - 1];
            return h2(i3);
          }
        }, _removeImmutable: function(e3, t3) {
          var n3 = this.editor, i3 = new a2.RestorePoint(t3, n3.body);
          r2.remove(e3), a2._finishUpdate(n3, i3);
        }, _nextNode: function(e3, t3) {
          for (var n3, i3 = t3 ? "nextSibling" : "previousSibling", a3 = e3; a3 && !n3; ) (n3 = a3[i3]) && r2.isDataNode(n3) && /^\s|[\ufeff]$/.test(n3.nodeValue) && (n3 = (a3 = n3)[i3]), n3 || (a3 = a3.parentNode);
          return n3;
        } });
        v2.immutable = p2, v2.immutableParent = h2, v2.expandImmutablesIn = function(e3) {
          var t3 = h2(e3.startContainer), n3 = h2(e3.endContainer);
          (t3 || n3) && (t3 && e3.setStartBefore(t3), n3 && e3.setEndAfter(n3));
        }, v2.immutablesContext = f2, v2.toolsToBeUpdated = ["bold", "italic", "underline", "strikethrough", "superscript", "subscript", "forecolor", "backcolor", "fontname", "fontsize", "createlink", "unlink", "autolink", "addcolumnleft", "addcolumnright", "addrowabove", "addrowbelow", "deleterow", "deletecolumn", "mergecells", "formatting", "cleanformatting"], v2.removeImmutables = function(t3) {
          var n3, i3, a3, o3 = { empty: true };
          return e2(t3).find("[contenteditable='false']").each(function(t4, s3) {
            n3 = r2.name(s3), i3 = m2(), a3 = "<" + n3 + " k-immutable='" + i3 + "'></" + n3 + ">", o3[i3] = { node: s3, style: e2(s3).attr("style") }, o3.empty = false, e2(s3).replaceWith(a3);
          }), o3;
        }, v2.restoreImmutables = function(t3, n3) {
          var i3, a3;
          e2(t3).find(u2).each(function(t4, r3) {
            i3 = r3.getAttribute(d2), a3 = n3[i3], e2(r3).replaceWith(a3.node), a3.style != e2(a3.node).attr("style") && e2(a3.node).removeAttr("style").attr("style", a3.style);
          });
        }, a2.Immutables = v2;
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = t2.ui.editor, a2 = i2.Dom, r2 = i2.RestorePoint, o2 = i2.Marker, s2 = e2.extend;
        var l2 = n2.extend({ init: function(e3) {
          this.options = e3, this.restorePoint = new r2(e3.range, e3.body, { immutables: e3.immutables }), this.marker = new o2(), this.formatter = e3.formatter;
        }, getRange: function() {
          return this.restorePoint.toRange();
        }, lockRange: function(e3) {
          return this.marker.add(this.getRange(), e3);
        }, releaseRange: function(e3) {
          this.marker.remove(e3), this.editor.selectRange(e3);
        }, undo: function() {
          var e3 = this.restorePoint;
          e3.restoreHtml(), this.editor.selectRange(e3.toRange());
        }, redo: function() {
          this.exec();
        }, createDialog: function(n3, i3) {
          var a3 = this.editor;
          return e2(n3).appendTo(document.body).kendoWindow(s2({}, a3.options.dialogOptions, i3)).closest(".k-window").toggleClass("k-rtl", t2.support.isRtl(a3.wrapper)).end();
        }, exec: function() {
          var e3 = this.lockRange(true);
          this.formatter.editor = this.editor, this.formatter.toggle(e3), this.releaseRange(e3);
        }, immutables: function() {
          return this.editor && this.editor.options.immutables;
        }, expandImmutablesIn: function(e3) {
          this.immutables() && (t2.ui.editor.Immutables.expandImmutablesIn(e3), this.restorePoint = new r2(e3, this.editor.body));
        } }), d2 = n2.extend({ init: function(e3, t3) {
          this.body = e3.body, this.startRestorePoint = e3, this.endRestorePoint = t3;
        }, redo: function() {
          a2.removeChildren(this.body), this.body.innerHTML = this.endRestorePoint.html, this.editor.selectRange(this.endRestorePoint.toRange());
        }, undo: function() {
          a2.removeChildren(this.body), this.body.innerHTML = this.startRestorePoint.html, this.editor.selectRange(this.startRestorePoint.toRange());
        } });
        s2(i2, { _finishUpdate: function(e3, t3) {
          var n3 = e3.selectionRestorePoint = new r2(e3.getRange(), e3.body), i3 = new d2(t3, n3);
          return i3.editor = e3, e3.undoRedoStack.push(i3), e3.toolbar.refreshTools(), n3;
        }, Command: l2, GenericCommand: d2 });
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.editor, r2 = i2.Widget, o2 = e2.extend, s2 = n2.keys, l2 = ".kendoEditor", d2 = a2.EditorUtils, u2 = a2.ToolTemplate, c2 = a2.Tool, p2 = n2._outerWidth, h2 = n2._outerHeight, f2 = "overflowAnchor", m2 = ".k-tool-group:visible .k-tool:not(.k-disabled):not([disabled]),.k-tool.k-overflow-anchor:visible,.k-tool-group:visible .k-colorpicker:not(input),.k-tool-group:visible .k-selectbox,.k-tool-group:visible .k-dropdownlist,.k-tool-group:visible .k-combobox .k-input-inner", g2 = { "k-i-sup-script": "superscript", "k-i-sub-script": "subscript", "k-i-align-left": "justifyLeft", "k-i-align-center": "justifyCenter", "k-i-align-right": "justifyRight", "k-i-align-justify": "justifyFull", "k-i-list-unordered": "insertUnorderedList", "k-i-list-ordered": "insertOrderedList", "k-i-list-roman-upper": "insertUpperRomanList", "k-i-list-roman-lower": "insertLowerRomanList", "k-i-import": "import", "k-i-indent-increase": "indent", "k-i-indent-decrease": "outdent", "k-i-link-horizontal": "createLink", "k-i-unlink-horizontal": "unlink", "k-i-image": "insertImage", "k-i-file-add": "insertFile", "k-i-html": "viewHtml", "k-i-foreground-color": "foreColor", "k-i-paint": "backColor", "k-i-table-insert": "createTable", "k-i-table-column-insert-left": "addColumnLeft", "k-i-table-column-insert-right": "addColumnRight", "k-i-table-row-insert-above": "addRowAbove", "k-i-table-row-insert-below": "addRowBelow", "k-i-table-row-delete": "deleteRow", "k-i-table-column-delete": "deleteColumn", "k-i-table-properties": "tableWizard", "k-i-table-wizard": "tableWizardInsert", "k-i-table-position-left": "tableAlignLeft", "k-i-table-position-center": "tableAlignCenter", "k-i-table-position-right": "tableAlignRight", "k-i-clear-css": "cleanFormatting", "k-i-cells-merge-horizontally": "mergeCellsHorizontally", "k-i-cells-merge-vertically": "mergeCellsVertically", "k-i-cell-split-horizontally": "splitCellHorizontally", "k-i-cell-split-vertically": "splitCellVertically", "k-i-copy-format": "copyFormat", "k-i-apply-format": "applyFormat", ".k-i-undo": "undo", "k-i-redo": "redo" }, v2 = c2.extend({ initialize: function(e3, t3) {
          var n3 = t3.editor.toolbar;
          e3.attr("aria-controls", t3.editor.element.attr("id")).on("click", function() {
            this.overflowPopup.toggle();
          }.bind(n3));
        }, options: { name: f2 }, command: e2.noop, update: e2.noop, destroy: e2.noop });
        d2.registerTool(f2, new v2({ key: "", ctrl: true, template: new u2({ template: d2.overflowAnchorTemplate }) }));
        var _2 = r2.extend({ init: function(e3, t3) {
          var i3 = this;
          t3 = o2({}, t3, { name: "EditorToolbar" }), r2.fn.init.call(i3, e3, t3), t3.popup && i3._initPopup(), t3.resizable && t3.resizable.toolbar && (i3._resizeHandler = n2.onResize(function() {
            i3.resize(true);
          }), i3.element.addClass("k-toolbar-resizable"));
        }, events: ["execute"], groups: { basic: ["bold", "italic", "underline", "strikethrough"], undo: ["undo", "redo"], scripts: ["subscript", "superscript"], alignment: ["justifyLeft", "justifyCenter", "justifyRight", "justifyFull"], links: ["insertImage", "insertFile", "createLink", "unlink"], lists: ["insertUnorderedList", "insertOrderedList", "insertUpperRomanList", "insertLowerRomanList", "indent", "outdent"], tablesInsert: ["createTable"], tablesAddDelete: ["addColumnLeft", "addColumnRight", "addRowAbove", "addRowBelow", "deleteRow", "deleteColumn"], tablesMerge: ["mergeCellsHorizontally", "mergeCellsVertically", "splitCellHorizontally", "splitCellVertically"], tablesPosition: ["tableAlignLeft", "tableAlignCenter", "tableAlignRight"], advanced: ["viewHtml", "cleanFormatting", "print", "pdf", "exportAs", "import"], fonts: ["fontName", "fontSize"], colors: ["foreColor", "backColor"], formatPainter: ["copyFormat", "applyFormat"] }, overflowFlaseTools: ["formatting", "fontName", "fontSize", "foreColor", "backColor", "insertHtml"], _initPopup: function() {
          var t3 = this;
          this.window = e2(this.element).wrap("<div class='editorToolbarWindow' />").parent().prepend("<span class='k-editortoolbar-dragHandle'><span class='k-icon k-i-handler-drag'></span></span>").kendoWindow({ title: false, resizable: false, draggable: { dragHandle: ".k-editortoolbar-dragHandle" }, animation: { open: { effects: "fade:in" }, close: { effects: "fade:out" } }, minHeight: 42, visible: false, autoFocus: false, actions: [], dragend: function() {
            this._moved = true;
          } }).on("mousedown", function(n3) {
            e2(n3.target).is(".k-icon") || (t3.preventPopupHide = true);
          }).on("focusout", function() {
            t3.options.editor.element.focusout();
          }).data("kendoWindow");
        }, _toggleOverflowStyles: function(e3, t3) {
          e3.find("> li").toggleClass("k-item", t3).find(".k-tool:not(.k-disabled), .k-overflow-button").toggleClass("k-overflow-button", t3);
        }, _initOverflowPopup: function(t3) {
          var i3 = this;
          i3.overflowPopup = e2("<ul class='k-editor-overflow-popup k-overflow-container k-list-container'></ul>").appendTo("body").kendoPopup({ anchor: t3, origin: n2.support.isRtl(i3.element) ? "bottom left" : "bottom right", position: n2.support.isRtl(i3.element) ? "top left" : "top right", copyAnchorStyles: false, open: function(e3) {
            this.element.is(":empty") && e3.preventDefault(), i3._toggleOverflowStyles(this.element, true), t3.attr("aria-expanded", true);
          }, close: function() {
            t3.attr("aria-expanded", false);
          }, activate: i3.focusOverflowPopup.bind(i3) }).data("kendoPopup");
        }, items: function() {
          var e3, t3, n3 = this.options.resizable && this.options.resizable.toolbar;
          return t3 = this.element.children().find("> *, select"), n3 && (e3 = this.overflowPopup, t3 = t3.add(e3.element.children().find("> *"))), t3;
        }, focused: function() {
          var t3 = n2._activeElement(), i3 = this.window, a3 = this.overflowPopup;
          return i3 && e2(t3).closest(i3.wrapper).length || a3 && a3.visible();
        }, toolById: function(e3) {
          var t3, n3 = this.tools;
          for (t3 in n3) if (t3.toLowerCase() == e3) return n3[t3];
        }, toolGroupFor: function(t3) {
          var n3, i3 = this.groups;
          if (this.isCustomTool(t3)) return "custom";
          for (n3 in i3) if (e2.inArray(t3, i3[n3]) >= 0) return n3;
        }, bindTo: function(t3) {
          var n3 = this, i3 = n3.window;
          n3._editor && n3._editor.unbind("select", n3.resize.bind(n3)), n3._editor = t3, n3.options.resizable && n3.options.resizable.toolbar && t3.options.tools.push(f2), n3.tools = n3.expandTools(t3.options.tools), n3.render(), n3.element.find(".k-combobox .k-input-inner").on("keydown", function(t4) {
            var n4 = e2(this).closest(".k-combobox").data("kendoComboBox"), i4 = t4.keyCode;
            i4 == s2.RIGHT || i4 == s2.LEFT ? n4.close() : i4 == s2.DOWN && (n4.dropDown.isOpened() || (t4.stopImmediatePropagation(), n4.open()));
          }), n3._attachEvents(), n3.items().each(function() {
            var i4 = n3._toolName(this), a3 = "moreVertical" !== i4 ? n3.tools[i4] : n3.tools.overflowAnchor, r3 = a3 && a3.options, o3 = t3.options.messages, s3 = r3 && r3.tooltip || o3[i4], l3 = e2(this);
            if (a3 && a3.initialize) {
              if ("fontSize" == i4 || "fontName" == i4) {
                var d3 = o3[i4 + "Inherit"];
                l3.find("input").val(d3).end().find("span.k-input-inner").text(d3).end();
              }
              a3.initialize(l3, { title: n3._appendShortcutSequence(s3, a3), editor: n3._editor }), l3.closest(".k-dropdownlist", n3.element).addClass("k-editor-widget"), l3.closest(".k-combobox", n3.element).addClass("k-editor-widget"), l3.closest(".k-colorpicker", n3.element).next(".k-colorpicker").addClass("k-editor-widget");
            }
          }), t3.bind("select", n3.resize.bind(n3)), n3.update(), i3 && i3.wrapper.css({ top: "", left: "", width: "" });
        }, show: function() {
          var e3, t3, i3, a3 = this, r3 = a3.window, o3 = a3.options.editor, s3 = n2.support.browser;
          r3 && (e3 = r3.wrapper, t3 = o3.element, e3.is(":visible") && a3.window.options.visible || (e3[0].style.width || e3.width(this._getWindowWidth()), r3._moved || (i3 = t3.offset(), e3.css({ top: Math.max(0, parseInt(i3.top, 10) - h2(e3) - parseInt(a3.window.element.css("padding-bottom"), 10)), left: Math.max(0, parseInt(i3.left, 10)) })), (s3.msie || s3.edge) && a3._overlaps(t3) ? setTimeout(function() {
            r3.open();
          }, 0) : r3.open()));
        }, _getWindowWidth: function() {
          var e3 = this.window.wrapper, t3 = this.options.editor.element;
          return p2(t3) - parseInt(e3.css("border-left-width"), 10) - parseInt(e3.css("border-right-width"), 10);
        }, _overlaps: function(e3) {
          var t3 = this.window.wrapper, n3 = t3.offset(), i3 = n3.left, a3 = n3.top, r3 = e3.offset(), o3 = r3.left, s3 = r3.top;
          return !(o3 + e3.width() < i3 || o3 > i3 + t3.width() || s3 + e3.height() < a3 || s3 > a3 + t3.height());
        }, hide: function() {
          this.window && this.window.close();
        }, focus: function() {
          var e3 = "tabIndex", t3 = this.element, n3 = this._editor.element.attr(e3);
          t3.attr(e3, n3 || 0).trigger("focus").find(m2).first().trigger("focus"), n3 || 0 === n3 || t3.removeAttr(e3);
        }, focusOverflowPopup: function() {
          var e3 = "tabIndex", t3 = this.overflowPopup.element, n3 = this._editor.element.attr(e3);
          t3.closest(".k-animation-container").addClass("k-overflow-wrapper"), t3.attr(e3, n3 || 0).find(m2).first().trigger("focus"), n3 || 0 === n3 || t3.removeAttr(e3);
        }, _appendShortcutSequence: function(e3, t3) {
          if (!t3.key) return e3;
          var n3 = e3 + " (";
          return t3.ctrl && (n3 += "Ctrl + "), t3.shift && (n3 += "Shift + "), t3.alt && (n3 += "Alt + "), n3 += t3.key + ")";
        }, _nativeTools: ["insertLineBreak", "insertParagraph", "redo", "undo", "autoLink"], tools: {}, isCustomTool: function(e3) {
          return !(e3 in n2.ui.Editor.defaultTools);
        }, expandTools: function(t3) {
          var i3, r3, s3, l3, d3 = this._nativeTools, u3 = n2.deepExtend({}, n2.ui.Editor.defaultTools), c3 = {};
          for (r3 = 0; r3 < t3.length; r3++) l3 = (i3 = t3[r3]).name, e2.isPlainObject(i3) ? l3 && u3[l3] ? (c3[l3] = o2({}, u3[l3]), o2(c3[l3].options, i3)) : ((s3 = o2({ cssClass: "k-i-gear", type: "button", title: "" }, i3)).name || (s3.name = "custom"), s3.cssClass = "k-" + s3.name, s3.template || "button" != s3.type || (s3.template = a2.EditorUtils.buttonTemplate, s3.title = s3.title || s3.tooltip), c3[l3] = { options: s3 }) : u3[i3] && (c3[i3] = u3[i3]);
          for (r3 = 0; r3 < d3.length; r3++) c3[d3[r3]] || (c3[d3[r3]] = u3[d3[r3]]);
          return c3;
        }, render: function() {
          var t3, i3, a3, r3, o3, s3, l3, d3, u3 = this, c3 = u3.tools, p3 = u3._editor.element, h3 = u3.element.empty(), m3 = u3._editor.options.tools, g3 = 0, v3 = u3.options.resizable && u3.options.resizable.toolbar, _3 = this.overflowFlaseTools;
          function b2(e3) {
            var i4 = "";
            return e3.getHtml ? i4 = e3.getHtml() : (n2.isFunction(e3) || (e3 = n2.template(e3)), i4 = e3(t3)), n2.trim(i4);
          }
          function k2() {
            l3.children().length && (v3 && (l3.data("position", g3), g3++), l3.appendTo(h3));
          }
          function w(t4) {
            t4 !== f2 ? (l3 = e2("<li class='k-tool-group' role='presentation' />")).data("overflow", -1 === e2.inArray(t4, _3)) : l3 = e2("<li class='k-overflow-tools' />");
          }
          for (h3.empty(), m3.length && (r3 = m3[0].name || m3[0]), w(r3), d3 = 0; d3 < m3.length; d3++) r3 = m3[d3].name || m3[d3], !(t3 = c3[r3] && c3[r3].options) && e2.isPlainObject(r3) && (t3 = r3), i3 = t3 && t3.template, "break" == r3 && (k2(), e2("<li class='k-row-break' role='presentation' />").appendTo(u3.element), w(r3)), i3 && (o3 == (s3 = u3.toolGroupFor(r3)) && r3 != f2 || (k2(), w(r3), o3 = s3), r3 == f2 && (i3.options.title = u3.options.messages.overflowAnchor), i3 = b2(i3), a3 = e2(i3).appendTo(l3), "custom" == s3 && (k2(), w(r3)), t3.exec && a3.hasClass("k-tool") && a3.on("click", t3.exec.bind(p3[0])));
          k2(), e2(u3.element).children(":has(> .k-tool)").not(".k-overflow-tools").addClass("k-button-group"), u3.updateGroups(), v3 && u3._initOverflowPopup(u3.element.find(".k-overflow-anchor")), u3.angular("compile", function() {
            return { elements: u3.element };
          });
        }, updateGroups: function() {
          e2(this.element).children().not(".k-overflow-tools").each(function() {
            e2(this).children().removeClass("k-group-start k-group-end").first().addClass("k-group-start").end().last().addClass("k-group-end").end();
          });
        }, decorateFrom: function(t3) {
          this.items().filter(".k-decorated").each(function() {
            var n3 = e2(this).data("kendoSelectBox");
            n3 && n3.decorate(t3);
          });
        }, destroy: function() {
          r2.fn.destroy.call(this);
          var e3, t3 = this.tools;
          for (e3 in t3) t3[e3].destroy && t3[e3].destroy();
          this.window && this.window.destroy(), this._resizeHandler && n2.unbindResize(this._resizeHandler), this.overflowPopup && this.overflowPopup.destroy();
        }, _attachEvents: function() {
          var t3 = this, n3 = t3.overflowPopup ? t3.overflowPopup.element : e2([]);
          t3.attachToolsEvents(t3.element.add(n3));
        }, attachToolsEvents: function(t3) {
          var i3 = this, a3 = "[role=button].k-tool", r3 = a3 + ":not(.k-disabled), [role=button].k-i-import:not(.k-disabled)", o3 = a3 + ".k-disabled", d3 = [a3, ".k-dropdownlist", ".k-colorpicker"].join(",");
          t3.off(l2).on("mouseenter" + l2, r3, function() {
            e2(this).addClass("k-hover");
          }).on("mouseleave" + l2, r3, function() {
            e2(this).removeClass("k-hover");
          }).on("mousedown" + l2, d3, function(e3) {
            e3.preventDefault();
          }).on("keydown" + l2, m2, function(t4) {
            var a4, r4, o4, l3 = this, d4 = i3.options.resizable && i3.options.resizable.toolbar, u3 = n2.support.isRtl(i3.element) ? -1 : 1, c3 = t4.keyCode;
            function p3(e3, t5, n3) {
              var i4 = t5.find(m2), a5 = i4.index(l3) + e3;
              return n3 && (a5 = Math.max(0, Math.min(i4.length - 1, a5))), i4[a5];
            }
            c3 == s2.RIGHT || c3 == s2.LEFT ? r4 = e2(l3).is(".k-dropdownlist") ? e2(l3) : p3(c3 == s2.RIGHT ? 1 * u3 : -1 * u3, i3.element, true) : !d4 || c3 != s2.UP && c3 != s2.DOWN ? c3 == s2.HOME ? (r4 = i3.element.find(m2)[0], t4.preventDefault()) : c3 == s2.END ? (r4 = (a4 = i3.element.find(m2).filter(function() {
              return "hidden" !== e2(this).css("visibility");
            }))[a4.length - 1], t4.preventDefault()) : c3 == s2.ESC ? (i3.overflowPopup && i3.overflowPopup.visible() && i3.overflowPopup.close(), r4 = i3._editor) : c3 != s2.TAB || t4.ctrlKey || t4.altKey || (o4 = d4 && e2(l3.parentElement).hasClass("k-overflow-tool-group") ? i3.overflowPopup.element : i3.element, t4.shiftKey ? r4 = p3(-1, o4) : (r4 = p3(1, o4)) && "hidden" !== e2(r4).closest(".k-overflow-tools").css("visibility") || (r4 = i3._editor)) : r4 = p3(c3 == s2.DOWN ? 1 : -1, i3.overflowPopup.element, true), r4 && (t4.preventDefault(), r4.focus()), c3 !== s2.ENTER && c3 !== s2.SPACEBAR || !e2(l3).is("button") && !e2(l3).is("a") || e2(l3).attr("href") || i3._executeToolCommand(l3, t4);
          }).on("click" + l2, r3, function(e3) {
            i3._executeToolCommand(this, e3);
          }).on("click" + l2, o3, function(e3) {
            e3.preventDefault();
          });
        }, _executeToolCommand: function(t3, n3) {
          var i3 = e2(t3);
          n3.preventDefault(), n3.stopPropagation(), i3.removeClass("k-hover"), i3.is("[data-popup]") || this._editor.exec(this._toolName(t3));
        }, _toolName: function(t3) {
          if (t3) {
            var i3 = t3.className;
            /k-tool\b/i.test(i3) && (i3 = t3.firstChild.className);
            var a3 = e2.grep(i3.split(" "), function(e3) {
              return !/^k-(widget|tool|tool-icon|icon|state-hover|header|combobox|dropdown|selectbox|colorpicker)$/i.test(e3);
            });
            if (a3[0]) {
              var r3 = a3[0];
              return g2[r3] && (r3 = g2[r3]), r3.indexOf("k-i-") >= 0 ? n2.toCamelCase(r3.substring(r3.indexOf("k-i-") + 4)) : r3.substring(r3.lastIndexOf("-") + 1);
            }
            return "custom";
          }
        }, refreshTools: function() {
          var t3 = this, n3 = t3._editor, i3 = n3.getRange(), r3 = a2.RangeUtils.textNodes(i3), o3 = n3.options.immutables, s3 = t3._immutablesContext(i3);
          (r3 = a2.Dom.filterBy(r3, a2.Dom.htmlIndentSpace, true)).length || (r3 = [i3.startContainer]), t3.items().each(function() {
            var i4 = t3.tools[t3._toolName(this)];
            if (i4) {
              var a3 = e2(this);
              i4.update && i4.update(a3, r3, n3.undoRedoStack), o3 && t3._updateImmutablesState(i4, a3, s3);
            }
          }), this.update();
        }, _immutablesContext: function(e3) {
          if (this._editor.options.immutables) return e3.collapsed ? a2.Immutables.immutablesContext(e3) : 0 === a2.RangeUtils.editableTextNodes(e3).length;
        }, _updateImmutablesState: function(t3, n3, i3) {
          var r3 = t3.name, o3 = n3, s3 = t3.options.trackImmutables;
          if (void 0 === s3 && (s3 = e2.inArray(r3, a2.Immutables.toolsToBeUpdated) > -1), s3) {
            var l3 = i3 ? "none" : "";
            if (!n3.is(".k-tool")) {
              var d3 = n3.data();
              for (var u3 in d3) if (u3.match(/^kendo[A-Z][a-zA-Z]*/)) {
                o3 = d3[u3].wrapper;
                break;
              }
            }
            o3.css("display", l3);
            var c3 = o3.closest("li");
            0 === c3.children(":visible").length && c3.css("display", l3);
          }
        }, update: function() {
          this.updateGroups();
        }, _resize: function(e3) {
          var t3 = e3.width, n3 = this.options.resizable && this.options.resizable.toolbar, i3 = this.overflowPopup, a3 = this.options.editor.element, r3 = this.window;
          this.refreshTools(), n3 && (r3 && (r3.wrapper.width(this._getWindowWidth()), r3._moved || r3.wrapper.css({ left: Math.max(0, parseInt(a3.offset().left, 10)) })), i3.visible() && i3.close(true), this._refreshWidths(), this._shrink(t3), this._stretch(t3), this._toggleOverflowStyles(this.element, false), this._toggleOverflowStyles(this.overflowPopup.element, true), this.element.children("li.k-overflow-tools").css("visibility", i3.element.is(":empty") ? "hidden" : "visible"));
        }, _refreshWidths: function() {
          this.element.children("li").each(function(t3, n3) {
            var i3 = e2(n3);
            i3.data("outerWidth", p2(i3, true));
          });
        }, _shrink: function(e3) {
          var t3, n3;
          if (e3 < this._groupsWidth()) for (var i3 = (n3 = this._visibleGroups().filter(":not(.k-overflow-tools)")).length - 1; i3 >= 0 && (t3 = n3.eq(i3), !(e3 > this._groupsWidth())); i3--) this._hideGroup(t3);
        }, _stretch: function(e3) {
          var t3, n3;
          if (e3 > this._groupsWidth()) {
            n3 = this._hiddenGroups();
            for (var i3 = 0; i3 < n3.length && (t3 = n3.eq(i3), !(e3 < this._groupsWidth()) && this._showGroup(t3, e3)); i3++) ;
          }
        }, _hiddenGroups: function() {
          var t3 = this.overflowPopup, n3 = this.element.children("li.k-tool-group").filter(":hidden");
          return (n3 = n3.add(t3.element.children("li"))).sort(function(t4, n4) {
            return e2(t4).data("position") > e2(n4).data("position") ? 1 : -1;
          }), n3;
        }, _visibleGroups: function() {
          return this.element.children("li.k-tool-group, li.k-overflow-tools").filter(":visible");
        }, _groupsWidth: function() {
          var t3 = 0;
          return this._visibleGroups().each(function() {
            t3 += e2(this).data("outerWidth");
          }), Math.ceil(t3);
        }, _hideGroup: function(e3) {
          if (e3.data("overflow")) {
            var t3 = this.overflowPopup;
            e3.detach().prependTo(t3.element).addClass("k-overflow-tool-group");
          } else e3.addClass("k-hidden");
        }, _showGroup: function(t3, n3) {
          var i3, a3, r3;
          return !!t3.hasClass("k-disabled") || (t3.hasClass("k-overflow-tool-group") ? r3 = t3.data("outerWidth") : (t3.removeClass("k-hidden"), r3 = p2(t3, true), t3.addClass("k-hidden")), !!(t3.length && n3 > this._groupsWidth() + r3) && (t3.hasClass("k-overflow-tool-group") ? (0 === (i3 = t3.data("position")) ? t3.detach().prependTo(this.element) : (a3 = this.element.children().filter(function(t4, n4) {
            return e2(n4).data("position") === i3 - 1;
          }), t3.detach().insertAfter(a3)), t3.removeClass("k-overflow-tool-group")) : t3.removeClass("k-hidden"), true));
        } });
        e2.extend(a2, { Toolbar: _2 });
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.EditorUtils, o2 = a2.Command, s2 = a2.Tool, l2 = a2.ToolTemplate, d2 = a2.Dom, u2 = o2.extend({ init: function(e3) {
          var t3 = this;
          t3.options = e3, o2.fn.init.call(t3, e3), t3.attributes = null, t3.async = true;
        }, exec: function() {
          var i3, a3, o3 = this, s3 = o3.editor, l3 = s3.options, c2 = s3.options.messages, p2 = e2(n2.template(u2.template)(c2)).appendTo(document.body), h2 = ".k-editor-textarea > textarea";
          function f2(e3) {
            e3.preventDefault(), p2.data("kendoWindow").destroy(), s3.immutables && (s3.immutables.serializedImmutables = {}), s3.focus();
          }
          l3.serialization.immutables = s3.immutables, a3 = d2.getAllComments(s3.body), i3 = r2.cacheComments(s3.value(), a3), i3 = u2.indent(i3), i3 = r2.retrieveComments(i3, a3), l3.serialization.immutables = t2, this.createDialog(p2, { title: c2.viewHtml, width: 600, height: 400, resizable: true, close: f2, visible: false }).find(h2).val(i3).end().find(".k-dialog-update").on("click", function(e3) {
            l3.deserialization.immutables = s3.immutables, s3.value(p2.find(h2).val()), l3.deserialization.immutables = t2, f2(e3), o3.change && o3.change(), s3.trigger("change");
          }).end().find(".k-dialog-close").on("click", f2).end().data("kendoWindow").center().open(), p2.find(h2).trigger("focus");
        } });
        i2(u2, { template: "<div class='k-editor-dialog k-popup-edit-form k-viewhtml-dialog'><span class='k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea'><textarea class='k-input-inner !k-overflow-auto !k-resize-none'></textarea></span><div class='k-edit-buttons'><button class='k-dialog-update k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'><span class='k-button-text'>#: dialogUpdate #</span></button><button class='k-dialog-close k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'><span class='k-button-text'>#: dialogCancel #</span></button></div></div>", indent: function(e3) {
          return e3.replace(/<\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/gi, "</$1>\n").replace(/<(ul|ol)([^>]*)><li/gi, "<$1$2>\n<li").replace(/<br \/>/gi, "<br />\n").replace(/\n$/, "");
        } }), n2.ui.editor.ViewHtmlCommand = u2, a2.EditorUtils.registerTool("viewHtml", new s2({ command: u2, template: new l2({ template: r2.buttonTemplate, title: "View HTML" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = e2.extend, i2 = t2.ui.editor, a2 = i2.Tool, r2 = i2.Command, o2 = i2.EditorUtils, s2 = r2.extend({ init: function(e3) {
          e3.formatter = e3.formatter();
          var t3 = e3.formatter.finder;
          t3 && o2.formatByName("immutable", t3.format) && t3._initOptions({ immutables: e3.immutables }), r2.fn.init.call(this, e3);
        } }), l2 = a2.extend({ init: function(e3) {
          a2.fn.init.call(this, e3);
        }, command: function(e3) {
          return new s2(n2(e3, { formatter: this.options.formatter }));
        }, update: function(e3, t3) {
          var n3 = this.options.finder.isFormatted(t3);
          e3.toggleClass("k-selected", n3), e3.attr("aria-pressed", n3);
        } });
        e2.extend(i2, { FormatCommand: s2, FormatTool: l2 });
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = t2.ui.editor, a2 = t2.ui.Editor.fn.options.formats, r2 = i2.EditorUtils, o2 = i2.Tool, s2 = i2.ToolTemplate, l2 = i2.FormatTool, d2 = i2.Dom, u2 = i2.RangeUtils, c2 = e2.extend, p2 = i2.EditorUtils.registerTool, h2 = i2.EditorUtils.registerFormat, f2 = "mousedown.kendoEditor", m2 = "k-marker", g2 = n2.extend({ init: function(e3) {
          this.format = e3;
        }, numberOfSiblings: function(e3) {
          var t3, n3 = 0, i3 = 0, a3 = 0, r3 = e3.parentNode;
          for (t3 = r3.firstChild; t3; t3 = t3.nextSibling) t3 != e3 && (t3.className == m2 ? a3++ : 3 == t3.nodeType ? n3++ : i3++);
          return a3 > 1 && r3.firstChild.className == m2 && r3.lastChild.className == m2 ? 0 : i3 + n3;
        }, findSuitable: function(e3, t3) {
          if (!t3 && this.numberOfSiblings(e3) > 0) return null;
          for (var n3 = e3.parentNode, i3 = this.format[0].tags; !d2.ofType(n3, i3); ) {
            if (this.numberOfSiblings(n3) > 0) return null;
            n3 = n3.parentNode;
          }
          return n3;
        }, findFormat: function(e3) {
          var t3, n3, i3, a3, r3, o3 = this.format, s3 = d2.attrEquals;
          for (t3 = 0, n3 = o3.length; t3 < n3; t3++) {
            if (i3 = e3, a3 = o3[t3].tags, r3 = o3[t3].attr, i3 && d2.ofType(i3, a3) && s3(i3, r3)) return i3;
            for (; i3; ) if ((i3 = d2.parentOfType(i3, a3)) && s3(i3, r3)) return i3;
          }
          return null;
        }, isFormatted: function(e3) {
          var t3, n3;
          for (t3 = 0, n3 = e3.length; t3 < n3; t3++) if (this.findFormat(e3[t3])) return true;
          return false;
        } }), v2 = n2.extend({ init: function(e3, t3) {
          this.finder = new g2(e3), this.attributes = c2({}, e3[0].attr, t3), this.tag = e3[0].tags[0];
        }, wrap: function(e3) {
          return d2.wrap(e3, d2.create(e3.ownerDocument, this.tag, this.attributes));
        }, activate: function(e3, t3) {
          this.finder.isFormatted(t3) ? (this.split(e3), this.remove(t3)) : this.apply(t3);
        }, toggle: function(e3) {
          var t3 = (this.immutables() ? u2.editableTextNodes : u2.textNodes)(e3);
          t3.length > 0 && this.activate(e3, t3);
        }, immutables: function() {
          return this.editor && this.editor.options.immutables;
        }, apply: function(e3) {
          var t3, n3, i3, a3, r3 = [];
          if (e3.length > 1) for (t3 = 0, n3 = e3.length; t3 < n3; t3++) i3 = e3[t3], a3 = this.format(i3, true), r3.push(a3);
          else i3 = e3[0], a3 = this.format(i3, false);
          this.consolidate(r3);
        }, format: function(e3, t3) {
          var n3 = this.finder.findSuitable(e3), i3 = this.attributes, a3 = i3 && i3.style || {};
          if (n3) d2.is(n3, "font") && (a3.color && n3.removeAttribute("color"), a3.fontName && n3.removeAttribute("face"), a3.fontSize && n3.removeAttribute("size")), d2.attr(n3, i3);
          else {
            for (; !d2.isBlock(e3.parentNode) && 1 == e3.parentNode.childNodes.length && "true" !== e3.parentNode.contentEditable && t3; ) e3 = e3.parentNode;
            n3 = this.wrap(e3);
          }
          return n3;
        }, remove: function(e3) {
          var t3, n3, i3;
          for (t3 = 0, n3 = e3.length; t3 < n3; t3++) (i3 = this.finder.findFormat(e3[t3])) && (this.attributes && this.attributes.style ? (d2.unstyle(i3, this.attributes.style), i3.style.cssText || i3.attributes.class || d2.unwrap(i3)) : d2.unwrap(i3));
        }, split: function(e3) {
          var t3, n3, i3 = u2.textNodes(e3), a3 = i3.length;
          if (a3 > 0) for (t3 = 0; t3 < a3; t3++) (n3 = this.finder.findFormat(i3[t3])) && u2.split(e3, n3, true);
        }, consolidate: function(e3) {
          for (var t3, n3; e3.length > 1; ) if (t3 = e3.pop(), n3 = e3[e3.length - 1], t3.previousSibling && t3.previousSibling.className == m2 && n3.appendChild(t3.previousSibling), t3.tagName == n3.tagName && t3.previousSibling == n3 && t3.style.cssText == n3.style.cssText && t3.className === n3.className) {
            for (; t3.firstChild; ) n3.appendChild(t3.firstChild);
            d2.remove(t3);
          }
        } }), _2 = g2.extend({ init: function(e3, t3, n3) {
          this.format = e3, this.greedyProperty = t3, this.fontAttr = n3, g2.fn.init.call(this, e3);
        }, getInlineCssValue: function(e3) {
          var n3, i3, a3, r3, o3, s3, l3, u3, c3, p3, h3, f3, m3 = e3.attributes, g3 = t2.trim;
          if (m3) for (n3 = 0, i3 = m3.length; n3 < i3; n3++) {
            if (r3 = (a3 = m3[n3]).nodeName, o3 = a3.nodeValue, a3.specified && "style" == r3) {
              for (u3 = 0, c3 = (s3 = g3(o3 || e3.style.cssText).split(";")).length; u3 < c3; u3++) if ((l3 = s3[u3]).length) {
                if (h3 = g3((p3 = l3.split(":"))[0].toLowerCase()), f3 = g3(p3[1]), h3 != this.greedyProperty) continue;
                return h3.indexOf("color") >= 0 ? d2.toHex(f3) : f3;
              }
            }
            if (this.fontAttr && a3.specified && r3 == this.fontAttr) return h3 = a3.nodeValue, f3 = a3.nodeValue, h3.indexOf("color") >= 0 ? d2.toHex(f3) : f3;
          }
        }, getFormatInner: function(t3) {
          var n3, i3, a3, r3 = e2(d2.isDataNode(t3) ? t3.parentNode : t3).parentsUntil("[contentEditable]").addBack().toArray().reverse();
          for (n3 = 0, i3 = r3.length; n3 < i3; n3++) if (a3 = "className" == this.greedyProperty ? r3[n3].className : this.getInlineCssValue(r3[n3])) return a3;
          return "inherit";
        }, getFormat: function(e3) {
          var t3, n3, i3 = this.getFormatInner(e3[0]);
          for (t3 = 1, n3 = e3.length; t3 < n3; t3++) if (i3 != this.getFormatInner(e3[t3])) return "";
          return i3;
        }, isFormatted: function(e3) {
          return "" !== this.getFormat(e3);
        } }), b2 = v2.extend({ init: function(e3, n3, i3) {
          v2.fn.init.call(this, e3, n3), this.values = n3, this.finder = new _2(e3, i3), i3 && (this.greedyProperty = t2.toCamelCase(i3));
        }, activate: function(e3, t3) {
          var n3 = this.greedyProperty, i3 = "apply";
          this.split(e3), n3 && "inherit" == this.values.style[n3] && (i3 = "remove"), this[i3](t3);
        } }), k2 = l2.extend({ init: function(e3) {
          l2.fn.init.call(this, c2(e3, { finder: new g2(e3.format), formatter: function() {
            return new v2(e3.format);
          } }));
        } }), w = o2.extend({ update: function(e3, t3) {
          var n3 = e3.data(this.type);
          n3.close(), n3.value(this.finder.getFormat(t3));
        } }), y = w.extend({ init: function(e3) {
          o2.fn.init.call(this, e3), this.type = t2.support.browser.msie || t2.support.touch ? "kendoDropDownList" : "kendoComboBox", this.format = [{ tags: ["span", "font"] }], this.finder = new _2(this.format, e3.cssAttr, e3.fontAttr);
        }, command: function(e3) {
          var t3 = this.options, n3 = this.format, a3 = {};
          return new i2.FormatCommand(c2(e3, { formatter: function() {
            return a3[t3.domAttr] = e3.value, new b2(n3, { style: a3 }, t3.cssAttr);
          } }));
        }, initialize: function(e3, n3) {
          var i3, a3, r3 = n3.editor, s3 = this.options, l3 = s3.name, d3 = [];
          s3.defaultValue && (d3 = [{ text: r3.options.messages[s3.defaultValue[0].text], value: s3.defaultValue[0].value }]), i3 = d3.concat(s3.items ? s3.items : r3.options[l3] || []), e3.attr({ title: n3.title }), e3[this.type]({ dataTextField: "text", dataValueField: "value", dataSource: i3, change: function() {
            r3._range = a3, o2.exec(r3, l3, this.value());
          }, close: function() {
            setTimeout(function() {
              r3._deleteSavedRange();
            }, 0);
          }, highlightFirst: false }), e3.closest(".k-combobox").removeClass("k-" + l3).find("*").addBack().attr("unselectable", "on");
          var u3 = e3.data(this.type);
          u3.value("inherit"), u3.wrapper.on(f2, ".k-select,.k-input-button,.k-input", function() {
            var e4 = r3.getRange();
            a3 = r3._containsRange(e4) ? e4 : a3;
          }).on("keydown.kendoEditor", function(e4) {
            e4.keyCode === t2.keys.ENTER && (r3._deleteSavedRange(), e4.preventDefault());
          });
        } }), x = o2.extend({ init: function(e3) {
          o2.fn.init.call(this, e3), this.format = [{ tags: ["span", "font"] }], this.finder = new _2(this.format, e3.cssAttr);
        }, options: { palette: "websafe", columns: 18 }, update: function() {
          this._widget.close();
        }, command: function(e3) {
          var t3 = this.options, n3 = this.format, a3 = {};
          return new i2.FormatCommand(c2(e3, { formatter: function() {
            return a3[t3.domAttr] = e3.value, new b2(n3, { style: a3 }, t3.cssAttr);
          } }));
        }, initialize: function(n3, i3) {
          var a3 = this, s3 = i3.editor, l3 = this.name, d3 = c2({}, x.fn.options, this.options), u3 = d3.palette, p3 = d3.columns;
          (n3 = this._widget = new t2.ui.ColorPicker(n3, { closeOnSelect: true, views: ["palette"], preview: false, input: false, buttons: false, toolIcon: "k-icon k-i-" + r2.getToolCssClass(d3.name), palette: u3, columns: p3, change: function() {
            var e3 = n3.value();
            t2.support.browser.msie && a3.storedRange && a3._inputFocused && s3.selectRange(a3.storedRange), e3 && o2.exec(s3, l3, e3), delete a3.storedRange, delete a3._inputFocused, s3.focus();
          }, open: function(t3) {
            var n4 = t3.sender;
            a3.storedRange = s3.getRange(), n4._popup.element.on(f2, function(t4) {
              e2(t4.target).is("input.k-color-value") || t4.preventDefault();
            }), n4._popup.element.is("[unselectable='on']") || n4._popup.element.attr({ unselectable: "on" }).find("*:not(input)").attr("unselectable", "on").end().find("input").on("focus", function() {
              a3._inputFocused = true;
            }), setTimeout(function() {
              n4._popup.element.find(".k-colorpalette").trigger("focus");
            });
          }, close: function(e3) {
            e3.sender._popup.element.off(f2), t2.support.browser.msie && a3.storedRange && a3._inputFocused && s3.selectRange(a3.storedRange);
          }, activate: function(e3) {
            e3.preventDefault(), "rgba(255, 255, 255, 0)" !== e3.sender._value.toCssRgba() && n3.trigger("change");
          } })).wrapper.attr({ title: i3.title, unselectable: "on" }).find("*:not(input)").attr("unselectable", "on"), n3.value("transparent");
        } });
        c2(i2, { InlineFormatFinder: g2, InlineFormatter: v2, DelayedExecutionTool: w, GreedyInlineFormatFinder: _2, GreedyInlineFormatter: b2, InlineFormatTool: k2, FontTool: y, ColorTool: x }), h2("bold", [{ tags: ["strong", "b"] }, { tags: ["span"], attr: { style: { fontWeight: "bold" } } }]), p2("bold", new k2({ key: "B", ctrl: true, format: a2.bold, template: new s2({ template: r2.buttonTemplate, title: "Bold" }) })), h2("italic", [{ tags: ["em", "i"] }, { tags: ["span"], attr: { style: { fontStyle: "italic" } } }]), p2("italic", new k2({ key: "I", ctrl: true, format: a2.italic, template: new s2({ template: r2.buttonTemplate, title: "Italic" }) })), h2("underline", [{ tags: ["span"], attr: { style: { textDecoration: "underline" } } }, { tags: ["u"] }]), p2("underline", new k2({ key: "U", ctrl: true, format: a2.underline, template: new s2({ template: r2.buttonTemplate, title: "Underline" }) })), h2("strikethrough", [{ tags: ["del", "strike"] }, { tags: ["span"], attr: { style: { textDecoration: "line-through" } } }]), p2("strikethrough", new k2({ format: a2.strikethrough, template: new s2({ template: r2.buttonTemplate, title: "Strikethrough" }) })), h2("superscript", [{ tags: ["sup"] }]), p2("superscript", new k2({ format: a2.superscript, template: new s2({ template: r2.buttonTemplate, title: "Superscript" }) })), h2("subscript", [{ tags: ["sub"] }]), p2("subscript", new k2({ format: a2.subscript, template: new s2({ template: r2.buttonTemplate, title: "Subscript" }) })), p2("foreColor", new x({ cssAttr: "color", fontAttr: "color", domAttr: "color", name: "foreColor", template: new s2({ template: r2.colorPickerTemplate, title: "Color" }) })), p2("backColor", new x({ cssAttr: "background-color", domAttr: "backgroundColor", name: "backColor", template: new s2({ template: r2.colorPickerTemplate, title: "Background Color" }) })), p2("fontName", new y({ cssAttr: "font-family", fontAttr: "face", domAttr: "fontFamily", name: "fontName", defaultValue: [{ text: "fontNameInherit", value: "inherit" }], template: new s2({ template: r2.comboBoxTemplate, title: "Font Name" }) })), p2("fontSize", new y({ cssAttr: "font-size", fontAttr: "size", domAttr: "fontSize", name: "fontSize", defaultValue: [{ text: "fontSizeInherit", value: "inherit" }], template: new s2({ template: r2.comboBoxTemplate, title: "Font Size" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class, a2 = e2.extend, r2 = n2.ui.editor, o2 = r2.Dom, s2 = r2.RangeUtils, l2 = r2.EditorUtils, d2 = r2.Command, u2 = r2.Tool, c2 = r2.ToolTemplate, p2 = r2.InlineFormatter, h2 = r2.InlineFormatFinder, f2 = s2.textNodes, m2 = s2.editableTextNodes, g2 = r2.EditorUtils.registerTool, v2 = n2.keys, _2 = "http://", b2 = /^\w*:\/\//, k2 = /[\w\/\$\-_\*\?]/i, w = i2.extend({ findSuitable: function(e3) {
          return o2.parentOfType(e3, ["a"]);
        } }), y = i2.extend({ init: function() {
          this.finder = new w();
        }, apply: function(e3, t3) {
          var n3, i3, a3, r3, l3, d3 = this.immutables ? m2(e3) : f2(e3);
          if (t3.innerText) {
            i3 = s2.documentFromRange(e3), n3 = s2.getMarkers(e3), e3.deleteContents(), r3 = o2.create(i3, "a", t3), e3.insertNode(r3), l3 = r3.parentNode, "a" == o2.name(l3) && o2.insertAfter(r3, l3), o2.emptyNode(l3) && o2.remove(l3);
            for (var u3 = r3, c3 = 0; c3 < n3.length; c3++) o2.insertAfter(n3[c3], u3), u3 = n3[c3];
            n3.length && (o2.insertBefore(i3.createTextNode("\uFEFF"), n3[1] || n3[0]), o2.insertAfter(i3.createTextNode("\uFEFF"), n3[1] || n3[0]), e3.setStartBefore(n3[0]), e3.setEndAfter(n3[n3.length - 1]));
          } else (a3 = new p2([{ tags: ["a"] }], t3)).finder = this.finder, a3.apply(d3);
        } }), x = d2.extend({ init: function(e3) {
          var t3 = this;
          e3.formatter = { toggle: function(e4) {
            var n3 = t3.immutables() ? m2(e4) : f2(e4);
            new p2([{ tags: ["a"] }]).remove(n3);
          } }, this.options = e3, d2.fn.init.call(this, e3);
        } }), C = d2.extend({ init: function(e3) {
          var t3;
          this.options = e3, d2.fn.init.call(this, e3), this.formatter = new y(), e3.url ? this.exec = function() {
            this.formatter.immutables = t3, this.formatter.apply(e3.range, { href: e3.url, innerText: e3.text || e3.url, target: e3.target });
          } : (this.attributes = null, this.async = true);
        }, _dialogTemplate: function() {
          return n2.template(`<div class="k-editor-dialog k-popup-edit-form"><div class="k-edit-form-container"><div class='k-edit-label'><label for='k-editor-link-url'>#: messages.linkWebAddress #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type='text' class='k-input-inner' id='k-editor-link-url'></span></div><div class='k-edit-label k-editor-link-text-row'><label for='k-editor-link-text'>#: messages.linkText #</label></div><div class='k-edit-field k-editor-link-text-row'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type='text' class='k-input-inner' id='k-editor-link-text'></span></div><div class='k-edit-label'><label for='k-editor-link-title'>#: messages.linkToolTip #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type='text' class='k-input-inner' id='k-editor-link-title'></span></div><div class='k-edit-label'></div><div class='k-edit-field'><input type='checkbox' class='k-checkbox k-checkbox-md k-rounded-md' id='k-editor-link-target'><label for='k-editor-link-target' class='k-checkbox-label'>#: messages.linkOpenInNewWindow #</label></div><div class='k-edit-buttons'><button class="k-dialog-insert k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary"><span class="k-button-text">#: messages.dialogInsert #</span></button><button class="k-dialog-close k-button k-button-md k-rounded-md k-button-solid k-button-solid-base"><span class="k-button-text">#: messages.dialogCancel #</span></button></div></div></div>`)({ messages: this.editor.options.messages });
        }, exec: function() {
          var t3 = this.editor.options.messages;
          this._initialText = "", this._range = this.lockRange(true), this.formatter.immutables = this.immutables();
          var n3 = f2(this._range), i3 = n3.length ? this.formatter.finder.findSuitable(n3[0]) : null, a3 = n3.length && "img" == o2.name(n3[0]), r3 = this.createDialog(this._dialogTemplate(), { title: t3.createLink, close: this._close.bind(this), visible: false });
          i3 && (this._range.selectNodeContents(i3), n3 = f2(this._range)), this._initialText = this.linkText(n3), r3.find(".k-dialog-insert").on("click", this._apply.bind(this)).end().find(".k-dialog-close").on("click", this._close.bind(this)).end().find(".k-edit-field input").on("keydown", this._keydown.bind(this)).end().find("#k-editor-link-url").val(this.linkUrl(i3)).end().find("#k-editor-link-text").val(this._initialText).end().find("#k-editor-link-title").val(i3 ? i3.title : "").end().find("#k-editor-link-target").attr("checked", !!i3 && "_blank" == i3.target).end().find(".k-editor-link-text-row").toggle(!a3), this._dialog = r3.data("kendoWindow").center().open(), e2("#k-editor-link-url", r3).trigger("focus").select();
        }, _keydown: function(e3) {
          var t3 = n2.keys;
          e3.keyCode == t3.ENTER ? this._apply(e3) : e3.keyCode == t3.ESC && this._close(e3);
        }, _apply: function(t3) {
          var i3, a3, r3, s3 = this._dialog.element, l3 = e2("#k-editor-link-url", s3).val(), d3 = e2("#k-editor-link-text", s3);
          l3 && l3 != _2 && (l3.indexOf("@") > 0 && !/^(\w+:)|(\/\/)/i.test(l3) && (l3 = "mailto:" + l3), this.attributes = { href: l3 }, (i3 = e2("#k-editor-link-title", s3).val()) && (this.attributes.title = i3), d3.is(":visible") && ((a3 = n2.trim(d3.val())) || this._initialText ? a3 && a3 !== this._initialText && (this.attributes.innerText = o2.stripBom(a3)) : this.attributes.innerText = l3), r3 = e2("#k-editor-link-target", s3).is(":checked"), this.attributes.target = r3 ? "_blank" : null, this.formatter.apply(this._range, this.attributes)), this._close(t3), this.change && this.change();
        }, _close: function(e3) {
          e3.preventDefault(), this._dialog.destroy(), o2.windowFromDocument(s2.documentFromRange(this._range)).focus(), this.releaseRange(this._range);
        }, linkUrl: function(e3) {
          return e3 ? e3.getAttribute("href", 2) : _2;
        }, linkText: function(e3) {
          var t3, n3 = "";
          for (t3 = 0; t3 < e3.length; t3++) n3 += e3[t3].nodeValue;
          return o2.stripBom(n3 || "");
        }, redo: function() {
          var e3 = this.lockRange(true);
          this.formatter.apply(e3, this.attributes), this.releaseRange(e3);
        } }), T = d2.extend({ init: function(e3) {
          d2.fn.init.call(this, e3), this.formatter = new y();
        }, exec: function() {
          var e3 = this.detectLink();
          if (e3) {
            var t3 = this.getRange(), i3 = new n2.ui.editor.Marker(), a3 = t3.cloneRange();
            a3.setStart(e3.start.node, e3.start.offset), a3.setEnd(e3.end.node, e3.end.offset), t3 = this.lockRange(), i3.add(a3), this.formatter.apply(a3, { href: this._ensureWebProtocol(e3.text) }), i3.remove(a3), this.releaseRange(t3);
          }
        }, detectLink: function() {
          var e3 = this.getRange(), t3 = e3.startContainer, n3 = e3.startOffset;
          !t3.previousSibling && (o2.isBom(t3) && !t3.nextSibling || !n3 && o2.isDataNode(t3)) && (t3 = t3.parentNode, n3 = 0);
          var i3 = new F({ node: t3, offset: n3, cancelAtNode: function(e4) {
            return e4 && "a" === o2.name(e4);
          } });
          return new I(i3).detectLink();
        }, changesContent: function() {
          return !!this.detectLink();
        }, _ensureWebProtocol: function(e3) {
          return this._hasProtocolPrefix(e3) ? e3 : this._prefixWithWebProtocol(e3);
        }, _hasProtocolPrefix: function(e3) {
          return b2.test(e3);
        }, _prefixWithWebProtocol: function(e3) {
          return _2 + e3;
        } }), S = u2.extend({ init: function(t3) {
          this.options = t3, this.finder = new h2([{ tags: ["a"] }]), u2.fn.init.call(this, e2.extend(t3, { command: x }));
        }, initialize: function(e3, t3) {
          u2.fn.initialize.call(this, e3, t3), e3.addClass("k-disabled");
        }, update: function(e3, t3) {
          e3.toggleClass("k-disabled", !this.finder.isFormatted(t3)).removeClass("k-hover");
        } }), I = i2.extend({ init: function(e3) {
          this.traverser = e3, this.start = E(), this.end = E(), this.text = "";
        }, detectLink: function() {
          var e3 = this.traverser.node, t3 = this.traverser.offset;
          if (o2.isDataNode(e3)) {
            var n3 = e3.data.substring(0, t3);
            if (/\s{2}$/.test(o2.stripBom(n3))) return;
          } else if (0 === t3) {
            var i3 = o2.closestEditableOfType(e3, o2.blockElements);
            i3 && i3.previousSibling && this.traverser.init({ node: i3.previousSibling });
          }
          if (this.traverser.traverse(this._detectEnd.bind(this)), !this.end.blank() && (this.traverser = this.traverser.clone(this.end), this.traverser.traverse(this._detectStart.bind(this)), !this._isLinkDetected())) {
            var a3 = this.traverser.extendOptions(this.start);
            new z(a3).traverse(this._skipStartPuntuation.bind(this)), this._isLinkDetected() || (this.start = E());
          }
          return this.start.blank() ? null : { start: this.start, end: this.end, text: this.text };
        }, _isLinkDetected: function() {
          return b2.test(this.text) || /^w{3}\./i.test(this.text);
        }, _detectEnd: function(e3, t3) {
          var n3 = D(e3, k2);
          if (n3 > -1) return this.end.node = t3, this.end.offset = n3 + 1, false;
        }, _detectStart: function(e3, t3) {
          var n3 = D(e3, /\s/), i3 = n3 + 1;
          if (this.text = e3.substring(i3) + this.text, this.start.node = t3, this.start.offset = i3, n3 > -1) return false;
        }, _skipStartPuntuation: function(e3, t3, n3) {
          var i3, a3 = (i3 = /\w/.exec(e3)) ? i3.index : -1, r3 = a3;
          if (-1 === a3 && (r3 = e3.length), this.text = this.text.substring(r3), this.start.node = t3, this.start.offset = r3 + (0 | n3), a3 > -1) return false;
        } });
        function D(e3, t3) {
          for (var n3 = e3.length; n3-- && !t3.test(e3[n3]); ) ;
          return n3;
        }
        var E = function() {
          return { node: null, offset: null, blank: function() {
            return null === this.node && null === this.offset;
          } };
        }, A = i2.extend({ init: function(n3) {
          this.node = n3.node, this.offset = n3.offset === t2 ? o2.isDataNode(this.node) && this.node.length || 0 : n3.offset, this.cancelAtNode = n3.cancelAtNode || this.cancelAtNode || e2.noop;
        }, traverse: function(e3) {
          e3 && (this.cancel = false, this._traverse(e3, this.node, this.offset));
        }, _traverse: function(e3, n3, i3) {
          if (n3 && !this.cancel) {
            if (3 !== n3.nodeType) {
              var a3 = this.edgeNode(n3);
              return this.cancel = this.cancel || this.cancelAtNode(a3), this._traverse(e3, a3);
            }
            var r3 = n3.data;
            i3 !== t2 && (r3 = this.subText(r3, i3)), this.cancel = false === e3(r3, n3, i3);
            var s3 = this.next(n3);
            if (!s3) for (var l3 = n3.parentNode; !s3 && o2.isInline(l3); ) s3 = this.next(l3), l3 = l3.parentNode;
            this.cancel = this.cancel || this.cancelAtNode(s3), this._traverse(e3, s3);
          }
        }, extendOptions: function(t3) {
          return e2.extend({ node: this.node, offset: this.offset, cancelAtNode: this.cancelAtNode }, t3 || {});
        }, edgeNode: function(e3) {
        }, next: function(e3) {
        }, subText: function(e3, t3) {
        } }), F = A.extend({ subText: function(e3, t3) {
          return e3.substring(0, t3);
        }, next: function(e3) {
          return e3.previousSibling;
        }, edgeNode: function(e3) {
          return e3.lastChild;
        }, clone: function(e3) {
          var t3 = this.extendOptions(e3);
          return new F(t3);
        } }), z = A.extend({ subText: function(e3, t3) {
          return e3.substring(t3);
        }, next: function(e3) {
          return e3.nextSibling;
        }, edgeNode: function(e3) {
          return e3.firstChild;
        }, clone: function(e3) {
          var t3 = this.extendOptions(e3);
          return new z(t3);
        } });
        a2(n2.ui.editor, { LinkFormatFinder: w, LinkFormatter: y, UnlinkCommand: x, LinkCommand: C, AutoLinkCommand: T, UnlinkTool: S, DomTextLinkDetection: I, LeftDomTextTraverser: F, RightDomTextTraverser: z }), g2("createLink", new u2({ key: "K", ctrl: true, command: C, template: new c2({ template: l2.buttonTemplate, title: "Create Link" }) })), g2("unlink", new S({ key: "K", ctrl: true, shift: true, template: new c2({ template: l2.buttonTemplate, title: "Remove Link" }) })), g2("autoLink", new u2({ key: [v2.ENTER, v2.SPACEBAR], keyPressCommand: true, command: T }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = e2.extend, a2 = t2.ui.editor, r2 = t2.ui.Editor.fn.options.formats, o2 = a2.Dom, s2 = a2.ToolTemplate, l2 = a2.FormatTool, d2 = a2.EditorUtils, u2 = d2.registerTool, c2 = d2.registerFormat, p2 = a2.RangeUtils, h2 = n2.extend({ init: function(e3) {
          this.format = e3;
        }, contains: function(e3, t3) {
          var n3, i3, a3;
          for (n3 = 0, i3 = t3.length; n3 < i3; n3++) if (!(a3 = t3[n3]) || !o2.isAncestorOrSelf(e3, a3)) return false;
          return true;
        }, findSuitable: function(t3) {
          var n3, i3, a3, r3 = this.format, s3 = [];
          for (n3 = 0, i3 = t3.length; n3 < i3; n3++) {
            for (var l3 = r3.length - 1; l3 >= 0 && !(a3 = o2.ofType(t3[n3], r3[l3].tags) ? t3[n3] : o2.closestEditableOfType(t3[n3], r3[l3].tags)); l3--) ;
            if (!a3 || "true" === a3.contentEditable) return [];
            e2.inArray(a3, s3) < 0 && s3.push(a3);
          }
          for (this._resolveListsItems(s3), n3 = 0, i3 = s3.length; n3 < i3; n3++) if (this.contains(s3[n3], s3)) return [s3[n3]];
          return s3;
        }, _resolveListsItems: function(e3) {
          var t3, n3, i3;
          for (t3 = 0; t3 < e3.length; t3++) n3 = e3[t3], i3 = (i3 = o2.is(n3, "li") ? n3 : o2.wrapper(n3)) && o2.list(i3) ? i3.children[0] : i3, o2.is(i3, "li") && (n3 = e3[t3] = i3);
        }, findFormat: function(e3, t3) {
          var n3, i3, r3, s3, l3, d3 = this.format, u3 = o2.editableParent(e3), c3 = this.options && this.options.immutables, p3 = a2.Immutables;
          for (n3 = 0, i3 = d3.length; n3 < i3; n3++) {
            if (r3 = e3, s3 = d3[n3].tags, l3 = d3[n3].attr, c3 && s3 && "immutable" == s3[0]) {
              var h3 = p3.immutableParent(r3);
              if (h3 && o2.attrEquals(h3, l3)) return r3;
            }
            for (; r3 && o2.isAncestorOf(u3, r3); ) {
              if (o2.ofType(r3, s3) && o2.attrEquals(r3, l3)) return r3;
              if (t3 && t3(r3)) break;
              r3 = r3.parentNode;
            }
          }
          return null;
        }, getFormat: function(e3) {
          var t3, n3, i3 = this, a3 = function(e4) {
            return i3.findFormat(o2.isDataNode(e4) ? e4.parentNode : e4);
          }, r3 = a3(e3[0]);
          if (!r3) return "";
          for (t3 = 1, n3 = e3.length; t3 < n3; t3++) if (r3 != a3(e3[t3])) return "";
          return r3.nodeName.toLowerCase();
        }, isFormatted: function(e3, t3) {
          for (var n3 = 0, i3 = e3.length; n3 < i3; n3++) if (!this.findFormat(e3[n3], t3)) return false;
          return true;
        } }), f2 = n2.extend({ init: function(e3, t3) {
          this.format = e3, this.values = t3, this.finder = new h2(e3);
        }, wrap: function(e3, t3, n3) {
          var i3 = 1 == n3.length ? o2.blockParentOrBody(n3[0]) : o2.commonAncestor.apply(null, n3);
          o2.isInline(i3) && (i3 = o2.blockParentOrBody(i3));
          var a3, r3, s3 = o2.significantChildNodes(i3), l3 = o2.findNodeIndex(s3[0]), d3 = o2.create(i3.ownerDocument, e3, t3);
          for (a3 = 0; a3 < s3.length; a3++) r3 = s3[a3], o2.isBlock(r3) ? (o2.attr(r3, t3), d3.childNodes.length && (o2.insertBefore(d3, r3), d3 = d3.cloneNode(false)), l3 = o2.findNodeIndex(r3) + 1) : d3.appendChild(r3);
          d3.firstChild && o2.insertAt(i3, d3, l3);
        }, apply: function(t3) {
          var n3, a3 = this.values;
          function r3(e3) {
            return i2({}, e3 && e3.attr, a3);
          }
          this._handleImmutables(t3, true);
          var s3 = o2.filter("img", t3), l3 = r3(d2.formatByName("img", this.format));
          if (e2.each(s3, function() {
            o2.attr(this, l3);
          }), s3.length != t3.length) {
            var u3 = o2.filter("img", t3, true), c3 = this.finder.findSuitable(u3);
            if (c3.length) for (var p3 = 0, h3 = c3.length; p3 < h3; p3++) n3 = d2.formatByName(o2.name(c3[p3]), this.format), o2.attr(c3[p3], r3(n3));
            else n3 = this.format[0], this.wrap(n3.tags[0], r3(n3), u3);
          }
        }, _handleImmutables: function(e3, t3) {
          if (this.immutables()) {
            var n3 = d2.formatByName("immutable", this.format);
            if (n3) for (var i3 = a2.Immutables, r3 = e3.length - 1; r3 >= 0; r3--) {
              var s3 = i3.immutableParent(e3[r3]);
              s3 && (s3 !== e3[r3 + 1] && (t3 ? o2.attr(s3, n3.attr) : o2.unstyle(s3, n3.attr.style)), e3.splice(r3, 1));
            }
          }
        }, immutables: function() {
          return this.editor && this.editor.options.immutables;
        }, remove: function(e3) {
          var t3, n3, i3, a3, r3;
          for (this._handleImmutables(e3, false), t3 = 0, n3 = e3.length; t3 < n3; t3++) (i3 = this.finder.findFormat(e3[t3])) && (r3 = o2.name(i3), (a3 = d2.formatByName(r3, this.format)).attr.style && o2.unstyle(i3, a3.attr.style), a3.attr.className && o2.removeClass(i3, a3.attr.className));
        }, toggle: function(e3) {
          var t3 = this, n3 = o2.filterBy(p2.nodes(e3), o2.htmlIndentSpace, true);
          t3.finder.isFormatted(n3) ? t3.remove(n3) : t3.apply(n3);
        } }), m2 = n2.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.format = e3, n3.values = t3, n3.finder = new h2(e3);
        }, apply: function(e3) {
          var t3, n3, i3, r3, s3, l3, d3, u3, c3 = this.format, p3 = o2.blockParents(e3), h3 = c3[0].tags[0];
          if (p3.length) for (t3 = 0, n3 = p3.length; t3 < n3; t3++) u3 = p3[t3], this.immutables() && a2.Immutables.immutableParent(u3) || ("li" == (d3 = o2.name(u3)) ? (i3 = u3.parentNode, r3 = new a2.ListFormatter(i3.nodeName.toLowerCase(), h3), (s3 = this.editor.createRange()).selectNode(p3[t3]), r3.toggle(s3)) : h3 && ("td" == d3 || u3.attributes.contentEditable) ? new f2(c3, this.values).apply(u3.childNodes) : (l3 = o2.changeTag(u3, h3), o2.attr(l3, c3[0].attr)));
          else {
            var m3 = new f2(c3, this.values);
            m3.editor = this.editor, m3.apply(e3);
          }
        }, toggle: function(e3) {
          var t3 = p2.textNodes(e3);
          t3.length || (e3.selectNodeContents(e3.commonAncestorContainer), (t3 = p2.textNodes(e3)).length || (t3 = o2.significantChildNodes(e3.commonAncestorContainer))), this.apply(t3);
        }, immutables: function() {
          return this.editor && this.editor.options.immutables;
        } }), g2 = l2.extend({ init: function(e3) {
          l2.fn.init.call(this, i2(e3, { finder: new h2(e3.format), formatter: function() {
            return new f2(e3.format);
          } }));
        } });
        i2(a2, { BlockFormatFinder: h2, BlockFormatter: f2, GreedyBlockFormatter: m2, BlockFormatTool: g2 });
        var v2 = ["ul", "ol", "li"];
        c2("justifyLeft", [{ tags: o2.nonListBlockElements, attr: { style: { textAlign: "left" } } }, { tags: ["img"], attr: { style: { float: "left", display: "", marginLeft: "", marginRight: "" } } }, { tags: ["immutable"], attr: { style: { float: "left", display: "", marginLeft: "", marginRight: "" } } }, { tags: v2, attr: { style: { textAlign: "left", listStylePosition: "" } } }]), u2("justifyLeft", new g2({ format: r2.justifyLeft, template: new s2({ template: d2.buttonTemplate, title: "Justify Left" }) })), c2("justifyCenter", [{ tags: o2.nonListBlockElements, attr: { style: { textAlign: "center" } } }, { tags: ["img"], attr: { style: { display: "block", marginLeft: "auto", marginRight: "auto", float: "" } } }, { tags: ["immutable"], attr: { style: { display: "block", marginLeft: "auto", marginRight: "auto", float: "" } } }, { tags: v2, attr: { style: { textAlign: "center", listStylePosition: "inside" } } }]), u2("justifyCenter", new g2({ format: r2.justifyCenter, template: new s2({ template: d2.buttonTemplate, title: "Justify Center" }) })), c2("justifyRight", [{ tags: o2.nonListBlockElements, attr: { style: { textAlign: "right" } } }, { tags: ["img"], attr: { style: { float: "right", display: "", marginLeft: "", marginRight: "" } } }, { tags: ["immutable"], attr: { style: { float: "right", display: "", marginLeft: "", marginRight: "" } } }, { tags: v2, attr: { style: { textAlign: "right", listStylePosition: "inside" } } }]), u2("justifyRight", new g2({ format: r2.justifyRight, template: new s2({ template: d2.buttonTemplate, title: "Justify Right" }) })), c2("justifyFull", [{ tags: o2.nonListBlockElements, attr: { style: { textAlign: "justify" } } }, { tags: ["img"], attr: { style: { display: "block", marginLeft: "auto", marginRight: "auto", float: "" } } }, { tags: ["immutable"], attr: { style: { display: "block", marginLeft: "auto", marginRight: "auto", float: "" } } }, { tags: v2, attr: { style: { textAlign: "justify", listStylePosition: "" } } }]), u2("justifyFull", new g2({ format: r2.justifyFull, template: new s2({ template: d2.buttonTemplate, title: "Justify Full" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = e2.extend, a2 = t2.ui.editor, r2 = a2.Dom, o2 = a2.RangeUtils, s2 = a2.EditorUtils, l2 = a2.Command, d2 = a2.ToolTemplate, u2 = a2.FormatTool, c2 = a2.BlockFormatFinder, p2 = o2.textNodes, h2 = a2.EditorUtils.registerTool, f2 = c2.extend({ init: function(e3) {
          this.tag = e3.tag, this.attr = e3.attr, this.altAttr = e3.altAttr;
          var t3 = this.tags = ["ul" == this.tag ? "ol" : "ul", this.tag], n3 = [{ tags: t3, attr: this.attr }];
          this.altAttr && n3.push({ tags: t3, attr: this.altAttr }), c2.fn.init.call(this, n3);
        }, matchesType: function(e3) {
          return r2.attrEquals(e3, this.attr) || this.altAttr && r2.attrEquals(e3, this.altAttr);
        }, isList: function(e3) {
          return r2.list(e3);
        }, isFormatted: function(e3) {
          var t3, n3, i3 = [];
          for (n3 = 0; n3 < e3.length; n3++) (t3 = this.findFormat(e3[n3], this.isList)) && r2.name(t3) == this.tag && this.matchesType(t3) && i3.push(t3);
          if (i3.length < 1) return false;
          if (i3.length != e3.length) return false;
          for (n3 = 0; n3 < i3.length && i3[n3].parentNode == t3.parentNode; n3++) if (i3[n3] != t3) return false;
          return true;
        }, findSuitable: function(e3) {
          var t3 = this.findFormat(e3[0], this.isList);
          return t3 && r2.name(t3) == this.tag ? t3 : null;
        } }), m2 = n2.extend({ init: function(t3, n3) {
          var i3 = this;
          t3 = e2.isPlainObject(t3) ? t3 : { tag: t3, attr: null }, i3.tag = t3.tag, i3.attr = t3.attr, i3.finder = new f2(t3), i3.unwrapTag = n3;
        }, isList: function(e3) {
          return r2.list(e3);
        }, immutables: function() {
          return this.editor && !!this.editor.options.immutables;
        }, wrap: function(t3, n3) {
          var i3, o3, s3 = r2.create(t3.ownerDocument, "li"), l3 = this.immutables() ? a2.Immutables.immutable : e2.noop;
          for (i3 = 0; i3 < n3.length; i3++) if (o3 = n3[i3], r2.is(o3, "li")) t3.appendChild(o3);
          else if (this.isList(o3)) for (; o3.firstChild; ) t3.appendChild(o3.firstChild);
          else if (r2.is(o3, "td")) {
            for (; o3.firstChild; ) s3.appendChild(o3.firstChild);
            t3.appendChild(s3), o3.appendChild(t3), t3 = t3.cloneNode(false), s3 = s3.cloneNode(false);
          } else s3.appendChild(o3), r2.isBlock(o3) && (t3.appendChild(s3), l3(o3) || r2.unwrap(o3), s3 = s3.cloneNode(false));
          s3.firstChild && t3.appendChild(s3);
        }, containsAny: function(e3, t3) {
          for (var n3 = 0; n3 < t3.length; n3++) if (r2.isAncestorOrSelf(e3, t3[n3])) return true;
          return false;
        }, suitable: function(e3, t3) {
          if ("k-marker" == e3.className) {
            var n3 = e3.nextSibling;
            if (n3 && r2.isBlock(n3)) return false;
            if ((n3 = e3.previousSibling) && r2.isBlock(n3)) return false;
          }
          return this.containsAny(e3, t3) || r2.isInline(e3) || 3 == e3.nodeType;
        }, _parentLists: function(t3) {
          var n3 = r2.closestEditable(t3);
          return e2(t3).parentsUntil(n3, "ul,ol");
        }, split: function(e3) {
          var t3, n3, i3, a3 = p2(e3);
          if (a3.length) {
            t3 = r2.parentOfType(a3[0], ["li"]), n3 = r2.parentOfType(a3[a3.length - 1], ["li"]), e3.setStartBefore(t3), e3.setEndAfter(n3);
            for (var s3 = 0, l3 = a3.length; s3 < l3; s3++) {
              var d3 = this.finder.findFormat(a3[s3]);
              d3 && ((i3 = this._parentLists(d3)).length ? o2.split(e3, i3.last()[0], true) : o2.split(e3, d3, true));
            }
          }
        }, merge: function(e3, t3) {
          for (var n3, i3 = t3.previousSibling; i3 && ("k-marker" == i3.className || 3 == i3.nodeType && r2.isWhitespace(i3)); ) i3 = i3.previousSibling;
          if (i3 && r2.name(i3) == e3 && this.finder.matchesType(i3)) {
            for (; t3.firstChild; ) i3.appendChild(t3.firstChild);
            r2.remove(t3), t3 = i3;
          }
          for (n3 = t3.nextSibling; n3 && ("k-marker" == n3.className || 3 == n3.nodeType && r2.isWhitespace(n3)); ) n3 = n3.nextSibling;
          if (n3 && r2.name(n3) == e3 && this.finder.matchesType(n3)) {
            for (; t3.lastChild; ) n3.insertBefore(t3.lastChild, n3.firstChild);
            r2.remove(t3);
          }
        }, breakable: function(e3) {
          return e3 != e3.ownerDocument.body && !/table|tbody|thead|tr|td/.test(r2.name(e3)) && !e3.attributes.contentEditable;
        }, findSuitableNode: function(e3) {
          var t3, n3 = this, i3 = n3.finder, a3 = n3.tag;
          return (t3 = i3.findSuitable(e3)) || (t3 = (i3 = new f2({ tag: "ul" == a3 ? "ol" : "ul" })).findSuitable(e3)), t3 || (t3 = (t3 = (i3 = new f2({ tag: a3 })).findSuitable(e3)) && n3.finder.matchesType(t3) ? null : t3), t3;
        }, applyOnSection: function(t3, n3) {
          var i3, a3 = this.tag, o3 = this.attr, s3 = r2.closestSplittableParent(n3), l3 = [], d3 = this.findSuitableNode(n3);
          function u3() {
            l3.push(this);
          }
          /table|tbody|thead/.test(r2.name(s3)) ? i3 = e2.map(n3, function(e3) {
            return r2.parentOfType(e3, ["td"]);
          }) : (i3 = r2.significantChildNodes(s3), e2.grep(i3, r2.isBlock).length && (i3 = e2.grep(i3, function(e3) {
            return this.containsAny(e3, n3);
          }.bind(this))), i3.length || (i3 = n3));
          for (var c3 = 0; c3 < i3.length; c3++) {
            var p3 = i3[c3];
            (!d3 || !r2.isAncestorOrSelf(d3, p3)) && this.suitable(p3, n3) && (d3 && this.isList(p3) ? (e2.each(p3.children, u3), r2.remove(p3)) : l3.push(p3));
          }
          for (l3.length == i3.length && this.breakable(s3) && (l3 = [s3]), d3 || (d3 = r2.create(s3.ownerDocument, a3, o3), r2.isBlock(l3[0]) && r2.mergeAttributes(l3[0], d3), r2.insertBefore(d3, l3[0])), this.wrap(d3, l3); r2.isBom(d3.nextSibling); ) r2.remove(d3.nextSibling);
          this.finder.matchesType(d3) || (d3.removeAttribute("type"), d3.style.listStyleType = "", r2.mergeAttributes(r2.create(s3.ownerDocument, a3, o3), d3, true)), d3 && "" === d3.getAttribute("type") && d3.removeAttribute("type"), r2.is(d3, a3) || r2.changeTag(d3, a3), this.merge(a3, d3);
        }, apply: function(t3) {
          var n3, i3, o3, s3, l3 = 0, d3 = [], u3 = t3.length, c3 = this.immutables() ? a2.Immutables.immutableParent : e2.noop;
          function p3() {
            n3 && d3.push({ section: n3, nodes: i3 });
          }
          for (l3 = 0; l3 < u3; l3++) s3 = c3(t3[l3]) || t3[l3], o3 = r2.closestEditable(s3, ["td", "th", "body"]), n3 && o3 == n3 ? i3.push(s3) : (p3(), i3 = [s3], n3 = o3);
          for (p3(), l3 = 0; l3 < d3.length; l3++) this.applyOnSection(d3[l3].section, d3[l3].nodes);
        }, unwrap: function(e3) {
          var t3, n3, i3, a3, o3 = e3.ownerDocument.createDocumentFragment(), s3 = this.unwrapTag;
          for (n3 = e3.firstChild; n3; n3 = n3.nextSibling) {
            for (i3 = r2.create(e3.ownerDocument, s3 || "p"); n3.firstChild; ) a3 = n3.firstChild, r2.isBlock(a3) ? (i3.firstChild && (o3.appendChild(i3), i3 = r2.create(e3.ownerDocument, s3 || "p")), o3.appendChild(a3)) : i3.appendChild(a3);
            i3.firstChild && o3.appendChild(i3);
          }
          (t3 = this._parentLists(e3))[0] ? (r2.insertAfter(o3, t3.last()[0]), t3.last().remove()) : r2.insertAfter(o3, e3), r2.remove(e3);
        }, remove: function(e3) {
          for (var t3, n3 = 0, i3 = e3.length; n3 < i3; n3++) (t3 = this.finder.findFormat(e3[n3])) && this.unwrap(t3);
        }, toggle: function(e3) {
          var t3 = this, n3 = p2(e3), i3 = e3.commonAncestorContainer;
          if (!n3.length && (e3.selectNodeContents(i3), !(n3 = p2(e3)).length)) {
            var a3 = i3.ownerDocument.createTextNode("");
            e3.startContainer.appendChild(a3), n3 = [a3], e3.selectNode(a3.parentNode);
          }
          n3 = r2.filterBy(n3, r2.htmlIndentSpace, true), t3.finder.isFormatted(n3) ? (t3.split(e3), t3.remove(n3)) : t3.apply(n3);
        } }), g2 = l2.extend({ init: function(e3) {
          e3.formatter = new m2({ tag: e3.tag, attr: e3.attr }), l2.fn.init.call(this, e3);
        } }), v2 = u2.extend({ init: function(e3) {
          this.options = e3, u2.fn.init.call(this, i2(e3, { finder: new f2(e3) }));
        }, command: function(e3) {
          return new g2(i2(e3, { tag: this.options.tag, attr: this.options.attr }));
        } });
        i2(a2, { ListFormatFinder: f2, ListFormatter: m2, ListCommand: g2, ListTool: v2 }), h2("insertUnorderedList", new v2({ tag: "ul", attr: { style: { listStyleType: "" }, type: "" }, template: new d2({ template: s2.buttonTemplate, title: "Insert unordered list" }) })), h2("insertOrderedList", new v2({ tag: "ol", attr: { style: { listStyleType: "" }, type: "" }, template: new d2({ template: s2.buttonTemplate, title: "Insert ordered list" }) })), h2("insertUpperRomanList", new v2({ tag: "ol", attr: { style: { listStyleType: "upper-roman" } }, altAttr: { type: "I" }, template: new d2({ template: s2.buttonTemplate, title: "Insert upper roman list" }) })), h2("insertLowerRomanList", new v2({ tag: "ol", attr: { style: { listStyleType: "lower-roman" } }, altAttr: { type: "i" }, template: new d2({ template: s2.buttonTemplate, title: "Insert lower roman list" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.ui.editor, i2 = n2.Tool, a2 = n2.ToolTemplate, r2 = n2.DelayedExecutionTool, o2 = n2.Command, s2 = n2.Dom, l2 = n2.EditorUtils, d2 = n2.RangeUtils, u2 = l2.registerTool, c2 = r2.extend({ init: function(e3) {
          var n3 = this;
          i2.fn.init.call(n3, t2.deepExtend({}, n3.options, e3)), n3.type = "kendoSelectBox", n3.finder = { getFormat: function() {
            return "";
          } };
        }, options: { items: [{ text: "Paragraph", value: "p" }, { text: "Quotation", value: "blockquote" }, { text: "Heading 1", value: "h1" }, { text: "Heading 2", value: "h2" }, { text: "Heading 3", value: "h3" }, { text: "Heading 4", value: "h4" }, { text: "Heading 5", value: "h5" }, { text: "Heading 6", value: "h6" }], width: 110 }, toFormattingItem: function(e3) {
          var t3 = e3.value;
          if (!t3) return e3;
          if (e3.tag || e3.className) return e3;
          var n3 = t3.indexOf(".");
          return 0 === n3 ? e3.className = t3.substring(1) : -1 == n3 ? e3.tag = t3 : (e3.tag = t3.substring(0, n3), e3.className = t3.substring(n3 + 1)), e3;
        }, command: function(t3) {
          var i3 = this, a3 = t3.value;
          return a3 = this.toFormattingItem(a3), new n2.FormatCommand({ range: t3.range, formatter: function() {
            var t4, r3 = (a3.tag || a3.context || "span").split(","), o3 = [{ tags: r3, attr: { className: a3.className || "" } }];
            return (t4 = e2.inArray(r3[0], s2.inlineElements) >= 0 ? new n2.GreedyInlineFormatter(o3) : new n2.GreedyBlockFormatter(o3)).editor = i3.editor, t4;
          } });
        }, initialize: function(e3, n3) {
          var a3, r3 = n3.editor, o3 = this.options, s3 = o3.name, l3 = this;
          l3.editor = r3, e3.width(o3.width), a3 = e3.kendoSelectBox({ autoWidth: true, dataTextField: "text", dataValueField: "value", dataSource: o3.items || r3.options[s3], title: r3.options.messages[s3], autoSize: true, change: function() {
            var e4 = this.dataItem();
            e4 && i2.exec(r3, s3, e4.toJSON());
          }, dataBound: function() {
            var e4, t3 = this.dataSource.data();
            for (e4 = 0; e4 < t3.length; e4++) t3[e4] = l3.toFormattingItem(t3[e4]);
          }, highlightFirst: false, template: t2.template('<span unselectable="on" style="display:block;#=(data.style||"")#">#:data.text#</span>') }).data("kendoSelectBox"), e3.attr("title", n3.title), a3.wrapper.attr("title", n3.title), e3.addClass("k-decorated").closest(".k-dropdownlist, .k-combobox").removeClass("k-" + s3).find("*").addBack().attr("unselectable", "on");
        }, getFormattingValue: function(t3, n3) {
          for (var i3 = 0; i3 < t3.length; i3++) {
            var a3 = t3[i3], r3 = (a3.tag || a3.context || "") + (a3.className ? "." + a3.className : "");
            if (e2(n3[0]).closest(r3)[0]) {
              if (1 == n3.length) return a3.value;
              for (var o3 = 1; o3 < n3.length && e2(n3[o3]).closest(r3)[0]; o3++) if (o3 == n3.length - 1) return a3.value;
            }
          }
          return "";
        }, update: function(t3, n3) {
          var i3 = e2(t3).data(this.type);
          if (i3) {
            var a3, o3, l3 = i3.dataSource, d3 = l3.data(), u3 = s2.commonAncestor.apply(null, n3);
            if (u3 == s2.closestEditable(u3) || this._ancestor != u3) {
              for (this._ancestor = u3, a3 = 0; a3 < d3.length; a3++) o3 = d3[a3].context, d3[a3].visible = !o3 || !!e2(u3).closest(o3).length;
              l3.filter([{ field: "visible", operator: "eq", value: true }]), r2.fn.update.call(this, t3, n3), i3.value(this.getFormattingValue(l3.view(), n3)), i3.wrapper.toggleClass("k-disabled", !l3.view().length);
            }
          }
        }, destroy: function() {
          this._ancestor = null;
        } }), p2 = o2.extend({ exec: function() {
          var e3 = this.lockRange(true);
          this.tagsToClean = this.options.remove || "strong,em,span,sup,sub,del,b,i,u,font".split(","), d2.wrapSelectedElements(e3);
          for (var t3 = d2.mapAll(e3, function(e4) {
            return e4;
          }), n3 = t3.length - 1; n3 >= 0; n3--) {
            var i3 = t3[n3];
            this.immutableParent(i3) || this.clean(i3);
          }
          this.releaseRange(e3);
        }, clean: function(i3) {
          if (i3 && !s2.isMarker(i3)) {
            var a3 = s2.name(i3);
            if ("ul" == a3 || "ol" == a3) {
              var r3 = new n2.ListFormatter(a3), o3 = i3.previousSibling, l3 = i3.nextSibling;
              for (r3.unwrap(i3); o3 && o3 != l3; o3 = o3.nextSibling) this.clean(o3);
            } else if ("blockquote" == a3) s2.changeTag(i3, "p");
            else if (1 != i3.nodeType || s2.insignificant(i3)) !function(e3) {
              var i4 = s2.closestEditableOfType(e3, ["li"]);
              if (i4) {
                var a4 = new n2.ListFormatter(s2.name(i4.parentNode)), r4 = t2.ui.editor.W3CRange.fromNode(e3);
                r4.selectNode(i4), a4.toggle(r4);
              }
            }(i3);
            else {
              for (var d3 = i3.childNodes.length - 1; d3 >= 0; d3--) this.clean(i3.childNodes[d3]);
              i3.removeAttribute("style"), i3.removeAttribute("class");
            }
            e2.inArray(a3, this.tagsToClean) > -1 && s2.unwrap(i3);
          }
        }, immutableParent: function(e3) {
          return this.immutables() && n2.Immutables.immutableParent(e3);
        } });
        e2.extend(n2, { FormattingTool: c2, CleanFormatCommand: p2 }), u2("formatting", new c2({ template: new a2({ template: l2.dropDownListTemplate, title: "Format" }) })), u2("cleanFormatting", new i2({ command: p2, template: new a2({ template: l2.buttonTemplate, title: "Clean formatting" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.EditorUtils, o2 = a2.Dom, s2 = r2.registerTool, l2 = a2.ToolTemplate, d2 = a2.RangeUtils, u2 = a2.Command, c2 = n2.keys, p2 = "#k-editor-image-url", h2 = "#k-editor-image-title", f2 = "#k-editor-image-width", m2 = "#k-editor-image-height", g2 = u2.extend({ init: function(e3) {
          var t3 = this;
          u2.fn.init.call(t3, e3), t3.async = true, t3.attributes = {};
        }, insertImage: function(e3, t3) {
          var n3 = this.attributes, i3 = d2.documentFromRange(t3);
          if (n3.src && "http://" != n3.src) {
            var a3 = function() {
              setTimeout(function() {
                n3.width || e3.removeAttribute("width"), n3.height || e3.removeAttribute("height"), e3.removeAttribute("complete");
              });
            };
            if (!e3) return (e3 = o2.create(i3, "img", n3)).onload = e3.onerror = a3, t3.deleteContents(), t3.insertNode(e3), e3.nextSibling || o2.insertAfter(i3.createTextNode("\uFEFF"), e3), a3(), t3.setStartAfter(e3), t3.setEndAfter(e3), d2.selectRange(t3), true;
            e3.onload = e3.onerror = a3, o2.attr(e3, n3), a3();
          }
          return false;
        }, _dialogTemplate: function(e3) {
          return n2.template(`<div class="k-editor-dialog k-popup-edit-form"><div class="k-edit-form-container"><div class="k-edit-form-content"># if (showBrowser) { #<div class="k-filebrowser k-imagebrowser"></div># } #<div class='k-edit-label'><label for="k-editor-image-url">#: messages.imageWebAddress #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-image-url"></span></div><div class='k-edit-label'><label for="k-editor-image-title">#: messages.imageAltText #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-image-title"></span></div><div class='k-edit-label'><label for="k-editor-image-width">#: messages.imageWidth #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-image-width"></span></div><div class='k-edit-label'><label for="k-editor-image-height">#: messages.imageHeight #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-image-height"></span></div></div><div class="k-edit-buttons"><button class="k-dialog-insert k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary"><span class="k-button-text">#: messages.dialogInsert #</span></button><button class="k-dialog-close k-button k-button-md k-rounded-md k-button-solid k-button-solid-base"><span class="k-button-text">#: messages.dialogCancel #</span></button></div></div></div>`)({ messages: this.editor.options.messages, showBrowser: e3 });
        }, redo: function() {
          var e3 = this, t3 = e3.lockRange();
          e3.insertImage(d2.image(t3), t3) || e3.releaseRange(t3);
        }, exec: function() {
          var e3, t3 = this, a3 = t3.lockRange(), r3 = false, s3 = d2.image(a3), l3 = s3 && s3.getAttribute("width") || "", u3 = s3 && s3.getAttribute("height") || "", g3 = n2.support.browser.msie, v2 = t3.editor.options, _2 = v2.messages, b2 = v2.imageBrowser, k2 = !!(n2.ui.ImageBrowser && b2 && b2.transport && void 0 !== b2.transport.read), w = { title: _2.insertImage, visible: false, resizable: k2 };
          function y(n3) {
            var i3 = e3.element, o3 = parseInt(i3.find(f2).val(), 10), l4 = parseInt(i3.find(m2).val(), 10);
            t3.attributes = { src: i3.find(p2).val().replace(/ /g, "%20"), alt: i3.find(h2).val() }, t3.attributes.width = null, t3.attributes.height = null, !isNaN(o3) && o3 > 0 && (t3.attributes.width = o3), !isNaN(l4) && l4 > 0 && (t3.attributes.height = l4), r3 = t3.insertImage(s3, a3), x(n3), t3.change && t3.change();
          }
          function x(n3) {
            n3.preventDefault(), e3.destroy(), o2.windowFromDocument(d2.documentFromRange(a3)).focus(), r3 || t3.releaseRange(a3);
          }
          this.expandImmutablesIn(a3), w.close = x, k2 && (w.width = 750);
          var C = (e3 = this.createDialog(t3._dialogTemplate(k2), w).toggleClass("k-filebrowser-dialog", k2).find(".k-dialog-insert").on("click", y).end().find(".k-dialog-close").on("click", x).end().find(".k-edit-field input").on("keydown", function(e4) {
            e4.keyCode == c2.ENTER ? y(e4) : e4.keyCode == c2.ESC && x(e4);
          }).end().find(p2).val(s3 ? s3.getAttribute("src", 2) : "http://").end().find(h2).val(s3 ? s3.alt : "").end().find(f2).val(l3).end().find(m2).val(u3).end().data("kendoWindow")).element;
          if (k2 && (this._imageBrowser = new n2.ui.ImageBrowser(C.find(".k-imagebrowser"), i2({}, b2)), this._imageBrowser.bind("change", function(e4) {
            "f" === e4.selected.get("type") && C.find(p2).val(this.value());
          }), this._imageBrowser.bind("apply", y)), g3) {
            var T = C.closest(".k-window").height();
            C.css("max-height", T);
          }
          e3.center().open(), C.find(p2).trigger("focus").select();
        } });
        n2.ui.editor.ImageCommand = g2, s2("insertImage", new a2.Tool({ command: g2, template: new l2({ template: r2.buttonTemplate, title: "Insert Image" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.EditorUtils, o2 = a2.Command, s2 = a2.Tool, l2 = r2.registerTool, d2 = a2.ToolTemplate, u2 = '<div contenteditable="false" class="k-loading-mask" style="width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;"><div class="k-loading-image"></div><div class="k-loading-color"></div></div>', c2 = o2.extend({ exec: function() {
          (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();
        }, _initializeUploadWidget: function() {
          var t3 = this, n3 = t3.editor, i3 = n3.options.import, a3 = e2('<input id="editorImport" name="files" type="file" />').kendoUpload({ success: t3._onUploadSuccess.bind(t3), progress: t3._onUploadProgress.bind(t3), select: t3._onUploadSelect.bind(t3), error: t3._onUploadError.bind(t3), complete: t3._onUploadComplete.bind(t3), showFileList: false, multiple: false, async: { saveUrl: i3.proxyURL, autoUpload: true, saveField: "file" }, validation: { allowedExtensions: i3.allowedExtensions, maxFileSize: i3.maxFileSize } }).getKendoUpload();
          return n3._uploadWidget = a3, a3;
        }, _onUploadComplete: function(e3) {
          this._trigger("complete", e3), e3.sender.clearAllFiles(), this._removeLoadingOverlay();
        }, _onUploadSuccess: function(e3) {
          this.editor.value(e3.response.html.replace(/<\/?body>/gi, "")), this._trigger("success", e3);
        }, _onUploadProgress: function(e3) {
          this._trigger("progress", e3);
        }, _onUploadSelect: function(e3) {
          this._trigger("select", e3), e3.files[0].validationErrors || this._initLoadingOverlay();
        }, _onUploadError: function(e3) {
          this._trigger("error", e3);
        }, _trigger: function(e3, t3) {
          var n3 = this.editor, i3 = n3.options.import;
          "function" == typeof i3[e3] && i3[e3].call(n3, t3);
        }, _initLoadingOverlay: function() {
          var t3 = this.editor.body;
          a2.Dom.is(t3, "body") ? this._iframeWrapper = this._container = this.editor.wrapper.find("iframe").parent().css({ position: "relative" }).append(u2) : this._container = e2(t3).append(u2), n2.ui.progress(this._container, true);
        }, _removeLoadingOverlay: function() {
          n2.ui.progress(this._container, false), e2(this._iframeWrapper).css({ position: "" }), delete this._container, delete this._iframeWrapper;
        } });
        i2(a2, { ImportCommand: c2 }), l2("import", new s2({ command: c2, template: new d2({ template: r2.iconTextButtonTemplate, title: "Import" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo.ui.editor, n2 = t2.Command, i2 = t2.GenericCommand, a2 = t2.EditorUtils, r2 = a2.registerTool, o2 = t2.Tool, s2 = t2.ToolTemplate, l2 = t2.RestorePoint, d2 = e2.extend, u2 = n2.extend({ init: function(e3) {
          n2.fn.init.call(this, e3), this.managesUndoRedo = true;
        }, exec: function() {
          var e3 = this.editor, t3 = this.options, n3 = t3.range, a3 = e3.body, r3 = new l2(n3, a3), o3 = t3.html || t3.value || "";
          e3.selectRange(n3), e3.clipboard.paste(o3, t3), t3.postProcess && t3.postProcess(e3, e3.getRange());
          var s3 = new i2(r3, new l2(e3.getRange(), a3));
          s3.editor = e3, e3.undoRedoStack.push(s3), e3.focus();
        } }), c2 = o2.extend({ initialize: function(e3, n3) {
          var i3 = n3.editor, a3 = this.options, r3 = a3.items ? a3.items : i3.options.insertHtml;
          this._selectBox = new t2.SelectBox(e3, { dataSource: r3, dataTextField: "text", dataValueField: "value", change: function() {
            o2.exec(i3, "insertHtml", this.value());
          }, title: i3.options.messages.insertHtml, highlightFirst: false }), e3.attr("title", n3.title), this._selectBox.wrapper.attr("title", n3.title);
        }, command: function(e3) {
          return new u2(e3);
        }, update: function(e3) {
          var t3 = e3.data("kendoSelectBox") || e3.find("select").data("kendoSelectBox");
          t3.close(), t3.value(t3.options.title);
        } });
        d2(t2, { InsertHtmlCommand: u2, InsertHtmlTool: c2 }), r2("insertHtml", new c2({ template: new s2({ template: a2.dropDownListTemplate, title: "Insert HTML", initialValue: "Insert HTML" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.EditorUtils, o2 = a2.Command, s2 = a2.Tool, l2 = r2.registerTool, d2 = a2.ToolTemplate, u2 = o2.extend({ init: function(e3) {
          var t3 = this;
          t3.options = e3, o2.fn.init.call(t3, e3), t3.attributes = null, t3.exportType = e3.exportType;
        }, exec: function() {
          var e3 = this.lockRange(true);
          this.postToProxy(), this.releaseRange(e3);
        }, postToProxy: function() {
          this.generateForm().appendTo("body").submit().remove();
        }, generateForm: function() {
          var t3 = this, n3 = t3.editor.options.exportAs, i3 = e2("<form>").attr({ action: n3 && n3.proxyURL || "", method: "POST" });
          return i3.append([t3.valueInput(), t3.exportTypeInput(), t3.fileNameInput(), t3.antiForgeryInput()]), i3;
        }, valueInput: function() {
          var t3 = this.editor;
          return e2("<input>").attr({ value: t3.encodedValue(), name: "value", type: "hidden" });
        }, exportTypeInput: function() {
          return e2("<input>").attr({ value: this.exportType, name: "exportType", type: "hidden" });
        }, fileNameInput: function() {
          var t3 = this.editor, n3 = t3.options.exportAs, i3 = n3 && n3.fileName || t3.element.attr("id") || "editor";
          return e2("<input>").attr({ value: i3, name: "fileName", type: "hidden" });
        }, antiForgeryInput: function() {
          var t3 = e2("meta[name=csrf-param],meta[name=_csrf_header]").attr("content");
          return e2("input[name^='__RequestVerificationToken']").clone().add(e2("input[name^='" + t3 + "']").clone());
        } }), c2 = s2.extend({ init: function(e3) {
          var t3 = this;
          s2.fn.init.call(t3, n2.deepExtend({}, t3.options, e3)), t3.type = "kendoSelectBox";
        }, options: { items: [{ text: "Docx", value: "docx" }, { text: "Rtf", value: "rtf" }, { text: "Pdf", value: "pdf" }, { text: "Html", value: "html" }, { text: "Plain Text", value: "txt" }], width: 140 }, command: function(e3) {
          var t3 = e3.value;
          return new a2.ExportAsCommand({ range: e3.range, exportType: t3.exportType });
        }, initialize: function(e3, t3) {
          var i3, a3 = this, r3 = t3.editor, o3 = a3.options, s3 = o3.name, l3 = a3.changeHandler.bind(a3), d3 = o3.items || r3.options[s3], u3 = r3.options.messages[s3];
          d3.unshift({ text: u3, value: "" }), a3.editor = r3, e3.width(o3.width), i3 = e3.kendoSelectBox({ dataTextField: "text", dataValueField: "value", dataSource: d3, autoSize: true, change: l3, open: function(e4) {
            var t4 = e4.sender;
            t4.items()[0].style.display = "none", t4.unbind("open");
          }, highlightFirst: false, template: n2.template('<span unselectable="on" style="display:block;#=(data.style||"")#">#:data.text#</span>'), valueTemplate: '<span class="k-editor-export"><span class="k-icon k-i-export"></span><span class="k-export-tool-text">' + u3 + "</span></span>" }).data("kendoSelectBox"), e3.attr("title", t3.title), i3.wrapper.attr("title", t3.title), e3.addClass("k-decorated").closest(".k-dropdownlist").removeClass("k-" + s3).find("*").addBack().attr("unselectable", "on");
        }, changeHandler: function(e3) {
          var t3 = e3.sender, n3 = t3.dataItem(), i3 = n3 && n3.value;
          this._exec(i3), t3.value("");
        }, _exec: function(e3) {
          e3 && s2.exec(this.editor, this.options.name, { exportType: e3 });
        }, destroy: function() {
          this._ancestor = null;
        } });
        i2(a2, { ExportAsTool: c2, ExportAsCommand: u2 }), l2("exportAs", new c2({ template: new d2({ template: r2.dropDownListTemplate, title: "Export As" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class, a2 = e2.extend, r2 = n2.ui.editor, o2 = r2.Dom, s2 = r2.EditorUtils, l2 = s2.registerTool, d2 = r2.Command, u2 = r2.Tool, c2 = r2.ToolTemplate, p2 = r2.RangeUtils, h2 = o2.blockElements, f2 = r2.BlockFormatFinder, m2 = r2.BlockFormatter;
        function g2(t3, n3) {
          var i3 = "rtl" == e2(t3).css("direction") ? "Right" : "Left", a3 = "td" != o2.name(t3) ? "margin" + i3 : "padding" + i3;
          if (void 0 === n3) return t3.style[a3] || 0;
          n3 > 0 ? t3.style[a3] = n3 + "px" : (t3.style[a3] = "", t3.style.cssText || t3.removeAttribute("style"));
        }
        var v2 = i2.extend({ init: function() {
          this.finder = new f2([{ tags: o2.blockElements }]);
        }, apply: function(t3) {
          t3 = o2.filterBy(t3, o2.htmlIndentSpace, true);
          var n3, i3, a3, r3, s3, l3 = this.finder.findSuitable(t3), d3 = [];
          if ((l3 = this.mapImmutables(l3)).length) {
            for (n3 = 0, i3 = l3.length; n3 < i3; n3++) o2.is(l3[n3], "li") ? e2(l3[n3]).index() ? e2.inArray(l3[n3].parentNode, d3) < 0 && d3.push(l3[n3]) : d3.push(l3[n3].parentNode) : d3.push(l3[n3]);
            for (; d3.length; ) if (a3 = d3.shift(), o2.is(a3, "li")) {
              r3 = a3.parentNode;
              var u3 = (s3 = e2(a3).prev("li")).find("ul,ol").last(), c3 = e2(a3).children("ul,ol")[0];
              if (c3 && s3[0]) u3[0] ? (u3.append(a3), u3.append(e2(c3).children()), o2.remove(c3)) : (s3.append(c3), c3.insertBefore(a3, c3.firstChild));
              else for ((c3 = s3.children("ul,ol")[0]) || (c3 = o2.create(a3.ownerDocument, o2.name(r3), this.getListTypeAttr(r3)), s3.append(c3)); a3 && a3.parentNode == r3; ) c3.appendChild(a3), a3 = d3.shift();
            } else {
              var p3 = parseInt(g2(a3), 10) + 30;
              g2(a3, p3);
              for (var h3 = 0; h3 < d3.length; h3++) e2.contains(a3, d3[h3]) && d3.splice(h3, 1);
            }
          } else {
            new m2([{ tags: ["p"] }], { style: { marginLeft: 30 } }).apply(t3);
          }
        }, getListTypeAttr: function(e3) {
          var t3 = e3.getAttribute("type"), n3 = e3.style.listStyleType;
          return t3 ? { type: t3 } : { style: { listStyleType: n3 } };
        }, mapImmutables: function(t3) {
          if (this.immutables) {
            var n3 = [];
            return e2.map(t3, function(t4) {
              var i3 = r2.Immutables.immutableParent(t4);
              if (i3) {
                if (-1 !== e2.inArray(i3, n3)) return null;
                n3.push(i3);
              }
              return i3 || t4;
            });
          }
          return t3;
        }, remove: function(t3) {
          t3 = o2.filterBy(t3, o2.htmlIndentSpace, true);
          var n3, i3, a3, r3, s3, l3, d3, u3, c3 = this.finder.findSuitable(t3);
          for (i3 = 0, a3 = (c3 = this.mapImmutables(c3)).length; i3 < a3; i3++) {
            if ((d3 = e2(c3[i3])).is("li")) {
              if ((s3 = (r3 = d3.parent()).parent()).is("li,ul,ol") && !g2(r3[0])) {
                if (n3 && e2.contains(n3, s3[0])) continue;
                (l3 = d3.nextAll("li")).length && e2(r3[0].cloneNode(false)).appendTo(d3).append(l3), s3.is("li") ? d3.insertAfter(s3) : d3.appendTo(s3), r3.children("li").length || r3.remove();
                continue;
              }
              if (n3 == r3[0]) continue;
              n3 = r3[0];
            } else n3 = c3[i3];
            u3 = parseInt(g2(n3), 10) - 30, g2(n3, u3);
          }
        } }), _2 = d2.extend({ init: function(e3) {
          e3.formatter = { toggle: function(e4) {
            var t3 = new v2();
            t3.immutables = this.editor && this.editor.options.immutables, t3.apply(p2.nodes(e4));
          }.bind(this) }, d2.fn.init.call(this, e3);
        } }), b2 = d2.extend({ init: function(e3) {
          e3.formatter = { toggle: function(e4) {
            var t3 = new v2();
            t3.immutables = this.editor && this.editor.options.immutables, t3.remove(p2.nodes(e4));
          }.bind(this) }, d2.fn.init.call(this, e3);
        } }), k2 = u2.extend({ init: function(e3) {
          u2.fn.init.call(this, e3), this.finder = new f2([{ tags: h2 }]);
        }, initialize: function(t3, n3) {
          u2.fn.initialize.call(this, t3, n3), e2.extend(this.options, { immutables: n3.editor && n3.editor.options.immutables }), t3.addClass("k-disabled");
        }, update: function(t3, n3) {
          var i3, a3, s3, l3, d3, u3, c3 = this.finder.findSuitable(n3);
          for (s3 = 0, l3 = c3.length; s3 < l3; s3++) if (d3 = c3[s3], this.options.immutables && (u3 = r2.Immutables.immutableParent(d3)) && (d3 = u3), (i3 = g2(d3)) || (a3 = e2(d3).parents("ul,ol").length, i3 = o2.is(d3, "li") && (a3 > 1 || g2(d3.parentNode)) || o2.ofType(d3, ["ul", "ol"]) && a3 > 0), i3) return void t3.removeClass("k-disabled");
          t3.addClass("k-disabled").removeClass("k-hover");
        } });
        a2(r2, { IndentFormatter: v2, IndentCommand: _2, OutdentCommand: b2, OutdentTool: k2 }), l2("indent", new u2({ command: _2, template: new c2({ template: s2.buttonTemplate, title: "Indent" }) })), l2("outdent", new k2({ command: b2, template: new c2({ template: s2.buttonTemplate, title: "Outdent" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = e2.extend, i2 = t2.ui.editor, a2 = i2.Dom, r2 = i2.Command, o2 = i2.Tool, s2 = i2.BlockFormatter, l2 = a2.normalize, d2 = i2.RangeUtils, u2 = i2.EditorUtils.registerTool, c2 = r2.extend({ init: function(e3) {
          this.options = e3, r2.fn.init.call(this, e3);
        }, _insertMarker: function(e3, t3) {
          var n3, i3 = a2.create(e3, "a");
          return i3.className = "k-marker", t3.insertNode(i3), i3.parentNode || ((n3 = t3.commonAncestorContainer).innerHTML = "", n3.appendChild(i3)), l2(i3.parentNode), i3;
        }, _moveFocus: function(e3, t3) {
          if (a2.isEmpty(t3)) e3.setStartBefore(t3);
          else {
            e3.selectNodeContents(t3);
            var n3 = d2.textNodes(e3)[0];
            if (!n3) {
              for (; t3.childNodes.length && !a2.is(t3.firstChild, "br"); ) t3 = t3.firstChild;
              n3 = t3;
            }
            if (a2.isEmpty(n3)) e3.setStartBefore(n3);
            else {
              a2.emptyNode(n3) && (n3.innerHTML = "\uFEFF");
              var i3 = n3.firstChild || n3;
              a2.isDataNode(i3) ? e3.setStart(i3, 0) : e3.setStartBefore(i3);
            }
          }
        }, shouldTrim: function(e3) {
          var t3 = "p,h1,h2,h3,h4,h5,h6".split(","), n3 = a2.parentOfType(e3.startContainer, t3), i3 = a2.parentOfType(e3.endContainer, t3);
          return n3 && !i3 || !n3 && i3;
        }, _blankAfter: function(e3) {
          for (; e3 && (a2.isMarker(e3) || "" === a2.stripBom(e3.nodeValue)); ) e3 = e3.nextSibling;
          return !e3;
        }, exec: function() {
          var t3, n3, r3, o3, u3, c3, p3, h2, f2, m2, g2 = this.getRange(), v2 = d2.documentFromRange(g2), _2 = i2.emptyElementContent;
          if (this.expandImmutablesIn(g2), m2 = this.shouldTrim(g2), g2.deleteContents(), u3 = this._insertMarker(v2, g2), a2.stripBomNode(u3.previousSibling), a2.stripBomNode(u3.nextSibling), c3 = a2.closestEditableOfType(u3, ["li"]), p3 = a2.closestEditableOfType(u3, "h1,h2,h3,h4,h5,h6".split(",")), h2 = a2.is(u3.parentNode, "table") && u3.parentNode, c3) {
            if (a2.emptyNode(c3)) {
              o3 = a2.create(v2, "p"), a2.next(c3) && ((f2 = g2.cloneRange()).selectNode(c3), d2.split(f2, c3.parentNode));
              var b2 = e2("br", c3);
              1 == b2.length && b2.remove();
              var k2 = c3.parentNode, w = c3.parentNode.children.length, y = w > 1 && 1 == c3.childNodes.length && c3.children[0];
              a2.insertAfter(o3, k2), a2.remove(1 == w ? c3.parentNode : c3), y && y !== u3 ? (o3.appendChild(y), o3.appendChild(u3)) : o3.innerHTML = _2, r3 = o3;
            }
          } else p3 && this._blankAfter(u3) ? (o3 = this._insertParagraphAfter(p3), a2.remove(u3), r3 = o3) : h2 && (o3 = this._insertParagraphAfter(h2), a2.remove(u3), r3 = o3);
          r3 || (c3 || p3 || new s2([{ tags: ["p"] }]).apply([u3]), g2.selectNode(u3), t3 = a2.parentOfType(u3, [c3 ? "li" : p3 ? a2.name(p3) : "p"]), d2.split(g2, t3, m2), n3 = t3.previousSibling, a2.is(n3, "li") && n3.firstChild && !a2.is(n3.firstChild, "br") && (n3 = n3.firstChild), r3 = t3.nextSibling, this.clean(n3, { links: true }), this.clean(r3, { links: true }), a2.is(r3, "li") && r3.firstChild && !a2.is(r3.firstChild, "br") && (r3 = r3.firstChild), a2.remove(t3), l2(n3)), l2(r3), this._moveFocus(g2, r3), g2.collapse(true), a2.scrollTo(r3, true), d2.selectRange(g2);
        }, _insertParagraphAfter: function(e3) {
          var t3 = this.getRange(), n3 = d2.documentFromRange(t3), r3 = i2.emptyElementContent, o3 = a2.create(n3, "p");
          return a2.insertAfter(o3, e3), o3.innerHTML = r3, o3;
        }, clean: function(t3, n3) {
          var r3 = t3;
          if (t3.firstChild && a2.is(t3.firstChild, "br") && a2.remove(t3.firstChild), a2.isDataNode(t3) && !t3.nodeValue && (t3 = t3.parentNode), t3) {
            for (var o3 = false; t3.firstChild && 1 == t3.firstChild.nodeType; ) o3 = o3 || a2.significantNodes(t3.childNodes).length > 1, t3 = t3.firstChild;
            if (a2.isEmpty(t3) || "k-br" == t3.className || !/^\s*$/.test(t3.innerHTML) || o3 || (e2(r3).find(".k-br").remove(), t3.innerHTML = i2.emptyElementContent), n3 && n3.links) for (; t3 != r3; ) {
              if (a2.is(t3, "a") && a2.emptyNode(t3)) {
                a2.unwrap(t3);
                break;
              }
              t3 = t3.parentNode;
            }
          }
        } }), p2 = r2.extend({ init: function(e3) {
          this.options = e3, r2.fn.init.call(this, e3);
        }, exec: function() {
          var n3 = this.getRange();
          this.expandImmutablesIn(n3);
          var i3, r3, o3 = a2.create(d2.documentFromRange(n3), "br"), s3 = n3.startContainer, u3 = t2.support.browser, c3 = u3.msie && u3.version < 11, p3 = a2.is(s3, "table") && s3;
          n3.deleteContents(), p3 ? a2.insertAfter(o3, p3) : (r3 = e2(s3).closest(".k-br"), n3.insertNode(o3), r3.length && a2.unwrap(r3[0])), l2(o3.parentNode), c3 || o3.nextSibling && !a2.isWhitespace(o3.nextSibling) || (o3.nextSibling && a2.isWhitespace(o3.nextSibling) && e2(o3.nextSibling).remove(), (i3 = o3.cloneNode(true)).className = "k-br", a2.insertAfter(i3, o3)), n3.setStartAfter(o3), n3.collapse(true), a2.scrollTo(o3.nextSibling || o3, true), d2.selectRange(n3);
        } });
        n2(i2, { ParagraphCommand: c2, NewLineCommand: p2 }), u2("insertLineBreak", new o2({ key: 13, shift: true, command: p2 })), u2("insertParagraph", new o2({ key: 13, command: c2 }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.EditorUtils, o2 = a2.Dom, s2 = r2.registerTool, l2 = a2.ToolTemplate, d2 = a2.RangeUtils, u2 = a2.Command, c2 = a2.LinkFormatter, p2 = d2.textNodes, h2 = n2.keys, f2 = "#k-editor-file-url", m2 = "#k-editor-file-text", g2 = "#k-editor-file-title", v2 = u2.extend({ init: function(e3) {
          var t3 = this;
          u2.fn.init.call(t3, e3), t3.formatter = new c2(), t3.async = true, t3.attributes = {};
        }, insertFile: function(e3, t3) {
          var n3 = this.attributes, i3 = d2.documentFromRange(t3);
          if (n3.href && "http://" != n3.href) {
            if (!e3) return (e3 = o2.create(i3, "a", { href: n3.href })).innerHTML = n3.innerHTML, e3.title = n3.title, t3.deleteContents(), t3.insertNode(e3), e3.nextSibling || o2.insertAfter(i3.createTextNode("\uFEFF"), e3), t3.setStartAfter(e3), t3.setEndAfter(e3), d2.selectRange(t3), true;
            o2.attr(e3, n3);
          }
          return false;
        }, _dialogTemplate: function(e3) {
          return n2.template(`<div class="k-editor-dialog k-popup-edit-form"><div class="k-edit-form-container"><div class="k-edit-form-content"># if (showBrowser) { #<div class="k-filebrowser"></div># } #<div class='k-edit-label'><label for="k-editor-file-url">#: messages.fileWebAddress #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-file-url"></span></div><div class='k-edit-label'><label for="k-editor-file-text">#: messages.fileText #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-file-text"></span></div><div class='k-edit-label'><label for="k-editor-file-title">#: messages.fileTitle #</label></div><div class='k-edit-field'><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input type="text" class="k-input-inner" id="k-editor-file-title"></span></div></div><div class="k-edit-buttons"><button class="k-dialog-insert k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary"><span class="k-button-text">#: messages.dialogInsert #</span></button><button class="k-dialog-close k-button k-button-md k-rounded-md k-button-solid k-button-solid-base"><span class="k-button-text">#: messages.dialogCancel #</span></button></div></div></div>`)({ messages: this.editor.options.messages, showBrowser: e3 });
        }, redo: function() {
          var e3 = this.lockRange();
          this.formatter.apply(e3, this.attributes), this.releaseRange(e3);
        }, exec: function() {
          var e3, t3 = this, a3 = t3.lockRange(), r3 = p2(a3), s3 = false, l3 = r3.length ? this.formatter.finder.findSuitable(r3[0]) : null, u3 = n2.support.browser.msie, c3 = t3.editor.options, v3 = c3.messages, _2 = c3.fileBrowser, b2 = !!(n2.ui.FileBrowser && _2 && _2.transport && void 0 !== _2.transport.read), k2 = { title: v3.insertFile, visible: false, resizable: b2 };
          function w(n3) {
            var i3 = e3.element, r4 = i3.find(f2).val().replace(/ /g, "%20"), o3 = i3.find(m2).val(), d3 = i3.find(g2).val();
            t3.attributes = { href: r4, innerHTML: "" !== o3 ? o3 : r4, title: d3 }, s3 = t3.insertFile(l3, a3), y(n3), t3.change && t3.change();
          }
          function y(n3) {
            n3.preventDefault(), e3.destroy(), o2.windowFromDocument(d2.documentFromRange(a3)).focus(), s3 || t3.releaseRange(a3);
          }
          this.expandImmutablesIn(a3), k2.close = y, b2 && (k2.width = 750);
          var x = (e3 = this.createDialog(t3._dialogTemplate(b2), k2).toggleClass("k-filebrowser-dialog", b2).find(".k-dialog-insert").on("click", w).end().find(".k-dialog-close").on("click", y).end().find(".k-edit-field input").on("keydown", function(e4) {
            e4.keyCode == h2.ENTER ? w(e4) : e4.keyCode == h2.ESC && y(e4);
          }).end().find(f2).val(l3 ? l3.getAttribute("href", 2) : "http://").end().find(m2).val(l3 ? l3.innerText : "").end().find(g2).val(l3 ? l3.title : "").end().data("kendoWindow")).element;
          if (b2 && (t3._fileBrowser = new n2.ui.FileBrowser(x.find(".k-filebrowser"), i2({}, _2)), t3._fileBrowser.bind("change", function(e4) {
            "f" === e4.selected.get("type") && x.find(f2).val(this.value());
          }), t3._fileBrowser.bind("apply", w)), u3) {
            var C = x.closest(".k-window").height();
            x.css("max-height", C);
          }
          e3.center().open(), x.find(f2).trigger("focus").select();
        } });
        n2.ui.editor.FileCommand = v2, s2("insertFile", new a2.Tool({ command: v2, template: new l2({ template: r2.buttonTemplate, title: "Insert File" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = e2.extend, a2 = n2.ui.editor, r2 = a2.Dom, o2 = a2.EditorUtils, s2 = a2.RangeUtils, l2 = a2.Command, d2 = "kendoEditor", u2 = "k-active", c2 = "k-selected", p2 = "scope", h2 = "row", f2 = "col", m2 = "rowgroup", g2 = "colgroup", v2 = "colspan", _2 = "rowspan", b2 = "table", k2 = "thead", w = "tbody", y = "tr", x = "td", C = "th", T = a2.Tool, S = a2.ToolTemplate, I = a2.InsertHtmlCommand, D = a2.BlockFormatFinder, E = a2.BlockFormatTool, A = a2.FormatCommand, F = a2.EditorUtils.registerTool, z = a2.EditorUtils.registerFormat, P = n2.ui.Editor.fn.options.formats, H = n2.getTouches, N = n2.template, R = new D([{ tags: [b2] }]), O = I.extend({ init: function(t3) {
          var n3 = e2.extend({ postProcess: this.postProcess, skipCleaners: true }, t3 || {});
          I.fn.init.call(this, n3);
        }, _tableHtml: function(e3, t3) {
          e3 = e3 || 1, t3 = t3 || 1;
          var n3 = N("<td style='width:#=width#%;'>#=content#</td>")({ width: 100 / t3, content: a2.emptyTableCellContent }), i3 = 100 / e3;
          return "<table class='k-table' data-last>" + new Array(e3 + 1).join("<tr style='height:" + i3 + "%;'>" + new Array(t3 + 1).join(n3) + "</tr>") + "</table>";
        }, postProcess: function(t3, n3) {
          var i3 = e2("table[data-last]", t3.document).removeAttr("data-last");
          n3.setStart(i3.find(x)[0], 0), n3.collapse(true), t3.selectRange(n3);
        }, exec: function() {
          var e3 = this.options;
          e3.html = this._tableHtml(e3.rows, e3.columns), I.fn.exec.call(this);
        } }), M = T.extend({ initialize: function(t3, n3) {
          T.fn.initialize.call(this, t3, n3);
          var i3 = e2(this.options.popupTemplate).appendTo("body").kendoPopup({ anchor: t3, copyAnchorStyles: false, open: this._open.bind(this), activate: this._activate.bind(this), close: this._close.bind(this) }).data("kendoPopup");
          t3.on("click", this._toggle.bind(this)).on("keydown", this._keydown.bind(this));
          var r3 = this._editor = n3.editor;
          this._popup = i3;
          var s3 = new a2.TableWizardTool({ template: new S({ template: o2.tableWizardButtonTemplate, title: r3.options.messages.tableWizard }), command: a2.TableWizardCommand, insertNewTable: true });
          F("tableWizardInsert", s3);
          var l3 = e2("<div>" + s3.options.template.getHtml() + "</div>");
          l3.appendTo(i3.element), r3.toolbar && r3.toolbar.attachToolsEvents(l3);
        }, popup: function() {
          return this._popup;
        }, _activate: e2.noop, _open: function() {
          this._popup.options.anchor.addClass(u2);
        }, _close: function() {
          this._popup.options.anchor.removeClass(u2);
        }, _keydown: function(e3) {
          var t3 = n2.keys, i3 = e3.keyCode;
          i3 == t3.DOWN && e3.altKey || i3 == t3.ENTER || i3 == t3.SPACEBAR ? this._popup.open() : i3 == t3.ESC && this._popup.close();
        }, _toggle: function(t3) {
          e2(t3.target).closest(".k-tool").hasClass("k-disabled") || this.popup().toggle();
        }, update: function(e3) {
          var t3 = this.popup();
          t3.wrapper && "block" == t3.wrapper.css("display") && t3.close(), e3.removeClass("k-hover");
        }, destroy: function() {
          this._popup.destroy();
        } }), B = M.extend({ init: function(t3) {
          this.cols = 8, this.rows = 6, M.fn.init.call(this, e2.extend(t3, { command: O, popupTemplate: "<div class='k-ct-popup'><div>" + new Array(this.cols * this.rows + 1).join("<span class='k-ct-cell k-disabled'></span>") + "</div><div class='k-status'></div></div>" }));
        }, _activate: function() {
          var t3, i3, a3 = this, r3 = a3._popup.element, o3 = r3.find(".k-ct-cell"), s3 = o3.eq(0), l3 = o3.eq(o3.length - 1), u3 = n2.getOffset(s3), c3 = n2.getOffset(l3), p3 = a3.cols, h3 = a3.rows;
          function f3(n3) {
            var a4 = e2(window);
            return { row: Math.floor((n3.clientY + a4.scrollTop() - u3.top) / i3) + 1, col: Math.floor((n3.clientX + a4.scrollLeft() - u3.left) / t3) + 1 };
          }
          r3.find("*").addBack().attr("unselectable", "on"), c3.left += l3[0].offsetWidth, c3.top += l3[0].offsetHeight, t3 = (c3.left - u3.left) / p3, i3 = (c3.top - u3.top) / h3, r3.autoApplyNS(d2).on("mousemove", ".k-ct-cell", function(e3) {
            a3._setTableSize(f3(e3));
          }).on("mouseleave", ".k-ct-cell", function() {
            a3._setTableSize();
          }).on("down", ".k-ct-cell", function(e3) {
            e3.preventDefault();
            var t4 = H(e3)[0];
            a3._exec(f3(t4.location));
          });
        }, _valid: function(e3) {
          return e3 && e3.row > 0 && e3.col > 0 && e3.row <= this.rows && e3.col <= this.cols;
        }, _exec: function(e3) {
          this._valid(e3) && (this._editor.exec("createTable", { rows: e3.row, columns: e3.col }), this._popup.close());
        }, _setTableSize: function(t3) {
          var i3 = this._popup.element, a3 = i3.find(".k-status"), r3 = i3.find(".k-ct-cell"), o3 = this.cols, s3 = this._editor.options.messages;
          this._valid(t3) ? (a3.text(n2.format(s3.createTableHint, t3.row, t3.col)), r3.each(function(n3) {
            e2(this).toggleClass(c2, n3 % o3 < t3.col && n3 / o3 < t3.row);
          })) : (a3.text(s3.createTable), r3.removeClass(c2));
        }, _keydown: function(e3) {
          var t3 = this._popup.visible();
          if (M.fn._keydown.call(this, e3), this._popup.visible()) {
            var i3, a3 = n2.keys, r3 = e3.keyCode, o3 = this._popup.element.find(".k-ct-cell"), s3 = Math.max(o3.filter(".k-selected").last().index(), 0), l3 = Math.floor(s3 / this.cols), d3 = s3 % this.cols, u3 = false;
            r3 != a3.DOWN || e3.altKey ? r3 == a3.UP ? (u3 = true, l3--) : r3 == a3.RIGHT ? (u3 = true, d3++) : r3 == a3.LEFT ? (u3 = true, d3--) : r3 == a3.TAB && (i3 = this._popup.element.find(".k-button")).length > 0 && (u3 = true, i3.trigger("focus")) : (u3 = true, l3++);
            var c3 = { row: Math.max(1, Math.min(this.rows, l3 + 1)), col: Math.max(1, Math.min(this.cols, d3 + 1)) };
            r3 == a3.ENTER && t3 ? this._exec(c3) : this._setTableSize(c3), u3 && (e3.preventDefault(), e3.stopImmediatePropagation());
          }
        }, _open: function() {
          var e3 = this._editor.options.messages;
          M.fn._open.call(this), this.popup().element.find(".k-status").text(e3.createTable).end().find(".k-ct-cell").removeClass(c2);
        }, _close: function() {
          M.fn._close.call(this), this.popup().element.off("." + d2);
        } }), L = l2.extend({ undo: function() {
          var t3 = this.restorePoint;
          t3.restoreHtml(), e2(this.editor.body).find(".k-element-resize-handle-wrapper").each(function(e3, t4) {
            t4.remove();
          }), this.editor.selectRange(t3.toRange());
        }, _clearColIndexAttr: function(e3) {
          r2.clearTableMappings(e3, "col-index");
        }, _mapColIndices: function(e3) {
          r2.reMapTableColumns(e3, "col-index");
        }, _findRowSpanCell: function(t3, n3, i3) {
          for (var a3, r3, o3 = n3; o3 >= 0; o3--) if (a3 = t3.rows[o3], (r3 = e2(a3).find("[col-index=" + i3 + "]")).length) return r3;
        }, _resetElementResizing: function(e3) {
          e3._destroyResizings(), e3._initializeColumnResizing(), e3._initializeRowResizing(), e3._initializeElementResizing();
        }, _findNextTdInRow: function(e3, t3) {
          for (var n3, i3 = e3.find("td:last-child"), a3 = parseInt(i3.attr("col-index"), 10) + i3.prop("colSpan") - 1, r3 = t3; r3 <= a3; r3++) if ((n3 = e3.find("[col-index=" + r3 + "]")).length) return n3;
        }, _adjustColgroups: function(e3, t3) {
          for (var n3, i3, a3, o3 = t3.getElementsByTagName(f2), s3 = t3.getElementsByTagName(g2), l3 = e3.cells, d3 = l3.length; o3.length > 0; ) o3[0].remove();
          for (; s3.length > 0; ) s3[0].remove();
          for (n3 = d3 - 1; n3 >= 0; n3--) (a3 = l3[n3]).getAttribute(p2) === g2 ? ((i3 = r2.createEmptyNode(this.editor.document, g2)).setAttribute("span", a3.getAttribute(v2)), t3.prepend(i3)) : t3.prepend(r2.createEmptyNode(this.editor.document, f2));
        }, _associateHeaderIds: function(t3) {
          r2.clearTableMappings(t3, "col-index"), r2.reMapTableColumns(t3, "col-index"), e2(t3).find("th, td").removeAttr("id headers"), r2.associateWithIds(t3);
        }, _getNumberOfColumns: function(e3) {
          return r2._getNumberOfColumns(e3, "td, th");
        } }), V = L.extend({ exec: function() {
          var t3, n3, i3, o3, s3, l3, d3 = this.lockRange(true), u3 = r2.closest(d3.endContainer, [x, C]), c3 = r2.closest(u3, b2), f3 = this.options.position || "after";
          if (!c3 || this.immutables() && a2.Immutables.immutableParent(u3)) this.releaseRange(d3);
          else {
            this._mapColIndices(c3), n3 = u3.parentNode, s3 = r2.findNodeIndex(n3, true), u3.rowSpan > 1 && "after" === f3 && (n3 = c3.rows[s3 + u3.rowSpan - 1]), t3 = this._getNumberOfColumns(c3), o3 = n3.cloneNode(true), e2(o3).empty();
            for (var g3 = 0; g3 < t3; g3 += i3.prop("colSpan")) (i3 = e2(n3).find("[col-index=" + g3 + "]")).length ? i3.prop("rowSpan") > 1 && "after" === f3 && i3 ? i3.attr(_2, i3.prop("rowSpan") + 1) : this._appendCell(o3, i3) : (s3 = r2.findNodeIndex(n3, true), (i3 = this._findRowSpanCell(n3.parentElement, s3, g3)).closest(y).index() + i3.prop("rowSpan") - 1 === s3 && "after" === f3 ? this._appendCell(o3, i3) : i3.attr(_2, i3.prop("rowSpan") + 1)), (l3 = e2(o3).find("[col-index=" + g3 + "]")).attr(p2) !== m2 || l3.attr(_2) || l3.attr(p2, h2);
            "before" == f3 ? r2.insertBefore(o3, n3) : r2.insertAfter(o3, n3), e2(c3).find("[headers]").length > 0 && this._associateHeaderIds(c3), this._clearColIndexAttr(c3), this.releaseRange(d3), this._resetElementResizing(this.editor);
          }
        }, _appendCell: function(e3, t3) {
          var n3;
          (n3 = t3.clone()).html(a2.emptyTableCellContent), n3.removeAttr(_2), n3.appendTo(e3);
        } }), U = L.extend({ exec: function() {
          var t3, n3, i3, o3, s3 = this.lockRange(true), l3 = r2.closest(s3.endContainer, [x, C]), d3 = r2.closest(l3, b2), u3 = d3.getElementsByTagName(f2), c3 = d3.getElementsByTagName(g2), h3 = d3 && d3.rows, m3 = this.options.position || "after";
          if (!l3 || this.immutables() && a2.Immutables.immutableParent(l3)) this.releaseRange(s3);
          else {
            for (this._mapColIndices(d3), t3 = parseInt(l3.getAttribute("col-index"), 10), l3.colSpan > 1 && "after" === m3 && (l3.setAttribute("col-index", t3 + l3.colSpan - 1), t3 = t3 + l3.colSpan - 1), n3 = 0; n3 < h3.length; n3++) (i3 = this._processForColSpan(h3[n3], t3, m3, l3)) && ((o3 = i3.cloneNode()).innerHTML = a2.emptyTableCellContent, o3.removeAttribute(v2), o3.getAttribute(p2) && o3.getAttribute(p2) === g2 && o3.setAttribute(p2, f2), "before" == m3 ? r2.insertBefore(o3, i3) : r2.insertAfter(o3, i3), this._resizeCells(o3, i3));
            (u3.length > 0 || c3.length > 0) && this._adjustColgroups(h3[0], d3), e2(d3).find("[headers]").length > 0 && this._associateHeaderIds(d3), this._clearColIndexAttr(d3), this.releaseRange(s3), this._resetElementResizing(this.editor);
          }
        }, _processForColSpan: function(t3, n3, i3, a3) {
          var r3, o3, s3 = n3 - 1;
          if ((r3 = e2(t3).find("[col-index=" + n3 + "]")[0]) && r3.colSpan > 1 && "after" === i3 && r3 !== a3) r3.colSpan += 1;
          else {
            if (r3) return r3;
            for (; s3 >= 0 && !((r3 = e2(t3).find("[col-index=" + s3 + "]")[0]) && r3.colSpan > 1); s3--) ;
            if (r3) {
              if ((o3 = parseInt(r3.getAttribute("col-index"), 10) + r3.colSpan - 1) === n3 && "after" === i3) return r3;
              n3 <= o3 && r3.setAttribute(v2, r3.colSpan + 1);
            }
          }
        }, _resizeCells: function(e3, t3) {
          var n3, i3, a3, r3 = e3.style.width;
          r3 && (n3 = parseFloat(r3), i3 = r3.slice(n3.toString().length), a3 = n3 / 2 + i3, e3.style.width = a3, t3.style.width = a3);
        } }), W = L.extend({ exec: function() {
          var t3, n3 = this.lockRange(), i3 = s2.mapAll(n3, function(t4) {
            return e2(t4).closest(y)[0];
          }), o3 = r2.closest(n3.endContainer, [x, C]), l3 = i3[0], d3 = o3 ? o3.rowSpan : 1, u3 = e2(i3[0]).index(), c3 = r2.closest(l3, b2), p3 = l3.parentElement;
          if (!c3 || this.immutables() && a2.Immutables.immutableParent(l3)) this.releaseRange(n3);
          else {
            for (var h3 = 0; h3 < d3; h3++) i3.indexOf(p3.rows[u3 + h3]) < 0 && i3.push(p3.rows[u3 + h3]);
            if (c3.rows.length <= i3.length) (t3 = r2.next(c3)) && !r2.insignificant(t3) || (t3 = r2.prev(c3)), t3 && t3.rows && (t3 = t3.rows[0].cells[0]), r2.remove(c3), this._resetElementResizing(this.editor);
            else if (p3.rows.length <= i3.length) (t3 = p3.nextSibling) || (t3 = p3.previousSibling), r2.remove(p3);
            else {
              this._mapColIndices(c3);
              for (var f3 = 0; f3 < i3.length; f3++) l3 = i3[f3], r2.removeTextSiblings(l3), t3 = (t3 = r2.next(l3) || r2.prev(l3)).cells[0], this._focusElement(n3, t3), t3 = null, this._handleRowSpanCells(c3, l3), r2.remove(l3);
              this._clearColIndexAttr(c3);
            }
            e2(c3).find("[headers]").length > 0 ? this._associateHeaderIds(c3) : r2.is(p3, k2) && e2(c3).find("[scope]").length > 0 && this._adjustColgroups(p3.rows[0], c3), t3 && this._focusElement(n3, t3), this._resetElementResizing(this.editor);
          }
        }, _focusElement: function(e3, t3) {
          e3.setStart(t3, 0), e3.collapse(true), this.editor.selectRange(e3);
        }, _handleRowSpanCells: function(t3, n3) {
          var i3, a3, o3, s3, l3 = r2.findNodeIndex(n3, true), d3 = t3.rows[0], u3 = d3.cells[d3.cells.length - 1], c3 = parseInt(u3.getAttribute("col-index"), 10) + u3.colSpan - 1;
          for (i3 = 0; i3 <= c3; i3 += a3.prop("colSpan")) (a3 = e2(n3).find("[col-index=" + i3 + "]")).length && a3.prop("rowSpan") > 1 && (s3 = t3.rows[l3 + 1], (o3 = e2(s3).find("[col-index=" + (i3 + 1) + "]")).length ? o3.before(a3) : e2(s3).append(a3), this._reduceRowSpan(a3)), a3.length || (a3 = this._findRowSpanCell(n3.parentElement, l3, i3), this._reduceRowSpan(a3));
        }, _reduceRowSpan: function(e3) {
          var t3 = e3.prop("rowSpan") - 1;
          t3 <= 1 ? (e3.removeAttr(_2), e3.attr(p2) === m2 && e3.attr(p2, h2)) : e3.attr(_2, t3);
        } }), j = L.extend({ exec: function() {
          var t3, n3, i3, o3, s3 = this.lockRange(), l3 = r2.closest(s3.endContainer, [x, C]), d3 = r2.closest(l3, b2), u3 = d3 && d3.rows, c3 = r2.findNodeIndex(l3, true), p3 = u3 && u3[0].cells.length, h3 = d3.getElementsByTagName(f2), m3 = d3.getElementsByTagName(g2);
          if (!l3 || this.immutables() && a2.Immutables.immutableParent(l3)) this.releaseRange(s3);
          else {
            if (1 == p3 || l3.colSpan == p3) (t3 = r2.next(d3)) && !r2.insignificant(t3) || (t3 = r2.prev(d3)), t3 && t3.rows && (t3 = t3.rows[0].cells[0]), r2.remove(d3), this._resetElementResizing(this.editor);
            else {
              for (r2.removeTextSiblings(l3), t3 = r2.next(l3) || r2.prev(l3), this._mapColIndices(d3), c3 = parseInt(l3.getAttribute("col-index"), 10), o3 = 0; o3 < l3.colSpan; o3++) for (n3 = 0; n3 < u3.length; n3 += i3.prop("rowSpan") || 1) (i3 = e2(u3[n3]).find("[col-index=" + (c3 + o3) + "]")).length && i3.prop("colSpan") <= 1 ? i3.remove() : this._handleColSpanCells(u3[n3], c3 + o3);
              this._clearColIndexAttr(d3);
            }
            (h3.length > 0 || m3.length > 0) && this._adjustColgroups(u3[0], d3), e2(d3).find("[headers]").length > 0 && this._associateHeaderIds(d3), t3 && (s3.setStart(t3, 0), s3.collapse(true), this.editor.selectRange(s3)), this._resetElementResizing(this.editor);
          }
        }, _handleColSpanCells: function(t3, n3) {
          var i3 = e2(t3).find("[col-index=" + n3 + "]");
          if (i3.length && i3.prop("colSpan") > 1) {
            var a3 = i3.clone(true);
            return i3.after(a3), this._reduceColSpan(a3), a3.attr("col-index", parseInt(i3.attr("col-index"), 10) + 1), void i3.remove();
          }
          for (var r3 = n3; r3 >= 0; r3--) if ((i3 = e2(t3).find("[col-index=" + r3 + "]")).length) return this._reduceColSpan(i3), void i3.attr("col-index", parseInt(i3.attr("col-index"), 10) + 1);
        }, _reduceColSpan: function(e3) {
          var t3 = e3.prop("colSpan") - 1;
          t3 <= 1 ? (e3.removeAttr(v2), e3.attr(p2) === g2 && e3.attr(p2, f2)) : e3.attr(v2, t3);
        } }), q = L.extend({ exec: function() {
          var t3, n3, i3, o3, s3, l3 = this.lockRange(), d3 = r2.closest(l3.endContainer, [x, C]);
          if (d3) if (t3 = r2.closest(d3, b2), n3 = d3.parentNode, i3 = r2.findNodeIndex(d3, true), n3.children[i3 + 1], this.immutables() && a2.Immutables.immutableParent(d3)) this.releaseRange(l3);
          else {
            if (this._mapColIndices(t3), i3 = parseInt(e2(d3).attr("col-index"), 10), !(o3 = e2(n3).find("[col-index=" + (i3 + 1 + this._getColspan(d3) - 1) + "]").get(0)) || o3.rowSpan !== d3.rowSpan || d3.tagName !== o3.tagName) return this._clearColIndexAttr(t3), void this.releaseRange(l3);
            s3 = this._getColspan(d3) + this._getColspan(o3), e2(d3).prop(v2, s3).append(r2.emptyNode(o3) ? "" : "<br/>" + o3.innerHTML), e2(d3).width(d3.offsetWidth), e2(o3).remove(), d3.getAttribute(p2) === f2 && d3.setAttribute(p2, g2), d3.getAttribute(p2) === g2 && this._adjustColgroups(n3, t3), e2(t3).find("[headers]").length > 0 && this._associateHeaderIds(t3), this._clearColIndexAttr(t3), this.releaseRange(l3), this._resetElementResizing(this.editor);
          }
          else this.releaseRange(l3);
        }, _getColspan: function(e3) {
          return parseInt(e3.getAttribute(v2), 10) || 1;
        } }), G = L.extend({ exec: function() {
          var t3, n3, i3, o3, s3, l3, d3, u3 = this.lockRange(), c3 = r2.closest(u3.endContainer, [x, C]);
          if (c3) if (t3 = r2.closest(c3, y), n3 = r2.closest(c3, [k2, w]), i3 = r2.closest(c3, b2), o3 = r2.findNodeIndex(c3, true), (s3 = r2.findNodeIndex(t3, true)) + 1 !== n3.rows.length) if ((l3 = n3.rows[s3 + this._getRowspan(c3)]) && l3.children[o3], this.immutables() && a2.Immutables.immutableParent(c3)) this.releaseRange(u3);
          else {
            if (this._mapColIndices(i3), o3 = e2(c3).attr("col-index"), !(d3 = e2(l3).find("[col-index=" + o3 + "]").get(0)) || d3.colSpan !== c3.colSpan || c3.tagName !== d3.tagName) return this._clearColIndexAttr(i3), void this.releaseRange(u3);
            e2(c3).prop(_2, this._getRowspan(c3) + this._getRowspan(d3)).append(r2.emptyNode(d3) ? "" : "<br/>" + d3.innerHTML), c3.getAttribute(p2) === h2 && c3.setAttribute(p2, m2), e2(d3).remove(), e2(i3).find("[headers]").length > 0 && this._associateHeaderIds(i3), this._clearColIndexAttr(i3), this.releaseRange(u3);
          }
          else this.releaseRange(u3);
          else this.releaseRange(u3);
        }, _getRowspan: function(e3) {
          return parseInt(e3.getAttribute(_2), 10) || 1;
        } }), K = L.extend({ exec: function() {
          var t3 = this.lockRange(), n3 = this.options.type, i3 = "row" === n3 ? v2 : _2, o3 = r2.closest(t3.endContainer, [x, C]), s3 = r2.closest(o3, [k2, w]), l3 = r2.closest(o3, b2), d3 = r2.createEmptyNode(this.editor.document, o3.nodeName.toLowerCase());
          !o3 || this.immutables() && a2.Immutables.immutableParent(o3) || (this._mapColIndices(l3), "row" === n3 && e2(o3).is("[" + i3 + "]") ? this._splitCellHorizontally(o3, s3, i3, d3) : "column" === n3 && e2(o3).is("[" + i3 + "]") && this._splitCellVertically(o3, s3, i3, d3), e2(o3).prop(i3.toLowerCase()) <= 1 && e2(o3).removeAttr(i3), e2(l3).find("[headers]").length > 0 && this._associateHeaderIds(l3), this._clearColIndexAttr(l3)), this.releaseRange(t3);
        }, _getRowspanValue: function(e3) {
          return parseInt(e3.getAttribute(_2), 10);
        }, _getColspanValue: function(e3) {
          return parseInt(e3.getAttribute(v2), 10);
        }, _splitCellHorizontally: function(t3, n3, i3, a3) {
          var r3 = t3.rowSpan, o3 = t3.colSpan, s3 = e2(a3), l3 = Math.floor(o3 / 2);
          l3 > 1 && s3.attr(v2, l3), r3 > 1 && s3.attr(_2, r3), e2(t3).prop(i3, o3 - l3).after(s3), e2(t3).width(t3.offsetWidth), s3.width(s3[0].offsetWidth), t3.hasAttribute(p2) && (t3.getAttribute(p2) === g2 ? (s3.attr(p2, f2), t3.getAttribute(v2) && "1" !== t3.getAttribute(v2) || t3.setAttribute(p2, f2), this._adjustColgroups(t3.parentNode, n3.parentNode)) : s3.attr(p2, t3.getAttribute(p2)));
        }, _splitCellVertically: function(t3, n3, i3, a3) {
          var o3 = r2.closest(t3, y), s3 = parseInt(e2(t3).attr("col-index"), 10), l3 = r2.findNodeIndex(o3, true), d3 = t3.rowSpan, u3 = t3.colSpan, c3 = Math.floor(d3 / 2), f3 = e2(n3).find(y).eq(l3 + d3 - c3), g3 = this._findNextTdInRow(f3, s3 + u3), b3 = e2(a3);
          c3 > 1 && b3.attr(_2, c3), u3 > 1 && b3.attr(v2, u3), g3 && g3.length ? g3.before(b3) : f3.append(b3), e2(t3).prop(i3, d3 - c3), t3.hasAttribute(p2) && (t3.getAttribute(p2) === m2 ? (b3.attr(p2, h2), t3.getAttribute(_2) && "1" !== t3.getAttribute(_2) || t3.setAttribute(p2, h2)) : b3.attr(p2, t3.getAttribute(p2)));
        } }), $ = T.extend({ command: function(e3) {
          var t3 = { row: { insert: V, delete: W, merge: q, split: K }, column: { insert: U, delete: j, merge: G, split: K } };
          return (e3 = i2(e3, this.options)).action = e3.action || "insert", new t3[e3.type][e3.action](e3);
        }, initialize: function(e3, t3) {
          T.fn.initialize.call(this, e3, t3), e3.addClass("k-disabled"), e3.attr("disabled", "disabled");
        }, update: function(e3, t3) {
          true === !R.isFormatted(t3) ? (e3.parent().addClass("k-hidden k-disabled"), e3.attr("disabled", "disabled"), e3.addClass("k-disabled")) : (e3.parent().removeClass("k-hidden k-disabled"), e3.prop("disabled", false), e3.removeClass("k-disabled"));
        } }), Y = A.extend({ exec: function() {
          var e3 = this.editor;
          A.fn.exec.call(this), e3.elementResizing && e3.elementResizing._showResizeHandles();
        } }), Q = E.extend({ initialize: function(e3, t3) {
          E.fn.initialize.call(this, e3, t3), e3.addClass("k-disabled"), e3.attr("disabled", "disabled");
        }, update: function(e3, t3) {
          var n3 = !R.isFormatted(t3), i3 = this.options.finder.isFormatted(t3, this.isTable);
          true === n3 ? (e3.parent().addClass("k-hidden k-disabled"), e3.attr("disabled", "disabled"), e3.addClass("k-disabled")) : (e3.parent().removeClass("k-hidden k-disabled"), e3.prop("disabled", false), e3.removeClass("k-disabled")), e3.toggleClass("k-selected", i3), e3.attr("aria-pressed", i3);
        }, command: function(e3) {
          return new Y(i2(e3, { formatter: this.options.formatter }));
        }, isTable: function(e3) {
          return r2.is(e3, "table");
        } });
        i2(n2.ui.editor, { PopupTool: M, TableCommand: O, InsertTableTool: B, TableFormatTool: Q, TableFormatCommand: Y, TableModificationTool: $, InsertRowCommand: V, InsertColumnCommand: U, DeleteRowCommand: W, DeleteColumnCommand: j, MergeCellsHorizontallyCommand: q, MergeCellsVerticallyCommand: G, SplitCellCommand: K }), F("createTable", new B({ template: new S({ template: o2.buttonTemplate, popup: true, title: "Create table" }) })), F("addColumnLeft", new $({ type: "column", position: "before", template: new S({ template: o2.buttonTemplate, title: "Add column on the left" }) })), F("addColumnRight", new $({ type: "column", template: new S({ template: o2.buttonTemplate, title: "Add column on the right" }) })), F("addRowAbove", new $({ type: "row", position: "before", template: new S({ template: o2.buttonTemplate, title: "Add row above" }) })), F("addRowBelow", new $({ type: "row", template: new S({ template: o2.buttonTemplate, title: "Add row below" }) })), F("deleteRow", new $({ type: "row", action: "delete", template: new S({ template: o2.buttonTemplate, title: "Delete row" }) })), F("deleteColumn", new $({ type: "column", action: "delete", template: new S({ template: o2.buttonTemplate, title: "Delete column" }) })), F("mergeCellsHorizontally", new $({ type: "row", action: "merge", template: new S({ template: o2.buttonTemplate, title: "Merge Cell Right" }) })), F("mergeCellsVertically", new $({ type: "column", action: "merge", template: new S({ template: o2.buttonTemplate, title: "Merge Cell Down" }) })), F("splitCellHorizontally", new $({ type: "row", action: "split", template: new S({ template: o2.buttonTemplate, title: "Split Cell" }) })), F("splitCellVertically", new $({ type: "column", action: "split", template: new S({ template: o2.buttonTemplate, title: "Split Cell" }) })), z("tableAlignLeft", [{ tags: ["table"], attr: { style: { marginLeft: "", marginRight: "auto" } } }, { tags: ["table"], attr: { align: "left" } }]), F("tableAlignLeft", new Q({ format: P.tableAlignLeft, template: new S({ template: o2.buttonTemplate, title: "Table Align Left" }) })), z("tableAlignCenter", [{ tags: ["table"], attr: { style: { marginLeft: "auto", marginRight: "auto" } } }, { tags: ["table"], attr: { align: "center" } }]), F("tableAlignCenter", new Q({ format: P.tableAlignCenter, template: new S({ template: o2.buttonTemplate, title: "Table Align Center" }) })), z("tableAlignRight", [{ tags: ["table"], attr: { style: { marginLeft: "auto", marginRight: "" } } }, { tags: ["table"], attr: { align: "right" } }]), F("tableAlignRight", new Q({ format: P.tableAlignRight, template: new S({ template: o2.buttonTemplate, title: "Table Align Left" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = t2.ui.editor, a2 = i2.RangeUtils, r2 = i2.Dom, o2 = i2.RestorePoint, s2 = i2.Marker, l2 = t2.support.browser, d2 = e2.extend, u2 = n2.extend({ init: function(e3) {
          this.editor = e3;
          var t3 = e3.options.pasteCleanup;
          this.cleaners = [new p2(t3), new h2(t3), new f2(t3), new m2(t3), new v2(t3), new _2(t3), new y(t3), new x(t3)];
        }, htmlToFragment: function(e3) {
          var t3 = this.editor.document, n3 = r2.create(t3, "div"), i3 = t3.createDocumentFragment();
          for (n3.innerHTML = e3; n3.firstChild; ) i3.appendChild(n3.firstChild);
          return i3;
        }, isBlock: function(e3) {
          return /<(div|p|ul|ol|table|h[1-6])/i.test(e3);
        }, _startModification: function() {
          var e3, t3, n3 = this.editor;
          if (!this._inProgress) return this._inProgress = true, e3 = n3.getRange(), t3 = new o2(e3, n3.body), r2.persistScrollTop(n3.document), { range: e3, restorePoint: t3 };
        }, _endModification: function(e3) {
          i2._finishUpdate(this.editor, e3.restorePoint), this.editor._selectionChange(), this._inProgress = false;
        }, _contentModification: function(e3, t3) {
          var n3 = this, i3 = n3.editor, a3 = n3._startModification();
          a3 && (e3.call(n3, i3, a3.range), setTimeout(function() {
            t3.call(n3, i3, a3.range), n3._endModification(a3);
          }));
        }, _removeBomNodes: function(e3) {
          for (var t3 = a2.textNodes(e3), n3 = 0; n3 < t3.length; n3++) t3[n3].nodeValue = r2.stripBom(t3[n3].nodeValue) || t3[n3].nodeValue;
        }, _onBeforeCopy: function(e3) {
          var t3 = new s2();
          t3.add(e3), this._removeBomNodes(e3), t3.remove(e3), this.editor.selectRange(e3);
        }, oncopy: function() {
          this._onBeforeCopy(this.editor.getRange());
        }, oncut: function() {
          this._onBeforeCopy(this.editor.getRange()), this._contentModification(e2.noop, e2.noop);
        }, _fileToDataURL: function(t3) {
          var n3 = e2.Deferred(), i3 = new FileReader();
          return t3 instanceof window.File || !t3.getAsFile || (t3 = t3.getAsFile()), i3.onload = n3.resolve.bind(n3), i3.readAsDataURL(t3), n3.promise();
        }, _triggerPaste: function(e3, t3) {
          var n3 = { html: e3 || "" };
          n3.html = n3.html.replace(/\ufeff/g, ""), this.editor.trigger("paste", n3), this.paste(n3.html, t3 || {});
        }, _handleImagePaste: function(e3) {
          if ("FileReader" in window && !(l2.msie && l2.version > 10)) {
            var t3 = e3.clipboardData || e3.originalEvent.clipboardData || window.clipboardData || {}, n3 = t3.items || t3.files;
            return this._insertImages(n3);
          }
        }, _insertImages: function(t3) {
          if (t3) {
            var n3 = e2.grep(t3, function(e3) {
              return /^image\//i.test(e3.type);
            });
            if (!e2.grep(t3, function(e3) {
              return /^text\/html/i.test(e3.type);
            }).length && n3.length) {
              var i3 = this._startModification();
              if (i3) return e2.when.apply(e2, e2.map(n3, this._fileToDataURL)).done(function() {
                var t4 = Array.prototype.slice.call(arguments), n4 = e2.map(t4, function(e3) {
                  return '<img src="' + e3.target.result + '" />';
                }).join("");
                this._triggerPaste(n4), this._endModification(i3);
              }.bind(this)), true;
            }
          }
        }, onpaste: function(n3) {
          "false" !== this.editor.body.contentEditable && (this._handleImagePaste(n3) ? n3.preventDefault() : (this.expandImmutablesIn(), this._contentModification(function(i3, a3) {
            var o3 = r2.create(i3.document, "div", { className: "k-paste-container", innerHTML: "\uFEFF" }), s3 = t2.support.browser, l3 = i3.body;
            if (this._decoreateClipboardNode(o3, l3), l3.appendChild(o3), s3.webkit && this._moveToCaretPosition(o3, a3), s3.msie && s3.version < 11) {
              n3.preventDefault();
              var d3 = i3.createRange();
              d3.selectNodeContents(o3), i3.selectRange(d3);
              var u3 = i3.document.body.createTextRange();
              u3.moveToElementText(o3), e2(l3).off("paste"), u3.execCommand("Paste"), e2(l3).on("paste", this.onpaste.bind(this));
            } else {
              var c3 = i3.createRange();
              c3.selectNodeContents(o3), i3.selectRange(c3);
            }
            a3.deleteContents();
          }, function(t3, n4) {
            var i3, a3 = "";
            t3.selectRange(n4), (i3 = e2(t3.body).children(".k-paste-container")).each(function() {
              var e3 = this.lastChild;
              e3 && r2.is(e3, "br") && r2.remove(e3), a3 += this.innerHTML;
            }), i3.remove(), this._triggerPaste(a3, { clean: true });
          })));
        }, ondragover: function(e3) {
          (l2.msie || l2.edge) && (e3.stopPropagation(), e3.preventDefault());
        }, ondrop: function(e3) {
          if ("FileReader" in window) {
            var t3 = (e3.originalEvent || e3).dataTransfer || {}, n3 = t3.items || t3.files;
            this._insertImages(n3) && e3.preventDefault();
          }
        }, _decoreateClipboardNode: function(t3, n3) {
          if ((l2.msie || l2.webkit) && ((t3 = e2(t3)).css({ borderWidth: "0px", width: "0px", height: "0px", overflow: "hidden", margin: "0", padding: "0" }), l2.msie)) {
            var i3 = e2(n3.ownerDocument.documentElement);
            t3.css({ fontVariant: "normal", fontWeight: "normal", lineSpacing: "normal", lineHeight: "normal", textDecoration: "none" });
            var a3 = i3.css("color");
            a3 && t3.css("color", a3);
            var r3 = i3.css("fontFamily");
            r3 && t3.css("fontFamily", r3);
            var o3 = i3.css("fontSize");
            o3 && t3.css("fontSize", o3);
          }
        }, _moveToCaretPosition: function(t3, n3) {
          var i3 = this.editor.body, a3 = r2.offset(t3, i3), o3 = this._caretOffset(n3, i3), s3 = "translate(" + (o3.left - a3.left) + "px," + (o3.top - a3.top) + "px)";
          e2(t3).css({ "-webkit-transform": s3, transform: s3 });
        }, _caretOffset: function(e3, t3) {
          var n3, i3 = this.editor, a3 = r2.create(i3.document, "span", { innerHTML: "\uFEFF" }), o3 = e3.startContainer;
          if (e3.collapsed) {
            var s3 = r2.isDataNode(o3);
            s3 && (r2.isBom(o3) || 0 === e3.startOffset) ? r2.insertBefore(a3, o3) : s3 && e3.startOffset === o3.length ? r2.insertAfter(a3, o3) : (e3.insertNode(a3), n3 = true);
          } else o3 = o3 === t3 ? o3.childNodes[e3.startOffset] : o3, r2.insertBefore(a3, o3);
          var l3 = r2.offset(a3, t3), d3 = a3.previousSibling, u3 = a3.nextSibling;
          if (r2.remove(a3), n3 && r2.isDataNode(d3) && r2.isDataNode(u3) && !r2.isBom(d3) && !r2.isBom(u3)) {
            var c3 = d3.length;
            u3.data = d3.data + u3.data, e3.setStart(u3, c3), r2.remove(d3), e3.collapse(true), i3.selectRange(e3);
          }
          return l3;
        }, expandImmutablesIn: function(e3) {
          var n3 = this.editor;
          if (n3 && n3.options.immutables) {
            var i3 = n3.body;
            if (e3 = e3 || n3.getRange(), t2.ui.editor.Immutables.expandImmutablesIn(e3), e3.startContainer === i3 && 0 === e3.startOffset) {
              var a3 = i3.ownerDocument.createTextNode("\uFEFF");
              i3.insertBefore(a3, i3.childNodes[0]), e3.setStartBefore(a3);
            }
            n3.selectRange(e3);
          }
        }, splittableParent: function(e3, t3) {
          var n3, i3;
          if (e3) return r2.closestEditableOfType(t3, ["p", "ul", "ol"]) || t3.parentNode;
          if (n3 = t3.parentNode, i3 = t3.ownerDocument.body, r2.isInline(n3)) for (; n3.parentNode != i3 && !r2.isBlock(n3.parentNode); ) n3 = n3.parentNode;
          return n3;
        }, paste: function(t3, n3) {
          var i3, o3, l3, u3 = this.editor;
          if (this.expandImmutablesIn(), !(n3 = d2({ clean: false, split: true }, n3)).skipCleaners) for (i3 = 0, o3 = this.cleaners.length; i3 < o3; i3++) this.cleaners[i3].applicable(t3) && (t3 = this.cleaners[i3].clean(t3));
          n3.clean && (t3 = (t3 = t3.replace(/(<br>(\s|&nbsp;)*)+(<\/?(div|p|li|col|t))/gi, "$3")).replace(/<(a|span)[^>]*><\/\1>/gi, "")), t3 = (t3 = t3.replace(/<(a|span|font)([^>]*)> <\/\1>/gi, "<$1$2>&nbsp;</$1>")).replace(/^<li/i, "<ul><li").replace(/li>$/g, "li></ul>");
          var c3 = this.isBlock(t3);
          u3.focus();
          var p3 = u3.getRange();
          p3.deleteContents(), p3.startContainer == u3.document && p3.selectNodeContents(u3.body);
          var h3 = new s2(), f3 = h3.addCaret(p3), m3 = this.splittableParent(c3, f3), g3 = false, v3 = m3 != u3.body && !r2.is(m3, "td");
          n3.split && v3 && (c3 || r2.isInline(m3)) && (p3.selectNode(f3), a2.split(p3, m3, true), g3 = true);
          var _3 = this.htmlToFragment(t3);
          if (_3.firstChild && "k-paste-container" === _3.firstChild.className) {
            var b3 = [];
            for (i3 = 0, o3 = _3.childNodes.length; i3 < o3; i3++) b3.push(_3.childNodes[i3].innerHTML);
            _3 = this.htmlToFragment(b3.join("<br />"));
          }
          if (l3 = _3.childNodes, e2(l3).filter("table").addClass("k-table").end().find("table").addClass("k-table"), e2(l3).each(function(e3, t4) {
            r2.isBlock(t4) && !r2.isSelfClosing(t4) && "" === t4.innerHTML && t4.appendChild(u3.document.createTextNode("\uFEFF"));
          }), p3.insertNode(_3), m3 = this.splittableParent(c3, f3), g3) {
            for (; f3.parentNode != m3; ) r2.unwrap(f3.parentNode);
            r2.unwrap(f3.parentNode);
          }
          r2.normalize(p3.commonAncestorContainer), f3.style.display = "inline", r2.restoreScrollTop(u3.document), r2.scrollTo(f3), h3.removeCaret(p3);
          var k3 = p3.commonAncestorContainer.parentNode;
          (p3.collapsed && "tbody" == r2.name(k3) || p3.collapsed && "thead" == r2.name(k3)) && (p3.setStartAfter(e2(k3).closest("table")[0]), p3.collapse(true));
          var w2 = e2(p3.commonAncestorContainer.parentNode).closest("table");
          if (w2.get(0)) {
            for (var y2 = w2.parent().contents(), x2 = y2.length - 1, C = y2.get(x2); null !== C.nodeValue && (" " === C.nodeValue || "" === C.nodeValue); ) x2 -= 1, C = y2.get(x2);
            C !== w2.get(0) || w2.parents("table").length || r2.insertAfter(r2.createEmptyNode(u3.document, "p"), w2[0]);
          }
          u3.selectRange(p3);
        } }), c2 = n2.extend({ init: function(e3) {
          this.options = e3 || {}, this.replacements = [];
        }, clean: function(e3, t3) {
          var n3, i3, a3 = t3 || this.replacements;
          for (n3 = 0, i3 = a3.length; n3 < i3; n3 += 2) e3 = e3.replace(a3[n3], a3[n3 + 1]);
          return e3;
        } }), p2 = c2.extend({ init: function(e3) {
          c2.fn.init.call(this, e3), this.replacements = [/<(\/?)script([^>]*)>/i, "<$1telerik:script$2>"];
        }, applicable: function(e3) {
          return !this.options.none && /<script[^>]*>/i.test(e3);
        } }), h2 = c2.extend({ init: function(e3) {
          c2.fn.init.call(this, e3);
          this.replacements = [/<span\s+class="Apple-tab-span"[^>]*>\s*<\/span>/gi, " ", /\t/gi, " ", /&nbsp;&nbsp; &nbsp;/gi, " "];
        }, applicable: function(e3) {
          return /&nbsp;&nbsp; &nbsp;|class="?Apple-tab-span/i.test(e3);
        } }), f2 = c2.extend({ init: function(e3) {
          c2.fn.init.call(this, e3), this.junkReplacements = [/<\?xml[^>]*>/gi, "", /<!--(.|\n)*?-->/g, "", /&quot;/g, "'", /<o:p>&nbsp;<\/o:p>/gi, "&nbsp;", /<\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\n)*?<\/(meta|link|style|o:|v:|x:)[^>]*>)?/gi, "", /<\/o>/g, ""], this.replacements = this.junkReplacements.concat([/(?:<br>&nbsp;[\s\r\n]+|<br>)*(<\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\s\r\n]+|<br>)*/g, "$1", /<br><br>/g, "<BR><BR>", /<br>\n/g, "<br/>", /<br>(?!\n)/g, " ", /<table([^>]*)>(\s|&nbsp;)+<t/gi, "<table$1><t", /<tr[^>]*>(\s|&nbsp;)*<\/tr>/gi, "", /<tbody[^>]*>(\s|&nbsp;)*<\/tbody>/gi, "", /<table[^>]*>(\s|&nbsp;)*<\/table>/gi, "", /<BR><BR>/g, "<br>", /^\s*(&nbsp;)+/gi, "", /(&nbsp;|<br[^>]*>)+\s*$/gi, "", /mso-[^;"]*;?/gi, "", /<(\/?)b(\s[^>]*)?>/gi, "<$1strong$2>", /<(\/?)font(\s[^>]*)?>/gi, this.convertFontMatch, /<(\/?)i(\s[^>]*)?>/gi, "<$1em$2>", /style=(["|'])\s*\1/g, "", /(<br[^>]*>)?\n/g, function(e4, t3) {
            return t3 ? e4 : " ";
          }]);
        }, convertFontMatch: function(e3, t3, n3) {
          var i3 = /face=['"]([^'"]+)['"]/i.exec(n3), a3 = n3 && i3 && i3[1];
          return t3 ? "</span>" : a3 ? '<span style="font-family:' + a3 + '">' : "<span>";
        }, applicable: function(e3) {
          return /class="?Mso/i.test(e3) || /style="[^"]*mso-/i.test(e3) || /urn:schemas-microsoft-com:office/.test(e3);
        }, stripEmptyAnchors: function(e3) {
          return e3.replace(/<a([^>]*)>\s*<\/a>/gi, function(e4, t3) {
            return !t3 || t3.indexOf("href") < 0 ? "" : e4;
          });
        }, listType: function(e3, t3) {
          var n3, i3 = e3.innerHTML, a3 = r2.innerText(e3), o3 = i3.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i), s3 = o3 && o3[1], l3 = /^[a-z\d]/i.test(s3), d3 = function(e4) {
            return e4.replace(/^(?:&nbsp;|[\u00a0\n\r\s])+/, "");
          };
          return o3 && (n3 = true), i3 = i3.replace(/<\/?\w+[^>]*>/g, "").replace(/&nbsp;/g, " "), !n3 && /^[\u2022\u00b7\u00a7\u00d8o]\u00a0+/.test(i3) || n3 && /^.\u00a0+/.test(i3) || s3 && !l3 && t3 ? { tag: "ul", style: this._guessUnorderedListStyle(d3(a3)) } : /^\s*\w+[\.\)][\u00a0 ]{2,}/.test(i3) ? { tag: "ol", style: this._guessOrderedListStyle(d3(a3)) } : void 0;
        }, _convertToLi: function(e3) {
          var t3;
          return 1 == e3.childNodes.length ? (t3 = e3.firstChild.nodeType === r2.nodeTypes.TEXT_NODE ? r2.innerText(e3) : e3.firstChild.innerHTML.replace(/^\w+[\.\)](&nbsp;)+ /, ""), t3 = this._checkForBullet(t3)) : t3 = this._getHtmlNoBullet(e3), r2.remove(e3), r2.create(document, "li", { innerHTML: t3 });
        }, _checkForBullet: function(e3) {
          var t3 = r2.create(document, "p", { innerHTML: e3 });
          return /^\s*\w+[\.\)]\s+/.test(t3.innerText) ? this._getHtmlNoBullet(t3) : e3;
        }, _getHtmlNoBullet: function(e3) {
          var t3 = r2.name(e3);
          return r2.remove(e3.firstChild), 3 == e3.firstChild.nodeType && /^[ivxlcdm]+\.$/i.test(e3.firstChild.nodeValue) && r2.remove(e3.firstChild), /^(&nbsp;|\s)+$/i.test(e3.firstChild.innerHTML) && r2.remove(e3.firstChild), "p" != t3 ? "<" + t3 + ">" + e3.innerHTML + "</" + t3 + ">" : e3.innerHTML;
        }, _guessUnorderedListStyle: function(e3) {
          return /^[\u2022\u00b7\u00FC\u00D8\u002dv-]/.test(e3) ? null : /^o/.test(e3) ? "circle" : "square";
        }, _guessOrderedListStyle: function(e3) {
          var t3 = null;
          return /^\d/.test(e3) || (t3 = (/^[a-z]/.test(e3) ? "lower-" : "upper-") + (/^[ivxlcdm]/i.test(e3) ? "roman" : "alpha")), t3;
        }, extractListLevels: function(e3) {
          return e3 = e3.replace(/style=['"]?[^'"]*?mso-list:\s?[a-zA-Z]+(\d+)\s[a-zA-Z]+(\d+)\s(\w+)/gi, function(e4, n3, i3) {
            return t2.format('data-list="{0}" data-level="{1}" {2}', n3, i3, e4);
          });
        }, _createList: function(e3, t3) {
          return r2.create(document, e3, { style: { listStyleType: t3 } });
        }, lists: function(t3) {
          var n3, i3, a3, o3, s3, d3, u3, c3, p3, h3, f3, m3, g3, v3 = e2(t3).find(r2.blockElements.join(",")), _3 = -1, b3 = {}, k3 = ["p", "h1", "h2", "h3", "h4", "h5", "h6"];
          for (c3 = 0; c3 < v3.length; c3++) {
            p3 = v3[c3];
            var w2 = (g3 = e2(p3).data()).list;
            if (n3 = r2.name(p3), !!!e2(p3).parents("table").length) {
              var y2 = this.listType(p3, g3);
              if (!(h3 = y2 && y2.tag) || k3.indexOf(n3) < 0) p3.innerHTML ? i3 && !d3 && i3.appendChild(p3) : r2.remove(p3);
              else if (!l2.msie) {
                var x2 = h3 + w2;
                b3[f3 = g3.level || parseFloat(p3.style.marginLeft || 0)] || (b3[f3] = {}), (!a3 || a3 < 0) && (a3 = f3, o3 = w2, s3 = e2(t3).find("[data-list='" + o3 + "']").last()[0], u3 = this._createList(h3, y2.style), r2.insertBefore(u3, p3), _3 = f3, b3[f3][x2] = u3), d3 = s3 === p3, m3 = b3[f3][x2], (f3 > _3 || !m3) && (m3 = this._createList(h3, y2.style), b3[f3][x2] = m3, i3.appendChild(m3)), i3 = this._convertToLi(p3), m3.appendChild(i3), d3 ? a3 = _3 = -1 : _3 = f3;
              }
            }
          }
        }, removeAttributes: function(e3) {
          for (var t3, n3 = e3.attributes, i3 = n3.length, a3 = [], o3 = function(e4) {
            (function(e5) {
              return ["border", "background", "padding"].filter(function(t4) {
                return 0 === e5.trim().indexOf(t4);
              }).length > 0;
            })(e4) && a3.push(e4.trim());
          }; i3--; ) "colspan" != r2.name(n3[i3]) && ("style" !== (t3 = n3[i3]).name || "TD" !== e3.nodeName && "TH" !== e3.nodeName || t3.value.split(";").forEach(o3), e3.removeAttributeNode(n3[i3]));
          a3.length > 0 && e3.setAttribute("style", a3.join(";"));
        }, createColGroup: function(n3) {
          var i3 = n3.cells, a3 = e2(n3).closest("table"), r3 = a3.children("colgroup");
          i3.length < 2 || (r3.length && (i3 = r3.children(), r3[0].parentNode.removeChild(r3[0])), (r3 = e2(e2.map(i3, function(e3) {
            var n4 = e3.width;
            return n4 && 0 !== parseInt(n4, 10) ? t2.format('<col style="width:{0}px;"/>', n4) : "<col />";
          }).join(""))).is("colgroup") || (r3 = e2("<colgroup/>").append(r3)), r3.prependTo(a3));
        }, convertHeaders: function(t3) {
          var n3, i3 = t3.cells, a3 = e2.map(i3, function(t4) {
            var n4 = e2(t4).children("p").children("strong")[0];
            if (n4 && "strong" == r2.name(n4)) return n4;
          });
          if (a3.length == i3.length) {
            for (n3 = 0; n3 < a3.length; n3++) r2.unwrap(a3[n3]);
            for (e2(t3).closest("table").find("colgroup").after("<thead></thead>").end().find("thead").append(t3), n3 = 0; n3 < i3.length; n3++) r2.changeTag(i3[n3], "th");
          }
        }, removeParagraphs: function(t3) {
          var n3, i3, a3, o3;
          for (n3 = 0; n3 < t3.length; n3++) for (this.removeAttributes(t3[n3]), i3 = 0, a3 = (o3 = e2(t3[n3]).children("p")).length; i3 < a3; i3++) i3 < a3 - 1 && r2.insertAfter(r2.create(document, "br"), o3[i3]), r2.unwrap(o3[i3]);
        }, removeTextNodes: function(e3) {
          var t3, n3, i3, a3, o3;
          for (t3 = 0; t3 < e3.length; t3++) for (i3 = (o3 = e3[t3]).childNodes, n3 = 0; n3 < i3.length; n3++) (a3 = i3[n3]).nodeType === r2.nodeTypes.TEXT_NODE && o3.removeChild(a3);
        }, tables: function(t3) {
          var n3, i3, a3, r3, o3, s3 = e2(t3).find("table"), l3 = this;
          for (r3 = 0; r3 < s3.length; r3++) {
            for (a3 = i3 = (n3 = s3[r3].rows)[0], o3 = 1; o3 < n3.length; o3++) n3[o3].cells.length > a3.cells.length && (a3 = n3[o3]);
            l3.createColGroup(a3), l3.convertHeaders(i3), l3.removeAttributes(s3[r3]), l3.removeParagraphs(s3.eq(r3).find("td,th")), l3.removeTextNodes(s3.eq(r3).find("tr"));
          }
        }, headers: function(t3) {
          for (var n3 = e2(t3).find("p.MsoTitle"), i3 = 0; i3 < n3.length; i3++) r2.changeTag(n3[i3], "h1");
        }, removeFormatting: function(t3) {
          e2(t3).find("*").each(function() {
            e2(this).css({ fontSize: "", fontFamily: "" }), this.getAttribute("style") || this.style.cssText || this.removeAttribute("style");
          });
        }, clean: function(e3) {
          var t3, n3 = this, i3 = this.options;
          return i3.none ? (e3 = c2.fn.clean.call(n3, e3, this.junkReplacements), e3 = n3.stripEmptyAnchors(e3)) : (e3 = i3.msConvertLists ? this.extractListLevels(e3) : e3, e3 = c2.fn.clean.call(n3, e3), e3 = n3.stripEmptyAnchors(e3), t3 = r2.create(document, "div", { innerHTML: e3 }), n3.headers(t3), i3.msConvertLists && n3.lists(t3), n3.tables(t3), i3.msAllFormatting && n3.removeFormatting(t3), e3 = t3.innerHTML.replace(/(<[^>]*)\s+class="?[^"\s>]*"?/gi, "$1")), e3;
        } }), m2 = c2.extend({ init: function(e3) {
          c2.fn.init.call(this, e3), this.replacements = [/\s+class="Apple-style-span[^"]*"/gi, "", /<(div|p|h[1-6])\s+style="[^"]*"/gi, "<$1", /^<div>(.*)<\/div>$/, "$1"];
        }, applicable: function(e3) {
          return /class="?Apple-style-span|style="[^"]*-webkit-nbsp-mode/i.test(e3);
        } }), g2 = c2.extend({ clean: function(e3) {
          var t3 = r2.create(document, "div", { innerHTML: e3 });
          return (t3 = this.cleanDom(t3)).innerHTML;
        }, cleanDom: function(e3) {
          return e3;
        } }), v2 = g2.extend({ cleanDom: function(t3) {
          var n3 = this.collectTags();
          return e2(t3).find(n3).each(function() {
            r2.unwrap(this);
          }), t3;
        }, collectTags: function() {
          if (this.options.span) return "span";
        }, applicable: function() {
          return this.options.span;
        } }), _2 = g2.extend({ cleanDom: function(t3) {
          var n3 = this.collectAttr();
          return e2(t3).find("[" + n3.join("],[") + "]").removeAttr(n3.join(" ")), t3;
        }, collectAttr: function() {
          return this.options.css ? ["class", "style"] : [];
        }, applicable: function() {
          return this.options.css;
        } }), b2 = function() {
          this.text = "", this.add = function(e3) {
            this.text += e3;
          };
        }, k2 = n2.extend({ init: function(e3) {
          this.separators = e3 || { text: " ", line: "<br/>" }, this.lines = [], this.inlineBlockText = [], this.resetLine();
        }, appendText: function(e3) {
          3 === e3.nodeType && (e3 = e3.nodeValue), this.textContainer.add(e3);
        }, appendInlineBlockText: function(e3) {
          this.inlineBlockText.push(e3);
        }, flashInlineBlockText: function() {
          this.inlineBlockText.length && (this.appendText(this.inlineBlockText.join(" ")), this.inlineBlockText = []);
        }, endLine: function() {
          this.flashInlineBlockText(), this.resetLine();
        }, html: function() {
          var e3 = this.separators, t3 = "", n3 = this.lines;
          this.flashInlineBlockText();
          for (var i3 = 0, a3 = n3.length, r3 = a3 - 1; i3 < a3; i3++) {
            for (var o3 = n3[i3], s3 = 0, l3 = o3.length, d3 = l3 - 1; s3 < l3; s3++) {
              t3 += o3[s3].text, s3 !== d3 && (t3 += e3.text);
            }
            i3 !== r3 && (t3 += e3.line);
          }
          return t3;
        }, resetLine: function() {
          this.textContainer = new b2(), this.line = [], this.line.push(this.textContainer), this.lines.push(this.line);
        } }), w = n2.extend({ init: function(e3) {
          this.callback = e3;
        }, enumerate: function(e3) {
          if (e3) {
            var t3 = this.callback(e3), n3 = e3.firstChild;
            !t3 && n3 && this.enumerate(n3), this.enumerate(e3.nextSibling);
          }
        } }), y = c2.extend({ init: function(e3) {
          c2.fn.init.call(this, e3), this.hasText = false, this.enumerator = new w(this.buildText.bind(this));
        }, clean: function(e3) {
          var t3 = r2.create(document, "div", { innerHTML: e3 });
          return this.cleanDom(t3);
        }, cleanDom: function(e3) {
          return this.separators = this.getDefaultSeparators(), this.htmlLines = new k2(this.separators), this.enumerator.enumerate(e3.firstChild), this.hasText = false, this.htmlLines.html();
        }, buildText: function(e3) {
          if (r2.isDataNode(e3)) {
            if (r2.isEmptyspace(e3)) return;
            this.htmlLines.appendText(e3.nodeValue.replace("\n", this.separators.line)), this.hasText = true;
          } else {
            if (r2.isBlock(e3) && this.hasText) return (this.actions[r2.name(e3)] || this.actions.block)(this, e3);
            r2.isBr(e3) && this.htmlLines.appendText(this.separators.line);
          }
        }, applicable: function() {
          var e3 = this.options;
          return e3.all || e3.keepNewLines;
        }, getDefaultSeparators: function() {
          return this.options.all ? { text: " ", line: " " } : { text: " ", line: "<br/>" };
        }, actions: { ul: e2.noop, ol: e2.noop, table: e2.noop, thead: e2.noop, tbody: e2.noop, td: function(e3, t3) {
          var n3 = new y({ all: true }).cleanDom(t3);
          return e3.htmlLines.appendInlineBlockText(n3), true;
        }, block: function(e3) {
          e3.htmlLines.endLine();
        } } }), x = c2.extend({ clean: function(e3) {
          return this.options.custom(e3);
        }, applicable: function() {
          return "function" == typeof this.options.custom;
        } });
        d2(i2, { Clipboard: u2, Cleaner: c2, ScriptCleaner: p2, TabCleaner: h2, MSWordFormatCleaner: f2, WebkitFormatCleaner: m2, HtmlTagsCleaner: v2, HtmlAttrCleaner: _2, HtmlContentCleaner: y, HtmlTextLines: k2, CustomCleaner: x });
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.Class, i2 = t2.ui.editor, a2 = i2.RangeUtils, r2 = i2.Dom, o2 = i2.RestorePoint, s2 = i2.Marker, l2 = t2.support.browser, d2 = "<span  class='k-br'>\uFEFF</span>", u2 = e2.extend, c2 = r2.nodeTypes, p2 = "previousSibling";
        function h2(e3, t3, n3) {
          for (var i3 = e3 ? e3[t3] : null; i3 && !n3(i3); ) i3 = i3[t3];
          return i3;
        }
        var f2 = "td,th,caption", m2 = "table,tbody,thead,tfoot,tr", g2 = function(t3) {
          return !t3.collapsed && e2(t3.commonAncestorContainer).is(m2);
        }, v2 = n2.extend({ remove: function(t3) {
          var n3 = new s2();
          n3.add(t3, false);
          var i3 = a2.getAll(t3, function(t4) {
            return e2(t4).is("table,tbody,thead,tfoot,tr,td,th,caption");
          }), o3 = a2.documentFromRange(t3), l3 = n3.start, d3 = n3.end, u3 = f2.split(","), c3 = r2.parentOfType(l3, u3), p3 = r2.parentOfType(d3, u3);
          this._removeContent(l3, c3, true), this._removeContent(d3, p3, false), e2(i3).each(function(t4, n4) {
            ((n4 = e2(n4)).is(f2) ? n4 : n4.find(f2)).each(function(e3, t5) {
              t5.innerHTML = "&#65279;";
            });
          }), c3 && !l3.previousSibling && r2.insertBefore(o3.createTextNode("\uFEFF"), l3), p3 && !d3.nextSibling && r2.insertAfter(o3.createTextNode("\uFEFF"), d3), c3 ? t3.setStartBefore(l3) : i3[0] && (c3 = (c3 = e2(i3[0])).is(f2) ? c3 : c3.find(f2).first()).length && t3.setStart(c3.get(0), 0), t3.collapse(true), r2.remove(l3), r2.remove(d3);
        }, _removeContent: function(t3, n3, i3) {
          if (n3) {
            var a3, o3 = i3 ? "nextSibling" : "previousSibling", s3 = function(t4) {
              for (; t4 && !t4[o3]; ) t4 = t4.parentNode;
              return t4 && e2.contains(n3, t4) ? t4[o3] : null;
            };
            for (t3 = s3(t3); t3; ) a3 = s3(t3), r2.remove(t3), t3 = a3;
          }
        } }), _2 = n2.extend({ init: function(e3) {
          this.editor = e3;
        }, keydown: function(t3) {
          var n3 = this, a3 = n3.editor, r3 = a3.keyboard, s3 = r3.isTypingKey(t3), d3 = u2(e2.Event(), t3);
          if (n3.editor.trigger("keydown", d3), d3.isDefaultPrevented()) return t3.preventDefault(), true;
          if (!d3.isDefaultPrevented() && s3 && !r3.isTypingInProgress()) {
            var c3 = a3.getRange(), p3 = a3.body;
            if (n3.startRestorePoint = new o2(c3, p3), g2(c3)) new v2(a3).remove(c3), a3.selectRange(c3);
            if (l2.webkit && !c3.collapsed && function(e3, t4) {
              return t4.startContainer === e3 && t4.endContainer === e3 && 0 === t4.startOffset && t4.endOffset == e3.childNodes.length;
            }(p3, c3) && (p3.innerHTML = ""), a3.immutables && i2.Immutables.immutablesContext(c3)) new i2.BackspaceHandler(a3).deleteSelection(c3);
            return r3.startTyping(function() {
              n3._removeBomSpan(), n3.endRestorePoint = i2._finishUpdate(a3, n3.startRestorePoint);
            }), true;
          }
          return false;
        }, keyup: function(e3) {
          var t3 = this.editor.keyboard;
          return this.editor.trigger("keyup", e3), !!t3.isTypingInProgress() && (t3.endTyping(), true);
        }, _removeBomSpan: function() {
          var e3 = this.editor.getRange().commonAncestorContainer;
          r2.emptyNode(e3) || (3 === e3.nodeType && (e3 = e3.parentNode), r2.insignificant(e3) && (e3.textContent = r2.stripBom(e3.textContent), r2.unwrap(e3)));
        } }), b2 = n2.extend({ init: function(e3) {
          this.editor = e3;
        }, _addCaret: function(e3) {
          var n3 = r2.create(this.editor.document, "a");
          return !t2.support.browser.chrome && e3.firstChild && e3.firstChild.nodeType === c2.ELEMENT_NODE && (e3 = e3.firstChild), r2.insertAt(e3, n3, 0), r2.stripBomNode(n3.previousSibling), r2.stripBomNode(n3.nextSibling), n3;
        }, _restoreCaret: function(e3) {
          var t3 = this.editor.createRange();
          !e3.nextSibling && r2.isDataNode(e3.previousSibling) ? t3.setStart(e3.previousSibling, e3.previousSibling.length) : t3.setStartAfter(e3), t3.collapse(true), this.editor.selectRange(t3), r2.remove(e3);
        }, _handleDelete: function(e3) {
          var t3 = e3.endContainer, n3 = r2.closestEditableOfType(t3, r2.blockElements);
          if (n3 && i2.RangeUtils.isEndOf(e3, n3)) {
            var a3 = r2.next(n3);
            if (!a3 || "p" != r2.name(a3)) return false;
            var o3 = r2.significantChildNodes(a3)[0];
            o3 = o3 && r2.isInline(o3) ? o3 : a3;
            var s3 = this._addCaret(o3);
            return this._merge(n3, a3), this._restoreCaret(s3), true;
          }
          return false;
        }, _cleanBomBefore: function(e3) {
          for (var t3 = e3.startOffset, n3 = e3.startContainer, i3 = n3.nodeValue, a3 = 0; t3 - a3 >= 0 && "\uFEFF" == i3[t3 - a3 - 1]; ) a3++;
          a3 > 0 && (n3.deleteData(t3 - a3, a3), e3.setStart(n3, Math.max(0, t3 - a3)), e3.collapse(true), this.editor.selectRange(e3));
        }, _handleBackspace: function(t3) {
          var n3, a3 = t3.startContainer, o3 = r2.closestEditableOfType(a3, ["li"]), s3 = r2.closestEditableOfType(a3, "p,h1,h2,h3,h4,h5,h6".split(",")), l3 = this.editor;
          if (r2.isDataNode(a3)) {
            if (t3.collapsed && /^\s[\ufeff]+$/.test(a3.nodeValue)) return t3.setStart(a3, 0), t3.setEnd(a3, a3.length), l3.selectRange(t3), false;
            this._cleanBomBefore(t3);
          }
          n3 = h2(s3, p2, function(e3) {
            return !r2.htmlIndentSpace(e3);
          }), t3.collapsed && t3.startOffset !== t3.endOffset && t3.startOffset < 0 && (t3.startOffset = 0, t3.endOffset = 0, l3.selectRange(t3));
          var d3 = o3 && i2.RangeUtils.isStartOf(t3, o3), u3 = o3 && e2(o3).index(), c3 = d3 && u3 > 0;
          if (c3 && (s3 = o3, n3 = r2.prev(o3)), s3 && n3 && r2.is(n3, "table") && i2.RangeUtils.isStartOf(t3, s3)) return "" === s3.innerText && (s3.innerHTML = "\uFEFF"), true;
          if (i2.RangeUtils.isStartOf(t3, s3) && parseInt(s3.style.marginLeft, 10) > 0) return l3.exec("outdent"), true;
          if (s3 && n3 && i2.RangeUtils.isStartOf(t3, s3) || c3) {
            var f3 = r2.significantChildNodes(s3)[0];
            f3 = f3 && r2.isInline(f3) ? f3 : s3;
            var m3 = this._addCaret(f3);
            return this._merge(n3, s3), this._restoreCaret(m3), true;
          }
          if (d3 && 0 === u3) {
            var g3 = o3.firstChild;
            g3 || (o3.innerHTML = i2.emptyElementContent, g3 = o3.firstChild);
            var v3 = new i2.ListFormatter(r2.name(o3.parentNode), "p");
            return t3.selectNodeContents(o3), v3.toggle(t3), r2.insignificant(g3) ? t3.setStartBefore(g3) : t3.setStart(g3, 0), l3.selectRange(t3), true;
          }
          var _3 = a3.childNodes[t3.startOffset - 1], b3 = t3, k3 = _3 && r2.closestEditableOfType(_3, ["a"]), w2 = h2(_3 || a3, p2, function(e3) {
            return !r2.isDataNode(e3) || !r2.isBom(e3) && e3.length > 0;
          });
          if ((k3 || (0 === t3.startOffset || _3) && r2.is(w2, "a")) && (k3 = k3 || w2, (b3 = l3.createRange()).setStart(k3, k3.childNodes.length), b3.collapse(true)), (k3 = k3 || r2.closestEditableOfType(_3 || b3.startContainer, ["a"])) && i2.RangeUtils.isEndOf(b3, k3)) {
            var y2 = new i2.UnlinkCommand({ range: b3, body: l3.body, immutables: !!l3.immutables });
            l3.execCommand(y2), l3._selectionChange();
          }
          return false;
        }, _handleSelection: function(t3) {
          var n3, a3 = t3.commonAncestorContainer, o3 = r2.closest(a3, "table"), l3 = i2.emptyElementContent, d3 = this.editor;
          if (g2(t3)) return new v2(d3).remove(t3), d3.selectRange(t3), true;
          var u3 = new s2();
          u3.add(t3, false), t3.commonAncestorContainer === d3.body && this._surroundFullyContent(u3, t3), d3.immutables && this._handleImmutables(u3), this._surroundFullySelectedAnchor(u3, t3), t3.setStartAfter(u3.start), t3.setEndBefore(u3.end);
          var c3 = t3.startContainer, p3 = t3.endContainer;
          return t3.deleteContents(), "li" === p3.tagName.toLocaleLowerCase() && r2.emptyNode(p3) && (t3.selectNode(p3), t3.deleteContents()), o3 && "" === e2(o3).text() && (t3.selectNode(o3), t3.deleteContents()), a3 = t3.commonAncestorContainer, "p" === r2.name(a3) && "" === a3.innerHTML && (a3.innerHTML = l3, t3.setStart(a3, 0)), this._join(c3, p3), r2.insertAfter(d3.document.createTextNode("\uFEFF"), u3.start), u3.remove(t3), c3 = t3.startContainer, "tr" == r2.name(c3) && (c3 = c3.childNodes[Math.max(0, t3.startOffset - 1)], t3.setStart(c3, r2.getNodeLength(c3))), t3.collapse(true), d3.selectRange(t3), n3 = c3.parentElement || c3.parentNode, r2.isDataNode(c3) && !r2.emptyNode(n3) && this._cleanBomBefore(t3), true;
        }, _handleImmutables: function(e3) {
          var t3 = i2.Immutables.immutableParent, n3 = t3(e3.start), a3 = t3(e3.start);
          n3 && r2.insertBefore(e3.start, n3), a3 && r2.insertAfter(e3.end, a3), n3 && r2.remove(n3), a3 && a3.parentNode && r2.remove(a3);
        }, _surroundFullyContent: function(e3, t3) {
          var n3 = t3.commonAncestorContainer.children, i3 = n3[0], a3 = n3[n3.length - 1];
          this._moveMarker(e3, t3, i3, a3);
        }, _surroundFullySelectedAnchor: function(t3, n3) {
          var i3 = t3.start, a3 = e2(i3).closest("a").get(0), r3 = t3.end, o3 = e2(r3).closest("a").get(0);
          this._moveMarker(t3, n3, a3, o3);
        }, _moveMarker: function(e3, t3, n3, i3) {
          var o3 = e3.start, s3 = e3.end;
          n3 && a2.isStartOf(t3, n3) && r2.insertBefore(o3, n3), i3 && a2.isEndOf(t3, i3) && r2.insertAfter(s3, i3);
        }, _root: function(e3) {
          for (; e3 && "body" != r2.name(e3) && e3.parentNode && "body" != r2.name(e3.parentNode); ) e3 = e3.parentNode;
          return e3;
        }, _join: function(e3, t3) {
          (e3 = this._root(e3)) != (t3 = this._root(t3)) && r2.is(t3, "p") && this._merge(e3, t3);
        }, _merge: function(e3, t3) {
          for (r2.removeTrailingBreak(e3); e3 && t3.firstChild; ) 1 == e3.nodeType ? (e3 = r2.list(e3) ? e3.children[e3.children.length - 1] : e3) && e3.appendChild(t3.firstChild) : e3.nodeType === c2.TEXT_NODE ? this._mergeWithTextNode(e3, t3.firstChild) : e3.parentNode.appendChild(t3.firstChild);
          r2.remove(t3);
        }, _mergeWithTextNode: function(e3, t3) {
          e3 && e3.nodeType === c2.TEXT_NODE && (e3.nextSibling && this._isCaret(e3.nextSibling) ? r2.insertAfter(t3, e3.nextSibling) : r2.insertAfter(t3, e3));
        }, _isCaret: function(t3) {
          return e2(t3).is("a");
        }, keydown: function(e3) {
          var n3, a3, r3 = this.editor, s3 = r3.getRange(), l3 = e3.keyCode, d3 = t2.keys, u3 = l3 === d3.BACKSPACE, c3 = l3 == d3.DELETE;
          r3.immutables && r3.immutables.keydown(e3, s3) || (!u3 && !c3 || s3.collapsed ? u3 ? n3 = "_handleBackspace" : c3 && (n3 = "_handleDelete") : n3 = "_handleSelection", n3 && (a3 = new o2(s3, r3.body), this[n3](s3) && (e3.preventDefault(), i2._finishUpdate(r3, a3))));
        }, deleteSelection: function(e3) {
          this._handleSelection(e3);
        }, keyup: e2.noop }), k2 = n2.extend({ init: function(e3) {
          this.editor = e3, this.systemCommandIsInProgress = false;
        }, createUndoCommand: function() {
          this.startRestorePoint = this.endRestorePoint = i2._finishUpdate(this.editor, this.startRestorePoint);
        }, changed: function() {
          return !!this.startRestorePoint && this.startRestorePoint.html != this.editor.body.innerHTML;
        }, keydown: function(e3) {
          var t3 = this, n3 = t3.editor, i3 = n3.keyboard;
          return i3.isModifierKey(e3) ? (i3.isTypingInProgress() && i3.endTyping(true), t3.startRestorePoint = new o2(n3.getRange(), n3.body), true) : !!i3.isSystem(e3) && (t3.systemCommandIsInProgress = true, t3.changed() && (t3.systemCommandIsInProgress = false, t3.createUndoCommand()), true);
        }, keyup: function() {
          var e3 = this;
          return !(!e3.systemCommandIsInProgress || !e3.changed()) && (e3.systemCommandIsInProgress = false, e3.createUndoCommand(), true);
        } }), w = n2.extend({ init: function(e3) {
          this.editor = e3;
        }, keydown: function(e3) {
          !l2.webkit || e3.isDefaultPrevented() || !e3.ctrlKey || 65 != e3.keyCode || e3.altKey || e3.shiftKey || (this.editor.options.immutables && this._toSelectableImmutables(), this._selectEditorBody());
        }, _selectEditorBody: function() {
          var e3 = this.editor, t3 = e3.getRange();
          t3.selectNodeContents(e3.body), setTimeout(function() {
            e3.selectRange(t3);
          });
        }, _toSelectableImmutables: function() {
          for (var t3 = this.editor.body, n3 = i2.Immutables.immutable, a3 = r2.emptyTextNode, o3 = t3.firstChild, s3 = t3.lastChild; a3(o3); ) o3 = o3.nextSibling;
          for (; a3(s3); ) s3 = s3.previousSibling;
          o3 && n3(o3) && e2(d2).prependTo(t3), s3 && n3(s3) && e2(d2).appendTo(t3);
        }, keyup: e2.noop }), y = n2.extend({ init: function(e3) {
          this.handlers = e3, this.typingInProgress = false;
        }, isCharacter: function(e3) {
          return e3 >= 48 && e3 <= 90 || e3 >= 96 && e3 <= 111 || e3 >= 186 && e3 <= 192 || e3 >= 219 && e3 <= 222 || 229 == e3;
        }, toolFromShortcut: function(t3, n3) {
          var i3, a3, r3 = String.fromCharCode(n3.keyCode), o3 = this._getShortcutModifier(n3, navigator.platform);
          for (i3 in t3) if (((a3 = e2.extend({ ctrl: false, alt: false, shift: false }, t3[i3].options)).key == r3 || a3.key == n3.keyCode) && a3.ctrl == o3 && a3.alt == n3.altKey && a3.shift == n3.shiftKey) return i3;
        }, _getShortcutModifier: function(e3, t3) {
          return t3.toUpperCase().indexOf("MAC") >= 0 ? e3.metaKey : e3.ctrlKey;
        }, toolsFromShortcut: function(t3, n3) {
          var i3, a3, r3 = String.fromCharCode(n3.keyCode), o3 = [], s3 = function(e3) {
            return e3 == r3 || e3 == n3.keyCode || e3 == n3.charCode;
          };
          for (i3 in t3) a3 = e2.extend({ ctrl: false, alt: false, shift: false }, t3[i3].options), (Array.isArray(a3.key) ? e2.grep(a3.key, s3).length > 0 : s3(a3.key)) && a3.ctrl == n3.ctrlKey && a3.alt == n3.altKey && a3.shift == n3.shiftKey && o3.push(t3[i3]);
          return o3;
        }, isTypingKey: function(e3) {
          var t3 = e3.keyCode;
          return this.isCharacter(t3) && !e3.ctrlKey && !e3.altKey || 32 == t3 || 13 == t3 || 8 == t3 || 46 == t3 && !e3.shiftKey && !e3.ctrlKey && !e3.altKey;
        }, isModifierKey: function(e3) {
          var t3 = e3.keyCode;
          return 17 == t3 && !e3.shiftKey && !e3.altKey || 16 == t3 && !e3.ctrlKey && !e3.altKey || 18 == t3 && !e3.ctrlKey && !e3.shiftKey;
        }, isSystem: function(e3) {
          return 46 == e3.keyCode && e3.ctrlKey && !e3.altKey && !e3.shiftKey;
        }, startTyping: function(e3) {
          this.onEndTyping = e3, this.typingInProgress = true;
        }, stopTyping: function() {
          this.typingInProgress && this.onEndTyping && this.onEndTyping(), this.typingInProgress = false;
        }, endTyping: function(e3) {
          var t3 = this;
          t3.clearTimeout(), e3 ? t3.stopTyping() : t3.timeout = window.setTimeout(t3.stopTyping.bind(t3), 1e3);
        }, isTypingInProgress: function() {
          return this.typingInProgress;
        }, clearTimeout: function() {
          window.clearTimeout(this.timeout);
        }, notify: function(e3, t3) {
          var n3, i3 = this.handlers;
          for (n3 = 0; n3 < i3.length && !i3[n3][t3](e3); n3++) ;
        }, keydown: function(e3) {
          this.notify(e3, "keydown");
        }, keyup: function(e3) {
          this.notify(e3, "keyup");
        } });
        u2(i2, { TypingHandler: _2, SystemHandler: k2, BackspaceHandler: b2, SelectAllHandler: w, Keyboard: y });
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo.ui.editor, n2 = t2.Command, i2 = t2.EditorUtils, a2 = i2.registerTool, r2 = t2.Tool, o2 = t2.ToolTemplate, s2 = e2.extend, l2 = n2.extend({ init: function(e3) {
          this.async = true, n2.fn.init.call(this, e3);
        }, exec: function() {
          var e3 = this, t3 = e3.lockRange(true), n3 = e3.editor;
          n3._destroyResizings(), n3.saveAsPDF().then(function() {
            e3.releaseRange(t3), n3._initializeColumnResizing(), n3._initializeRowResizing(), n3._initializeElementResizing();
          });
        } });
        s2(t2, { ExportPdfCommand: l2 }), a2("pdf", new r2({ command: l2, template: new o2({ template: i2.buttonTemplate, title: "Export PDF" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo, n2 = t2.ui.editor, i2 = n2.Command, a2 = n2.EditorUtils, r2 = a2.registerTool, o2 = n2.Tool, s2 = n2.ToolTemplate, l2 = e2.extend, d2 = i2.extend({ init: function(e3) {
          i2.fn.init.call(this, e3), this.managesUndoRedo = true;
        }, exec: function() {
          var e3 = this.editor;
          t2.support.browser.msie ? e3.document.execCommand("print", false, null) : e3.window.print && e3.window.print();
        } });
        l2(n2, { PrintCommand: d2 }), r2("print", new o2({ command: d2, template: new s2({ template: a2.buttonTemplate, title: "Print" }) }));
      }(window.kendo.jQuery), function(e2) {
        var t2 = window.kendo.ui.editor, n2 = t2.Tool, i2 = t2.Command, a2 = t2.ToolTemplate, r2 = t2.EditorUtils, o2 = t2.Dom, s2 = t2.RangeUtils, l2 = r2.registerTool, d2 = i2.extend({ init: function(e3) {
          i2.fn.init.call(this, e3);
        }, exec: function() {
          var e3 = this.lockRange(true);
          this.inlineStyles = [], this.blockStyles = [], this.collectStyles(e3), this.editor.inlineStyles = this.inlineStyles, this.editor.blockStyles = this.blockStyles, this.releaseRange(e3);
        }, collectStyles: function(e3) {
          var t3, n3 = s2.nodes(e3);
          for (t3 = 1 === n3.length ? n3[0].parentNode : e3.startContainer; t3 && !o2.is(t3, "body") && "editor" !== t3.getAttribute("data-role"); ) o2.isBlock(t3) ? (this.populateStyles(t3, "blockStyles"), t3 = o2.is(t3, "li") ? t3.parentNode : null) : (this.populateStyles(t3, "inlineStyles"), t3 = t3.parentNode);
        }, populateStyles: function(e3, t3) {
          var n3, i3, a3, r3, o3, s3 = e3.style, l3 = e3.attributes, d3 = { tags: [e3.tagName], attr: { style: {} } };
          for (o3 = 0; s3 && o3 < s3.length; o3++) n3 = s3[i3 = s3[o3]], d3.attr.style[i3] = n3;
          for (o3 = 0; l3 && o3 < l3.length; o3++) a3 = l3[o3].nodeName, r3 = l3[o3].nodeValue, "style" !== a3 && ("class" === a3 ? d3.attr.className = r3 : d3.attr[a3] = r3);
          this[t3].push(d3);
        } }), u2 = i2.extend({ init: function(e3) {
          i2.fn.init.call(this, e3);
        }, exec: function() {
          var e3, t3 = this.lockRange(true), n3 = s2.getMarkers(t3), i3 = this.editor, a3 = i3.inlineStyles, r3 = i3.blockStyles;
          (a3 && 0 !== a3.length || r3 && 0 !== r3.length) && (3 === n3.length && (this.marker.removeCaret(t3), this.marker.caret = null), this.removeEmptyElementsFromRange(t3), e3 = s2.nodes(t3), this.cleanInlineParents(e3), o2.normalize(t3.commonAncestorContainer), 2 === n3.length ? (t3.setStartAfter(n3[0]), t3.setEndBefore(n3[1])) : (t3.setStartBefore(e3[0]), t3.setEndAfter(e3[0])), (e3 = s2.nodes(t3)) && r3 && r3.length && this.applyBlockStyles(e3, r3), e3 && a3 && a3.length && this.applyInlineStyles(e3, a3), this.releaseRange(t3));
        }, removeEmptyElementsFromRange: function(e3) {
          var t3, n3;
          if ((t3 = s2.getAll(e3, function(e4) {
            return o2.isInline(e4) && !e4.firstChild && !o2.isMarker(e4);
          })) && t3.length > 0) for (n3 = 0; n3 < t3.length; n3++) t3[n3].parentNode.removeChild(t3[n3]);
        }, cleanInlineParents: function(e3) {
          var t3, n3, i3, a3, r3, s3, l3;
          for (t3 = 0; t3 < e3.length; t3++) if (i3 = (n3 = e3[t3]).parentNode, !this.immutableParent(n3)) for (; i3 && o2.isInline(i3); ) {
            for (a3 = i3.childNodes, r3 = 0; r3 < a3.length; r3++) s3 = a3[r3], o2.isMarker(s3) || s3 === n3 || ((l3 = i3.cloneNode(true)).innerHTML = "", o2.wrap(s3, l3));
            o2.unwrap(i3), i3 = n3.parentNode;
          }
        }, applyBlockStyles: function(e3, t3) {
          var n3, i3, a3, r3, s3, l3, d3, u3, c3, p3, h2, f2, m2, g2, v2, _2 = t3[0].tags[0], b2 = t3[0].attr, k2 = this.editor.document;
          for (n3 = 0, i3 = e3.length; n3 < i3; n3++) if (a3 = e3[n3], !o2.isWhitespace(a3) && !this.immutableParent(a3)) if ("BODY" !== (s3 = o2.blockParentOrBody(a3)).tagName && s3.tagName !== _2) {
            if ("LI" !== s3.tagName && "TD" !== s3.tagName && "TH" !== s3.tagName) {
              for (d3 = [], u3 = [], c3 = a3.previousSibling, p3 = a3.nextSibling; c3; ) o2.isMarker(c3) || d3.push(c3), c3 = c3.previousSibling;
              if (d3.length) for ((h2 = s3.cloneNode(true)).innerHTML = "", o2.insertBefore(h2, d3[0]), g2 = 0; g2 < d3.length; g2++) m2 = d3[g2], o2.insertAt(h2, m2, 0);
              for (; p3; ) o2.isMarker(p3) || u3.push(p3), p3 = p3.nextSibling;
              if (u3.length) for ((f2 = s3.cloneNode(true)).innerHTML = "", o2.insertBefore(f2, u3[0]), g2 = 0; g2 < u3.length; g2++) m2 = u3[g2], f2.appendChild(m2);
              o2.unwrap(s3);
            }
            r3 = o2.create(k2, _2, b2), o2.wrap(a3, r3);
          } else s3.tagName === _2 && o2.attr(s3, b2);
          if (s3 && 2 === t3.length && "LI" !== s3.tagName && "LI" === _2) {
            for (v2 = []; o2.is(r3, "li"); ) v2.push(r3), r3 = o2.prev(r3);
            for (l3 = o2.create(k2, t3[1].tags[0], t3[1].attr), o2.insertBefore(l3, v2[v2.length - 1]), l3.appendChild(v2[0]), n3 = 1, i3 = v2.length; n3 < i3; n3++) o2.insertBefore(v2[n3], l3.firstChild);
          } else s3 && 2 === t3.length && "LI" !== s3.tagName && (l3 = o2.create(k2, t3[1].tags[0], t3[1].attr), o2.wrap(r3, l3));
        }, applyInlineStyles: function(e3, t3) {
          var n3, i3, a3, r3, s3, l3, d3 = this.editor.document;
          for (r3 = 0; r3 < t3.length; r3++) n3 = t3[r3], i3 = o2.create(d3, n3.tags[0], n3.attr), a3 && i3.appendChild(a3), a3 = i3;
          if (a3) {
            for (r3 = 0; r3 < e3.length; r3++) if (l3 = e3[r3], !o2.isWhitespace(l3) && !this.immutableParent(l3)) {
              for (s3 = a3.cloneNode(true), o2.insertBefore(s3, l3); s3.children && s3.children.length; ) s3 = s3.children[0];
              s3.appendChild(l3);
            }
          }
        }, immutables: function() {
          return this.editor && this.editor.options.immutables;
        }, immutableParent: function(e3) {
          return this.immutables() && t2.Immutables.immutableParent(e3);
        } }), c2 = n2.extend({ init: function(e3) {
          n2.fn.init.call(this, e3);
        }, command: function(e3) {
          return new d2(e3);
        } }), p2 = n2.extend({ init: function(e3) {
          n2.fn.init.call(this, e3);
        }, command: function(e3) {
          return new u2(e3);
        } });
        e2.extend(t2, { CopyFormatCommand: d2, ApplyFormatCommand: u2, CopyFormatTool: c2, ApplyFormatTool: p2 }), l2("copyFormat", new c2({ template: new a2({ template: r2.buttonTemplate, title: "Copy format" }) })), l2("applyFormat", new p2({ template: new a2({ template: r2.buttonTemplate, title: "Apply format" }) }));
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window, i2 = n2.Math, a2 = i2.min, r2 = i2.max, o2 = n2.parseFloat, s2 = e2.jQuery, l2 = s2.extend, d2 = e2.ui.editor, u2 = /(\d+)(\.?)(\d*)%/, c2 = /(\d+)(\.?)(\d*)px/, p2 = "string";
        function h2(e3) {
          return typeof e3 === p2 && u2.test(e3);
        }
        l2(d2, { ResizingUtils: { constrain: function(e3) {
          var t3 = e3.value, n3 = e3.min, i3 = e3.max;
          return r2(a2(o2(t3), o2(i3)), o2(n3));
        }, getScrollBarWidth: function(t3) {
          return t3 && !s2(t3).is("body") && t3.scrollHeight > t3.clientHeight ? e2.support.scrollbar() : 0;
        }, calculatePercentageRatio: function(e3, t3) {
          return h2(e3) ? o2(e3) : o2(e3) / t3 * 100;
        }, inPercentages: h2, inPixels: function(e3) {
          return typeof e3 === p2 && c2.test(e3);
        }, toPercentages: function(e3) {
          return o2(e3) + "%";
        }, toPixels: function(e3) {
          return o2(e3) + "px";
        } } });
      }(window.kendo), function(e2, t2) {
        var n2 = e2.jQuery, i2 = n2.extend, a2 = n2.noop, r2 = e2.ui.editor, o2 = e2.Class, s2 = "keydown", l2 = "mouseleave", d2 = "mouseup", u2 = "table", c2 = o2.extend({ init: function(e3, t3) {
          var a3 = this;
          a3.options = i2({}, a3.options, t3), a3.options.tags = Array.isArray(a3.options.tags) ? a3.options.tags : [a3.options.tags], n2(e3).is(u2) && (a3.element = e3, a3._attachEventHandlers());
        }, destroy: function() {
          var e3 = this, t3 = e3.options.eventNamespace;
          e3.element && (n2(e3.element).off(t3), e3.element = null), n2(e3.options.rootElement).off(s2 + t3), e3._destroyResizeHandle();
        }, options: { tags: [], min: 0, rootElement: null, eventNamespace: "", rtl: false, handle: { dataAttribute: "", height: 0, width: 0, classNames: {}, template: "" } }, _attachEventHandlers: function() {
          var e3 = this, t3 = e3.options;
          n2(e3.element).on("mousemove" + t3.eventNamespace, t3.tags.join(","), e3.detectElementBorderHovering.bind(e3));
        }, resizingInProgress: function() {
          var e3 = this._resizable;
          return !!e3 && !!e3.resizing;
        }, resize: a2, detectElementBorderHovering: function(e3) {
          var t3 = this, i3 = t3.options.handle, a3 = n2(e3.currentTarget), r3 = t3.resizeHandle, o3 = i3.dataAttribute;
          t3.resizingInProgress() || (!a3.is(":last-child") && t3.elementBorderHovered(a3, e3) ? r3 ? r3.data(o3) && r3.data(o3) !== a3[0] && t3.showResizeHandle(a3, e3) : t3.showResizeHandle(a3, e3) : r3 && t3._destroyResizeHandle());
        }, elementBorderHovered: a2, showResizeHandle: function(e3, t3) {
          var n3 = this;
          0 === t3.buttons && (n3._initResizeHandle(), n3.setResizeHandlePosition(e3), n3.setResizeHandleDimensions(), n3.setResizeHandleDataAttributes(e3[0]), n3._attachResizeHandleEventHandlers(), n3._initResizable(e3), n3._hideResizeMarker(), n3.resizeHandle.show());
        }, _initResizeHandle: function() {
          var e3 = this, t3 = e3.options;
          e3._destroyResizeHandle(), e3.resizeHandle = n2(t3.handle.template).appendTo(t3.rootElement);
        }, setResizeHandlePosition: a2, setResizeHandleDimensions: a2, setResizeHandleDataAttributes: function(e3) {
          this.resizeHandle.data(this.options.handle.dataAttribute, e3);
        }, _attachResizeHandleEventHandlers: function() {
          var e3 = this, t3 = e3.options, n3 = t3.eventNamespace, i3 = t3.handle.classNames.marker, a3 = e3.resizeHandle;
          e3.resizeHandle.on("mousedown" + n3, function() {
            a3.find("." + i3).show();
          }).on(d2 + n3, function() {
            a3.find("." + i3).hide();
          });
        }, _hideResizeMarker: function() {
          this.resizeHandle.find("." + this.options.handle.classNames.marker).hide();
        }, _destroyResizeHandle: function() {
          var e3 = this;
          e3.resizeHandle && (e3._destroyResizable(), e3.resizeHandle.off(e3.options.eventNamespace).remove(), e3.resizeHandle = null);
        }, _initResizable: function(t3) {
          var n3 = this;
          n3.resizeHandle && (n3._destroyResizable(), n3._resizable = new e2.ui.Resizable(t3, { draggableElement: n3.resizeHandle[0], start: n3.onResizeStart.bind(n3), resize: n3.onResize.bind(n3), resizeend: n3.onResizeEnd.bind(n3) }));
        }, _destroyResizable: function() {
          var e3 = this;
          e3._resizable && (e3._resizable.destroy(), e3._resizable = null);
        }, onResizeStart: function() {
          this._disableKeyboard();
        }, onResize: function(e3) {
          this.setResizeHandleDragPosition(e3);
        }, setResizeHandleDragPosition: a2, onResizeEnd: function(e3) {
          var t3 = this;
          t3.resize(e3), t3._destroyResizeHandle(), t3._enableKeyboard();
        }, _enableKeyboard: function() {
          var e3 = this.options;
          n2(e3.rootElement).off(s2 + e3.eventNamespace);
        }, _disableKeyboard: function() {
          var e3 = this.options;
          n2(e3.rootElement).on(s2 + e3.eventNamespace, function(e4) {
            e4.preventDefault();
          });
        }, _forceResizing: function(e3) {
          var t3 = this._resizable;
          t3 && t3.userEvents && t3.userEvents._end(e3);
        } }), p2 = o2.extend({ create: function(e3, t3) {
          var i3 = this, a3 = t3.name, r3 = t3.eventNamespace;
          n2(e3.body).on("mouseenter" + r3, u2, function(n3) {
            var r4 = n3.currentTarget, o3 = e3[a3];
            n3.stopPropagation(), o3 ? o3.element === r4 || o3.resizingInProgress() || (i3._destroyResizing(e3, t3), i3._initResizing(e3, r4, t3)) : i3._initResizing(e3, r4, t3);
          }).on(l2 + r3, u2, function(r4) {
            var o3, s3 = e3[a3];
            r4.stopPropagation(), !s3 || s3.resizingInProgress() || s3.resizeHandle || (o3 = n2(s3.element).parents(u2)[0]) && (i3._destroyResizing(e3, t3), i3._initResizing(e3, o3, t3));
          }).on(l2 + r3, function() {
            var n3 = e3[a3];
            n3 && !n3.resizingInProgress() && i3._destroyResizing(e3, t3);
          }).on(d2 + r3, function(r4) {
            var o3, s3 = e3[a3];
            s3 && s3.resizingInProgress() && (o3 = n2(r4.target).parents(u2)[0]) && (s3._forceResizing(r4), i3._destroyResizing(e3, t3), i3._initResizing(e3, o3, t3));
          });
        }, dispose: function(e3, t3) {
          n2(e3.body).off(t3.eventNamespace);
        }, _initResizing: function(t3, n3, i3) {
          var a3 = i3.name, r3 = i3.type;
          t3[a3] = new r3(n3, { rtl: e2.support.isRtl(t3.element), rootElement: t3.body });
        }, _destroyResizing: function(e3, t3) {
          var n3 = t3.name;
          e3[n3] && (e3[n3].destroy(), e3[n3] = null);
        } });
        p2.current = new p2(), c2.create = function(e3, t3) {
          p2.current.create(e3, t3);
        }, c2.dispose = function(e3, t3) {
          p2.current.dispose(e3, t3);
        }, i2(r2, { TableElementResizing: c2 });
      }(window.kendo), function(e2, t2) {
        var n2 = window.Math.abs, i2 = e2.jQuery, a2 = i2.extend, r2 = e2.ui.editor, o2 = r2.Dom, s2 = r2.TableElementResizing, l2 = r2.ResizingUtils, d2 = l2.constrain, u2 = l2.calculatePercentageRatio, c2 = l2.getScrollBarWidth, p2 = l2.inPercentages, h2 = l2.toPercentages, f2 = l2.toPixels, m2 = e2._outerWidth, g2 = ".kendoEditorColumnResizing", v2 = "k-column-resize-handle", _2 = "k-column-resize-marker", b2 = "body", k2 = "tbody", w = "thead", y = "tr", x = "col-index", C = ",", T = s2.extend({ options: { tags: ["td", "th"], min: 20, rootElement: null, eventNamespace: g2, rtl: false, handle: { dataAttribute: "column", width: 10, height: 0, classNames: { handle: v2, marker: _2 }, template: '<div class="k-column-resize-handle-wrapper" unselectable="on" contenteditable="false"><div class="k-column-resize-handle"><div class="k-column-resize-marker"></div></div></div>' } }, elementBorderHovered: function(e3, t3) {
          var n3 = this.options, a3 = n3.handle.width, r3 = e3.offset().left + (n3.rtl ? 0 : m2(e3)), o3 = t3.clientX + i2(e3[0].ownerDocument).scrollLeft();
          return o3 > r3 - a3 && o3 < r3 + a3;
        }, setResizeHandlePosition: function(t3) {
          var n3 = this, a3 = i2(n3.element.tHead || n3.element.tBodies[0]), r3 = n3.options, o3 = r3.rtl, s3 = r3.handle.width, l3 = i2(r3.rootElement), d3 = l3.is(b2) ? 0 : l3.scrollTop(), u3 = l3.is(b2) ? 0 : e2.scrollLeft(l3), p3 = o3 ? 0 : m2(t3), h3 = o3 ? c2(l3[0]) : 0, f3 = t3.offset().left - (l3.offset().left + parseFloat(l3.css("borderLeftWidth"))) - parseFloat(t3.css("marginLeft")), g3 = a3.offset().top - (l3.offset().top + parseFloat(l3.css("borderTopWidth"))) - parseFloat(a3.css("marginTop")), v3 = e2.support.browser;
          o3 && (v3.mozilla || v3.webkit && v3.version >= 85) && (u3 *= -1), n3.resizeHandle.css({ top: g3 + d3, left: f3 + p3 + (u3 - h3) - s3 / 2, position: "absolute" });
        }, setResizeHandleDimensions: function() {
          var e3 = this, t3 = i2(e3.element).children(w), n3 = i2(e3.element).children(k2), a3 = t3.length > 0 ? t3.height() + n3.height() : n3.height();
          e3.resizeHandle.css({ width: e3.options.handle.width, height: a3 });
        }, setResizeHandleDragPosition: function(t3) {
          var n3 = this, a3 = i2(i2(t3.currentTarget).data(n3.options.handle.dataAttribute)), r3 = n3.options, o3 = i2(r3.rootElement), s3 = r3.handle ? r3.handle.width : 0, l3 = r3.min, u3 = r3.rtl, p3 = m2(a3), h3 = a3.offset().left - (o3.offset().left + parseFloat(o3.css("borderLeftWidth"))) - parseFloat(a3.css("marginLeft")), f3 = m2(a3.next()), g3 = i2(n3.resizeHandle), v3 = o3.is(b2) ? 0 : e2.scrollLeft(o3), _3 = u3 ? c2(o3[0]) : 0, k3 = g3.offset().left - (o3.offset().left + parseFloat(o3.css("borderLeftWidth"))) - parseFloat(g3.css("marginLeft")), w2 = e2.support.browser;
          u3 && (w2.mozilla || w2.webkit && w2.version >= 85) && (v3 *= -1);
          var y2 = d2({ value: k3 + (v3 - _3) + t3.x.delta, min: h3 + (v3 - _3) - (u3 ? f3 : 0) + l3, max: h3 + p3 + (v3 - _3) + (u3 ? 0 : f3) - s3 - l3 });
          g3.css({ left: y2 });
        }, resize: function(e3) {
          var t3, n3, a3, r3, s3, l3 = this, u3 = i2(i2(e3.currentTarget).data(l3.options.handle.dataAttribute)), c3 = l3.options, p3 = c3.rtl ? -1 : 1, h3 = c3.min, f3 = p3 * e3.x.initialDelta;
          o2.reMapTableColumns(l3.element, x), r3 = parseInt(u3.attr(x), 10), u3.prop("colSpan") > 1 && (u3 = i2(l3.element).find("[col-index=" + (r3 + u3.prop("colSpan") - 1) + "]").eq(0), r3 = parseInt(u3.attr(x), 10)), s3 = i2(l3.element).find("[col-index=" + (r3 + 1) + "]:not([colspan])"), l3._setTableComputedWidth(), l3._setColumnsComputedWidth(), a3 = m2(u3), n3 = m2(s3), t3 = d2({ value: a3 + f3, min: h3, max: a3 + n3 - h3 }), l3._resizeColumn(u3[0], t3), l3._resizeTopAndBottomColumns(u3[0], t3), l3._resizeAdjacentColumns(parseInt(u3.attr(x), 10), n3, a3, a3 - t3), o2.clearTableMappings(l3.element, x);
        }, _setTableComputedWidth: function() {
          var e3 = this.element;
          "" === e3.style.width && (e3.style.width = f2(m2(i2(e3))));
        }, _setColumnsComputedWidth: function() {
          var e3, t3 = i2(this.element.tHead || this.element.tBodies[0]), n3 = m2(t3), a3 = t3.children(y).children("td"), r3 = a3.length, o3 = a3.map(function() {
            return m2(i2(this));
          });
          for (e3 = 0; e3 < r3; e3++) p2(a3[e3].style.width) ? a3[e3].style.width = h2(u2(o3[e3], n3)) : a3[e3].style.width = f2(o3[e3]);
        }, _resizeTopAndBottomColumns: function(e3, t3) {
          var n3, a3 = this, r3 = i2(e3).attr(x), o3 = i2(a3.element).children("tbody,thead").children(y).children(a3.options.tags.join(C)).filter(function() {
            return i2(this).attr(x) === r3 && this !== e3;
          }), s3 = o3.length;
          for (n3 = 0; n3 < s3; n3++) a3._resizeColumn(o3[n3], t3);
        }, _resizeColumn: function(e3, t3) {
          var n3 = i2(this.element.tHead || this.element.tBodies[0]);
          p2(e3.style.width) ? e3.style.width = h2(u2(t3, m2(n3))) : e3.style.width = f2(t3);
        }, _resizeAdjacentColumns: function(e3, t3, n3, a3) {
          var r3, o3 = this, s3 = i2(o3.element).children("tbody,thead").children(y).children(o3.options.tags.join(C)).filter(function() {
            return parseInt(i2(this).attr(x), 10) === e3 + 1;
          }), l3 = s3.length;
          for (r3 = 0; r3 < l3; r3++) o3._resizeAdjacentColumn(s3[r3], t3, n3, a3);
        }, _resizeAdjacentColumn: function(e3, t3, i3, a3) {
          var r3, o3 = this.options.min;
          r3 = d2({ value: t3 + a3, min: o3, max: n2(i3 + t3 - o3) }), this._resizeColumn(e3, r3);
        } });
        T.create = function(e3) {
          s2.create(e3, { name: "columnResizing", type: T, eventNamespace: g2 });
        }, T.dispose = function(e3) {
          s2.dispose(e3, { eventNamespace: g2 });
        }, a2(r2, { ColumnResizing: T });
      }(window.kendo), function(e2, t2) {
        var n2 = window.Math.abs, i2 = e2.jQuery, a2 = i2.extend, r2 = e2.ui.editor, o2 = r2.TableElementResizing, s2 = r2.ResizingUtils, l2 = s2.getScrollBarWidth, d2 = s2.constrain, u2 = s2.calculatePercentageRatio, c2 = s2.inPercentages, p2 = s2.toPercentages, h2 = s2.toPixels, f2 = e2._outerHeight, m2 = ".kendoEditorRowResizing", g2 = "k-row-resize-handle", v2 = "k-row-resize-marker", _2 = "body", b2 = "tr", k2 = "tbody", w = "thead", y = o2.extend({ options: { tags: [b2], min: 20, rootElement: null, eventNamespace: m2, rtl: false, handle: { dataAttribute: "row", width: 0, height: 10, classNames: { handle: g2, marker: v2 }, template: '<div class="k-row-resize-handle-wrapper" unselectable="on" contenteditable="false"><div class="k-row-resize-handle"><div class="k-row-resize-marker-wrapper"><div class="k-row-resize-marker"></div></div></div></div>' } }, elementBorderHovered: function(e3, t3) {
          var n3 = this.options.handle.height, a3 = e3.offset().top + f2(e3), r3 = t3.clientY + i2(e3[0].ownerDocument).scrollTop();
          return r3 > a3 - n3 && r3 < a3 + n3;
        }, setResizeHandlePosition: function(t3) {
          var n3 = this.options, a3 = n3.handle.height, r3 = i2(n3.rootElement), o3 = r3.is(_2) ? 0 : r3.scrollTop(), s3 = r3.is(_2) ? 0 : e2.scrollLeft(r3), d3 = n3.rtl ? l2(r3[0]) : 0, u3 = t3.offset().left - (r3.offset().left + parseFloat(r3.css("borderLeftWidth"))) - parseFloat(t3.css("marginLeft")), c3 = t3.offset().top - (r3.offset().top + parseFloat(r3.css("borderTopWidth"))) - parseFloat(t3.css("marginTop")), p3 = e2.support.browser;
          n3.rtl && (p3.mozilla || p3.webkit && p3.version >= 85) && (s3 *= -1), this.resizeHandle.css({ top: c3 + f2(t3) + o3 - a3 / 2, left: u3 + (s3 - d3), position: "absolute" });
        }, setResizeHandleDimensions: function() {
          var e3 = this, t3 = i2(e3.element.tHead || e3.element.tBodies[0]);
          e3.resizeHandle.css({ width: t3.width(), height: e3.options.handle.height });
        }, setResizeHandleDragPosition: function(e3) {
          var t3 = this, n3 = t3.options, a3 = n3.min, r3 = i2(t3.element).children(w), o3 = i2(t3.element).children(k2), s3 = r3.length > 0 ? r3 : o3, l3 = i2(t3.resizeHandle), u3 = i2(e3.currentTarget).data(n3.handle.dataAttribute), c3 = i2(u3), p3 = i2(n3.rootElement), h3 = p3.is(_2) ? 0 : p3.scrollTop(), m3 = s3.offset().top - (p3.offset().top + parseFloat(p3.css("borderTopWidth"))) - parseFloat(s3.css("marginTop")), g3 = c3.offset().top - (p3.offset().top + parseFloat(p3.css("borderTopWidth"))) - parseFloat(c3.css("marginTop")), v3 = l3.offset().top - (Math.max(0, p3.offset().top) + parseFloat(p3.css("borderTopWidth"))) - parseFloat(l3.css("marginTop")), b3 = d2({ value: v3 + h3 + e3.y.delta, min: g3 + h3 + a3, max: m3 + f2(r3) + f2(o3) + h3 - n3.handle.height - a3 });
          l3.css({ top: b3 });
        }, resize: function(e3) {
          var t3 = this, a3 = t3.options, r3 = i2(e3.currentTarget).data(a3.handle.dataAttribute), o3 = f2(i2(r3)), s3 = i2(t3.element), l3 = f2(s3), u3 = s3.children(w), p3 = u3.length > 0 ? u3.height() : 0, m3 = s3.children(k2).height(), g3 = r3.style.height, v3 = d2({ value: o3 + e3.y.initialDelta, min: a3.min, max: n2(p3 + m3 - a3.min) });
          t3._setRowsHeightInPixels(), r3.style.height = h2(v3), t3._setTableHeight(l3 + (v3 - o3)), c2(g3) && t3._setRowsHeightInPercentages();
        }, _setRowsHeightInPixels: function() {
          var e3, t3 = i2(this.element).children("tbody,thead").children(b2), n3 = t3.length, a3 = t3.map(function() {
            return f2(i2(this));
          });
          for (e3 = 0; e3 < n3; e3++) t3[e3].style.height = h2(a3[e3]);
        }, _setRowsHeightInPercentages: function() {
          var e3, t3 = this, n3 = i2(t3.element).children(w), a3 = n3.length > 0 ? n3.height() : 0, r3 = i2(t3.element).children(k2).height(), o3 = i2(t3.element).children("thead,tbody").children(b2), s3 = o3.length, l3 = o3.map(function() {
            return f2(i2(this));
          });
          for (e3 = 0; e3 < s3; e3++) o3[e3].style.height = p2(u2(l3[e3], a3 + r3));
        }, _setTableHeight: function(e3) {
          var t3 = this.element;
          c2(t3.style.height) ? t3.style.height = p2(u2(e3, i2(t3).parent().height())) : t3.style.height = h2(e3);
        } });
        y.create = function(e3) {
          o2.create(e3, { name: "rowResizing", type: y, eventNamespace: m2 });
        }, y.dispose = function(e3) {
          o2.dispose(e3, { eventNamespace: m2 });
        }, a2(r2, { RowResizing: y });
      }(window.kendo), function(e2, t2) {
        var n2 = e2.jQuery, i2 = n2.extend, a2 = n2.noop, r2 = e2.ui.editor, o2 = e2.Class, s2 = e2.ui.Draggable, l2 = e2.Observable, d2 = r2.ResizingUtils.getScrollBarWidth, u2 = e2._outerWidth, c2 = e2._outerHeight, p2 = ".kendoEditorElementResizeHandle", h2 = "k-element-resize-handle", f2 = "dragStart", m2 = "drag", g2 = "dragEnd", v2 = "halfInside", _2 = "mouseover", b2 = "mouseout", k2 = "east", w = "north", y = "northeast", x = "northwest", C = "south", T = "southeast", S = "southwest", I = "west", D = l2.extend({ init: function(e3) {
          var t3 = this;
          l2.fn.init.call(t3), t3.options = i2({}, t3.options, e3), t3.element = n2(t3.options.template).appendTo(t3.options.appendTo)[0], t3._attachEventHandlers(), t3._addStyles(), t3._initDraggable(), t3._initPositioningStrategy(), t3._initDraggingStrategy(), n2(t3.element).data("table", t3.options.resizableElement);
        }, destroy: function() {
          var e3 = this;
          n2(e3.element).off(p2).remove(), e3.element = null, e3._destroyDraggable(), e3.unbind();
        }, options: { appendTo: null, direction: T, resizableElement: null, rtl: false, template: "<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'><div class='k-element-resize-handle'></div></div>" }, events: [f2, m2, g2, _2, b2], show: function() {
          this._setPosition();
        }, _setPosition: function() {
          var e3 = this._positioningStrategy.getPosition();
          n2(this.element).css({ top: e3.top, left: e3.left, position: "absolute" });
        }, _attachEventHandlers: function() {
          var e3 = this;
          n2(e3.element).on(_2 + p2, e3._onMouseOver.bind(e3)).on(b2 + p2, e3._onMouseOut.bind(e3));
        }, _onMouseOver: function() {
          this.trigger(_2);
        }, _onMouseOut: function() {
          this.trigger(b2);
        }, _addStyles: function() {
          n2(this.element).children("." + h2).addClass("k-resize-" + this.options.direction);
        }, _initPositioningStrategy: function() {
          var e3 = this, t3 = e3.options;
          e3._positioningStrategy = F.create({ name: t3.direction, handle: e3.element, resizableElement: t3.resizableElement, rootElement: t3.rootElement, rtl: t3.rtl });
        }, _initDraggable: function() {
          var e3 = this, t3 = e3.element;
          !e3._draggable && t3 && (e3._draggable = new s2(t3, { dragstart: e3._onDragStart.bind(e3), drag: e3._onDrag.bind(e3), dragend: e3._onDragEnd.bind(e3) }));
        }, _onDragStart: function() {
          this.trigger(f2);
        }, _onDrag: function(e3) {
          this.trigger(m2, this._draggingStrategy.adjustDragDelta({ deltaX: e3.x.delta, deltaY: e3.y.delta, initialDeltaX: e3.x.initialDelta, initialDeltaY: e3.y.initialDelta }));
        }, _onDragEnd: function() {
          this.trigger(g2);
        }, _destroyDraggable: function() {
          var e3 = this;
          e3._draggable && (e3._draggable.destroy(), e3._draggable = null);
        }, _initDraggingStrategy: function() {
          this._draggingStrategy = V.create({ name: this.options.direction });
        } }), E = o2.extend({ init: function() {
          this._items = [];
        }, register: function(e3, t3) {
          this._items.push({ name: e3, type: t3 });
        }, create: function(e3) {
          var t3, n3, i3, a3 = this._items, r3 = a3.length, o3 = e3.name ? e3.name.toLowerCase() : "";
          for (i3 = 0; i3 < r3; i3++) if ((n3 = a3[i3]).name.toLowerCase() === o3) {
            t3 = n3;
            break;
          }
          if (t3) return new t3.type(e3);
        } }), A = E.extend({});
        A.current = new A();
        var F = o2.extend({ init: function(e3) {
          this.options = i2({}, this.options, e3);
        }, options: { handle: null, offset: v2, resizableElement: null, rootElement: null, rtl: false }, getPosition: function() {
          var e3 = this, t3 = e3.calculatePosition(), n3 = e3.applyHandleOffset(t3);
          return e3.applyScrollOffset(n3);
        }, calculatePosition: a2, applyHandleOffset: function(e3) {
          var t3 = this.options, i3 = n2(t3.handle);
          return t3.offset === v2 ? { top: e3.top - c2(i3) / 2, left: e3.left - u2(i3) / 2 } : e3;
        }, applyScrollOffset: function(t3) {
          var i3, a3 = this.options, r3 = n2(a3.rootElement), o3 = a3.rtl ? d2(r3[0]) : 0, s3 = e2.support.browser;
          return r3.is("body") ? t3 : (i3 = e2.scrollLeft(r3) || 0, a3.rtl && (s3.mozilla || s3.webkit && s3.version >= 85) && (i3 *= -1), { top: t3.top + (r3.scrollTop() || 0), left: t3.left + i3 - o3 });
        } });
        F.create = function(e3) {
          return A.current.create(e3);
        };
        var z = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top + c2(e3) / 2, left: t3.left + u2(e3) + i3 };
        } });
        A.current.register(k2, z);
        var P = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top, left: t3.left + u2(e3) / 2 + i3 };
        } });
        A.current.register(w, P);
        var H = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top, left: t3.left + u2(e3) + i3 };
        } });
        A.current.register(y, H);
        var N = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top, left: t3.left + i3 };
        } });
        A.current.register(x, N);
        var R = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top + c2(e3), left: t3.left + u2(e3) / 2 + i3 };
        } });
        A.current.register(C, R);
        var O = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top + c2(e3), left: t3.left + u2(e3) + i3 };
        } });
        A.current.register(T, O);
        var M = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top + c2(e3), left: t3.left + i3 };
        } });
        A.current.register(S, M);
        var B = F.extend({ calculatePosition: function() {
          var e3 = n2(this.options.resizableElement), t3 = e3.position(), i3 = parseInt(e3.css("marginLeft"), 10);
          return { top: t3.top + c2(e3) / 2, left: t3.left + i3 };
        } });
        A.current.register(I, B);
        var L = E.extend({});
        L.current = new L();
        var V = o2.extend({ init: function(e3) {
          this.options = i2({}, this.options, e3);
        }, options: { deltaX: { adjustment: null, modifier: null }, deltaY: { adjustment: null, modifier: null } }, adjustDragDelta: function(e3) {
          var t3 = this.options, n3 = t3.deltaX.adjustment * t3.deltaX.modifier, i3 = t3.deltaY.adjustment * t3.deltaY.modifier;
          return { deltaX: e3.deltaX * n3, deltaY: e3.deltaY * i3, initialDeltaX: e3.initialDeltaX * n3, initialDeltaY: e3.initialDeltaY * i3 };
        } });
        V.create = function(e3) {
          return L.current.create(e3);
        };
        var U = V.extend({ options: { deltaX: { adjustment: 1, modifier: 1 }, deltaY: { adjustment: 0, modifier: 0 } } }), W = U.extend({ options: { deltaX: { modifier: 1 } } });
        L.current.register(k2, W);
        var j = U.extend({ options: { deltaX: { modifier: -1 } } });
        L.current.register(I, j);
        var q = V.extend({ options: { deltaX: { adjustment: 0, modifier: 0 }, deltaY: { adjustment: 1, modifier: 1 } } }), G = q.extend({ options: { deltaY: { modifier: -1 } } });
        L.current.register(w, G);
        var K = q.extend({ options: { deltaY: { modifier: 1 } } });
        L.current.register(C, K);
        var $ = V.extend({ options: { deltaX: { adjustment: 1, modifier: 1 }, deltaY: { adjustment: 1, modifier: 1 } } }), Y = $.extend({ options: { deltaX: { modifier: 1 }, deltaY: { modifier: -1 } } });
        L.current.register(y, Y);
        var Q = $.extend({ options: { deltaX: { modifier: -1 }, deltaY: { modifier: -1 } } });
        L.current.register(x, Q);
        var X = $.extend({ options: { deltaX: { modifier: 1 }, deltaY: { modifier: 1 } } });
        L.current.register(T, X);
        var J = $.extend({ options: { deltaX: { modifier: -1 }, deltaY: { modifier: 1 } } });
        L.current.register(S, J), i2(r2, { ElementResizeHandle: D });
      }(window.kendo), function(e2, t2) {
        var n2 = window.Math, i2 = n2.min, a2 = n2.max, r2 = e2.jQuery, o2 = r2.contains, s2 = r2.extend, l2 = e2.support.browser, d2 = e2.ui.editor, u2 = e2.Class, c2 = d2.ElementResizeHandle, p2 = d2.ResizingUtils, h2 = p2.calculatePercentageRatio, f2 = p2.constrain, m2 = p2.inPercentages, g2 = p2.inPixels, v2 = p2.toPercentages, _2 = p2.toPixels, b2 = e2._outerWidth, k2 = e2._outerHeight, w = d2.RangeUtils, y = ".kendoEditorElementResizing", x = "k-element-resize-handle-wrapper", C = "k-element-resizing", T = "dragStart", S = "drag", I = "dragEnd", D = "keydown", E = "mousedown", A = "select", F = "tr", z = "tbody", P = "thead", H = "table", N = ["TABLE", "IMG"], R = "width", O = "height";
        function M(e3) {
          return void 0 === e3;
        }
        var B = u2.extend({ init: function(e3, t3) {
          var n3 = this;
          n3.options = s2({}, n3.options, t3), n3.handles = [], N.indexOf(e3.nodeName) >= 0 && (n3.element = e3);
        }, destroy: function() {
          var e3 = this;
          r2(e3.element).off(y), e3.element = null, r2(e3.options.rootElement).off(D + y), e3._destroyResizeHandles();
        }, options: { appendHandlesTo: null, rtl: false, rootElement: null, minWidth: 10, minHeight: 10, handles: [{ direction: "northwest" }, { direction: "north" }, { direction: "northeast" }, { direction: "east" }, { direction: "southeast" }, { direction: "south" }, { direction: "southwest" }, { direction: "west" }] }, resize: function(e3) {
          var t3 = this, n3 = s2({}, { deltaX: 0, deltaY: 0, initialDeltaX: 0, initialDeltaY: 0 }, e3);
          t3._resizeWidth(n3.deltaX, n3.initialDeltaX), t3._resizeHeight(n3.deltaY, n3.initialDeltaY), t3.showResizeHandles();
        }, _resizeWidth: function() {
          return false;
        }, _resizeHeight: function() {
          return false;
        }, _getMaxDimensionValue: function(t3) {
          var n3 = this, i3 = r2(n3.element), a3 = t3.toLowerCase(), o3 = n3.options.rtl ? -1 : 1, s3 = r2(n3.element).parent(), l3 = s3[0], d3 = s3[a3](), u3 = o3 * (t3 === R ? e2.scrollLeft(s3) : s3.scrollTop());
          return l3 && l3 === i3.closest("td")[0] ? "" !== l3.style[a3] || m2(n3.element.style[a3]) ? d3 + u3 : 1 / 0 : d3 + u3;
        }, showResizeHandles: function() {
          this._initResizeHandles(), this._showResizeHandles();
        }, _initResizeHandles: function() {
          var e3, t3 = this, n3 = t3.handles, i3 = t3.options, a3 = t3.options.handles, r3 = a3.length;
          if (!(n3 && n3.length > 0)) {
            for (e3 = 0; e3 < r3; e3++) t3.handles.push(new c2(s2({ appendTo: i3.appendHandlesTo, resizableElement: t3.element, rootElement: i3.rootElement, rtl: i3.rtl }, a3[e3])));
            t3._bindToResizeHandlesEvents();
          }
        }, _destroyResizeHandles: function() {
          for (var e3 = this, t3 = e3.handles ? e3.handles.length : 0, n3 = 0; n3 < t3; n3++) e3.handles[n3].destroy();
          e3.handles = [];
        }, _showResizeHandles: function() {
          var e3, t3 = (this.handles || []).length;
          for (e3 = 0; e3 < t3; e3++) this.handles[e3].show();
        }, _bindToResizeHandlesEvents: function() {
          return false;
        }, _onResizeHandleDragStart: function() {
          var e3 = this, t3 = r2(e3.element);
          t3.addClass(C), e3._initialElementHeight = k2(t3), e3._initialElementWidth = b2(t3), e3._disableKeyboard();
        }, _onResizeHandleDrag: function(e3) {
          this.resize(e3);
        }, _onResizeHandleDragEnd: function() {
          r2(this.element).removeClass(C), this._enableKeyboard();
        }, _enableKeyboard: function() {
          r2(this.options.rootElement).off(D + y);
        }, _disableKeyboard: function() {
          r2(this.options.rootElement).on(D + y, function(e3) {
            e3.preventDefault();
          });
        } }), L = B.extend({ _bindToResizeHandlesEvents: function() {
          var e3, t3, n3 = this, i3 = n3.handles || [], a3 = i3.length;
          for (e3 = 0; e3 < a3; e3++) (t3 = i3[e3]).bind(T, n3._onResizeHandleDragStart.bind(n3)), t3.bind(S, n3._onResizeHandleDrag.bind(n3)), t3.bind(I, n3._onResizeHandleDragEnd.bind(n3));
        }, _hasRowsInPixels: function() {
          for (var e3 = r2(this.element).children("thead,tbody").children(F), t3 = 0; t3 < e3.length; t3++) if ("" === e3[t3].style.height || g2(e3[t3].style.height)) return true;
          return false;
        }, _resizeWidth: function(e3, t3) {
          var n3, o3, s3, l3, d3 = this, u3 = r2(d3.element), c3 = u3[0].style.width, p3 = b2(u3), g3 = u3.parent().width(), k3 = d3._getMaxDimensionValue(R);
          0 !== e3 && (M(d3._initialElementWidth) && (d3._initialElementWidth = p3), l3 = f2({ value: d3._initialElementWidth + t3, min: d3.options.minWidth, max: k3 }), m2(c3) ? (p3 + e3 > g3 ? (o3 = a2(l3, g3), s3 = i2(l3, g3)) : (o3 = i2(l3, g3), s3 = a2(l3, g3)), n3 = v2(h2(o3, s3))) : n3 = _2(l3), d3._setColumnsWidth(), u3[0].style.width = n3);
        }, _resizeHeight: function(e3, t3) {
          var n3, o3, s3, l3, d3 = this, u3 = r2(d3.element), c3 = u3[0].style.height, p3 = k2(u3), g3 = u3.parent().height(), b3 = d3._getMaxDimensionValue(O), w2 = d3.options.minHeight, y2 = d3._hasRowsInPixels();
          0 !== e3 && (M(d3._initialElementHeight) && (d3._initialElementHeight = p3), l3 = f2({ value: d3._initialElementHeight + t3, min: w2, max: b3 }), y2 && e3 < 0 && d3._setRowsHeightInPercentages(), m2(c3) ? (p3 + e3 > g3 ? (o3 = a2(l3, g3), s3 = i2(l3, g3)) : (o3 = i2(l3, g3), s3 = a2(l3, g3)), n3 = v2(h2(o3, s3))) : n3 = _2(l3), u3[0].style.height = n3, y2 && e3 < 0 && d3._setRowsHeightInPixels());
        }, _setColumnsWidth: function() {
          var e3, t3 = r2(this.element), n3 = t3.parent()[0], i3 = t3.closest("td"), a3 = i3.closest(F).children(), o3 = a3.length;
          if (function(e4) {
            var t4 = e4.style.width;
            return "" !== t4 ? !!m2(t4) : !!r2(e4).hasClass("k-table");
          }(t3[0]) && n3 === i3[0] && "" === n3.style.width) for (e3 = 0; e3 < o3; e3++) a3[e3].style.width = _2(r2(a3[e3]).width());
        }, _setRowsHeightInPercentages: function() {
          var e3, t3 = this, n3 = r2(t3.element).children(P), i3 = n3.length > 0 ? n3.height() : 0, a3 = r2(t3.element).children(z).height(), o3 = r2(t3.element).children("thead,tbody").children(F), s3 = o3.length, l3 = o3.map(function() {
            return k2(r2(this));
          });
          for (e3 = 0; e3 < s3; e3++) o3[e3].style.height = v2(h2(l3[e3], i3 + a3));
        }, _setRowsHeightInPixels: function() {
          var e3, t3 = r2(this.element).children("thead,tbody").children(F), n3 = t3.length, i3 = t3.map(function() {
            return k2(r2(this));
          });
          for (e3 = 0; e3 < n3; e3++) t3[e3].style.height = _2(i3[e3]);
        } }), V = B.extend({ _bindToResizeHandlesEvents: function() {
          var e3, t3, n3 = this, i3 = n3.handles || [], a3 = i3.length;
          for (e3 = 0; e3 < a3; e3++) (t3 = i3[e3]).bind(T, n3._onResizeHandleDragStart.bind(n3)), "north" === t3.options.direction || "south" === t3.options.direction ? t3.bind(S, n3._onResizeHandleDragVertical.bind(n3)) : "east" === t3.options.direction || "west" === t3.options.direction ? t3.bind(S, n3._onResizeHandleDragHorizontal.bind(n3)) : t3.bind(S, n3._onResizeHandleDragLocked.bind(n3)), t3.bind(I, n3._onResizeHandleDragEnd.bind(n3));
        }, _getDeltas: function(e3) {
          return s2({}, { deltaX: 0, deltaY: 0, initialDeltaX: 0, initialDeltaY: 0 }, e3);
        }, _onResizeHandleDragVertical: function(e3) {
          var t3 = this._getDeltas(e3);
          this._resizeHeight(t3.deltaY, t3.initialDeltaY), this.showResizeHandles();
        }, _onResizeHandleDragHorizontal: function(e3) {
          var t3 = this._getDeltas(e3);
          this._resizeWidth(t3.deltaX, t3.initialDeltaX), this.showResizeHandles();
        }, _onResizeHandleDragLocked: function(e3) {
          var t3, n3 = Math.min(Math.abs(e3.initialDeltaX), Math.abs(e3.initialDeltaY)), i3 = this._initialElementWidth, a3 = this._initialElementHeight;
          n3 === e3.initialDeltaX || n3 === -1 * e3.initialDeltaX ? (e3.initialDeltaY = e3.initialDeltaX * a3 / i3, e3.deltaY = e3.deltaX) : n3 !== e3.initialDeltaY && n3 !== -1 * e3.initialDeltaY || (e3.initialDeltaX = e3.initialDeltaY * i3 / a3, e3.deltaX = e3.deltaY), t3 = this._getDeltas(e3), this._resizeWidth(t3.deltaX, t3.initialDeltaX), this._resizeHeight(t3.deltaY, t3.initialDeltaY), this.showResizeHandles();
        }, _resizeWidth: function(e3, t3) {
          var n3, i3, a3 = this, o3 = r2(a3.element), s3 = b2(o3);
          0 !== e3 && (M(a3._initialElementWidth) && (a3._initialElementWidth = s3), i3 = f2({ value: a3._initialElementWidth + t3, min: a3.options.minWidth, max: a3._getMaxDimensionValue(R) }), n3 = _2(i3), o3[0].style.width = n3, o3.attr(R, Math.floor(i3)));
        }, _resizeHeight: function(e3, t3) {
          var n3, i3, a3 = this, o3 = r2(a3.element), s3 = k2(o3);
          0 !== e3 && (M(a3._initialElementHeight) && (a3._initialElementHeight = s3), i3 = f2({ value: a3._initialElementHeight + t3, min: a3.options.minHeight, max: Number.MAX_SAFE_INTEGER }), n3 = _2(i3), o3[0].style.height = n3, o3.attr(O, Math.floor(i3)));
        } }), U = u2.extend({ create: function(e3) {
          var t3 = this;
          r2(e3.body).on("dragstart" + y, function() {
            var t4 = w.nodes(e3.getRange()), n3 = false;
            t4.forEach(function(e4) {
              "IMG" === e4.nodeName && (n3 = true);
            }), n3 && t4.length > 1 && e3.elementResizing._destroyResizeHandles();
          }).on("drop" + y, function() {
            setTimeout(function() {
              var t4 = w.image(e3.getRange());
              t4 && (e3.elementResizing._destroyResizeHandles(), e3.elementResizing.element = t4, e3.elementResizing.showResizeHandles());
            });
          }).on(E + y, "table,img", function(n3) {
            var i3 = n3.target, a3 = n3.currentTarget, r3 = e3.elementResizing, s3 = r3 ? r3.element : null;
            if (r3) {
              if (s3 && a3 !== s3) {
                if (o2(a3, s3) && s3 !== i3 && o2(s3, i3)) return;
                s3 !== i3 && (e3._destroyElementResizing(), t3._initResizing(e3, a3));
              }
            } else t3._initResizing(e3, a3);
            e3._showElementResizeHandles();
          }).on(E + y, function(t4) {
            var n3 = e3.elementResizing, i3 = n3 ? n3.element : null, a3 = t4.target, s3 = r2(a3).hasClass(x) || r2(a3).parents("." + x).length > 0;
            !n3 || i3 === a3 || o2(i3, a3) || s3 || e3._destroyElementResizing();
          });
        }, dispose: function(e3) {
          r2(e3.body).off(y);
        }, _initResizing: function(t3, n3) {
          l2.msie || (r2(n3).is(H) ? t3.elementResizing = t3.tableResizing = new L(n3, { appendHandlesTo: t3.body, rtl: e2.support.isRtl(t3.element), rootElement: t3.body }) : r2(n3).is("img") && (t3.elementResizing = new V(n3, { appendHandlesTo: t3.body, rtl: e2.support.isRtl(t3.element), rootElement: t3.body })), t3._showElementResizeHandlesProxy && (t3.unbind(A, t3._showElementResizeHandlesProxy), t3.bind(A, t3._showElementResizeHandlesProxy)));
        } });
        U.current = new U(), s2(d2, { TableResizing: L, ImageResizing: V, ElementResizing: B, ElementResizingFactory: U });
      }(window.kendo), function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.editor, a2 = i2.EditorUtils, r2 = i2.RangeUtils, o2 = i2.Dom, s2 = a2.registerTool, l2 = i2.ToolTemplate, d2 = i2.Command, u2 = new i2.BlockFormatFinder([{ tags: ["table"] }]), c2 = new i2.BlockFormatFinder([{ tags: ["td", "th"] }]), p2 = /([a-z]+|%)$/i, h2 = "scope", f2 = "col-index", m2 = "th", g2 = "td", v2 = d2.extend({ exec: function() {
          var e3 = this, a3 = e3.editor, r3 = e3.range = e3.lockRange(), o3 = e3._sourceTable = e3.options.insertNewTable ? t2 : e3._selectedTable(r3), s3 = e3._selectedTableCells = o3 ? e3._selectedCells(r3) : t2, l3 = { visible: false, messages: a3.options.messages, closeCallback: e3.onDialogClose.bind(e3), table: e3.parseTable(o3, s3), dialogOptions: a3.options.dialogOptions, isRtl: n2.support.isRtl(a3.wrapper) };
          new i2.TableWizardDialog(l3).open();
        }, onDialogClose: function(e3) {
          var t3 = this;
          t3.releaseRange(t3.range), e3 && (t3.options.insertNewTable ? t3.insertTable(t3.createNewTable(e3)) : t3.updateTable(e3, t3._sourceTable, t3._selectedTableCells));
        }, releaseRange: function(e3) {
          var t3 = this.editor.document;
          o2.windowFromDocument(t3).focus(), d2.fn.releaseRange.call(this, e3);
        }, insertTable: function(e3) {
          var t3 = this.range;
          t3.insertNode(e3), t3.collapse(true), this.editor.selectRange(t3), this._ensureFocusableAfterTable(e3);
        }, _ensureFocusableAfterTable: function(t3) {
          for (var n3 = e2(t3).parent().contents(), i3 = n3.length - 1, a3 = n3.get(i3); null !== a3.nodeValue && (" " === a3.nodeValue || "" === a3.nodeValue); ) i3 -= 1, a3 = n3.get(i3);
          a3 === t3 && o2.insertAfter(o2.createEmptyNode(this.editor.document, "p"), t3);
        }, updateTable: function(t3, n3, i3) {
          for (var a3, r3, s3 = this, l3 = e2(n3.rows).toArray(), d3 = t3.tableProperties, u3 = d3.rows, c3 = n3.tHead, p3 = s3._lastInCollection; i3.length > 1; ) i3.pop();
          a3 = i3.length ? p3(i3).parentNode : p3(l3), s3._deleteTableRows(l3, l3.length - u3), l3.length < u3 && s3._addRows(a3, u3, l3), o2.reMapTableColumns(n3, f2), s3._updateColumns(l3, d3.columns, i3, a3), s3._updateTableProperties(n3, d3), r3 = t3.cellProperties, i3[0] && o2.attr(i3[0], { id: r3.id || null }), (r3.selectAllCells ? e2(l3).children() : e2(i3)).each(function(e3, t4) {
            s3._updateCellProperties(t4, r3);
          }), s3._updateCaption(n3, d3), c3 ? s3._updateHeadersWithThead(n3, t3) : s3._updateHeadersNoThead(n3, t3), s3._updateHeaderAssociates(n3, d3), o2.clearTableMappings(n3, f2);
        }, _isHeadingRow: function(e3) {
          return o2.is(e3.cells[0], m2) && o2.is(e3.parentNode, "thead");
        }, _isHeadingCell: function(e3) {
          return o2.is(e3, m2);
        }, cellsWithHeadersAssociated: function(t3) {
          var n3 = e2(t3.rows).children(), i3 = [], a3 = function(e3) {
            return i3.indexOf(e3) > -1;
          };
          return n3.each(function(e3, t4) {
            t4.id && o2.is(t4, m2) && i3.push(t4.id);
          }), !!n3.filter(function(e3, t4) {
            var n4, i4 = t4.getAttribute("headers");
            return !!(i4 && !o2.is(t4, m2) && (n4 = i4.split(" ")) && n4.length > 0) && n4.some(a3);
          }).length;
        }, _insertCells: function(e3, t3, n3) {
          n3 = isNaN(n3) ? -1 : n3;
          for (var i3 = 0; i3 < e3; i3++) t3.insertCell(n3).innerHTML = "&nbsp;";
        }, _deleteTableRows: function(e3, t3) {
          for (var n3, i3, a3 = 0; a3 < t3; a3++) (i3 = (n3 = e3.pop()).parentNode).removeChild(n3), i3.rows.length || o2.remove(i3);
        }, createNewTable: function(e3) {
          var t3, n3 = this, i3 = n3.editor.document, a3 = e3.tableProperties, r3 = o2.create(i3, "table"), s3 = 0;
          n3._updateTableProperties(r3, a3), n3._updateCaption(r3, a3), a3.headerRows && a3.headerRows > 0 && (t3 = r3.createTHead(), n3._createTableRows(e3, t3, s3, true), s3 += a3.headerRows);
          var l3 = r3.createTBody();
          return n3._createTableRows(e3, l3, s3, false), o2.reMapTableColumns(r3, f2), "ids" === a3.cellsWithHeaders ? o2.associateWithIds(r3) : "scope" === a3.cellsWithHeaders && n3._addScopes(r3, a3.headerRows, a3.headerColumns), o2.clearTableMappings(r3, f2), r3;
        }, _createTableRows: function(e3, t3, n3, i3) {
          for (var a3, r3 = e3.tableProperties, o3 = e3.cellProperties, s3 = r3.columns, l3 = i3 ? r3.headerRows : r3.rows, d3 = o3.selectAllCells, u3 = r3.headerColumns, c3 = n3; c3 < l3; c3++) {
            a3 = t3.insertRow();
            for (var p3, h3 = 0; h3 < s3; h3++) p3 = i3 || u3 > h3 ? document.createElement(m2) : document.createElement(g2), a3.appendChild(p3), p3.innerHTML = "&nbsp;", 0 === c3 && 0 === h3 && o3.id && (p3.id = o3.id), this._updateCellProperties(p3, d3 || 0 === c3 && 0 === h3 ? o3 : {});
          }
        }, _addRows: function(t3, n3, i3) {
          for (var a3, r3 = e2(t3).index(), o3 = t3.cells.length, s3 = n3 - i3.length, l3 = t3.parentNode; s3; ) a3 = l3.insertRow(r3 + 1), this._insertCells(o3 - a3.cells.length, a3), s3--;
        }, _updateColumns: function(t3, n3, i3, a3) {
          var r3 = this, o3 = r3._lastInCollection, s3 = o3(t3[0].cells), l3 = Number(s3.getAttribute(f2)) + s3.colSpan;
          if (l3 > n3 && e2(t3).each(function(e3, t4) {
            for (var i4 = o3(t4.cells), a4 = Number(i4.getAttribute(f2)) + i4.colSpan; a4 > n3; ) i4.colSpan && i4.colSpan > 1 ? i4.colSpan -= 1 : t4.deleteCell(-1), i4 = o3(t4.cells), a4 = Number(i4.getAttribute(f2)) + i4.colSpan;
          }), l3 < n3) {
            var d3 = e2(o3(i3) || o3(a3.cells)).index();
            e2(t3).each(function(e3, t4) {
              var i4 = o3(t4.cells);
              r3._insertCells(n3 - Number(i4.getAttribute(f2)) - i4.colSpan, t4, d3 + 1);
            });
          }
        }, _updateTableProperties: function(t3, n3) {
          var i3 = this._getStylesData(n3);
          o2.attr(t3, { cellSpacing: n3.cellSpacing || null, cellPadding: n3.cellPadding || null, className: n3.className || null, id: n3.id || null, summary: n3.summary || null, style: i3 || null }), e2(t3).addClass("k-table");
        }, _updateCellProperties: function(e3, t3) {
          var n3 = this._getStylesData(t3);
          n3.padding = t3.cellPadding || null, n3.margin = t3.cellMargin || null, o2.attr(e3, { style: n3 || null, className: t3.className || null });
        }, _updateCaption: function(e3, t3) {
          if (e3.caption && !t3.captionContent) e3.deleteCaption();
          else if (t3.captionContent) {
            var n3 = e3.createCaption();
            n3.innerHTML = t3.captionContent;
            var i3 = this._getAlignmentData(t3.captionAlignment);
            o2.attr(n3, { style: { textAlign: i3.textAlign, verticalAlign: i3.verticalAlign } });
          }
        }, _updateHeadersNoThead: function(e3, t3) {
          var n3, i3, a3, r3, s3 = t3.tableProperties, l3 = e3.rows;
          for (a3 = 0; a3 < l3.length; a3++) for (n3 = l3[a3].cells, r3 = 0; r3 < n3.length; r3++) i3 = n3[r3], !this._isHeadingCell(i3) && (a3 < s3.headerRows || s3.headerColumns > i3.getAttribute(f2)) ? o2.changeTag(i3, m2, false) : this._isHeadingCell(i3) && a3 >= s3.headerRows && s3.headerColumns <= i3.getAttribute(f2) && o2.changeTag(i3, g2, false);
        }, _updateHeadersWithThead: function(e3, t3) {
          var n3, i3, a3, r3 = this, s3 = t3.tableProperties, l3 = e3.tHead, d3 = 0, u3 = e3.tBodies[0];
          if (u3 || (u3 = e3.createTBody()), s3.headerRows && s3.headerRows > 0) {
            for (l3 || (l3 = e3.createTHead()); l3.rows.length < s3.headerRows; ) l3.appendChild(u3.rows[0]);
            for (; l3.rows.length > s3.headerRows; ) u3.appendChild(l3.rows[0]);
            r3._swapToHeaderCells(l3);
          } else if (l3) {
            for (; l3.rows.length > 0; ) u3.appendChild(l3.rows[l3.rows.length - 1]);
            e3.deleteTHead();
          }
          for (; u3.rows.length > d3; ) {
            for (n3 = u3.rows[d3], a3 = 0; a3 < n3.cells.length; a3++) i3 = n3.cells[a3], r3._isHeadingCell(i3) && s3.headerColumns <= i3.getAttribute(f2) ? o2.changeTag(i3, g2, false) : !r3._isHeadingCell(i3) && s3.headerColumns > i3.getAttribute(f2) && o2.changeTag(i3, m2, false);
            d3 += 1;
          }
        }, _updateHeaderAssociates: function(e3, t3) {
          var n3 = this;
          "ids" === t3.cellsWithHeaders ? (n3.cellsWithHeadersAssociated(e3) || n3._removeScopes(e3), o2.associateWithIds(e3)) : "scope" === t3.cellsWithHeaders ? (n3.cellsWithHeadersAssociated(e3) && n3._removeAssociates(e3), n3._addScopes(e3, t3.headerRows, t3.headerColumns)) : n3.cellsWithHeadersAssociated(e3) ? n3._removeAssociates(e3) : n3._removeScopes(e3);
        }, _addScopes: function(e3, t3, n3) {
          var i3, a3, r3, o3, s3 = e3.rows;
          for (i3 = 0; i3 < s3.length; i3++) for (r3 = s3[i3], a3 = 0; a3 < r3.cells.length; a3++) o3 = r3.cells[a3], i3 < t3 ? o3.setAttribute(h2, "col") : o3.getAttribute(f2) < n3 && o3.setAttribute(h2, "row");
        }, _removeScopes: function(t3) {
          e2(t3).find(m2).removeAttr(h2), e2(t3).find("col").remove(), e2(t3).find("colgroup").remove();
        }, _removeAssociates: function(t3) {
          e2(t3).find("th, td").removeAttr("id headers");
        }, _swapToHeaderCells: function(t3) {
          e2(t3).find("td").each(function(e3, t4) {
            o2.changeTag(t4, m2, false);
          });
        }, _getStylesData: function(e3) {
          var t3 = this._getAlignmentData(e3.alignment), n3 = "wrapText" in e3 ? e3.wrapText ? "" : "nowrap" : null;
          return { width: e3.width ? e3.width + e3.widthUnit : null, height: e3.height ? e3.height + e3.heightUnit : null, textAlign: t3.textAlign, verticalAlign: t3.verticalAlign, backgroundColor: e3.bgColor || "", borderWidth: e3.borderWidth, borderStyle: e3.borderStyle, borderColor: e3.borderColor || "", borderCollapse: e3.collapseBorders ? "collapse" : null, whiteSpace: n3 };
        }, _getAlignmentData: function(e3) {
          var t3 = "", n3 = t3;
          if (e3) if (-1 != e3.indexOf(" ")) {
            var i3 = e3.split(" ");
            t3 = i3[0], n3 = i3[1];
          } else t3 = e3;
          return { textAlign: t3, verticalAlign: n3 };
        }, parseTable: function(n3, i3) {
          if (!n3) return { tableProperties: {}, selectedCells: [] };
          var a3 = this, r3 = n3.style, s3 = n3.rows, l3 = n3.caption, d3 = e2(l3 ? l3.cloneNode(true) : t2);
          d3.find(".k-marker").remove();
          var u3 = n3.className;
          u3 = (u3 = (u3 = u3.replace(/^k-table\s|\sk-table$/, "")).replace(/\sk-table\s/, " ")).replace(/^k-table$/, "");
          var c3, p3 = a3._getAlignment(n3, true), h3 = l3 ? a3._getAlignment(l3) : t2, m3 = o2._getNumberOfHeaderRows(n3);
          c3 = a3.cellsWithHeadersAssociated(n3) ? "ids" : e2(n3).find("th[scope]").length > 0 ? "scope" : "none", o2.reMapTableColumns(n3, f2);
          var g3 = o2._getNumberOfColumns(n3), v3 = o2._getNumberOfHeaderColumns(n3, m3);
          o2.clearTableMappings(n3, f2);
          var _3 = { tableProperties: { width: r3.width || n3.width ? parseFloat(r3.width || n3.width) : null, height: r3.height || n3.height ? parseFloat(r3.height || n3.height) : null, columns: g3, rows: s3.length, widthUnit: a3._getUnit(r3.width), heightUnit: a3._getUnit(r3.height), cellSpacing: n3.cellSpacing, cellPadding: n3.cellPadding, alignment: p3.textAlign, bgColor: r3.backgroundColor || n3.bgColor, className: u3, id: n3.id, borderWidth: r3.borderWidth || n3.border, borderColor: r3.borderColor, borderStyle: r3.borderStyle || "", collapseBorders: !!r3.borderCollapse, summary: n3.summary, captionContent: l3 ? d3.html() : "", captionAlignment: l3 && h3.textAlign ? h3.textAlign + " " + h3.verticalAlign : "", headerRows: m3, headerColumns: v3, cellsWithHeaders: c3 }, selectedCells: [] };
          return _3.rows = a3.parseTableRows(s3, i3, _3), _3;
        }, parseTableRows: function(t3, n3, i3) {
          for (var a3, r3, o3, s3, l3 = [], d3 = 0; d3 < t3.length; d3++) {
            a3 = { cells: [] }, r3 = t3[d3].cells, l3.push(a3);
            for (var u3 = 0; u3 < r3.length; u3++) o3 = r3[u3], s3 = this.parseCell(o3), -1 != e2.inArray(o3, n3) && i3.selectedCells.push(s3), a3.cells.push(s3);
          }
          return l3;
        }, parseCell: function(e3) {
          var t3 = this, n3 = e3.style, i3 = t3._getAlignment(e3);
          return i3 = i3.textAlign ? i3.textAlign + " " + i3.verticalAlign : "", { width: n3.width || e3.width ? parseFloat(n3.width || e3.width) : null, height: n3.height || e3.height ? parseFloat(n3.height || e3.height) : null, widthUnit: t3._getUnit(n3.width), heightUnit: t3._getUnit(n3.height), cellMargin: n3.margin, cellPadding: n3.padding, alignment: i3, bgColor: n3.backgroundColor || e3.bgColor, className: e3.className, id: e3.id, borderWidth: n3.borderWidth || e3.border, borderColor: n3.borderColor, borderStyle: n3.borderStyle, wrapText: "nowrap" != n3.whiteSpace };
        }, _getAlignment: function(e3, t3) {
          var n3 = e3.style, i3 = n3.textAlign || e3.align || "";
          if (t3) return { textAlign: i3 };
          var a3 = n3.verticalAlign || e3.vAlign || "";
          return i3 && a3 ? { textAlign: i3, verticalAlign: a3 } : !i3 && a3 ? { textAlign: "left", verticalAlign: a3 } : i3 && !a3 ? { textAlign: i3, verticalAlign: "top" } : { textAlign: "", verticalAlign: "" };
        }, _getUnit: function(e3) {
          var t3 = (e3 || "").match(p2);
          return t3 ? t3[0] : "px";
        }, _selectedTable: function(e3) {
          var t3 = o2.filterBy(r2.nodes(e3), o2.htmlIndentSpace, true);
          return u2.findSuitable(t3)[0];
        }, _selectedCells: function(e3) {
          var t3 = o2.filterBy(r2.nodes(e3), o2.htmlIndentSpace, true);
          return c2.findSuitable(t3);
        }, _lastInCollection: function(e3) {
          return e3[e3.length - 1];
        } }), _2 = i2.Tool.extend({ command: function(e3) {
          return e3.insertNewTable = this.options.insertNewTable, new v2(e3);
        } }), b2 = _2.extend({ update: function(e3, t3) {
          true === !u2.isFormatted(t3) ? (e3.parent().addClass("k-hidden k-disabled"), e3.attr("disabled", "disabled"), e3.addClass("k-disabled")) : (e3.parent().removeClass("k-hidden k-disabled"), e3.prop("disabled", false), e3.removeClass("k-disabled"));
        } });
        n2.ui.editor.TableWizardTool = _2, n2.ui.editor.TableWizardCommand = v2, s2("tableWizard", new b2({ command: v2, insertNewTable: false, template: new l2({ template: a2.buttonTemplate, title: "Table Wizard" }) }));
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.keys, r2 = e2.map, o2 = e2.each, s2 = n2.trim, l2 = e2.extend, d2 = n2.isFunction, u2 = n2.template, c2 = n2._outerWidth, p2 = n2._outerHeight, h2 = i2.Widget, f2 = /^(a|div)$/i, m2 = ".kendoTabStrip", g2 = "href", v2 = "prev", _2 = "next", b2 = "show", k2 = "k-link", w = "k-last", y = "click", x = "k-image", C = "k-first", T = "select", S = "activate", I = "k-tabstrip-content k-content", D = "contentUrl", E = "mouseenter", A = "contentLoad", F = "k-disabled", z = "k-active", P = "k-focus", H = "k-hover", N = "k-tab-on-top", R = ".k-item:not(.k-disabled)", O = ".k-item", M = "aria-hidden", B = "aria-controls", L = "aria-disabled", V = "aria-selected", U = "aria-labelledby", W = { content: u2("<div class='k-tabstrip-content k-content' #= contentAttributes(data) # tabindex='0'>#= content(item) #</div>"), itemWrapper: u2("<#= tag(item) # class='k-link' #= contentUrl(item) # #= textAttributes(item) #>#= image(item) ##= sprite(item) ##= text(item) #</#= tag(item) #>"), item: u2(`<li class='#= wrapperCssClass(group, item) #' role='tab' #=item.active ? "aria-selected='true'" : ''#>#= itemWrapper(data) #</li>`), image: u2("<img class='k-image' alt='' src='#= imageUrl #' />"), sprite: u2("<span class='k-sprite #= spriteCssClass #'></span>"), empty: u2("") }, j = { wrapperCssClass: function(e3, t3) {
          var n3 = ["k-tabstrip-item", "k-item"], i3 = t3.index;
          return false === t3.enabled && n3.push("k-disabled"), 0 === i3 && n3.push("k-first"), i3 == e3.length - 1 && n3.push("k-last"), n3.join(" ");
        }, textAttributes: function(e3) {
          return e3.url ? " href='" + e3.url + "'" : "";
        }, text: function(e3) {
          return false === e3.encoded ? e3.text : n2.htmlEncode(e3.text);
        }, tag: function(e3) {
          return e3.url ? "a" : "span";
        }, contentAttributes: function(e3) {
          return true !== e3.active ? " style='display:none' aria-hidden='true'" : "";
        }, content: function(e3) {
          return e3.content ? e3.content : e3.contentUrl ? "" : "&nbsp;";
        }, contentUrl: function(e3) {
          return e3.contentUrl ? n2.attr("content-url") + '="' + e3.contentUrl + '"' : "";
        } };
        function q(t3) {
          t3.children("img").addClass(x), t3.children("a").addClass(k2).children("img").addClass(x), t3.filter("li[disabled]").addClass(F).attr(L, "true").prop("disabled", false), t3.filter(":not([class*=k-state])").children("a").filter(":focus").parent().addClass("k-active " + N), t3.attr("role", "tab"), t3.filter(".k-active").attr(V, true), t3.each(function() {
            var t4 = e2(this);
            t4.children("." + k2).length || t4.contents().filter(function() {
              return !(this.nodeName.match(f2) || 3 == this.nodeType && !s2(this.nodeValue));
            }).wrapAll("<span UNSELECTABLE='on' class='k-link'/>");
          });
        }
        function G(e3) {
          var t3 = e3.children(".k-item");
          t3.filter(".k-first:not(:first-child)").removeClass(C), t3.filter(".k-last:not(:last-child)").removeClass(w), t3.filter(":first-child").addClass(C), t3.filter(":last-child").addClass(w);
        }
        function K(e3, t3) {
          return "<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-" + e3 + "' unselectable='on'><span class='k-button-icon k-icon " + t3 + "'></span></span>";
        }
        var $ = h2.extend({ init: function(e3, t3) {
          var i3, a3 = this;
          h2.fn.init.call(a3, e3, t3), a3._animations(a3.options), t3 = a3.options, a3._contentUrls = t3.contentUrls || [], a3._wrapper(), a3._isRtl = n2.support.isRtl(a3.wrapper), a3._tabindex(), a3._updateClasses(), a3._dataSource(), a3.tabGroup.attr("role", "tablist"), t3.dataSource && a3.dataSource.fetch(), a3._tabPosition(), a3._scrollable(), a3._processContentUrls(), a3._attachEvents(), a3.options.value && (i3 = a3.options.value), a3._initialActivate(), a3.value(i3), n2.notify(a3);
        }, events: [T, S, b2, "error", A, "change", "dataBinding", "dataBound"], options: { name: "TabStrip", dataEncodedField: "", dataTextField: "", dataContentField: "", dataImageUrlField: "", dataUrlField: "", dataSpriteCssClass: "", dataContentUrlField: "", tabPosition: "top", animation: { open: { effects: "expand:vertical fadeIn", duration: 200 }, close: { duration: 200 } }, collapsible: false, navigatable: true, contentUrls: false, scrollable: { distance: 200 } }, setDataSource: function(e3) {
          var t3 = this;
          t3.options.dataSource = e3, t3._dataSource(), t3.dataSource.fetch();
        }, setOptions: function(e3) {
          var t3 = this, n3 = t3.options.animation;
          t3._animations(e3), e3.contentUrls && (t3._contentUrls = e3.contentUrls), e3.animation = l2(true, n3, e3.animation), e3.navigatable ? t3.wrapper.on("keydown" + m2, t3._keyDownProxy) : t3.wrapper.off("keydown" + m2, t3._keyDownProxy), h2.fn.setOptions.call(t3, e3);
        }, activateTab: function(e3) {
          if (!this.tabGroup.children("[data-animating]").length) {
            e3 = this.tabGroup.find(e3);
            var t3 = this, i3 = t3.options.animation, a3 = i3.open, r3 = l2({}, i3.close), o3 = r3 && "effects" in r3, s3 = e3.parent().children(), d3 = s3.filter(".k-active"), u3 = s3.index(e3), c3 = a3 && "duration" in a3 && "effects" in a3;
            r3 = l2(o3 ? r3 : l2({ reverse: true }, a3), { hide: true }), n2.size(a3.effects) ? (d3.kendoRemoveClass(z, { duration: r3.duration }), e3.kendoRemoveClass(H, { duration: r3.duration })) : (d3.removeClass(z), e3.removeClass(H));
            var h3 = t3.contentAnimators;
            if (t3.inRequest && (t3.xhr.abort(), t3.inRequest = false), 0 === h3.length) return t3.tabGroup.find("." + N).removeClass(N), e3.addClass(N).css("z-index"), e3.addClass(z), t3._current(e3), t3.trigger("change"), t3._scrollableModeActive && t3._scrollTabsToItem(e3), false;
            var f3 = h3.filter(".k-active"), m3 = t3.contentHolder(u3), g3 = m3.closest(".k-content");
            if (t3.tabsHeight = p2(t3.tabGroup) + parseInt(t3.wrapper.css("border-top-width"), 10) + parseInt(t3.wrapper.css("border-bottom-width"), 10), 0 === m3.length) return f3.removeClass(z).attr(M, true).kendoStop(true, true).kendoAnimate(r3), false;
            e3.attr("data-animating", true);
            var v3 = !(!e3.children("." + k2).data(D) && !t3._contentUrls[u3]) && m3.is(":empty"), _3 = function() {
              d3.removeAttr(V), e3.attr(V, true), t3._current(e3), g3.addClass(z).removeAttr(M).kendoStop(true, true).kendoAnimate(l2({ init: function() {
                t3.trigger(b2, { item: e3[0], contentElement: m3[0] }), n2.resize(m3);
              } }, a3, { complete: function() {
                e3.removeAttr("data-animating"), t3.trigger(S, { item: e3[0], contentElement: m3[0] }), n2.resize(m3), c3 && (n2.support.browser.msie || n2.support.browser.edge) && m3.finish().animate({ opacity: 0.9 }, "fast", "linear", function() {
                  m3.finish().animate({ opacity: 1 }, "fast", "linear");
                });
              } }));
            }, w2 = function() {
              v3 ? (e3.removeAttr("data-animating"), t3.ajaxRequest(e3, m3, function() {
                e3.attr("data-animating", true), _3(), t3.trigger("change");
              })) : (_3(), t3.trigger("change")), t3._scrollableModeActive && t3._scrollTabsToItem(e3);
            }, y2 = t3.element.css("min-height");
            return t3.element.css("min-height", t3.element.outerHeight()), f3.removeClass(z), t3.tabGroup.find("." + N).removeClass(N), e3.addClass(N).css("z-index"), n2.size(a3.effects) ? e3.kendoAddClass(z, { duration: a3.duration }) : e3.addClass(z), f3.attr(M, true), f3.length ? f3.kendoStop(true, true).kendoAnimate(l2({ complete: w2 }, r3)) : w2(), t3.element.css("min-height", y2), true;
          }
        }, ajaxRequest: function(t3, i3, a3, r3) {
          t3 = this.tabGroup.find(t3);
          var o3 = this, s3 = e2.ajaxSettings.xhr, l3 = t3.find("." + k2), u3 = t3.width() / 2, c3 = false, p3 = t3.find(".k-loading").removeClass("k-complete");
          p3[0] || (p3 = e2("<span class='k-loading'/>").prependTo(t3));
          var h3 = 2 * u3 - p3.width(), f3 = function() {
            p3.animate({ marginLeft: (parseInt(p3.css("marginLeft"), 10) || 0) < u3 ? h3 : 0 }, 500, f3);
          };
          n2.support.browser.msie && n2.support.browser.version < 10 && setTimeout(f3, 40), r3 = r3 || l3.data(D) || o3._contentUrls[t3.index()] || l3.attr(g2), o3.inRequest = true;
          var m3 = { type: "GET", cache: false, url: r3, dataType: "html", data: {}, xhr: function() {
            var t4 = this, n3 = s3(), i4 = t4.progressUpload ? "progressUpload" : !!t4.progress && "progress";
            return n3 && e2.each([n3, n3.upload], function() {
              this.addEventListener && this.addEventListener("progress", function(e3) {
                i4 && t4[i4](e3);
              }, false);
            }), t4.noProgress = !(window.XMLHttpRequest && "upload" in new XMLHttpRequest()), n3;
          }, progress: function(e3) {
            if (e3.lengthComputable) {
              var t4 = parseInt(e3.loaded / e3.total * 100, 10) + "%";
              p3.stop(true).addClass("k-progress").css({ width: t4, marginLeft: 0 });
            }
          }, error: function(e3, t4) {
            o3.trigger("error", { xhr: e3, status: t4 }) && this.complete();
          }, stopProgress: function() {
            clearInterval(c3), p3.stop(true).addClass("k-progress")[0].style.cssText = "";
          }, complete: function(e3) {
            o3.inRequest = false, this.noProgress ? setTimeout(this.stopProgress, 500) : this.stopProgress(), "abort" == e3.statusText && p3.remove();
          }, success: function(e3) {
            p3.addClass("k-complete");
            try {
              var s4 = this, l4 = 10;
              s4.noProgress && (p3.width(l4 + "%"), c3 = setInterval(function() {
                s4.progress({ lengthComputable: true, loaded: Math.min(l4, 100), total: 100 }), l4 += 10;
              }, 40)), o3.angular("cleanup", function() {
                return { elements: i3.get() };
              }), n2.destroy(i3), i3.html(e3);
            } catch (e4) {
              var d3 = window.console;
              d3 && d3.error && d3.error(e4.name + ": " + e4.message + " in " + r3), this.error(this.xhr, "error");
            }
            a3 && a3.call(o3, i3), o3.angular("compile", function() {
              return { elements: i3.get() };
            }), o3.trigger(A, { item: t3[0], contentElement: i3[0] });
          } };
          "object" == typeof r3 && (m3 = e2.extend(true, {}, m3, r3), d2(m3.url) && (m3.url = m3.url())), o3.xhr = e2.ajax(m3);
        }, append: function(e3) {
          var t3 = this, n3 = t3._create(e3);
          return o2(n3.tabs, function(e4) {
            var i3 = n3.contents[e4];
            t3.tabGroup.append(this), "bottom" == t3.options.tabPosition ? t3.tabWrapper.before(i3) : t3.wrapper.append(i3), t3.angular("compile", function() {
              return { elements: [i3] };
            });
          }), G(t3.tabGroup), t3._updateContentElements(), t3.resize(true), t3;
        }, contentElement: function(i3) {
          if (isNaN(i3 - 0)) return t2;
          var a3 = this.contentElements && this.contentElements[0] && !n2.kineticScrollNeeded ? this.contentElements : this.contentAnimators, r3 = e2(this.tabGroup.children()[i3]).attr(B);
          if (a3) {
            for (var o3 = 0, s3 = a3.length; o3 < s3; o3++) if (a3.eq(o3).closest(".k-content")[0].id == r3) return a3[o3];
          }
          return t2;
        }, contentHolder: function(t3) {
          var i3 = e2(this.contentElement(t3)), a3 = i3.children(".km-scroll-container");
          return n2.support.touch && a3[0] ? a3 : i3;
        }, deactivateTab: function(e3) {
          var t3 = this, i3 = t3.options.animation, a3 = i3.open, r3 = l2({}, i3.close), o3 = r3 && "effects" in r3;
          e3 = t3.tabGroup.find(e3), r3 = l2(o3 ? r3 : l2({ reverse: true }, a3), { hide: true }), n2.size(a3.effects) ? e3.kendoRemoveClass(z, { duration: a3.duration }) : e3.removeClass(z), e3.removeAttr(V), t3.contentAnimators.filter(".k-active").kendoStop(true, true).kendoAnimate(r3).removeClass(z).attr(M, true);
        }, destroy: function() {
          var e3 = this;
          h2.fn.destroy.call(e3), e3._refreshHandler && e3.dataSource.unbind("change", e3._refreshHandler), e3.wrapper.off(m2), e3.tabGroup.off(m2), e3._scrollableModeActive && (e3._scrollPrevButton.off().remove(), e3._scrollNextButton.off().remove()), n2.destroy(e3.wrapper);
        }, disable: function(e3) {
          return this._toggleDisabled(e3, false), this;
        }, enable: function(e3, t3) {
          return this._toggleDisabled(e3, false !== t3), this;
        }, insertAfter: function(t3, n3) {
          n3 = e2(t3).is(e2(n3)) ? this.tabGroup.find(n3).prev() : this.tabGroup.find(n3);
          var i3 = this, a3 = i3._create(t3), r3 = i3.element.find("[id='" + n3.attr(B) + "']");
          return o2(a3.tabs, function(t4) {
            var o3 = a3.contents[t4], s3 = a3.newTabsCreated ? i3._contentUrls.length - (a3.tabs.length - t4) : e2(o3).index() - 1;
            n3.after(this), r3.after(o3), i3._moveUrlItem(s3, e2(this).index()), i3.angular("compile", function() {
              return { elements: [o3] };
            });
          }), G(i3.tabGroup), i3._updateContentElements(a3.newTabsCreated), i3.resize(true), i3;
        }, insertBefore: function(t3, n3) {
          n3 = e2(t3).is(e2(n3)) ? this.tabGroup.find(n3).next() : this.tabGroup.find(n3);
          var i3 = this, a3 = i3._create(t3), r3 = i3.element.find("[id='" + n3.attr(B) + "']");
          return o2(a3.tabs, function(t4) {
            var o3 = a3.contents[t4], s3 = a3.newTabsCreated ? i3._contentUrls.length - (a3.tabs.length - t4) : e2(o3).index() - 1;
            n3.before(this), r3.before(o3), i3._moveUrlItem(s3, e2(this).index()), i3.angular("compile", function() {
              return { elements: [o3] };
            });
          }), G(i3.tabGroup), i3._updateContentElements(a3.newTabsCreated), i3.resize(true), i3;
        }, items: function() {
          return this.tabGroup[0].children;
        }, refresh: function(e3) {
          var t3, i3, a3, r3 = this, o3 = r3.options, s3 = n2.getter(o3.dataEncodedField), l3 = n2.getter(o3.dataTextField), d3 = n2.getter(o3.dataContentField), u3 = n2.getter(o3.dataContentUrlField), c3 = n2.getter(o3.dataImageUrlField), p3 = n2.getter(o3.dataUrlField), h3 = n2.getter(o3.dataSpriteCssClass), f3 = [], m3 = r3.dataSource.view();
          for ((e3 = e3 || {}).action && (m3 = e3.items), t3 = 0, a3 = m3.length; t3 < a3; t3++) i3 = { text: l3(m3[t3]) }, o3.dataEncodedField && (i3.encoded = s3(m3[t3])), o3.dataContentField && (i3.content = d3(m3[t3])), o3.dataContentUrlField && (i3.contentUrl = u3(m3[t3])), o3.dataUrlField && (i3.url = p3(m3[t3])), o3.dataImageUrlField && (i3.imageUrl = c3(m3[t3])), o3.dataSpriteCssClass && (i3.spriteCssClass = h3(m3[t3])), f3[t3] = i3;
          if ("add" == e3.action) e3.index < r3.tabGroup.children().length ? r3.insertBefore(f3, r3.tabGroup.children().eq(e3.index)) : r3.append(f3);
          else if ("remove" == e3.action) for (t3 = 0; t3 < m3.length; t3++) r3.remove(e3.index);
          else "itemchange" == e3.action ? (t3 = r3.dataSource.view().indexOf(m3[0]), e3.field === o3.dataTextField && r3.tabGroup.children().eq(t3).find(".k-link").text(m3[0].get(e3.field)), e3.field === o3.dataUrlField && (r3._contentUrls[t3] = m3[0].get(e3.field))) : (r3.trigger("dataBinding"), r3.remove("li"), r3._contentUrls = [], r3.append(f3), r3.trigger("dataBound"));
        }, reload: function(t3) {
          t3 = this.tabGroup.find(t3);
          var n3 = this, i3 = n3._contentUrls;
          return t3.each(function() {
            var t4 = e2(this), a3 = t4.find("." + k2).data(D) || i3[t4.index()], r3 = n3.contentHolder(t4.index());
            a3 && n3.ajaxRequest(t4, r3, null, a3);
          }), n3;
        }, remove: function(t3) {
          var i3, a3 = this, r3 = typeof t3;
          return "string" === r3 ? t3 = a3.tabGroup.find(t3) : "number" === r3 && (t3 = a3.tabGroup.children().eq(t3)), i3 = t3.map(function() {
            var t4 = e2(this).index(), i4 = a3.contentElement(t4);
            return n2.destroy(i4), a3._removeUrlItem(t4), i4;
          }), t3.remove(), i3.empty(), i3.remove(), a3._updateContentElements(), a3.resize(true), a3;
        }, select: function(t3) {
          var n3 = this;
          return 0 === arguments.length ? n3.tabGroup.children("li.k-active") : (isNaN(t3) || (t3 = n3.tabGroup.children().get(t3)), t3 = n3.tabGroup.find(t3), e2(t3).each(function(t4, i3) {
            (i3 = e2(i3)).hasClass(z) || n3.trigger(T, { item: i3[0], contentElement: n3.contentHolder(i3.index())[0] }) || n3.activateTab(i3);
          }), n3);
        }, value: function(i3) {
          var a3 = this;
          if (i3 === t2) return a3.select().text();
          i3 != a3.value() && a3.tabGroup.children().each(function() {
            n2.trim(e2(this).text()) == i3 && a3.select(this);
          });
        }, _active: function() {
          var e3 = this.tabGroup.children().filter(".k-active");
          (e3 = e3[0] ? e3 : this._endItem("first"))[0] && this._current(e3);
        }, _animations: function(e3) {
          e3 && "animation" in e3 && !e3.animation && (e3.animation = { open: { effects: {} }, close: { effects: {} } });
        }, _appendUrlItem: function(e3) {
          this._contentUrls.push(e3);
        }, _attachEvents: function() {
          var e3 = this, t3 = e3.options;
          e3.wrapper.on(E + m2 + " mouseleave" + m2, ".k-tabstrip-items > .k-item:not(.k-disabled):not(.k-active)", e3._toggleHover).on("focus" + m2, e3._active.bind(e3)).on("blur" + m2, function() {
            e3._current(null);
          }), e3._keyDownProxy = e3._keydown.bind(e3), t3.navigatable && e3.wrapper.on("keydown" + m2, e3._keyDownProxy), e3.tabGroup.on(y + m2, ".k-disabled .k-link", false).on(y + m2, " > " + R, e3._itemClick.bind(e3));
        }, _click: function(e3) {
          var t3, n3, i3 = this, a3 = e3.find("." + k2), r3 = a3.attr(g2), o3 = i3.options.collapsible, s3 = e3.index(), l3 = i3.contentHolder(s3), d3 = e3.parent().children().filter(".k-focus");
          if (e3.closest(".k-widget")[0] == i3.wrapper[0]) {
            if (e3.is(".k-disabled" + (o3 ? "" : ",.k-active"))) return d3.removeClass(P), i3._focused = e3, e3.addClass(P), i3._current(e3), i3._scrollableModeActive && i3._scrollTabsToItem(e3), true;
            if (n3 = a3.data(D) || i3._contentUrls[s3] || r3 && ("#" == r3.charAt(r3.length - 1) || -1 != r3.indexOf("#" + i3.element[0].id + "-")), t3 = !r3 || n3, i3.tabGroup.children("[data-animating]").length) return t3;
            if (i3.trigger(T, { item: e3[0], contentElement: l3[0] })) return true;
            if (false !== t3) return o3 && e3.is(".k-active") ? (i3.deactivateTab(e3), true) : (i3.activateTab(e3) && (t3 = true), t3);
          }
        }, _create: function(t3) {
          var i3, a3, o3, s3 = this, d3 = false;
          return t3 = t3 instanceof n2.data.ObservableArray ? t3.toJSON() : t3, e2.isPlainObject(t3) || Array.isArray(t3) ? (t3 = Array.isArray(t3) ? t3 : [t3], d3 = true, i3 = r2(t3, function(n3, i4) {
            return s3._appendUrlItem(t3[i4].contentUrl || null), e2($.renderItem({ group: s3.tabGroup, item: l2(n3, { index: i4 }) }));
          }), a3 = r2(t3, function(t4, n3) {
            if ("string" == typeof t4.content || t4.contentUrl) return e2($.renderContent({ item: l2(t4, { index: n3 }) }));
          })) : (i3 = "string" == typeof t3 && "<" != t3[0] ? s3.element.find(t3) : e2(t3), a3 = e2(), i3.each(function() {
            if (/k-tabstrip-items/.test(this.parentNode.className)) {
              var t4 = s3.element.find("[id='" + this.getAttribute(B) + "']");
              o3 = t4;
            } else o3 = e2("<div class='" + I + "'/>");
            a3 = a3.add(o3);
          }), q(i3)), { tabs: i3, contents: a3, newTabsCreated: d3 };
        }, _current: function(e3) {
          var n3 = this._focused;
          if (e3 === t2) return n3;
          n3 && n3.removeClass(P), e3 && (e3.hasClass(z) || e3.addClass(P)), this._focused = e3;
        }, _dataSource: function() {
          var e3 = this;
          e3.dataSource && e3._refreshHandler ? e3.dataSource.unbind("change", e3._refreshHandler) : e3._refreshHandler = e3.refresh.bind(e3), e3.dataSource = n2.data.DataSource.create(e3.options.dataSource).bind("change", e3._refreshHandler);
        }, _elementId: function(e3, t3, i3) {
          var a3 = e3.attr("id"), r3 = this.element.attr("id"), o3 = n2.guid();
          if (!a3 || a3.indexOf(r3 + "-") > -1) {
            var s3 = (r3 || o3) + "-";
            return i3 && (s3 += "tab-"), s3 + (t3 + 1);
          }
          return a3;
        }, _endItem: function(e3) {
          return this.tabGroup.children(R)[e3]();
        }, _getItem: function(e3) {
          return this.tabGroup.children(O)[e3]();
        }, _initialActivate: function() {
          var e3 = this, t3 = e3.tabGroup.children("li.k-active"), n3 = e3.contentHolder(t3.index());
          t3[0] && n3.length > 0 && 0 === n3[0].childNodes.length && e3.activateTab(t3.eq(0));
        }, _item: function(e3, t3) {
          var n3;
          return n3 = t3 === v2 ? "last" : "first", e3 ? ((e3 = e3[t3]())[0] || (e3 = this.tabGroup.children(O)[n3]()), e3.hasClass(F) && e3.addClass(P), (e3.hasClass(F) || e3.hasClass(z)) && (this._focused = e3), e3) : this._endItem(n3);
        }, _itemClick: function(t3) {
          var i3 = this.wrapper[0];
          if (i3 !== document.activeElement) if (n2.support.browser.msie) try {
            i3.setActive();
          } catch (e3) {
            i3.focus();
          }
          else i3.focus();
          this._click(e2(t3.currentTarget)) && t3.preventDefault();
        }, _keydown: function(e3) {
          var t3, n3 = this, i3 = e3.keyCode, r3 = n3._current(), o3 = n3._isRtl, s3 = /top|bottom/.test(n3.options.tabPosition);
          if (e3.target == e3.currentTarget && r3) {
            if (i3 !== a2.DOWN || s3) if (i3 !== a2.UP || s3) if (i3 === a2.RIGHT && s3) t3 = o3 ? v2 : _2;
            else if (i3 === a2.LEFT && s3) t3 = o3 ? _2 : v2;
            else if (i3 == a2.ENTER || i3 == a2.SPACEBAR) n3._click(r3), e3.preventDefault();
            else {
              if (i3 == a2.HOME) return n3._click(n3._getItem("first")), void e3.preventDefault();
              if (i3 == a2.END) return n3._click(n3._getItem("last")), void e3.preventDefault();
            }
            else t3 = v2;
            else t3 = _2;
            t3 && (n3._click(n3._item(r3, t3)), e3.preventDefault());
          }
        }, _moveUrlItem: function(e3, t3) {
          this._contentUrls.splice(t3, 0, this._contentUrls.splice(e3, 1)[0]);
        }, _processContentUrls: function() {
          var t3 = this;
          t3._contentUrls.length ? t3.tabGroup.children(".k-item").each(function(n3, i3) {
            var a3 = t3._contentUrls[n3];
            "string" == typeof a3 && e2(i3).find(">." + k2).data(D, a3);
          }) : t3._contentUrls.length = t3.tabGroup.find("li.k-item").length;
        }, _removeUrlItem: function(e3) {
          this._contentUrls.splice(e3, 1);
        }, _resize: function() {
          this._scrollable();
        }, _scrollable: function() {
          var e3, t3, i3, a3, r3 = this, o3 = r3.options;
          if (r3._scrollableAllowed()) if (r3.wrapper.addClass("k-tabstrip-scrollable"), e3 = r3.wrapper[0].offsetWidth, (t3 = r3.tabGroup[0].scrollWidth) > e3 && !r3._scrollableModeActive) {
            r3._nowScrollingTabs = false, r3._isRtl = n2.support.isRtl(r3.element);
            var s3 = n2.support.touch ? "touchstart" : "mousedown", l3 = n2.support.touch ? "touchend" : "mouseup", d3 = n2.support.browser, u3 = r3._isRtl && !d3.msie && !d3.edge;
            r3.tabWrapper.prepend(K("prev", "k-i-arrow-60-left")), r3.tabWrapper.append(K("next", "k-i-arrow-60-right")), i3 = r3._scrollPrevButton = r3.tabWrapper.children(".k-tabstrip-prev"), a3 = r3._scrollNextButton = r3.tabWrapper.children(".k-tabstrip-next"), i3.on(s3 + m2, function() {
              r3._nowScrollingTabs = true, r3._scrollTabsByDelta(o3.scrollable.distance * (u3 ? 1 : -1));
            }), a3.on(s3 + m2, function() {
              r3._nowScrollingTabs = true, r3._scrollTabsByDelta(o3.scrollable.distance * (u3 ? -1 : 1));
            }), i3.add(a3).on(l3 + m2, function() {
              r3._nowScrollingTabs = false;
            }), r3._scrollableModeActive = true, r3._toggleScrollButtons();
          } else r3._scrollableModeActive && t3 <= e3 ? (r3._scrollableModeActive = false, r3.wrapper.removeClass("k-tabstrip-scrollable"), r3._scrollPrevButton.off().remove(), r3._scrollNextButton.off().remove()) : r3._scrollableModeActive ? r3._toggleScrollButtons() : r3.wrapper.removeClass("k-tabstrip-scrollable");
        }, _scrollableAllowed: function() {
          var e3 = this.options;
          return e3.scrollable && !e3.scrollable.distance && (e3.scrollable = { distance: 200 }), e3.scrollable && !isNaN(e3.scrollable.distance) && ("top" == e3.tabPosition || "bottom" == e3.tabPosition);
        }, _scrollTabsToItem: function(e3) {
          var t3, i3 = this, a3 = i3.tabGroup, r3 = n2.scrollLeft(a3), o3 = c2(e3), s3 = i3._isRtl ? e3.position().left : e3.position().left - a3.children().first().position().left, l3 = a3[0].offsetWidth, d3 = n2.support.browser;
          i3._isRtl && (d3.mozilla || d3.webkit && d3.version >= 85) && (r3 *= -1), i3._isRtl ? s3 < 0 ? t3 = r3 + s3 - (l3 - r3) : s3 + o3 > l3 && (t3 = r3 + s3 - o3) : r3 + l3 < s3 + o3 ? t3 = s3 + o3 - l3 : r3 > s3 && (t3 = s3), a3.finish().animate({ scrollLeft: t3 }, "fast", "linear", function() {
            i3._toggleScrollButtons();
          });
        }, _scrollTabsByDelta: function(e3) {
          var t3 = this, i3 = t3.tabGroup, a3 = n2.scrollLeft(i3), r3 = n2.support.browser;
          t3._isRtl && (r3.mozilla || r3.webkit && r3.version >= 85) && (a3 *= -1), i3.finish().animate({ scrollLeft: a3 + e3 }, "fast", "linear", function() {
            t3._nowScrollingTabs && !jQuery2.fx.off ? t3._scrollTabsByDelta(e3) : t3._toggleScrollButtons();
          });
        }, _tabPosition: function() {
          var e3 = this, t3 = e3.options.tabPosition;
          e3.wrapper.addClass("k-floatwrap k-tabstrip-" + t3), "bottom" == t3 && e3.tabWrapper.appendTo(e3.wrapper), "left" !== t3 && "right" !== t3 || e3.tabGroup.attr("aria-orientation", "vertical"), e3.resize(true);
        }, _toggleHover: function(t3) {
          e2(t3.currentTarget).toggleClass(H, t3.type == E);
        }, _toggleDisabled: function(t3, n3) {
          (t3 = this.tabGroup.find(t3)).each(function() {
            e2(this).toggleClass(F, !n3).attr(L, !n3);
          });
        }, _toggleScrollButtons: function() {
          var e3 = this, t3 = e3.tabGroup, i3 = n2.scrollLeft(t3);
          e3._scrollPrevButton.toggleClass("k-disabled", 0 === i3), e3._scrollNextButton.toggleClass("k-disabled", i3 === t3[0].scrollWidth - t3[0].offsetWidth);
        }, _updateClasses: function() {
          var n3, i3, a3, r3 = this, o3 = /top|bottom/.test(r3.options.tabPosition);
          r3.wrapper.addClass("k-widget k-tabstrip"), r3.tabGroup || (r3.tabGroup = r3.wrapper.children("ul"), r3.tabGroup.wrap("<div />"), r3.tabWrapper = r3.tabGroup.parent()), r3.tabGroup[0] || (r3.tabGroup = e2("<ul />").prependTo(r3.wrapper), r3.tabGroup.wrap("<div />"), r3.tabWrapper = r3.tabGroup.parent()), r3.tabWrapper.addClass("k-tabstrip-items-wrapper"), r3.tabWrapper.addClass(o3 ? "k-hstack" : "k-vstack"), r3.tabGroup.addClass("k-tabstrip-items k-reset"), (n3 = r3.tabGroup.find("li").addClass("k-tabstrip-item k-item")).length && (a3 = (i3 = n3.filter(".k-active").index()) >= 0 ? i3 : t2, r3.tabGroup.contents().filter(function() {
            return 3 == this.nodeType && !s2(this.nodeValue);
          }).remove()), i3 >= 0 && n3.eq(i3).addClass(N), r3.contentElements = r3.wrapper.children("div:not(.k-tabstrip-items-wrapper)"), r3.contentElements.addClass(I).eq(a3).addClass(z).css({ display: "block" }), n3.length && (q(n3), G(r3.tabGroup), r3._updateContentElements(true));
        }, _updateContentElements: function(t3) {
          var i3 = this, a3 = i3._contentUrls, r3 = i3.tabGroup.children(".k-item"), o3 = i3.wrapper.children("div:not(.k-tabstrip-items-wrapper)"), s3 = i3._elementId.bind(i3);
          o3.length && r3.length > o3.length ? o3.each(function(n3) {
            var i4, a4 = s3(e2(this), n3), o4 = r3.filter("[aria-controls=" + (a4 || 0) + "]")[0];
            !o4 && t3 && (o4 = r3[n3]), o4 && (o4.setAttribute(B, a4), i4 = o4.id = s3(e2(o4), n3, true), this.setAttribute(U, i4)), this.setAttribute("id", a4);
          }) : r3.each(function(t4) {
            var n3, r4 = o3.eq(t4), l3 = s3(r4, t4);
            this.setAttribute(B, l3), n3 = this.id = s3(e2(this), t4, true), !r4.length && a3[t4] ? e2("<div class='" + I + "'/>").appendTo(i3.wrapper).attr("id", l3) : (r4.attr("id", l3), e2(this).children(".k-loading")[0] || a3[t4] || e2("<span class='k-loading k-complete'/>").prependTo(this)), r4.attr("role", "tabpanel"), r4.attr("tabindex", "0"), r4.attr(U, n3), r4.filter(":not(.k-active)").attr(M, true);
          }), i3.contentElements = i3.contentAnimators = i3.wrapper.children("div:not(.k-tabstrip-items-wrapper)"), i3.tabsHeight = p2(i3.tabGroup) + parseInt(i3.wrapper.css("border-top-width"), 10) + parseInt(i3.wrapper.css("border-bottom-width"), 10), n2.kineticScrollNeeded && n2.mobile.ui.Scroller && (n2.touchScroller(i3.contentElements), i3.contentElements = i3.contentElements.children(".km-scroll-container"));
        }, _wrapper: function() {
          var e3 = this;
          e3.element.is("ul") ? e3.wrapper = e3.element.wrapAll("<div />").parent() : e3.wrapper = e3.element;
        } });
        l2($, { renderItem: function(e3) {
          e3 = l2({ tabStrip: {}, group: {} }, e3);
          var t3 = W.empty, n3 = e3.item;
          return W.item(l2(e3, { image: n3.imageUrl ? W.image : t3, sprite: n3.spriteCssClass ? W.sprite : t3, itemWrapper: W.itemWrapper }, j));
        }, renderContent: function(e3) {
          return W.content(l2(e3, j));
        } }), n2.ui.plugin($);
      }(window.kendo.jQuery), function(e2, t2) {
        var n2 = window.kendo, i2 = { format: "0", min: 0 }, a2 = ["px", "em"], r2 = ["solid", "dotted", "dashed", "double", "groove", "ridge", "inset", "outset", "initial", "inherit", "none", "hidden"], o2 = { dataSource: [{ className: "k-icon k-i-table-align-middle-left", value: "left" }, { className: "k-icon k-i-table-align-middle-center", value: "center" }, { className: "k-icon k-i-table-align-middle-right", value: "right" }, { className: "k-icon k-i-align-remove", value: "" }], dataTextField: "className", dataValueField: "value", template: "<span class='#: className #' title='#: tooltip #'></span>", valueTemplate: "<span class='k-align-group #: className #' title='#: tooltip #'></span>" }, s2 = { dataSource: [{ className: "k-icon k-i-table-align-top-left", value: "left top" }, { className: "k-icon k-i-table-align-top-center", value: "center top" }, { className: "k-icon k-i-table-align-top-right", value: "right top" }, { className: "k-icon k-i-table-align-middle-left", value: "left middle" }, { className: "k-icon k-i-table-align-middle-center", value: "center middle" }, { className: "k-icon k-i-table-align-middle-right", value: "right middle" }, { className: "k-icon k-i-table-align-bottom-left", value: "left bottom" }, { className: "k-icon k-i-table-align-bottom-center", value: "center bottom" }, { className: "k-icon k-i-table-align-bottom-right", value: "right bottom" }, { className: "k-icon k-i-align-remove", value: "" }], dataTextField: "className", dataValueField: "value", template: "<span class='#: className #' title='#: tooltip #'></span>", valueTemplate: "<span class='k-align-group #: className #' title='#: tooltip #'></span>" }, l2 = { dataSource: [{ className: "k-icon k-i-table-align-top-left", value: "left top" }, { className: "k-icon k-i-table-align-top-center", value: "center top" }, { className: "k-icon k-i-table-align-top-right", value: "right top" }, { className: "k-icon k-i-table-align-bottom-left", value: "left bottom" }, { className: "k-icon k-i-table-align-bottom-center", value: "center bottom" }, { className: "k-icon k-i-table-align-bottom-right", value: "right bottom" }, { className: "k-icon k-i-align-remove", value: "" }], dataTextField: "className", dataValueField: "value", template: "<span class='#: className #' title='#: tooltip #'></span>", valueTemplate: "<span class='k-align-group #: className #' title='#: tooltip #'></span>" }, d2 = n2.Class.extend({ init: function(e3) {
          this.options = e3;
        }, open: function() {
          var t3, i3 = this, a3 = i3.options, r3 = a3.dialogOptions, o3 = a3.table, s3 = a3.messages, l3 = n2.support.browser.msie;
          function d3(e3) {
            e3.preventDefault(), i3.destroy(), t3.destroy();
          }
          function u2(e3) {
            d3(e3), a3.closeCallback();
          }
          r3.close = u2, r3.title = s3.tableWizard, r3.visible = a3.visible;
          var c2 = (t3 = e2(i3._dialogTemplate(s3)).appendTo(document.body).kendoWindow(r3).closest(".k-window").toggleClass("k-rtl", a3.isRtl).end().find(".k-dialog-ok").on("click", function(e3) {
            i3.collectDialogValues(o3), d3(e3), i3.change && i3.change(), a3.closeCallback(o3);
          }).end().find(".k-dialog-close").on("click", u2).end().data("kendoWindow")).element;
          if (i3._initTabStripComponent(c2), i3._initTableViewComponents(c2, o3), i3._initCellViewComponents(c2, o3), i3._initAccessibilityViewComponents(c2, o3), t3.center(), t3.open(), l3) {
            var p2 = c2.closest(".k-window").height();
            c2.css("max-height", p2);
          }
        }, _initTabStripComponent: function(e3) {
          (this.components = {}).tabStrip = e3.find("#k-table-wizard-tabs").kendoTabStrip({ animation: false }).data("kendoTabStrip");
        }, collectDialogValues: function() {
          var e3 = this, t3 = e3.options.table;
          e3._collectTableViewValues(t3), e3._collectCellViewValues(t3), e3._collectAccessibilityViewValues(t3);
        }, _collectTableViewValues: function(e3) {
          var t3 = this.components.tableView, n3 = e3.tableProperties;
          n3.width = t3.width.value(), n3.widthUnit = t3.widthUnit.value(), n3.height = t3.height.value(), n3.columns = t3.columns.value(), n3.rows = t3.rows.value(), n3.heightUnit = t3.heightUnit.value(), n3.cellSpacing = t3.cellSpacing.value(), n3.cellPadding = t3.cellPadding.value(), n3.alignment = t3.alignment.value(), n3.bgColor = t3.bgColor.value(), n3.className = t3.className.value, n3.id = t3.id.value, n3.borderWidth = t3.borderWidth.value(), n3.borderColor = t3.borderColor.value(), n3.borderStyle = t3.borderStyle.value(), n3.collapseBorders = t3.collapseBorders.checked;
        }, _collectCellViewValues: function(e3) {
          var t3 = e3.cellProperties = {}, n3 = this.components.cellView;
          t3.selectAllCells = n3.selectAllCells.checked, t3.width = n3.width.value(), t3.widthUnit = n3.widthUnit.value(), t3.height = n3.height.value(), t3.heightUnit = n3.heightUnit.value(), t3.cellMargin = n3.cellMargin.value(), t3.cellPadding = n3.cellPadding.value(), t3.alignment = n3.alignment.value(), t3.bgColor = n3.bgColor.value(), t3.className = n3.className.value, t3.id = n3.id.value, t3.borderWidth = n3.borderWidth.value(), t3.borderColor = n3.borderColor.value(), t3.borderStyle = n3.borderStyle.value(), t3.wrapText = n3.wrapText.checked, t3.width || (t3.selectAllCells = true, t3.width = 100 / e3.tableProperties.columns, t3.widthUnit = "%");
        }, _collectAccessibilityViewValues: function(e3) {
          var t3 = e3.tableProperties, n3 = this.components.accessibilityView;
          t3.captionContent = n3.captionContent.value, t3.captionAlignment = n3.captionAlignment.value(), t3.summary = n3.summary.value, t3.cellsWithHeaders = n3.cellsWithHeaders.value(), t3.headerRows = n3.headerRows.value(), t3.headerColumns = n3.headerColumns.value();
        }, _addUnit: function(t3, n3) {
          n3 && -1 == e2.inArray(n3, t3) && t3.push(n3);
        }, _initTableViewComponents: function(e3, t3) {
          var n3 = this, i3 = n3.components.tableView = {}, o3 = t3.tableProperties = t3.tableProperties || {};
          o3.borderStyle = o3.borderStyle || "";
          n3._addUnit(a2, o3.widthUnit), n3._addUnit(a2, o3.heightUnit), n3._initNumericTextbox(e3.find("#k-editor-table-width"), "width", o3, i3), n3._initNumericTextbox(e3.find("#k-editor-table-height"), "height", o3, i3), n3._initNumericTextbox(e3.find("#k-editor-table-columns"), "columns", o3, i3, { min: 1, value: 4, change: function(e4) {
            var t4 = n3.components.accessibilityView.headerColumns, i4 = t4.value(), a3 = e4.sender.value();
            a3 < i4 && t4.value(a3), t4.max(a3);
          } }), n3._initNumericTextbox(e3.find("#k-editor-table-rows"), "rows", o3, i3, { min: 1, value: 4, change: function(e4) {
            var t4 = n3.components.accessibilityView.headerRows, i4 = t4.value(), a3 = e4.sender.value();
            a3 < i4 && t4.value(a3), t4.max(a3);
          } }), n3._initDropDownList(e3.find("#k-editor-table-width-type"), "widthUnit", o3, i3, a2), n3._initDropDownList(e3.find("#k-editor-table-height-type"), "heightUnit", o3, i3, a2), n3._initNumericTextbox(e3.find("#k-editor-table-cell-spacing"), "cellSpacing", o3, i3), n3._initNumericTextbox(e3.find("#k-editor-table-cell-padding"), "cellPadding", o3, i3), n3._initTableAlignmentDropDown(e3.find("#k-editor-table-alignment"), o3), n3._initColorPicker(e3.find("#k-editor-table-bg"), "bgColor", o3, i3), n3._initInput(e3.find("#k-editor-css-class"), "className", o3, i3), n3._initInput(e3.find("#k-editor-id"), "id", o3, i3), n3._initNumericTextbox(e3.find("#k-editor-border-width"), "borderWidth", o3, i3), n3._initColorPicker(e3.find("#k-editor-border-color"), "borderColor", o3, i3), n3._initBorderStyleDropDown(e3.find("#k-editor-border-style"), "borderStyle", o3, i3, r2), n3._initCheckbox(e3.find("#k-editor-collapse-borders"), "collapseBorders", o3, i3);
        }, _initCellViewComponents: function(e3, t3) {
          var n3 = this.components.cellView = {};
          t3.selectedCells = t3.selectedCells = t3.selectedCells || [];
          var i3 = t3.selectedCells[0] || { borderStyle: "", wrapText: true };
          this._addUnit(a2, i3.widthUnit), this._addUnit(a2, i3.heightUnit), this._initCheckbox(e3.find("#k-editor-selectAllCells"), "selectAllCells", t3.tableProperties, n3), this._initNumericTextbox(e3.find("#k-editor-cell-width"), "width", i3, n3), this._initNumericTextbox(e3.find("#k-editor-cell-height"), "height", i3, n3), this._initDropDownList(e3.find("#k-editor-cell-width-type"), "widthUnit", i3, n3, a2), this._initDropDownList(e3.find("#k-editor-cell-height-type"), "heightUnit", i3, n3, a2), this._initNumericTextbox(e3.find("#k-editor-table-cell-margin"), "cellMargin", i3, n3), this._initNumericTextbox(e3.find("#k-editor-table-cells-padding"), "cellPadding", i3, n3), this._initCellAlignmentDropDown(e3.find("#k-editor-cell-alignment"), i3), this._initColorPicker(e3.find("#k-editor-cell-bg"), "bgColor", i3, n3), this._initInput(e3.find("#k-editor-cell-css-class"), "className", i3, n3), this._initInput(e3.find("#k-editor-cell-id"), "id", i3, n3), this._initNumericTextbox(e3.find("#k-editor-cell-border-width"), "borderWidth", i3, n3), this._initColorPicker(e3.find("#k-editor-cell-border-color"), "borderColor", i3, n3), this._initBorderStyleDropDown(e3.find("#k-editor-cell-border-style"), "borderStyle", i3, n3, r2), this._initCheckbox(e3.find("#k-editor-wrap-text"), "wrapText", i3, n3);
        }, _initAccessibilityViewComponents: function(e3, t3) {
          var n3 = this.components.accessibilityView = {}, i3 = t3.tableProperties;
          this._initInput(e3.find("#k-editor-table-caption"), "captionContent", i3, n3), this._initAccessibilityAlignmentDropDown(e3.find("#k-editor-accessibility-alignment"), i3), this._initInput(e3.find("#k-editor-accessibility-summary"), "summary", i3, n3), this._initAssociationDropDown(e3.find("#k-editor-cells-headers"), "cellsWithHeaders", { valuePrimitive: true }, i3, n3), this._initNumericTextbox(e3.find("#k-editor-table-header-rows"), "headerRows", i3, n3, { max: i3.rows || 4 }), this._initNumericTextbox(e3.find("#k-editor-table-header-columns"), "headerColumns", i3, n3, { max: i3.columns || 4 });
        }, _initNumericTextbox: function(t3, n3, a3, r3, o3) {
          var s3 = r3[n3] = t3.kendoNumericTextBox(o3 ? e2.extend({}, i2, o3) : i2).data("kendoNumericTextBox");
          n3 in a3 && s3.value(parseInt(a3[n3], 10));
        }, _initDropDownList: function(e3, t3, n3, i3, a3) {
          var r3 = i3[t3] = e3.kendoDropDownList({ dataSource: a3 }).data("kendoDropDownList");
          this._setComponentValue(r3, n3, t3);
        }, _initBorderStyleDropDown: function(e3, t3, n3, i3, a3) {
          var r3 = i3[t3] = e3.kendoDropDownList({ dataSource: a3, optionLabel: this.options.messages.borderNone }).data("kendoDropDownList");
          this._setComponentValue(r3, n3, t3);
        }, _initTableAlignmentDropDown: function(e3, t3) {
          var n3 = this.options.messages, i3 = this.components.tableView, a3 = o2.dataSource;
          a3[0].tooltip = n3.alignLeft, a3[1].tooltip = n3.alignCenter, a3[2].tooltip = n3.alignRight, a3[3].tooltip = n3.alignRemove, this._initAlignmentDropDown(e3, o2, "alignment", t3, i3);
        }, _initCellAlignmentDropDown: function(e3, t3) {
          var n3 = this.options.messages, i3 = this.components.cellView, a3 = s2.dataSource;
          a3[0].tooltip = n3.alignLeftTop, a3[1].tooltip = n3.alignCenterTop, a3[2].tooltip = n3.alignRightTop, a3[3].tooltip = n3.alignLeftMiddle, a3[4].tooltip = n3.alignCenterMiddle, a3[5].tooltip = n3.alignRightMiddle, a3[6].tooltip = n3.alignLeftBottom, a3[7].tooltip = n3.alignCenterBottom, a3[8].tooltip = n3.alignRightBottom, a3[9].tooltip = n3.alignRemove, this._initAlignmentDropDown(e3, s2, "alignment", t3, i3);
        }, _initAccessibilityAlignmentDropDown: function(e3, t3) {
          var n3 = this.options.messages, i3 = this.components.accessibilityView, a3 = l2.dataSource;
          a3[0].tooltip = n3.alignLeftTop, a3[1].tooltip = n3.alignCenterTop, a3[2].tooltip = n3.alignRightTop, a3[3].tooltip = n3.alignLeftBottom, a3[4].tooltip = n3.alignCenterBottom, a3[5].tooltip = n3.alignRightBottom, a3[6].tooltip = n3.alignRemove, this._initAlignmentDropDown(e3, l2, "captionAlignment", t3, i3);
        }, _initAlignmentDropDown: function(e3, t3, n3, i3, a3) {
          var r3 = a3[n3] = e3.kendoDropDownList(t3).data("kendoDropDownList");
          r3.list.addClass("k-align").css("width", "110px"), this._setComponentValue(r3, i3, n3);
        }, _initAssociationDropDown: function(e3, t3, n3, i3, a3) {
          var r3 = a3[t3] = e3.kendoDropDownList(n3).data("kendoDropDownList");
          this._setComponentValue(r3, i3, t3);
        }, _setComponentValue: function(e3, t3, n3) {
          n3 in t3 && e3.value(t3[n3]);
        }, _initColorPicker: function(e3, t3, n3, i3) {
          var a3 = i3[t3] = e3.kendoColorPicker({ buttons: false, clearButton: true }).data("kendoColorPicker");
          n3[t3] && a3.value(n3[t3]);
        }, _initInput: function(e3, t3, n3, i3) {
          var a3 = i3[t3] = e3.get(0);
          t3 in n3 && (a3.value = n3[t3]);
        }, _initCheckbox: function(e3, t3, n3, i3) {
          var a3 = i3[t3] = e3.get(0);
          t3 in n3 && (a3.checked = n3[t3]);
        }, destroy: function() {
          this._destroyComponents(this.components.tableView), this._destroyComponents(this.components.cellView), this._destroyComponents(this.components.accessibilityView), this._destroyComponents(this.components), delete this.components;
        }, _destroyComponents: function(e3) {
          for (var t3 in e3) e3[t3].destroy && e3[t3].destroy(), delete e3[t3];
        }, _dialogTemplate: function(e3) {
          return n2.template('<div class="k-editor-dialog k-editor-table-wizard-dialog k-action-window k-popup-edit-form"><div class="k-edit-form-container"><div id="k-table-wizard-tabs" class="k-root-tabs"><ul><li class="k-active">#= messages.tableTab #</li><li>#= messages.cellTab #</li><li>#= messages.accessibilityTab #</li></ul><div id="k-table-properties"><div class="k-edit-label"><label for="k-editor-table-width">#= messages.width #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-width" /><input id="k-editor-table-width-type" aria-label="#= messages.units #" /></div><div class="k-edit-label"><label for="k-editor-table-height">#= messages.height #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-height" /><input id="k-editor-table-height-type" aria-label="#= messages.units #" /></div><div class="k-edit-label"><label for="k-editor-table-columns">#= messages.columns #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-columns" /></div><div class="k-edit-label"><label for="k-editor-table-rows">#= messages.rows #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-rows" /></div><div class="k-edit-label"><label for="k-editor-table-cell-spacing">#= messages.cellSpacing #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-cell-spacing" /></div><div class="k-edit-label"><label for="k-editor-table-cell-padding">#= messages.cellPadding #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-cell-padding" /></div><div class="k-edit-label"><label for="k-editor-table-alignment">#= messages.alignment #</label></div><div class="k-edit-field"><input id="k-editor-table-alignment" class="k-align" /></div><div class="k-edit-label"><label for="k-editor-table-bg">#= messages.background #</label></div><div class="k-edit-field"><input id="k-editor-table-bg" /></div><div class="k-edit-label"><label for="k-editor-css-class">#= messages.cssClass #</label></div><div class="k-edit-field"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input id="k-editor-css-class" class="k-input-inner" type="text" /></span></div><div class="k-edit-label"><label for="k-editor-id">#= messages.id #</label></div><div class="k-edit-field"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input id="k-editor-id" class="k-input-inner" type="text" /></span></div><div class="k-edit-label"><label for="k-editor-border-width">#= messages.border #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-border-width" /><input id="k-editor-border-color" /></div><div class="k-edit-label"><label for="k-editor-border-style">#= messages.borderStyle #</label></div><div class="k-edit-field"><input id="k-editor-border-style" /></div><div class="k-edit-label">&nbsp;</div><div class="k-edit-field"><input id="k-editor-collapse-borders" type="checkbox" class="k-checkbox k-checkbox-md k-rounded-md" /><label for="k-editor-collapse-borders" class="k-checkbox-label">#= messages.collapseBorders #</label></div></div><div id="k-cell-properties"><div class="k-edit-field"><input id="k-editor-selectAllCells" type="checkbox" class="k-checkbox k-checkbox-md k-rounded-md" /><label for="k-editor-selectAllCells" class="k-checkbox-label">#= messages.selectAllCells #</label></div><div class="k-edit-label"><label for="k-editor-cell-width">#= messages.width #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-cell-width" /><input id="k-editor-cell-width-type" aria-label="#= messages.units #" /></div><div class="k-edit-label"><label for="k-editor-cell-height">#= messages.height #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-cell-height" /><input id="k-editor-cell-height-type" aria-label="#= messages.units #" /></div><div class="k-edit-label"><label for="k-editor-table-cell-margin">#= messages.cellMargin #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-cell-margin" /></div><div class="k-edit-label"><label for="k-editor-table-cells-padding">#= messages.cellPadding #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-cells-padding" /></div><div class="k-edit-label"><label for="k-editor-cell-alignment">#= messages.alignment #</label></div><div class="k-edit-field"><input id="k-editor-cell-alignment" class="k-align" /></div><div class="k-edit-label"><label for="k-editor-cell-bg">#= messages.background #</label></div><div class="k-edit-field"><input id="k-editor-cell-bg" /></div><div class="k-edit-label"><label for="k-editor-cell-css-class">#= messages.cssClass #</label></div><div class="k-edit-field"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input id="k-editor-cell-css-class" class="k-input-inner" type="text" /></span></div><div class="k-edit-label"><label for="k-editor-cell-id">#= messages.id #</label></div><div class="k-edit-field"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input id="k-editor-cell-id" class="k-input-inner" type="text" /></span></div><div class="k-edit-label"><label for="k-editor-cell-border-width">#= messages.border #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-cell-border-width" /><input id="k-editor-cell-border-color" /></div><div class="k-edit-label"><label for="k-editor-cell-border-style">#= messages.borderStyle #</label></div><div class="k-edit-field"><input id="k-editor-cell-border-style" /></div><div class="k-edit-label">&nbsp;</div><div class="k-edit-field"><input id="k-editor-wrap-text" type="checkbox" class="k-checkbox k-checkbox-md k-rounded-md" /><label for="k-editor-wrap-text" class="k-checkbox-label">#= messages.wrapText #</label></div></div><div id="k-accessibility-properties"><div class="k-edit-label"><label for="k-editor-table-header-rows">#= messages.headerRows #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-header-rows" /></div><div class="k-edit-label"><label for="k-editor-table-header-columns">#= messages.headerColumns #</label></div><div class="k-edit-field"><input type="numeric" id="k-editor-table-header-columns" /></div><div class="k-edit-label"><label for="k-editor-table-caption">#= messages.caption #</label></div><div class="k-edit-field"><span class="k-textbox k-input k-input-md k-rounded-md k-input-solid"><input id="k-editor-table-caption" class="k-input-inner" type="text"/></span></div><div class="k-edit-label"><label for="k-editor-accessibility-alignment">#= messages.alignment #</label></div><div class="k-edit-field"><input id="k-editor-accessibility-alignment" class="k-align" /></div><div class="k-edit-label"><label for="k-editor-accessibility-summary">#= messages.summary #</label></div><div class="k-edit-field"><span class="k-input k-textarea k-input-solid k-input-md k-rounded-md"><textarea id="k-editor-accessibility-summary" rows="5" class="k-input-inner k-editor-accessibility-summary" placeholder="#= messages.tableSummaryPlaceholder #"></textarea></span></div><div class="k-edit-label"><label for="k-editor-cells-headers">#= messages.associateCellsWithHeaders #</label></div><div class="k-edit-field"><select id="k-editor-cells-headers"><option value="none">#= messages.associateNone #</option><option value="scope">#= messages.associateScope #</option><option value="ids">#= messages.associateIds #</option></select></div></div></div><div class="k-edit-buttons"><button class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary k-dialog-ok"><span class="k-button-text">#= messages.dialogOk #</span></button><button class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-dialog-close"><span class="k-button-text">#= messages.dialogCancel #</span></button></div></div></div>')({ messages: e3 });
        } });
        n2.ui.editor.TableWizardDialog = d2;
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2._activeElement, r2 = n2.support.touch && n2.support.mobileOS, o2 = Array.isArray, s2 = n2.data.HierarchicalDataSource, l2 = "mousedown", d2 = "click", u2 = e2.extend, c2 = e2.each, p2 = n2.template, h2 = n2.keys, f2 = i2.Widget, m2 = /^(ul|a|div)$/i, g2 = ".kendoMenu", v2 = "open", _2 = "k-menu", b2 = "k-link k-menu-link", k2 = ".k-link", w = ".k-menu-expand-arrow-icon", y = "k-last", x = "close", C = "timer", T = "k-first", S = "k-image", I = "select", D = "zIndex", E = "activate", A = "deactivate", F = "touchstart" + g2 + " MSPointerDown" + g2 + " pointerdown" + g2, z = n2.support.pointers, P = n2.support.msPointers, H = P || z, N = "change", R = "error", O = n2.support.touch ? "touchstart" : "", M = z ? "pointerover" : P ? "MSPointerOver" : "mouseenter", B = z ? "pointerout" : P ? "MSPointerOut" : "mouseleave", L = "DOMMouseScroll" + g2 + " mousewheel" + g2, V = n2.support.resize + g2, U = "group", W = "groupparent", j = e2(document.documentElement), q = "kendoPopup", G = "k-hover", K = "k-focus", $ = "k-disabled", Y = ".k-menu", Q = ".k-menu-group", X = ".k-animation-container", J = ".k-menu-group,.k-animation-container", Z = ":not(.k-list) > .k-item:not([role='treeitem'])", ee = ".k-item", te = ".k-item:not(.k-disabled)", ne = ":not(.k-item.k-separator)", ie = ".k-menu-scroll-button", ae = { 2: 1, touch: 1 }, re = "dataBound", oe = "aria-expanded", se = "role", le = { text: "dataTextField", url: "dataUrlField", spriteCssClass: "dataSpriteCssClassField", imageUrl: "dataImageUrlField", imageAttr: "dataImageAttrField", content: "dataContentField" }, de = { wrapperCssClass: function(e3, t3) {
          var n3 = "k-item k-menu-item", i3 = t3.index;
          return false === t3.enabled && (n3 += " k-disabled"), e3.firstLevel && 0 === i3 && (n3 += " k-first"), i3 == e3.length - 1 && (n3 += " k-last"), t3.cssClass && (n3 += " " + t3.cssClass), t3.attr && t3.attr.hasOwnProperty("class") && (n3 += " " + t3.attr.class), t3.selected && (n3 += " k-selected"), n3;
        }, itemCssAttributes: function(e3) {
          var t3 = "", n3 = e3.attr || {};
          for (var i3 in n3) n3.hasOwnProperty(i3) && "class" !== i3 && (t3 += i3 + '="' + n3[i3] + '" ');
          return t3;
        }, imageCssAttributes: function(e3) {
          var t3 = "", n3 = e3 && e3.toJSON ? e3.toJSON() : {};
          for (var i3 in n3.class ? n3.class += " " + S : n3.class = S, n3) n3.hasOwnProperty(i3) && (t3 += i3 + '="' + n3[i3] + '" ');
          return t3;
        }, contentCssAttributes: function(e3) {
          var t3 = "", n3 = e3.contentAttr || {}, i3 = "k-content k-group k-menu-group k-menu-group-md";
          for (var a3 in n3.class ? n3.class += " " + i3 : n3.class = i3, n3) n3.hasOwnProperty(a3) && (t3 += a3 + '="' + n3[a3] + '" ');
          return t3;
        }, textClass: function() {
          return b2;
        }, arrowClass: function(e3, t3) {
          var n3 = "k-menu-expand-arrow-icon k-icon";
          return t3.horizontal ? n3 += " k-i-arrow-s" : n3 += " k-i-arrow-e", n3;
        }, groupAttributes: function(e3) {
          return true !== e3.expanded ? " style='display:none'" : "";
        }, groupCssClass: function() {
          return "k-group k-menu-group k-menu-group-md";
        }, content: function(e3) {
          return e3.content ? e3.content : "&nbsp;";
        } };
        function ue(t3, n3) {
          try {
            return e2.contains(t3, n3);
          } catch (e3) {
            return false;
          }
        }
        function ce(t3) {
          (t3 = e2(t3)).attr(n2.attr("omit-wrap")) || (t3.addClass("k-item k-menu-item").children("img").addClass(S), t3.children("a").addClass(b2).children("img").addClass(S), t3.filter(":not([disabled])"), t3.filter(".k-separator").removeClass("k-menu-item").addClass("k-menu-separator").empty().append("&nbsp;"), t3.filter("li[disabled]").addClass($).prop("disabled", false).attr("aria-disabled", true), t3.filter("[role]").length || t3.attr(se, "menuitem"), t3.children(k2).length || t3.contents().filter(function() {
            return !(this.nodeName.match(m2) || 3 === this.nodeType && !n2.trim(this.nodeValue));
          }).wrapAll("<span class='" + b2 + "'></span>").filter(function(e3, t4) {
            return 3 === t4.nodeType;
          }).wrap("<span class='k-menu-link-text'></span>"), pe(t3), he(t3));
        }
        function pe(t3) {
          (t3 = e2(t3)).find("> .k-link > .k-menu-expand-arrow > [class*=k-i-arrow]:not(.k-sprite)").parent().remove(), t3.filter(":has(.k-menu-group)").children(".k-link:not(:has([class*=k-i-arrow]:not(.k-sprite)))").each(function() {
            var t4 = e2(this), i3 = function(e3) {
              var t5, i4 = e3.parent().parent(), a3 = n2.support.isRtl(i4);
              t5 = i4.hasClass(_2 + "-horizontal") ? "k-i-arrow-s" : a3 ? "k-i-arrow-w" : "k-i-arrow-e";
              return t5;
            }(t4);
            t4.append("<span aria-hidden='true' class='k-menu-expand-arrow'><span class='k-menu-expand-arrow-icon k-icon " + i3 + "'></span></span>");
          });
        }
        function he(t3) {
          (t3 = e2(t3)).filter(".k-first:not(:first-child)").removeClass(T), t3.filter(".k-last:not(:last-child)").removeClass(y), t3.filter(":first-child").addClass(T), t3.filter(":last-child").addClass(y);
        }
        function fe(e3) {
          if (e3 && e3.length) for (var t3 in e3) {
            var n3 = e3.eq(t3);
            n3.find("ul").length ? n3.attr("aria-haspopup", true) : n3.removeAttr("aria-haspopup");
          }
        }
        function me(e3) {
          if (!e3.hasClass(_2)) return e3.parentsUntil("." + _2, "li");
        }
        function ge(t3, i3) {
          var a3 = function(e3) {
            var t4 = e3.select, i4 = n2.isFunction;
            if (t4 && i4(t4)) return t4;
            return null;
          }(i3);
          a3 && function(t4, n3) {
            e2(t4).children(".k-link").data({ selectHandler: n3 });
          }(t3, a3), i3.items && e2(t3).children("ul").children("li").each(function(e3) {
            ge(this, i3.items[e3]);
          });
        }
        function ve(e3) {
          return e3 ? "li[data-groupparent='" + e3 + "']" : "li[data-groupparent]";
        }
        function _e(e3) {
          var t3 = e3 ? "[data-group='" + e3 + "']" : "[data-group]";
          return "ul" + t3 + ",div" + t3;
        }
        function be(t3, n3) {
          var i3 = t3.find(ve()), a3 = [];
          return i3.each(function(i4, r3) {
            for (var o3 = (r3 = e2(r3)).data(W), s3 = t3; o3; ) (s3 = n3.find(_e(o3) + ":visible")).length && a3.push(s3), o3 = (r3 = s3.find(ve())).data(W);
          }), a3;
        }
        function ke(t3, n3) {
          var i3 = t3.data(U);
          return i3 ? n3.find(ve(i3)) : e2([]);
        }
        function we(t3, n3) {
          var i3 = t3.data(W);
          return i3 ? n3.children(X).children(_e(i3)) : e2([]);
        }
        function ye(e3, t3) {
          for (var n3 = 0, i3 = e3.parentNode; i3 && !isNaN(i3[t3]); ) n3 += i3[t3], i3 = i3.parentNode;
          return n3;
        }
        function xe(e3) {
          return H && e3.originalEvent && e3.originalEvent.pointerType in ae;
        }
        function Ce(e3) {
          e3.contents().filter(function() {
            return "LI" != this.nodeName;
          }).remove();
        }
        var Te = n2.ui.DataBoundWidget.extend({ init: function(e3, t3) {
          var i3 = this;
          f2.fn.init.call(i3, e3, t3), e3 = i3.wrapper = i3.element, t3 = i3.options, i3._accessors(), i3._templates(), i3._dataSource(), i3._updateClasses(), i3._animations(t3), i3.nextItemZIndex = 100, i3._tabindex(), i3._initOverflow(t3), i3._attachMenuEventsHandlers(), t3.openOnClick && (i3.clicked = false), e3.attr(se, "menubar"), e3[0].id && (i3._ariaId = n2.format("{0}_mn_active", e3[0].id)), n2.notify(i3);
        }, events: [v2, x, E, A, I, re], options: { name: "Menu", animation: { open: { duration: 200 }, close: { duration: 100 } }, orientation: "horizontal", direction: "default", openOnClick: false, closeOnClick: true, hoverDelay: 100, scrollable: false, popupCollision: t2 }, _initData: function() {
          var e3 = this;
          e3.dataSource && (e3.angular("cleanup", function() {
            return { elements: e3.element.children() };
          }), e3.element.empty(), e3.append(e3.dataSource.view(), e3.element), e3.angular("compile", function() {
            return { elements: e3.element.children() };
          }));
        }, _attachMenuEventsHandlers: function() {
          var t3 = this, n3 = t3.element, i3 = t3.options, a3 = t3._overflowWrapper();
          t3._checkActiveProxy = t3._checkActiveElement.bind(t3), (a3 || n3).on(F, ee, t3._focusHandler.bind(t3)).on(d2 + g2, ".k-item.k-disabled", false).on(d2 + g2, ee, t3._click.bind(t3)).on(F + " " + l2 + g2, ".k-content", t3._preventClose.bind(t3)).on(M + g2, te, t3._mouseenter.bind(t3)).on(B + g2, te, t3._mouseleave.bind(t3)).on(l2 + g2, te, t3._mousedown.bind(t3)).on(O + g2 + " " + M + g2 + " " + B + g2 + " " + l2 + g2 + " " + d2 + g2, ".k-item:not(.k-disabled) > .k-link", t3._toggleHover.bind(t3)), n3.on("keydown" + g2, t3._keydown.bind(t3)).on("focus" + g2, t3._focus.bind(t3)).on("focus" + g2, ".k-content", t3._focus.bind(t3)).on("blur" + g2, t3._removeHoverItem.bind(t3)).on("blur" + g2, "[tabindex]", t3._checkActiveProxy), a3 && a3.on(B + g2, J, t3._mouseleavePopup.bind(t3)).on(M + g2, J, t3._mouseenterPopup.bind(t3)), i3.openOnClick && (t3._documentClickHandler = t3._documentClick.bind(t3), e2(document).on("click", t3._documentClickHandler));
        }, _detachMenuEventsHandlers: function() {
          var t3 = this, n3 = t3._overflowWrapper();
          n3 && n3.off(g2), t3.element.off(g2), t3._documentClickHandler && e2(document).off("click", t3._documentClickHandler);
        }, _initOverflow: function(t3) {
          var n3, i3, a3 = this, r3 = "horizontal" == t3.orientation;
          if (t3.scrollable) {
            a3._openedPopups = {}, a3._scrollWrapper = a3.element.wrap("<div class='k-menu-scroll-wrapper k-" + t3.orientation + "'></div>").parent(), r3 && Ce(a3.element), n3 = e2(a3.templates.scrollButton({ direction: r3 ? "left" : "up" })), i3 = e2(a3.templates.scrollButton({ direction: r3 ? "right" : "down" })), n3.add(i3).appendTo(a3._scrollWrapper), a3._initScrolling(a3.element, n3, i3, r3);
            var o3 = a3.element.outerWidth(), s3 = a3.element[0].style.width;
            s3 = "auto" === s3 ? "" : s3, r3 && e2(window).on(V, function() {
              setTimeout(function() {
                a3._setOverflowWrapperWidth(o3, s3), a3._toggleScrollButtons(a3.element, n3, i3, r3);
              }, 300);
            }), a3._setOverflowWrapperWidth(o3, s3), a3._toggleScrollButtons(a3.element, n3, i3, r3);
          }
        }, _overflowWrapper: function() {
          return this._scrollWrapper || this._popupsWrapper;
        }, _setOverflowWrapperWidth: function(e3, t3) {
          var n3 = this, i3 = n3._scrollWrapper.css("width");
          n3._scrollWrapper.css({ width: "" });
          var a3 = n3._scrollWrapper.outerWidth();
          n3._scrollWrapper.css({ width: i3 });
          var r3 = n3.element.outerWidth(), o3 = n3.element[0].offsetWidth - n3.element[0].clientWidth;
          if (r3 != a3 && a3 > 0) {
            var s3 = t3 ? Math.min(e3, a3) : a3;
            n3.element.width(s3 - o3), n3._scrollWrapper.width(s3);
          }
        }, _reinitOverflow: function(e3) {
          var t3 = this;
          (e3.scrollable && !t3.options.scrollable || !e3.scrollable && t3.options.scrollable || e3.scrollable && t3.options.scrollable && e3.scrollable.distance != t3.options.scrollable.distance || e3.orientation != t3.options.orientation) && (t3._detachMenuEventsHandlers(), t3._destroyOverflow(), t3._initOverflow(e3), t3._attachMenuEventsHandlers());
        }, _destroyOverflow: function() {
          var n3 = this, i3 = n3._overflowWrapper();
          i3 && (i3.off(g2), i3.find(ie).off(g2).remove(), i3.children(X).each(function(t3, n4) {
            var a3 = e2(n4).children(Q);
            a3.off(L);
            var r3 = ke(a3, i3);
            r3.length && r3.append(n4);
          }), i3.find(ve()).removeAttr("data-groupparent"), i3.find(_e()).removeAttr("data-group"), n3.element.off(L), e2(window).off(V), i3.contents().unwrap(), n3._scrollWrapper = n3._popupsWrapper = n3._openedPopups = t2);
        }, _initScrolling: function(t3, i3, a3, o3) {
          var s3 = this, l3 = s3.options.scrollable, d3 = s3.isNumeric(l3.distance) ? l3.distance : 50, u3 = d3 / 2, c3 = "-=" + d3, p3 = "+=" + d3, h3 = "-=" + 2 * d3, f3 = "+=" + 2 * d3, m3 = false, v3 = false, _3 = function(e3) {
            var n3 = o3 ? { scrollLeft: e3 } : { scrollTop: e3 };
            t3.finish().animate(n3, "fast", "linear", function() {
              m3 && _3(e3);
            }), s3._toggleScrollButtons(t3, i3, a3, o3);
          }, b3 = function(e3) {
            m3 || v3 || (_3(e3.data.direction), m3 = true);
          }, k3 = function(n3) {
            var l4 = o3 ? { scrollLeft: n3.data.direction } : { scrollTop: n3.data.direction };
            v3 = function(e3) {
              var t4 = e3.originalEvent;
              return r2 && /touch/i.test(t4.type || "");
            }(n3) || xe(n3), t3.stop().animate(l4, "fast", "linear", function() {
              v3 ? (s3._toggleScrollButtons(t3, i3, a3, o3), m3 = true) : e2(n3.currentTarget).trigger(M);
            }), m3 = false, n3.stopPropagation(), n3.preventDefault();
          };
          i3.on(M + g2, { direction: c3 }, b3).on(n2.eventMap.down + g2, { direction: h3 }, k3), a3.on(M + g2, { direction: p3 }, b3).on(n2.eventMap.down + g2, { direction: f3 }, k3), i3.add(a3).on(B + g2, function() {
            t3.stop(), m3 = false, s3._toggleScrollButtons(t3, i3, a3, o3);
          }), t3.on(L, function(e3) {
            if (!e3.ctrlKey && !e3.shiftKey && !e3.altKey) {
              var n3 = function(e4) {
                var t4 = 0;
                return e4.wheelDelta && (t4 = (t4 = -e4.wheelDelta / 120) > 0 ? Math.ceil(t4) : Math.floor(t4)), e4.detail && (t4 = Math.round(e4.detail / 3)), t4;
              }(e3.originalEvent), r3 = (n3 > 0 ? "+=" : "-=") + Math.abs(n3) * u3, l4 = o3 ? { scrollLeft: r3 } : { scrollTop: r3 };
              s3._closeChildPopups(t3), t3.finish().animate(l4, "fast", "linear", function() {
                s3._toggleScrollButtons(t3, i3, a3, o3);
              }), e3.preventDefault();
            }
          });
        }, isNumeric: function(e3) {
          return !isNaN(parseFloat(e3)) && isFinite(e3);
        }, _toggleScrollButtons: function(e3, t3, i3, a3) {
          var r3 = a3 ? n2.scrollLeft(e3) : e3.scrollTop(), o3 = a3 ? "scrollWidth" : "scrollHeight", s3 = a3 ? "offsetWidth" : "offsetHeight";
          t3.toggle(0 !== r3), i3.toggle(r3 < e3[0][o3] - e3[0][s3] - 1);
        }, setOptions: function(e3) {
          var t3 = this.options.animation;
          this._animations(e3), e3.animation = u2(true, t3, e3.animation), "dataSource" in e3 && this._dataSource(e3), this._updateClasses(), this._reinitOverflow(e3), f2.fn.setOptions.call(this, e3);
        }, destroy: function() {
          var e3 = this;
          f2.fn.destroy.call(e3), e3._detachMenuEventsHandlers(), e3._destroyOverflow(), n2.destroy(e3.element);
        }, enable: function(e3, t3) {
          return this._toggleDisabled(e3, false !== t3), this;
        }, disable: function(e3) {
          return this._toggleDisabled(e3, false), this;
        }, attemptGetItem: function(t3) {
          t3 = t3 || this.element;
          var n3 = this.element.find(t3), i3 = this._overflowWrapper();
          return n3.length || t3 === this.element ? n3 : i3 ? i3.find(t3) : e2();
        }, append: function(e3, t3) {
          t3 = this.attemptGetItem(t3);
          var n3 = this._insert(e3, t3, t3.length ? this._childPopupElement(t3) : null);
          return c2(n3.items, function(t4) {
            n3.group.append(this), pe(this), ge(this, e3[t4] || e3);
          }), pe(t3), he(n3.group.find(".k-first, .k-last").add(n3.items)), fe(me(n3.group)), this;
        }, insertBefore: function(e3, t3) {
          t3 = this.attemptGetItem(t3);
          var n3 = this._insert(e3, t3, t3.parent());
          return c2(n3.items, function(n4) {
            t3.before(this), pe(this), he(this), ge(this, e3[n4] || e3);
          }), he(t3), this;
        }, insertAfter: function(e3, t3) {
          t3 = this.attemptGetItem(t3);
          var n3 = this._insert(e3, t3, t3.parent());
          return c2(n3.items, function(n4) {
            t3.after(this), pe(this), he(this), ge(this, e3[n4] || e3);
          }), he(t3), this;
        }, _insert: function(t3, i3, a3) {
          var r3, s3, l3 = this;
          i3 && i3.length || (a3 = l3.element);
          var d3 = e2.isPlainObject(t3) || t3 instanceof n2.data.ObservableObject, c3 = { firstLevel: a3.hasClass(_2), horizontal: a3.hasClass(_2 + "-horizontal"), expanded: true, length: a3.children().length };
          return i3 && !a3.length && (a3 = e2(l3.renderGroup({ group: c3, options: l3.options })).css("display", "none").appendTo(i3)), d3 || o2(t3) || t3 instanceof n2.data.ObservableArray ? r3 = e2(e2.map(d3 ? [t3] : t3, function(t4, n3) {
            return "string" == typeof t4 ? e2(t4).get() : e2(l3.renderItem({ group: c3, item: u2(t4, { index: n3 }) })).get();
          })) : (s3 = (r3 = "string" == typeof t3 && "<" != t3.charAt(0) ? l3.element.find(t3) : e2(t3)).find("> ul").addClass("k-menu-group k-menu-group-md").attr(se, "menu"), (r3 = r3.filter("li")).add(s3.find("> li")).each(function() {
            ce(this);
          })), { items: r3, group: a3 };
        }, remove: function(e3) {
          var t3 = (e3 = this.attemptGetItem(e3)).parentsUntil(this.element, Z), n3 = e3.parent("ul:not(.k-menu)");
          if (e3.remove(), n3 && !n3.children(Z).length) {
            var i3 = me(n3), a3 = n3.parent(X);
            a3.length ? a3.remove() : n3.remove(), fe(i3);
          }
          return t3.length && (pe(t3 = t3.eq(0)), he(t3)), this;
        }, _openAfterLoad: function(e3, t3) {
          var n3 = this;
          t3.loaded() ? (n3.open(e3), n3._loading = false) : t3.one(N, function() {
            e3.find(w).removeClass("k-i-loading"), n3._loading && (n3.open(e3), n3._loading = false);
          });
        }, open: function(i3) {
          var a3 = this, o3 = a3.options, s3 = "horizontal" == o3.orientation, l3 = o3.direction, d3 = n2.support.isRtl(a3.wrapper), c3 = a3._overflowWrapper();
          i3 = (c3 || a3.element).find(i3);
          var p3 = a3.dataSource && a3.dataSource.getByUid(i3.data(n2.ns + "uid"));
          if (p3 && p3.hasChildren && !p3.loaded() && !a3._loading) return a3._loading = true, i3.find(w).addClass("k-i-loading"), p3.load(), void a3._openAfterLoad(i3, p3);
          /^(top|bottom|default)$/.test(l3) && (l3 = d3 ? s3 ? (l3 + " left").replace("default", "bottom") : "left" : s3 ? (l3 + " right").replace("default", "bottom") : "right");
          var h3 = ">.k-popup:visible,>.k-animation-container>.k-popup:visible", f3 = function() {
            e2(this).data(q) && a3.close(e2(this).closest("li.k-item"), true);
          };
          return i3.siblings().find(h3).each(f3), c3 && i3.find(h3).each(f3), a3.options.openOnClick && (a3.clicked = true), i3.each(function() {
            var i4 = e2(this);
            clearTimeout(i4.data(C)), i4.data(C, setTimeout(function() {
              var p4, h4, f4 = i4.find("> .k-menu-group, > .k-animation-container > .k-menu-group").filter(":hidden").first();
              if (!f4[0] && c3 && (h4 = a3._getPopup(i4), f4 = h4 && h4.element), !f4.is(":visible") && f4[0] && false === a3._triggerEvent({ item: i4[0], type: v2 })) {
                if (!f4.find(".k-menu-group")[0] && f4.children(".k-item").length > 1) {
                  var m3 = e2(window).height();
                  f4.css({ maxHeight: m3 - (n2._outerHeight(f4) - f4.height()) - n2.getShadows(f4).bottom, overflow: "auto" });
                } else f4.css({ maxHeight: "", overflow: "" });
                i4.data(D, i4.css(D));
                var g3 = a3.nextItemZIndex++;
                i4.css(D, g3), a3.options.scrollable && i4.parent().siblings(ie).css({ zIndex: ++g3 }), p4 = f4.data(q);
                var b3 = i4.parent().hasClass(_2), k3 = b3 && s3, w2 = function(e3, t3, i5) {
                  e3 = e3.split(" ")[!t3 + 0] || e3;
                  var a4 = { origin: ["bottom", i5 ? "right" : "left"], position: ["top", i5 ? "right" : "left"] };
                  return /left|right/.test(e3) ? (a4.origin = ["top", e3], a4.position[1] = n2.directions[e3].reverse) : (a4.origin[0] = e3, a4.position[0] = n2.directions[e3].reverse), a4.origin = a4.origin.join(" "), a4.position = a4.position.join(" "), a4;
                }(l3, b3, d3), y2 = o3.animation.open.effects, C2 = y2 !== t2 ? y2 : "slideIn:" + function(e3, t3) {
                  return (e3 = e3.split(" ")[!t3 + 0] || e3).replace("top", "up").replace("bottom", "down");
                }(l3, b3);
                p4 ? ((p4 = f4.data(q)).options.origin = w2.origin, p4.options.position = w2.position, p4.options.animation.open.effects = C2) : (p4 = f4.kendoPopup({ activate: function() {
                  a3._triggerEvent({ item: this.wrapper.parent(), type: E });
                }, deactivate: function(e3) {
                  a3._closing = false, e3.sender.element.removeData("targetTransform").css({ opacity: "" }), a3._triggerEvent({ item: this.wrapper.parent(), type: A });
                }, origin: w2.origin, position: w2.position, collision: o3.popupCollision !== t2 ? o3.popupCollision : k3 ? "fit" : "fit flip", anchor: i4, appendTo: c3 || i4, animation: { open: u2(true, { effects: C2 }, o3.animation.open), close: o3.animation.close }, open: a3._popupOpen.bind(a3), close: function(e3) {
                  a3._closing = e3.sender.element;
                  var t3 = e3.sender.wrapper.parent();
                  if (c3) {
                    var i5 = e3.sender.element.data(U);
                    i5 && (t3 = (c3 || a3.element).find(ve(i5))), e3.sender.wrapper.children(ie).hide();
                  }
                  a3._triggerEvent({ item: t3[0], type: x }) ? e3.preventDefault() : (t3.css(D, t3.data(D)), t3.removeData(D), a3.options.scrollable && t3.parent().siblings(ie).css({ zIndex: "" }), (r2 || H || n2.support.mouseAndTouchPresent) && (t3.removeClass(G), a3._removeHoverItem()));
                } }).data(q), f4.closest(X).removeAttr(se)), f4.removeAttr("aria-hidden"), i4.attr(oe, true), a3._configurePopupOverflow(p4, i4), p4._hovered = true, p4.open(), a3._initPopupScrolling(p4);
              }
            }, a3.options.hoverDelay));
          }), a3;
        }, _configurePopupOverflow: function(e3, t3) {
          if (this.options.scrollable && (this._wrapPopupElement(e3), !t3.attr("data-groupparent"))) {
            var n3 = (/* @__PURE__ */ new Date()).getTime();
            t3.attr("data-groupparent", n3), e3.element.attr("data-group", n3);
          }
        }, _wrapPopupElement: function(e3) {
          e3.element.parent().is(X) || (e3.wrapper = n2.wrap(e3.element, e3.options.autosize).css({ overflow: "hidden", display: "block", position: "absolute" }));
        }, _initPopupScrolling: function(e3, t3, n3) {
          this.options.scrollable && e3.element[0].scrollHeight > e3.element[0].offsetHeight && this._initPopupScrollButtons(e3, t3, n3);
        }, _initPopupScrollButtons: function(t3, n3, i3) {
          var a3 = this, r3 = t3.wrapper.children(ie), o3 = a3.options.animation, s3 = (o3 && o3.open && o3.open.duration || 0) + 30;
          setTimeout(function() {
            if (!r3.length) {
              var o4 = e2(a3.templates.scrollButton({ direction: n3 ? "left" : "up" })), s4 = e2(a3.templates.scrollButton({ direction: n3 ? "right" : "down" }));
              r3 = o4.add(s4).appendTo(t3.wrapper), a3._initScrolling(t3.element, o4, s4, n3), i3 || r3.on(M + g2, function() {
                var n4 = a3._overflowWrapper();
                e2(be(t3.element, n4)).each(function(e3, t4) {
                  var i4 = n4.find(ve(t4.data(U)));
                  a3.close(i4);
                });
              }).on(B + g2, function() {
                setTimeout(function() {
                  e2.isEmptyObject(a3._openedPopups) && a3._closeParentPopups(t3.element);
                }, 30);
              });
            }
            a3._toggleScrollButtons(t3.element, r3.first(), r3.last(), n3);
          }, s3);
        }, _popupOpen: function(e3) {
          this._keyTriggered || e3.sender.element.children(".k-focus").removeClass(K), this.options.scrollable && this._setPopupHeight(e3.sender);
        }, _setPopupHeight: function(t3, i3) {
          var a3 = t3.element, r3 = a3.add(a3.parent(X));
          r3.height(a3.hasClass(_2) && this._initialHeight || "");
          var o3 = t3._location(i3), s3 = e2(window).height(), l3 = o3.height, d3 = i3 ? 0 : Math.max(o3.top, 0), u3 = i3 ? 0 : ye(this._overflowWrapper()[0], "scrollTop"), c3 = window.innerHeight - s3, p3 = s3 - n2.getShadows(a3).bottom + c3;
          if (!(p3 + u3 > l3 + d3)) {
            var h3 = Math.min(p3, p3 - d3 + u3);
            r3.css({ overflow: "hidden", height: h3 + "px" });
          }
        }, close: function(t3, n3) {
          var i3 = this, a3 = i3._overflowWrapper(), r3 = a3 || i3.element;
          (t3 = r3.find(t3)).length || (t3 = r3.find(">.k-item"));
          return t3.each(function() {
            var r4 = e2(this);
            r4.attr(oe, false), !n3 && i3._isRootItem(r4) && (i3.clicked = false), clearTimeout(r4.data(C)), r4.data(C, setTimeout(function() {
              var n4, o3, s3, l3 = i3._getPopup(r4);
              if (l3 && (s3 = r4.data(W), !a3 || !s3 || !i3._openedPopups[s3.toString()] || i3._forceClose)) {
                if (!i3._forceClose && (n4 = l3.element, o3 = false, e2.isEmptyObject(i3._openedPopups) || e2(be(n4, a3)).each(function(e3, t4) {
                  return !(o3 = !!i3._openedPopups[t4.data(U).toString()]);
                }), o3)) return;
                l3.close(), l3.element.attr("aria-hidden", true), a3 && i3._forceClose && t3.last().is(r4[0]) && delete i3._forceClose;
              }
            }, i3.options.hoverDelay));
          }), i3;
        }, _getPopup: function(e3) {
          var t3 = e3.find(".k-menu-group:not(.k-list-container):not(.k-calendar-container):visible").first().data(q), n3 = this._overflowWrapper();
          if (!t3 && n3) {
            var i3 = e3.data(W);
            if (i3) t3 = n3.find(_e(i3)).data(q);
          }
          return t3;
        }, _toggleDisabled: function(t3, n3) {
          this.element.find(t3).each(function() {
            e2(this).toggleClass($, !n3).attr("aria-disabled", !n3);
          });
        }, _toggleHover: function(t3) {
          var i3 = e2(n2.eventTarget(t3) || t3.target).closest(Z), a3 = t3.type == M || -1 !== l2.indexOf(t3.type);
          i3.siblings().removeClass(G), i3.parents("li.k-disabled").length || i3.toggleClass(G, a3 || "mousedown" == t3.type || "pointerover" == t3.type || t3.type == O), this._removeHoverItem();
        }, _preventClose: function() {
          this.options.closeOnClick || (this._closurePrevented = true);
        }, _checkActiveElement: function(t3) {
          var i3 = this, a3 = e2(t3 ? t3.currentTarget : this._hoverItem()), r3 = i3._findRootParent(a3)[0];
          this._closurePrevented || setTimeout(function() {
            document.hasFocus() && (ue(r3, n2._activeElement()) || !t3 || ue(r3, t3.currentTarget)) || i3.close(r3);
          }, 0), this._closurePrevented = false;
        }, _removeHoverItem: function() {
          var e3 = this._hoverItem();
          e3 && e3.hasClass(K) && (e3.removeClass(K), this._oldHoverItem = null);
        }, _updateClasses: function() {
          var e3, t3 = this.element;
          t3.removeClass("k-menu-horizontal k-menu-vertical"), t3.addClass("k-widget k-reset k-menu-init " + _2).addClass(_2 + "-" + this.options.orientation), "vertical" === this.options.orientation ? t3.attr("aria-orientation", "vertical") : t3.attr("aria-orientation", "horizontal"), t3.find("li > ul").filter(function() {
            return !n2.support.matchesSelector.call(this, ".k-menu-init div ul");
          }).addClass("k-group k-menu-group k-menu-group-md").attr(se, "menu").hide().attr("aria-hidden", t3.is(":visible")).parent("li").attr("aria-haspopup", "true").end().find("li > div").addClass("k-content").attr("tabindex", "-1"), t3.find("li[aria-haspopup]").attr(oe, false), e3 = t3.find("> li,.k-menu-group > li"), t3.removeClass("k-menu-init"), e3.each(function() {
            ce(this);
          });
        }, _mouseenter: function(t3) {
          var n3 = this, i3 = e2(t3.currentTarget), a3 = n3._itemHasChildren(i3), o3 = i3.data(W) || i3.parent().data(U), s3 = xe(t3), l3 = false;
          o3 && (n3._openedPopups[o3.toString()] = true), n3._closing && (l3 = !!n3._closing.find(i3).length), l3 || t3.delegateTarget != i3.parents(Y)[0] && t3.delegateTarget != i3.parents(".k-menu-scroll-wrapper,.k-popups-wrapper")[0] || (n3._keyTriggered = false, n3.options.openOnClick.rootMenuItems && n3._isRootItem(i3.closest(Z)) || n3.options.openOnClick.subMenuItems && !n3._isRootItem(i3.closest(Z)) || (!(false === n3.options.openOnClick || false === n3.options.openOnClick.rootMenuItems && n3._isRootItem(i3.closest(Z)) || false === n3.options.openOnClick.subMenuItems && !n3._isRootItem(i3.closest(Z)) || n3.clicked) || r2 || s3 && n3._isRootItem(i3.closest(Z)) || !ue(t3.currentTarget, t3.relatedTarget) && a3 && n3.open(i3), (true === n3.options.openOnClick && n3.clicked || r2) && i3.siblings().each(function(e3, t4) {
            n3.close(t4, true);
          })));
        }, _mousedown: function(t3) {
          var n3 = this, i3 = e2(t3.currentTarget);
          (n3.options.openOnClick.subMenuItems && !n3._isRootItem(i3) || r2) && i3.siblings().each(function(e3, t4) {
            n3.close(t4, true);
          });
        }, _mouseleave: function(t3) {
          var i3 = this, a3 = e2(t3.currentTarget), o3 = a3.data(W), s3 = a3.children(X).length || a3.children(Q).length || o3, l3 = e2(window);
          if (o3 && delete i3._openedPopups[o3.toString()], !a3.parentsUntil(X, ".k-list-container,.k-calendar-container")[0]) return false !== i3.options.openOnClick && (i3.options.openOnClick.rootMenuItems || !i3._isRootItem(a3)) && (i3.options.openOnClick.subMenuItems || i3._isRootItem(a3)) || r2 || xe(t3) || ue(t3.currentTarget, t3.relatedTarget || t3.target) || !s3 || ue(t3.currentTarget, n2._activeElement()) ? void ((n2.support.browser.msie && !t3.toElement && !t3.relatedTarget && !xe(t3) || t3.clientX < 0 || t3.clientY < 0 || t3.clientY > l3.height() || t3.clientX > l3.width()) && i3.close(a3)) : (i3.close(a3, true), void (i3._loading = false));
          t3.stopImmediatePropagation();
        }, _mouseenterPopup: function(t3) {
          var n3 = e2(t3.currentTarget);
          if (!n3.parent().is(X)) {
            var i3 = (n3 = n3.children("ul")).data(U);
            i3 && (this._openedPopups[i3.toString()] = true);
          }
        }, _mouseleavePopup: function(t3) {
          var n3 = e2(t3.currentTarget);
          !xe(t3) && n3.is(X) && this._closePopups(n3.children("ul"));
        }, _closePopups: function(t3) {
          var n3 = this, i3 = n3._overflowWrapper(), a3 = t3.data(U);
          if (a3) {
            delete n3._openedPopups[a3.toString()];
            var r3 = i3.find(ve(a3));
            setTimeout(function() {
              if (n3.options.openOnClick) n3._closeChildPopups(t3);
              else if (e2.isEmptyObject(n3._openedPopups)) {
                var i4 = n3._innerPopup(t3);
                n3._closeParentPopups(i4);
              } else n3.close(r3, true);
            }, 0);
          }
        }, _closeChildPopups: function(t3) {
          var n3 = this, i3 = n3._overflowWrapper();
          e2(be(t3, i3)).each(function() {
            var e3 = i3.find(ve(this.data(U)));
            n3.close(e3, true);
          });
        }, _innerPopup: function(e3) {
          var t3 = be(e3, this._overflowWrapper());
          return t3[t3.length - 1] || e3;
        }, _closeParentPopups: function(e3) {
          var t3 = this, n3 = t3._overflowWrapper(), i3 = e3.data(U), a3 = n3.find(ve(i3));
          for (i3 = a3.parent().data(U), t3.close(a3, true); i3 && !t3._openedPopups[i3] && !a3.parent().is(Y); ) a3 = n3.find(ve(i3)), t3.close(a3, true), i3 = a3.parent().data(U);
        }, _click: function(t3) {
          var i3, a3, r3, o3, s3 = this, l3 = s3.options, d3 = e2(n2.eventTarget(t3)), u3 = d3[0], c3 = d3[0] ? d3[0].nodeName.toUpperCase() : "", p3 = "INPUT" == c3 || "SELECT" == c3 || "BUTTON" == c3 || "LABEL" == c3, h3 = d3.closest(k2), f3 = d3.closest(Z), m3 = f3[0], g3 = h3.attr("href"), _3 = d3.attr("href"), b3 = e2("<a href='#' />").attr("href"), w2 = !!g3 && g3 !== b3, y2 = w2 && !!g3.match(/^#/), C2 = !!_3 && _3 !== b3, T2 = s3._overflowWrapper();
          if (!u3 || u3.parentNode && m3) {
            for (e2(d3).hasClass("k-menu-expand-arrow-icon") && (this._lastClickedElement = m3); u3 && u3.parentNode != m3; ) u3 = u3.parentNode;
            if (!e2(u3).is("div:not(.k-animation-container,.k-list-container)")) if (f3.hasClass($)) t3.preventDefault();
            else {
              if (t3.handled || !s3._triggerSelect(d3, m3) || p3 || t3.preventDefault(), t3.handled = true, a3 = f3.children(J), T2) {
                var S2 = f3.data(W);
                S2 && (a3 = T2.find(_e(S2)));
              }
              if (r3 = a3.is(":visible"), o3 = l3.openOnClick && r3 && s3._isRootItem(f3), l3.closeOnClick && (!w2 || y2) && (!a3.length || o3)) {
                f3.removeClass(G).css("height"), s3._oldHoverItem = s3._findRootParent(f3);
                var I2 = s3._parentsUntil(h3, s3.element, Z);
                return s3._forceClose = !!T2, s3.close(I2), s3.clicked = false, void (-1 != "MSPointerUp".indexOf(t3.type) && t3.preventDefault());
              }
              w2 && t3.enterKey && h3[0].click(), (s3._isRootItem(f3) && false !== l3.openOnClick || l3.openOnClick.subMenuItems || n2.support.touch || xe(t3) && s3._isRootItem(f3.closest(Z))) && (w2 || p3 || C2 || t3.preventDefault(), s3.clicked = true, i3 = a3.is(":visible") ? x : v2, (l3.closeOnClick || i3 != x) && s3[i3](f3));
            }
          }
        }, _parentsUntil: function(t3, n3, i3) {
          var a3 = this._overflowWrapper();
          if (a3) {
            var r3 = function(t4, n4) {
              var i4 = [], a4 = function(e3) {
                for (; e3.parentNode && !n4.is(e3.parentNode); ) i4.push(e3.parentNode), e3 = e3.parentNode;
              }, r4 = t4[0] || t4;
              a4(r4);
              for (var o4 = i4[i4.length - 1]; e2(o4).is(X) && (r4 = ke(e2(o4).children("ul"), n4)[0]); ) i4.push(r4), a4(r4), o4 = i4[i4.length - 1];
              return i4;
            }(t3, a3), o3 = [];
            return e2(r3).each(function() {
              var t4 = e2(this);
              if (t4.is(n3)) return false;
              t4.is(i3) && o3.push(this);
            }), e2(o3);
          }
          return t3.parentsUntil(n3, i3);
        }, _triggerSelect: function(e3, t3) {
          var n3, i3 = (e3 = e3.is(".k-link") ? e3 : e3.closest(".k-link")).data("selectHandler");
          i3 && (n3 = this._getEventData(e3), i3.call(this, n3));
          var a3 = n3 && n3.isDefaultPrevented(), r3 = this._triggerEvent({ item: t3, type: I });
          return a3 || r3;
        }, _getEventData: function(e3) {
          return { sender: this, target: e3, _defaultPrevented: false, preventDefault: function() {
            this._defaultPrevented = true;
          }, isDefaultPrevented: function() {
            return this._defaultPrevented;
          } };
        }, _documentClick: function(n3) {
          var i3 = this, a3 = e2(n3.target).hasClass("k-menu-expand-arrow-icon") ? i3._lastClickedElement : n3.target;
          ue((i3._overflowWrapper() || i3.element)[0], a3) ? i3._lastClickedElement = t2 : i3.clicked = false;
        }, _focus: function(t3) {
          var n3 = this, i3 = t3.target, r3 = n3._hoverItem(), o3 = a2();
          if (i3 != n3.wrapper[0] && !e2(i3).is(":kendoFocusable")) return t3.stopPropagation(), e2(i3).closest(".k-content").closest(".k-menu-group").closest(".k-item").addClass(K), void n3.wrapper.trigger("focus");
          o3 === t3.currentTarget && (r3.length ? n3._moveHover([], r3) : n3._oldHoverItem || n3._moveHover([], n3.wrapper.children().first()));
        }, _keydown: function(e3) {
          var t3, i3, a3, r3 = this, o3 = e3.keyCode, s3 = r3._oldHoverItem, l3 = n2.support.isRtl(r3.wrapper);
          if (e3.target == e3.currentTarget || o3 == h2.ESC) {
            if (s3 || (s3 = r3._oldHoverItem = r3._hoverItem()), i3 = r3._itemBelongsToVertival(s3), a3 = r3._itemHasChildren(s3), r3._keyTriggered = true, o3 == h2.RIGHT) t3 = r3[l3 ? "_itemLeft" : "_itemRight"](s3, i3, a3);
            else if (o3 == h2.LEFT) t3 = r3[l3 ? "_itemRight" : "_itemLeft"](s3, i3, a3);
            else if (o3 == h2.DOWN) t3 = r3._itemDown(s3, i3, a3);
            else if (o3 == h2.UP) t3 = r3._itemUp(s3, i3, a3);
            else if (o3 == h2.HOME) r3._moveHover(s3, s3.parent().children().first()), e3.preventDefault();
            else if (o3 == h2.END) r3._moveHover(s3, s3.parent().children().last()), e3.preventDefault();
            else if (o3 == h2.ESC) t3 = r3._itemEsc(s3, i3);
            else if (o3 == h2.ENTER || o3 == h2.SPACEBAR) (t3 = s3.children(".k-link")).length > 0 && (r3._click({ target: t3[0], preventDefault: function() {
            }, enterKey: true }), a3 && !s3.hasClass($) ? (r3.open(s3), r3._moveHover(s3, r3._childPopupElement(s3).children().first())) : s3.is("li") && "menuitemcheckbox" === s3.attr("role") ? s3.find(".k-checkbox").attr("checked", true) : r3._moveHoverToRoot(s3, r3._findRootParent(s3)));
            else if (o3 == h2.TAB) return t3 = r3._findRootParent(s3), r3._moveHover(s3, t3), void r3._checkActiveElement();
            t3 && t3[0] && (e3.preventDefault(), e3.stopPropagation());
          }
        }, _hoverItem: function() {
          return this.wrapper.find(".k-item.k-hover,.k-item.k-focus").filter(":visible");
        }, _itemBelongsToVertival: function(e3) {
          var t3 = this.wrapper.hasClass("k-menu-vertical");
          return e3.length && e3.parent().hasClass("k-menu-group") || t3;
        }, _itemHasChildren: function(e3) {
          return !!(e3 && e3.length && e3[0].nodeType) && (e3.children(".k-menu-group, div.k-animation-container").length > 0 || !!e3.data(W) && !!this._overflowWrapper().children(_e(e3.data(W))));
        }, _moveHover: function(t3, n3) {
          var i3 = this, a3 = i3._ariaId;
          t3.length && n3.length && t3.removeClass(K), n3.length && (n3[0].id && (a3 = n3[0].id), n3.addClass(K), i3._oldHoverItem = n3, a3 && (i3.element.removeAttr("aria-activedescendant"), e2("#" + a3).removeAttr("id"), n3.attr("id", a3), i3.element.attr("aria-activedescendant", a3)), i3._scrollToItem(n3));
        }, _moveHoverToRoot: function(e3, t3) {
          this._moveHover(e3, t3);
        }, _findRootParent: function(e3) {
          return this._isRootItem(e3) ? e3 : this._parentsUntil(e3, Y, "li.k-item").last();
        }, _isRootItem: function(e3) {
          return e3.parent().hasClass(_2);
        }, _itemRight: function(e3, t3, n3) {
          var i3, a3, r3, o3 = this;
          if (t3) {
            if (n3 && !e3.hasClass($)) o3.open(e3), i3 = o3._childPopupElement(e3).children().first();
            else if ("horizontal" == o3.options.orientation) {
              if (a3 = o3._findRootParent(e3), r3 = o3._overflowWrapper()) {
                var s3 = we(a3, r3);
                o3._closeChildPopups(s3);
              }
              o3.close(a3), i3 = a3.nextAll(ee + ne).eq(0);
            }
          } else (i3 = e3.nextAll(ee + ne).eq(0)).length || (i3 = e3.prevAll(ee + ne).last()), o3.close(e3);
          return i3 && !i3.length ? i3 = o3.wrapper.children(".k-item").first() : i3 || (i3 = []), o3._moveHover(e3, i3), i3;
        }, _itemLeft: function(e3, t3) {
          var n3, i3, a3 = this;
          return t3 ? (n3 = e3.parent().closest(".k-item"), i3 = a3._overflowWrapper(), !n3.length && i3 && (n3 = ke(e3.parent(), i3)), a3.close(n3), a3._isRootItem(n3) && "horizontal" == a3.options.orientation && (n3 = n3.prevAll(ee + ne).eq(0))) : ((n3 = e3.prevAll(ee + ne).eq(0)).length || (n3 = e3.nextAll(ee + ne).last()), a3.close(e3)), n3.length || (n3 = a3.wrapper.children(".k-item").last()), a3._moveHover(e3, n3), n3;
        }, _itemDown: function(e3, t3, n3) {
          var i3, a3 = this;
          if (t3) i3 = e3.nextAll(ee + ne).eq(0);
          else {
            if (!n3 || e3.hasClass($)) return;
            a3.open(e3), i3 = a3._childPopupElement(e3).children().first();
          }
          return !i3.length && e3.length ? i3 = e3.parent().children().first() : e3.length || (i3 = a3.wrapper.children(".k-item").first()), a3._moveHover(e3, i3), i3;
        }, _itemUp: function(e3, t3) {
          var n3;
          if (t3) return !(n3 = e3.prevAll(ee + ne).eq(0)).length && e3.length ? n3 = e3.parent().children().last() : e3.length || (n3 = this.wrapper.children(".k-item").last()), this._moveHover(e3, n3), n3;
        }, _scrollToItem: function(e3) {
          var t3 = this;
          if (t3.options.scrollable && e3 && e3.length) {
            var i3, a3 = e3.parent(), r3 = !!a3.hasClass(_2) && "horizontal" == t3.options.orientation, o3 = r3 ? "scrollLeft" : "scrollTop", s3 = r3 ? n2._outerWidth : n2._outerHeight, l3 = a3[o3](), d3 = s3(e3), u3 = e3[0][r3 ? "offsetLeft" : "offsetTop"], c3 = s3(a3), p3 = a3.siblings(ie), h3 = p3.length ? s3(p3.first()) : 0;
            if (l3 + c3 < u3 + d3 + h3 ? i3 = u3 + d3 - c3 + h3 : l3 > u3 - h3 && (i3 = u3 - h3), !isNaN(i3)) {
              var f3 = {};
              f3[o3] = i3, a3.finish().animate(f3, "fast", "linear", function() {
                t3._toggleScrollButtons(a3, p3.first(), p3.last(), r3);
              });
            }
          }
        }, _itemEsc: function(e3, t3) {
          var n3, i3, a3 = this;
          return t3 ? (0 === (n3 = e3.parent().closest(".k-item")).length && (i3 = e3.closest(".k-group").data("group"), n3 = a3.wrapper.find(".k-item[data-groupparent='" + i3 + "']")), a3.close(n3), a3._moveHover(e3, n3), n3) : e3;
        }, _childPopupElement: function(e3) {
          var t3 = e3.find(".k-menu-group"), n3 = this._overflowWrapper();
          return !t3.length && n3 && (t3 = we(e3, n3)), t3;
        }, _triggerEvent: function(e3) {
          return this.trigger(e3.type, { type: e3.type, item: e3.item });
        }, _focusHandler: function(t3) {
          var i3 = this, a3 = e2(n2.eventTarget(t3)).closest(Z);
          a3.hasClass($) || setTimeout(function() {
            i3._moveHover([], a3), a3.children(".k-content")[0] && a3.parent().closest(".k-item").removeClass(K);
          }, 200);
        }, _animations: function(e3) {
          e3 && "animation" in e3 && !e3.animation && (e3.animation = { open: { effects: {} }, close: { hide: true, effects: {} } });
        }, _dataSource: function(e3) {
          var t3 = this, n3 = e3 ? e3.dataSource : t3.options.dataSource;
          n3 && (n3 = o2(n3) ? { data: n3 } : n3, t3._unbindDataSource(), n3.fields || (n3.fields = [{ field: "uid" }, { field: "text" }, { field: "url" }, { field: "cssClass" }, { field: "spriteCssClass" }, { field: "imageUrl" }, { field: "imageAttr" }, { field: "attr" }, { field: "contentAttr" }, { field: "content" }, { field: "encoded" }, { field: "items" }, { field: "select" }]), t3.dataSource = s2.create(n3), t3._bindDataSource(), t3.dataSource.fetch());
        }, _bindDataSource: function() {
          this._refreshHandler = this.refresh.bind(this), this._errorHandler = this._error.bind(this), this.dataSource.bind(N, this._refreshHandler), this.dataSource.bind(R, this._errorHandler);
        }, _unbindDataSource: function() {
          var e3 = this.dataSource;
          e3 && (e3.unbind(N, this._refreshHandler), e3.unbind(R, this._errorHandler));
        }, _error: function() {
        }, findByUid: function(e3) {
          return (this._overflowWrapper() || this.element).find("[" + n2.attr("uid") + "=" + e3 + "]");
        }, refresh: function(e3) {
          var t3 = this, n3 = e3.node, i3 = e3.action, a3 = n3 ? t3.findByUid(n3.uid) : t3.element, r3 = e3.items, o3 = e3.index, s3 = t3._updateItem.bind(t3), l3 = t3._removeItem.bind(t3);
          "add" == i3 ? t3._appendItems(r3, o3, a3) : "remove" == i3 ? r3.forEach(l3) : "itemchange" == i3 ? r3.forEach(s3) : "itemloaded" === i3 ? t3.append(e3.items, a3) : this._initData(), this.trigger(re, { item: a3, dataItem: n3 });
        }, _appendItems: function(e3, t3, n3) {
          var i3 = n3.find(ee).eq(t3);
          i3.length ? this.insertBefore(e3, i3) : this.append(e3, n3);
        }, _removeItem: function(e3) {
          var t3 = this.findByUid(e3.uid);
          this.remove(t3);
        }, _updateItem: function(e3) {
          var t3 = this, n3 = t3.findByUid(e3.uid), i3 = n3.next(), a3 = e3.parentNode();
          t3.remove(n3), i3.length ? t3.insertBefore(e3, i3) : t3.append(e3, a3 && t3.findByUid(a3.uid));
        }, _accessors: function() {
          var e3, t3, i3, a3 = this.options, r3 = this.element;
          for (e3 in le) t3 = a3[le[e3]], i3 = r3.attr(n2.attr(e3 + "-field")), !t3 && i3 && (t3 = i3), t3 || (t3 = e3), o2(t3) || (t3 = [t3]), a3[le[e3]] = t3;
        }, _fieldAccessor: function(t3) {
          var i3 = this.options[le[t3]] || [], a3 = i3.length, r3 = "(function(item) {";
          return 0 === a3 ? r3 += "return item['" + t3 + "'];" : (r3 += "var levels = [" + e2.map(i3, function(e3) {
            return "function(d){ return " + n2.expr(e3) + "}";
          }).join(",") + "];", r3 += "if(item.level){return levels[Math.min(item.level(), " + a3 + "-1)](item);}else", r3 += "{return levels[" + a3 + "-1](item)}"), r3 += "})";
        }, _templates: function() {
          var e3 = this, t3 = e3.options, i3 = e3._fieldAccessor.bind(e3);
          t3.template && "string" == typeof t3.template ? t3.template = p2(t3.template) : t3.template || (t3.template = p2("<span class='k-menu-link-text'># var text = " + i3("text") + "(data.item); ## if (typeof data.item.encoded != 'undefined' && data.item.encoded === false) {##= text ## } else { ##: text ## } #</span>")), e3.templates = { content: p2("#var contentHtml = " + i3("content") + "(item);#<div #= contentCssAttributes(item.toJSON ? item.toJSON() : item) # tabindex='-1'>#= contentHtml || '' #</div>"), group: p2("<ul class='#= groupCssClass(group) #'#= groupAttributes(group) # role='menu' aria-hidden='true'>#= renderItems(data) #</ul>"), itemWrapper: p2("# var url = " + i3("url") + "(item); ## var imageUrl = " + i3("imageUrl") + "(item); ## var imgAttributes = " + i3("imageAttr") + "(item);## var tag = url ? 'a' : 'span' #<#= tag # class='#= textClass(item) #' #if(url){#href='#= url #'#}#># if (imageUrl) { #<img #= imageCssAttributes(imgAttributes) #  alt='' src='#= imageUrl #' /># } ##= sprite(item) ##= data.menu.options.template(data) ##= arrow(data) #</#= tag #>"), item: p2("#var contentHtml = " + i3("content") + `(item);#<li class='#= wrapperCssClass(group, item) #' #= itemCssAttributes(item.toJSON ? item.toJSON() : item) # role='menuitem'  #=item.items ? "aria-haspopup='true'": ""##=item.enabled === false ? "aria-disabled='true'" : ''#` + n2.attr("uid") + "='#= item.uid #' # if(item.items && item.items.length > 0) { # # if(item.expanded) { #  aria-expanded='true'# } else { # aria-expanded='false'# } ## } #>#= itemWrapper(data) ##if (item.hasChildren || item.items) { ##= subGroup({ items: item.items, menu: menu, group: { expanded: item.expanded } }) ## } else if (item.content || item.contentUrl || contentHtml) { ##= renderContent(data) ## } #</li>"), scrollButton: p2("<span class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-menu-scroll-button k-scroll-#= direction #' unselectable='on'><span class='k-button-icon k-icon k-i-arrow-60-#= direction #'></span></span>"), arrow: p2("<span aria-hidden='true' class='k-menu-expand-arrow'><span class='#= arrowClass(item, group) #'></span></span>"), sprite: p2("# var spriteCssClass = " + i3("spriteCssClass") + "(data); if(spriteCssClass) {#<span class='k-sprite #= spriteCssClass #'></span>#}#"), empty: p2("") };
        }, renderItem: function(e3) {
          var t3 = this;
          e3 = u2({ menu: t3, group: {} }, e3);
          var n3 = t3.templates.empty, i3 = e3.item;
          return t3.templates.item(u2(e3, { sprite: t3.templates.sprite, itemWrapper: t3.templates.itemWrapper, renderContent: t3.renderContent, arrow: i3.items || i3.content || i3[t3.options.dataContentField[0]] ? t3.templates.arrow : n3, subGroup: t3.renderGroup }, de));
        }, renderGroup: function(e3) {
          return (this.templates || e3.menu.templates).group(u2({ renderItems: function(e4) {
            for (var t3 = "", n3 = 0, i3 = e4.items, a3 = i3 ? i3.length : 0, r3 = u2({ length: a3 }, e4.group); n3 < a3; n3++) t3 += e4.menu.renderItem(u2(e4, { group: r3, item: u2({ index: n3 }, i3[n3]) }));
            return t3;
          } }, e3, de));
        }, renderContent: function(e3) {
          return e3.menu.templates.content(u2(e3, de));
        } }), Se = Te.extend({ init: function(t3, i3) {
          var a3 = this;
          Te.fn.init.call(a3, t3, i3), a3.element.attr(se, "menu"), a3._marker = n2.guid().substring(0, 8), a3.target = e2(a3.options.target), a3._popup(), a3._wire();
        }, _initOverflow: function(t3) {
          var n3 = this;
          t3.scrollable && !n3._overflowWrapper() && (n3._openedPopups = {}, n3._popupsWrapper = (n3.element.parent().is(X) ? n3.element.parent() : n3.element).wrap("<div class='k-popups-wrapper " + t3.orientation + "'></div>").parent(), "horizontal" == n3.options.orientation && Ce(n3.element), t3.appendTo && (t3.appendTo = e2(t3.appendTo), t3.appendTo.append(n3._popupsWrapper)), n3._initialHeight = n3.element[0].style.height, n3._initialWidth = n3.element[0].style.width);
        }, options: { name: "ContextMenu", filter: null, showOn: "contextmenu", orientation: "vertical", alignToAnchor: false, copyAnchorStyles: true, target: "body" }, events: [v2, x, E, A, I], setOptions: function(t3) {
          var n3 = this;
          Te.fn.setOptions.call(n3, t3), n3.target.off(n3.showOn + g2 + n3._marker, n3._showProxy), n3.userEvents && n3.userEvents.destroy(), n3.target = e2(n3.options.target), t3.orientation && n3.popup.wrapper[0] && n3.popup.element.unwrap(), n3._wire(), Te.fn.setOptions.call(this, t3);
        }, destroy: function() {
          var e3 = this;
          e3.target.off(e3.options.showOn + g2 + e3._marker), j.off(n2.support.mousedown + g2 + e3._marker, e3._closeProxy), e3.userEvents && e3.userEvents.destroy(), Te.fn.destroy.call(e3);
        }, open: function(i3, a3) {
          var r3 = this;
          if (i3 = e2(i3)[0], ue(r3.element[0], e2(i3)[0]) || r3._itemHasChildren(e2(i3))) Te.fn.open.call(r3, i3);
          else if (false === r3._triggerEvent({ item: r3.element, type: v2 })) {
            if (r3.popup.visible() && r3.options.filter && (r3.popup.close(true), r3.popup.element.kendoStop(true)), a3 !== t2) {
              var o3 = r3._overflowWrapper();
              if (o3) {
                var s3 = o3.offset();
                i3 -= s3.left, a3 -= s3.top;
              }
              r3.popup.wrapper.hide(), r3._configurePopupScrolling(i3, a3), r3.popup.open(i3, a3);
            } else r3.popup.options.anchor = i3 || r3.popup.anchor || r3.target, r3.popup.element.kendoStop(true), r3._configurePopupScrolling(), r3.popup.open();
            j.off(r3.popup.downEvent, r3.popup._mousedownProxy), j.on(n2.support.mousedown + g2 + r3._marker, r3._closeProxy), r3.element.trigger("focus");
          }
          return r3;
        }, _configurePopupScrolling: function(e3, n3) {
          var i3 = this, a3 = i3.popup, r3 = "horizontal" == i3.options.orientation;
          i3.options.scrollable && (i3._wrapPopupElement(a3), a3.element.parent().css({ position: "", height: "" }), a3.element.css({ visibility: "hidden", display: "", position: "" }), r3 ? i3._setPopupWidth(a3, isNaN(e3) ? t2 : { isFixed: true, x: e3, y: n3 }) : i3._setPopupHeight(a3, isNaN(e3) ? t2 : { isFixed: true, x: e3, y: n3 }), a3.element.css({ visibility: "", display: "none", position: "absolute" }), i3._initPopupScrollButtons(a3, r3, true), a3.element.siblings(ie).hide());
        }, _setPopupWidth: function(t3, i3) {
          var a3 = t3.element, r3 = a3.add(a3.parent(X));
          r3.width(this._initialWidth || "");
          var o3 = t3._location(i3), s3 = e2(window).width(), l3 = o3.width, d3 = Math.max(o3.left, 0), u3 = i3 ? 0 : ye(this._overflowWrapper()[0], "scrollLeft"), c3 = n2.getShadows(a3), p3 = s3 - c3.left - c3.right;
          p3 + u3 > l3 + d3 || r3.css({ overflow: "hidden", width: p3 - d3 + u3 + "px" });
        }, close: function() {
          var t3 = this;
          ue(t3.element[0], e2(arguments[0])[0]) || t3._itemHasChildren(arguments[0]) ? Te.fn.close.call(t3, arguments[0]) : t3.popup.visible() && false === t3._triggerEvent({ item: t3.element, type: x }) && (t3._removeHoverItem(), t3.element.find("#" + t3._ariaId).removeAttr("id"), t3.popup.close(), j.off(n2.support.mousedown + g2 + t3._marker, t3._closeProxy), t3.unbind(I, t3._closeTimeoutProxy), t3.popup.options.anchor.focus());
        }, _showHandler: function(t3) {
          var i3, a3 = t3, r3 = this, o3 = r3.options, s3 = n2.support.mobileOS ? e2(a3.target) : e2(a3.currentTarget);
          t3.event && ((a3 = t3.event).pageX = t3.x.location, a3.pageY = t3.y.location), ue(r3.element[0], t3.relatedTarget || t3.target) || (r3._eventOrigin = a3, a3.preventDefault(), a3.stopImmediatePropagation(), r3.element.find(".k-focus").removeClass(K), (o3.filter && s3.is(o3.filter) || !o3.filter) && (o3.alignToAnchor ? (r3.popup.options.anchor = a3.currentTarget, r3.open(a3.currentTarget)) : (r3.popup.options.anchor = a3.currentTarget, r3._targetChild ? (i3 = r3.target.offset(), r3.open(a3.pageX - i3.left, a3.pageY - i3.top)) : r3.open(a3.pageX, a3.pageY))));
        }, _closeHandler: function(t3) {
          var n3 = this, i3 = e2(t3.relatedTarget || t3.target), a3 = i3.closest(n3.target.selector)[0] == n3.target[0], r3 = i3.closest(ee), o3 = n3._itemHasChildren(r3), s3 = n3._overflowWrapper(), l3 = ue(n3.element[0], i3[0]) || s3 && ue(s3[0], i3[0]);
          n3._eventOrigin = t3;
          var d3 = 3 !== t3.which;
          n3.popup.visible() && (d3 && a3 || !a3) && (n3.options.closeOnClick && !o3 && l3 || !l3) && (l3 ? (this.unbind(I, this._closeTimeoutProxy), n3.bind(I, n3._closeTimeoutProxy)) : n3.close());
        }, _wire: function() {
          var e3 = this, t3 = e3.options, i3 = e3.target;
          e3._preventProxy = null, e3._showProxy = e3._showHandler.bind(e3), e3._closeProxy = e3._closeHandler.bind(e3), e3._closeTimeoutProxy = e3.close.bind(e3), i3[0] && (n2.support.mobileOS && "contextmenu" == t3.showOn && (e3.userEvents = new n2.UserEvents(i3, { filter: t3.filter, allowSelection: false }), e3._preventProxy = function() {
            return false;
          }, e3.userEvents.bind("hold", e3._showProxy)), t3.filter ? i3.on(t3.showOn + g2 + e3._marker, t3.filter, e3._preventProxy || e3._showProxy) : i3.on(t3.showOn + g2 + e3._marker, e3._preventProxy || e3._showProxy), i3.on("keydown", function(t4) {
            t4.keyCode === n2.keys.F10 && t4.shiftKey && (t4.preventDefault(), e3.open(t4.target));
          }));
        }, _triggerEvent: function(n3) {
          var i3 = this, a3 = e2(i3.popup.options.anchor)[0], r3 = i3._eventOrigin;
          return i3._eventOrigin = t2, i3.trigger(n3.type, u2({ type: n3.type, item: n3.item || this.element[0], target: a3 }, r3 ? { event: r3 } : {}));
        }, _popup: function() {
          var t3 = this, n3 = t3._overflowWrapper();
          t3._triggerProxy = t3._triggerEvent.bind(t3), t3.popup = t3.element.addClass("k-context-menu").kendoPopup({ autosize: "horizontal" === t3.options.orientation, anchor: t3.target || "body", copyAnchorStyles: t3.options.copyAnchorStyles, collision: t3.options.popupCollision || "fit", animation: t3.options.animation, activate: t3._triggerProxy, deactivate: t3._triggerProxy, appendTo: n3 || t3.options.appendTo, close: n3 ? function(t4) {
            e2(be(t4.sender.element, n3)).each(function(e3, t5) {
              var n4 = t5.data(q);
              n4 && n4.close(true);
            });
          } : e2.noop }).data(q), t3._targetChild = ue(t3.target[0], t3.popup.element[0]);
        }, _moveHoverToRoot: function(e3, t3) {
          this._moveHover(e3, t3), this.close();
        }, _focus: function(e3) {
          var t3 = this._oldHoverItem = this._hoverItem() || [];
          Te.fn._focus.call(this, e3), a2() === e3.currentTarget && this._moveHover(t3, this.wrapper.children().first());
        } });
        i2.plugin(Te), i2.plugin(Se);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.html.HTMLBase, a2 = i2.extend({ init: function(e3, t3) {
          i2.fn.init.call(this, e3, t3), this._wrapper();
        }, options: { name: "HTMLChip", size: "medium", rounded: "medium", fillMode: "solid", themeColor: "base", attr: {}, icon: "", iconAttr: {}, removable: false, removableAttr: {}, removeIcon: "x-circle", content: "", text: "", stylingOptions: ["size", "rounded", "fillMode", "themeColor"] }, _wrapper: function() {
          var t3 = this, n3 = t3.options;
          t3.wrapper = t3.element.wrap("<span class='k-chip'></span>").parent().attr(n3.attr), t3._addClasses(), n3.icon && t3.wrapper.prepend(e2("<span class='k-chip-icon k-icon k-i-" + n3.icon + "'></span>").attr(n3.iconAttr)), t3.element.addClass("k-chip-content"), n3.text && t3.element.html('<span class="k-chip-label">' + n3.text + "</span>"), n3.removable && t3.wrapper.append(e2("<span class='k-chip-action k-chip-remove-action'><span class='k-icon k-i-" + n3.removeIcon + "'></span></span>").attr(n3.removableAttr));
        } });
        e2.extend(n2.html, { renderChip: function(t3, n3) {
          return t3 && !e2.isPlainObject(t3) || (n3 = t3, t3 = e2("<span></span>")), new a2(t3, n3).html();
        }, HTMLChip: a2 }), n2.cssProperties.registerPrefix("HTMLChip", "k-chip-");
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.html.HTMLBase, a2 = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          i2.fn.init.call(n3, e3, t3), n3.wrapper = n3.element.addClass("k-chip-list"), n3._addClasses();
        }, options: { name: "HTMLChipList", size: "medium", stylingOptions: ["size"] } });
        e2.extend(n2.html, { renderChipList: function(n3, i3) {
          return (arguments[0] === t2 || e2.isPlainObject(arguments[0])) && (i3 = n3, n3 = e2("<div></div>")), new a2(n3, i3).html();
        }, HTMLChipList: a2 }), n2.cssProperties.registerPrefix("HTMLChipList", "k-chip-list-");
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.List, r2 = n2.html, o2 = e2.extend({ A: 65 }, n2.keys), s2 = n2._activeElement, l2 = n2.data.ObservableArray, d2 = "id", u2 = ".k-chip", c2 = "accept", p2 = "filter", h2 = "rebind", f2 = "open", m2 = "close", g2 = "change", v2 = "select", _2 = "deselect", b2 = "aria-disabled", k2 = "aria-readonly", w = "aria-expanded", y = "aria-hidden", x = "aria-activedescendant", C = "aria-busy", T = "k-focus", S = "k-selected", I = "k-hidden", D = "k-hover", E = "k-disabled", A = "k-no-click", F = "disabled", z = "readonly", P = ".kendoMultiSelect", H = "click" + P, N = "mouseenter" + P, R = "mouseleave" + P, O = /"/g, M = Array.isArray, B = ["font-family", "font-size", "font-stretch", "font-style", "font-weight", "letter-spacing", "text-transform", "line-height"], L = a2.extend({ init: function(t3, i3) {
          var r3, o3 = this;
          o3.ns = P, a2.fn.init.call(o3, t3, i3), o3._optionsMap = {}, o3._customOptions = {}, o3._wrapper(), o3._tagList(), o3._input(), o3._textContainer(), o3._loader(), o3._clearButton(), o3._arrowButton(), o3._tabindex(o3.input), t3 = o3.element.attr("multiple", "multiple").hide(), (i3 = o3.options).placeholder || (i3.placeholder = t3.data("placeholder")), (r3 = t3.attr(d2)) || (r3 = n2.guid()), r3 && (o3._tagID = r3 + "_tag_active", r3 += "_taglist", o3.tagList.attr(d2, r3)), o3._initialOpen = true, i3.label && this._label(), o3._aria(), o3._dataSource(), o3._ignoreCase(), o3._popup(), o3._tagTemplate(), o3.requireValueMapper(o3.options), o3._initList(), o3._reset(), o3._enable(), o3._placeholder(), i3.autoBind ? o3.dataSource.fetch() : i3.value && o3._preselect(i3.value), e2(o3.element).parents("fieldset").is(":disabled") && o3.enable(false), o3._toggleCloseVisibility(), o3._applyCssClasses(), n2.notify(o3);
        }, options: { name: "MultiSelect", tagMode: "multiple", enabled: true, autoBind: true, autoClose: true, highlightFirst: true, dataTextField: "", dataValueField: "", filter: "startswith", ignoreCase: true, minLength: 1, messages: { singleTag: "item(s) selected", clear: "clear", deleteTag: "delete", noData: "No data found.", downArrow: "select" }, enforceMinLength: false, delay: 100, value: null, maxSelectedItems: null, placeholder: "", height: 200, animation: {}, virtual: false, itemTemplate: "", tagTemplate: "", groupTemplate: "#:data#", fixedGroupTemplate: "#:data#", clearButton: true, autoWidth: false, popup: null, size: "medium", fillMode: "solid", rounded: "medium", label: null }, events: [f2, m2, g2, v2, _2, "filtering", "dataBinding", "dataBound"], setDataSource: function(e3) {
          this.options.dataSource = e3, this._state = "", this._dataSource(), this.persistTagList = false, this.listView.setDataSource(this.dataSource), this.options.autoBind && this.dataSource.fetch();
        }, setOptions: function(e3) {
          var t3 = this._listOptions(e3);
          a2.fn.setOptions.call(this, e3), this.listView.setOptions(t3), this._accessors(), this._aria(), this._tagTemplate(), this._placeholder(), this._clearButton(), this._arrowButton();
        }, currentTag: function(e3) {
          var n3 = this;
          if (e3 === t2) return n3._currentTag;
          n3._currentTag && (n3._currentTag.removeClass(T).removeAttr(d2), n3._currentTag.find(".k-chip-action").attr(y, true), n3.input.removeAttr(x)), e3 && (e3.addClass(T).attr(d2, n3._tagID), e3.find(".k-chip-action").removeAttr(y), n3.input.attr(x, n3._tagID)), n3._currentTag = e3;
        }, dataItems: function() {
          return this.listView.selectedDataItems();
        }, destroy: function() {
          var e3 = this, t3 = e3.ns;
          clearTimeout(e3._busy), clearTimeout(e3._typingTimeout), e3.wrapper.off(t3), e3.tagList.off(t3), e3.input.off(t3), e3._clear.off(t3), a2.fn.destroy.call(e3);
        }, _aria: function() {
          var e3 = this, t3 = e3.ul[0].id, n3 = "none" === this.options.filter ? "none" : "list", i3 = e3.tagList.attr(d2);
          e3.input.attr({ role: "combobox", "aria-expanded": false, "aria-controls": t3, "aria-autocomplete": n3, "aria-describedby": i3 }), e3._ariaLabel(e3._focused);
        }, _activateItem: function() {
          this.popup.visible() && a2.fn._activateItem.call(this), this.currentTag(null);
        }, _listOptions: function(t3) {
          var i3 = this, r3 = a2.fn._listOptions.call(i3, e2.extend(t3, { selectedItemChange: i3._selectedItemChange.bind(i3), selectable: "multiple" })), o3 = this.options.itemTemplate || this.options.template, s3 = r3.itemTemplate || o3 || r3.template;
          return s3 || (s3 = "#:" + n2.expr(r3.dataTextField, "data") + "#"), r3.template = s3, r3;
        }, _setListValue: function() {
          a2.fn._setListValue.call(this, this._initialValues.slice(0));
        }, _listChange: function(e3) {
          var n3 = this.dataSource.flatView(), i3 = this._optionsMap, a3 = this._value;
          this._state === h2 && (this._state = "");
          for (var r3 = 0; r3 < e3.added.length; r3++) if (i3[a3(e3.added[r3].dataItem)] === t2) {
            this._render(n3);
            break;
          }
          this._selectValue(e3.added, e3.removed);
        }, _selectedItemChange: function(e3) {
          var t3, n3, i3 = e3.items;
          for (n3 = 0; n3 < i3.length; n3++) t3 = i3[n3], this.tagList.children(u2).eq(t3.index).children("span").first().html(this.tagTextTemplate(t3.item));
        }, _wrapperMousedown: function(t3) {
          var i3 = this, a3 = "input" !== t3.target.nodeName.toLowerCase(), r3 = e2(t3.target), o3 = r3.closest(".k-multiselect-toggle-button, .k-chip").children(".k-i-arrow-s")[0], l3 = r3.closest(".k-i-x, .k-i-x-circle")[0];
          !a3 || l3 && n2.support.mobileOS || !t3.cancelable || t3.preventDefault(), l3 || (o3 && i3.popup.visible() ? i3.toggle(false) : (i3.input[0] !== s2() && a3 && i3.input.trigger("focus"), 1 !== i3.options.minLength || i3.popup.visible() || i3.open()));
        }, _inputFocus: function() {
          this._placeholder(false, true), this.wrapper.addClass(T);
        }, _inputFocusout: function() {
          var e3 = this;
          clearTimeout(e3._typingTimeout), e3.wrapper.removeClass(T), e3._placeholder(!e3.listView.selectedDataItems()[0], true), e3.close(), e3._state === p2 && (e3._state = c2, e3.listView.skipUpdate(true)), e3.listView.bound() && e3.listView.isFiltered() && (e3.persistTagList = true, e3._clearFilter()), e3.element.trigger("blur");
        }, _removeTag: function(e3, n3) {
          var i3, a3 = this, r3 = a3._state, o3 = e3.index(), s3 = a3.listView, l3 = s3.value()[o3], d3 = a3.listView.selectedDataItems()[o3], u3 = a3._customOptions[l3], h3 = s3.element[0].children;
          if (a3.trigger(_2, { dataItem: d3, item: e3 })) a3._close();
          else {
            u3 !== t2 || r3 !== c2 && r3 !== p2 || (u3 = a3._optionsMap[l3]);
            var f3 = function() {
              a3.currentTag(null), n3 && a3._change(), a3._close();
            };
            u3 === t2 && s3.select().length ? (a3.persistTagList = false, s3.select(s3.select()[o3]).done(f3)) : ((i3 = a3.element[0].children[u3]) && (i3.selected = false), s3.removeAt(o3), s3._removedAddedIndexes && s3._removedAddedIndexes.splice(o3, 1), h3[u3] && h3[u3].classList.remove("k-selected"), "single" !== a3.options.tagMode ? e3.remove() : a3._updateTagListHTML(), f3());
          }
        }, _tagListClick: function(t3) {
          t3.preventDefault(), t3.stopPropagation();
          var n3 = e2(t3.currentTarget);
          n3.is(".k-i-x-circle") && this._removeTag(n3.closest(u2), true);
        }, _clearValue: function() {
          var t3 = this;
          "single" === t3.options.tagMode ? t3._clearSingleTagValue() : t3.tagList.children(u2).each(function(n3, i3) {
            t3._removeTag(e2(i3), false);
          }), t3.input.val(""), t3._search(), t3._change(), t3.focus(), t3._hideClear(), t3._state === p2 && (t3._state = c2);
        }, _clearSingleTagValue: function() {
          for (var e3 = this, t3 = e3.dataItems(), n3 = e3.tagList.children(u2), i3 = e3.persistTagList, a3 = 0; a3 < t3.length; a3 += 1) if (e3.trigger(_2, { dataItem: t3[a3], item: n3.first() })) return void e3._close();
          i3 && (e3.persistTagList = false), e3.listView.value([]), e3.persistTagList = i3;
        }, _focusHandler: function() {
          var e3 = this.input, t3 = s2();
          e3[0] === t3 || this.input.trigger("focus");
        }, _editable: function(t3) {
          var n3 = this, i3 = t3.disable, a3 = t3.readonly, r3 = n3.wrapper.off(P), o3 = n3.tagList.off(P), s3 = n3.input.off(P);
          a3 || i3 ? (r3.toggleClass(E, i3).toggleClass(A, a3), s3.attr(F, i3).attr(z, a3).attr(b2, i3).attr(k2, a3), n3.element.prop(F, i3)) : (r3.removeClass(E).removeClass(A).on("mouseenter.kendoMultiSelect mouseleave.kendoMultiSelect", n3._toggleHover).on("mousedown" + P + " touchend" + P, n3._wrapperMousedown.bind(n3)).on(H, n3._focusHandler.bind(n3)), n3.input.on("keydown.kendoMultiSelect", n3._keydown.bind(n3)).on("paste" + P, n3._search.bind(n3)).on("input" + P, n3._search.bind(n3)).on("focus" + P, n3._inputFocus.bind(n3)).on("focusout" + P, n3._inputFocusout.bind(n3)), n3._clear.on(H + " touchend" + P, n3._clearValue.bind(n3)), s3.prop(F, false).prop(z, false).attr(b2, false).attr(k2, false), n3.element.prop(F, false), o3.on(N, u2, function() {
            e2(this).addClass(D);
          }).on(R, u2, function() {
            e2(this).removeClass(D);
          }).on(H + " touchend" + P, ".k-chip .k-icon", n3._tagListClick.bind(n3)));
        }, _close: function() {
          var e3 = this;
          e3.options.autoClose ? e3.close() : e3.popup.position();
        }, _filterSource: function(e3, t3) {
          t3 || (t3 = this._retrieveData), this._retrieveData = false, a2.fn._filterSource.call(this, e3, t3);
        }, close: function() {
          this._activeItem = null, this.input.removeAttr(x), this.popup.close();
        }, open: function() {
          var t3, n3 = this, i3 = n3.input.val().toLowerCase(), a3 = n3.listView.dataSource.filter();
          a3 && a3.filters.length > 0 && (t3 = (a3.filters[0].value || "").toString().toLowerCase()), n3._request && (n3._retrieveData = false), n3._retrieveData || !n3.listView.bound() || n3._state === c2 && i3 !== t3 ? (n3._open = true, n3._state = h2, n3.listView.skipUpdate(true), n3.persistTagList = !(n3._initialOpen && !n3.listView.bound()), n3._filterSource(), n3._focusItem()) : n3._allowOpening() && (!n3._initialOpen || n3.options.autoBind || n3.options.virtual || !n3.options.value || e2.isPlainObject(n3.options.value[0]) || n3.value(n3.value() || n3._initialValues), n3.popup._hovered = true, n3._initialOpen = false, n3.popup.open(), n3._focusItem());
        }, toggle: function(e3) {
          this[(e3 = e3 !== t2 ? e3 : !this.popup.visible()) ? f2 : m2]();
        }, refresh: function() {
          this.listView.refresh();
        }, _floatCheck: function() {
          return !this.listView || !(this.value() && this.value().length) && !this.popup.visible();
        }, _listBound: function() {
          var e3 = this, t3 = e3.dataSource.flatView();
          e3._render(t3), e3._renderFooter(), e3._renderNoData(), e3._toggleNoData(!t3.length), e3._resizePopup(), e3._open && (e3._open = false, e3.toggle(e3._allowOpening())), e3.popup.position(), e3._updateItemFocus(), e3._touchScroller && e3._touchScroller.reset(), e3._hideBusy(), e3.trigger("dataBound");
        }, _updateItemFocus: function() {
          var e3 = this, n3 = e3.dataSource.flatView(), i3 = e3.listView.skip(), a3 = i3 === t2 || 0 === i3;
          n3.length && a3 && (e3.options.highlightFirst ? e3.listView.focusFirst() : e3.listView.focus(-1));
        }, _inputValue: function() {
          var e3 = this.input.val();
          return this.options.placeholder === e3 && (e3 = ""), e3;
        }, value: function(e3) {
          var n3 = this, i3 = n3.listView, a3 = i3.value().slice(), r3 = n3.options.maxSelectedItems, o3 = i3.bound() && i3.isFiltered();
          if (e3 === t2) return a3;
          n3.persistTagList = false, n3.requireValueMapper(n3.options, e3), e3 = n3._normalizeValues(e3), null !== r3 && e3.length > r3 && (e3 = e3.slice(0, r3)), o3 && n3._clearFilter(), i3.value(e3), n3._old = n3._valueBeforeCascade = e3.slice(), o3 || n3._fetchData(), n3._toggleCloseVisibility();
        }, _preselect: function(t3, i3) {
          var a3 = this;
          M(t3) || t3 instanceof n2.data.ObservableArray || (t3 = [t3]), (e2.isPlainObject(t3[0]) || t3[0] instanceof n2.data.ObservableObject || !a3.options.dataValueField) && (a3.dataSource.data(t3), a3.value(i3 || a3._initialValues), a3._retrieveData = true);
        }, _setOption: function(e3, t3) {
          var n3 = this.element[0].children[this._optionsMap[e3]];
          n3 && (n3.selected = t3);
        }, _fetchData: function() {
          var e3 = this, t3 = !!e3.dataSource.view().length;
          0 === e3.listView.value().length || e3._request || (e3._retrieveData || !e3._fetch && !t3) && (e3._fetch = true, e3._retrieveData = false, e3.dataSource.read().done(function() {
            e3._fetch = false;
          }));
        }, _isBound: function() {
          return this.listView.bound() && !this._retrieveData;
        }, _dataSource: function() {
          var e3 = this, t3 = e3.element, i3 = e3.options, a3 = i3.dataSource || {};
          (a3 = M(a3) ? { data: a3 } : a3).select = t3, a3.fields = [{ field: i3.dataTextField }, { field: i3.dataValueField }], e3.dataSource && e3._refreshHandler ? e3._unbindDataSource() : (e3._progressHandler = e3._showBusy.bind(e3), e3._errorHandler = e3._hideBusy.bind(e3)), e3.dataSource = n2.data.DataSource.create(a3).bind("progress", e3._progressHandler).bind("error", e3._errorHandler);
        }, _reset: function() {
          var t3 = this, n3 = t3.element, i3 = n3.attr("form"), a3 = i3 ? e2("#" + i3) : n3.closest("form");
          a3[0] && (t3._resetHandler = function() {
            setTimeout(function() {
              t3.value(t3._initialValues), t3._placeholder();
            });
          }, t3._form = a3.on("reset", t3._resetHandler));
        }, _initValue: function() {
          var e3 = this.options.value || this.element.val();
          this._old = this._initialValues = this._normalizeValues(e3);
        }, _normalizeValues: function(t3) {
          var n3 = this;
          return null === t3 ? t3 = [] : t3 && e2.isPlainObject(t3) ? t3 = [n3._value(t3)] : t3 && e2.isPlainObject(t3[0]) ? t3 = e2.map(t3, function(e3) {
            return n3._value(e3);
          }) : M(t3) || t3 instanceof l2 ? M(t3) && (t3 = t3.slice()) : t3 = [t3], t3;
        }, _change: function() {
          var e3 = this, t3 = e3.value();
          (function(e4, t4) {
            var n3;
            if (null === e4 && null !== t4 || null !== e4 && null === t4) return false;
            if ((n3 = e4.length) !== t4.length) return false;
            for (; n3--; ) if (e4[n3] !== t4[n3]) return false;
            return true;
          })(t3, e3._old) || (e3._old = t3.slice(), e3.trigger(g2), e3.element.trigger(g2)), e3.popup.position(), e3._toggleCloseVisibility();
        }, _click: function(e3) {
          var t3 = this, n3 = e3.item;
          e3.preventDefault(), t3._select(n3).done(function() {
            t3._activeItem = n3, t3._change(), t3._close();
          });
        }, _getActiveItem: function() {
          return this._activeItem || e2(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();
        }, _getSelectedIndices: function() {
          return this.listView._selectedIndices || this.listView._selectedIndexes;
        }, _keydown: function(i3) {
          var a3, r3 = this, s3 = i3.keyCode, l3 = r3._currentTag, d3 = r3.listView, p3 = r3.input.val(), h3 = n2.support.isRtl(r3.wrapper), f3 = r3.popup.visible(), m3 = 0;
          if (s3 !== o2.ENTER && (this._multipleSelection = false), s3 === o2.DOWN) {
            if (i3.preventDefault(), !f3) return r3.open(), void (d3.focus() || d3.focusFirst());
            d3.focus() ? (!r3._activeItem && i3.shiftKey && (r3._activeItem = d3.focus(), m3 = -1), a3 = d3.getElementIndex(r3._getActiveItem().first()), d3.focusNext(), d3.focus() ? i3.shiftKey && !r3.options.virtual && (this._multipleSelection = true, r3._selectRange(a3, d3.getElementIndex(d3.focus().first()) + m3)) : d3.focusLast()) : d3.focusFirst();
          } else if (s3 === o2.UP) f3 && (!r3._activeItem && i3.shiftKey && (r3._activeItem = d3.focus(), m3 = 1), a3 = d3.getElementIndex(r3._getActiveItem().first()), d3.focusPrev(), d3.focus() ? i3.shiftKey && !r3.options.virtual && (this._multipleSelection = true, r3._selectRange(a3, d3.getElementIndex(d3.focus().first()) + m3)) : r3.close()), i3.preventDefault();
          else if (s3 === o2.LEFT && !h3 || s3 === o2.RIGHT && h3) p3 || (l3 = l3 ? l3.prev(u2) : r3.tagList.children(u2).last())[0] && r3.currentTag(l3);
          else if (s3 === o2.RIGHT && !h3 || s3 === o2.LEFT && h3) !p3 && l3 && (l3 = l3.next(u2), r3.currentTag(l3[0] ? l3 : null));
          else if (i3.ctrlKey && !i3.altKey && s3 === o2.A && f3 && !r3.options.virtual) this._multipleSelection = true, this._getSelectedIndices().length === d3.items().length && (r3._activeItem = null), d3.items().length && r3._selectRange(0, d3.items().length - 1);
          else if (s3 === o2.ENTER && f3) {
            if (!d3.focus()) return;
            if (i3.preventDefault(), this._multipleSelection && (this._multipleSelection = false, d3.focus().hasClass(S))) return void r3._close();
            r3._select(d3.focus()).done(function() {
              r3._change(), r3._close();
            });
          } else if (s3 === o2.SPACEBAR && i3.ctrlKey && f3) r3._activeItem && d3.focus() && d3.focus()[0] === r3._activeItem[0] && (r3._activeItem = null), e2(d3.focus()).hasClass(S) || (r3._activeItem = d3.focus()), r3._select(d3.focus()).done(function() {
            r3._change();
          }), i3.preventDefault();
          else if (s3 === o2.SPACEBAR && i3.shiftKey && f3 && !r3.options.virtual) {
            var g3 = d3.getElementIndex(r3._getActiveItem()), v3 = d3.getElementIndex(d3.focus());
            g3 !== t2 && v3 !== t2 && r3._selectRange(g3, v3), i3.preventDefault();
          } else if (s3 === o2.ESC) f3 ? i3.preventDefault() : (r3.tagList.children(u2).each(function(t3, n3) {
            r3._removeTag(e2(n3), false);
          }), r3._change()), r3.close();
          else if (s3 === o2.HOME) f3 ? d3.focus() ? (i3.ctrlKey && i3.shiftKey && !r3.options.virtual && r3._selectRange(d3.getElementIndex(d3.focus()[0]), 0), d3.focusFirst()) : r3.close() : p3 || (l3 = r3.tagList.children(u2).first()[0]) && r3.currentTag(e2(l3));
          else if (s3 === o2.END) f3 ? d3.focus() ? (i3.ctrlKey && i3.shiftKey && !r3.options.virtual && r3._selectRange(d3.getElementIndex(d3.focus()[0]), d3.element.children().length - 1), d3.focusLast()) : r3.close() : p3 || (l3 = r3.tagList.children(u2).last()[0]) && r3.currentTag(e2(l3));
          else if (s3 !== o2.DELETE && s3 !== o2.BACKSPACE || p3) if (!r3.popup.visible() || s3 !== o2.PAGEDOWN && s3 !== o2.PAGEUP) clearTimeout(r3._typingTimeout), r3._search();
          else {
            i3.preventDefault();
            var _3 = s3 === o2.PAGEDOWN ? 1 : -1;
            d3.scrollWith(_3 * d3.screenHeight());
          }
          else {
            if (r3._state = c2, "single" === r3.options.tagMode) return r3._clearSingleTagValue(), r3._change(), void r3._close();
            s3 !== o2.BACKSPACE || l3 || (l3 = r3.tagList.children(u2).last()), l3 && l3[0] && r3._removeTag(l3, true);
          }
        }, _hideBusy: function() {
          var e3 = this;
          clearTimeout(e3._busy), e3.input.attr(C, false), e3._loading.addClass(I), e3._request = false, e3._busy = null, e3._toggleCloseVisibility();
        }, _showBusyHandler: function() {
          this.input.attr(C, true), this._loading.removeClass(I), this._hideClear();
        }, _showBusy: function() {
          var e3 = this;
          e3._request = true, e3._busy || (e3._busy = setTimeout(e3._showBusyHandler.bind(e3), 100));
        }, _placeholder: function(e3, i3) {
          var a3 = this, r3 = a3.input, o3 = s2(), l3 = a3.options.placeholder, d3 = r3.val(), u3 = r3[0] === o3, c3 = d3.length;
          u3 && !a3.options.autoClose && d3 !== l3 || (c3 = 0, d3 = ""), e3 === t2 && (e3 = false, r3[0] !== o3 && (e3 = !a3.listView.selectedDataItems()[0])), a3._prev = d3, r3.toggleClass("k-readonly", e3).val(e3 ? l3 : d3), u3 && !i3 && n2.caret(r3[0], c3, c3);
        }, _option: function(e3, i3, a3) {
          var r3 = "<option";
          return e3 !== t2 && (-1 !== (e3 += "").indexOf('"') && (e3 = e3.replace(O, "&quot;")), r3 += ' value="' + e3 + '"'), a3 && (r3 += " selected"), r3 += ">", i3 !== t2 && (r3 += n2.htmlEncode(i3)), r3 + "</option>";
        }, _render: function(e3) {
          var t3, n3, i3, a3, r3 = this.listView.selectedDataItems(), o3 = this.listView.value(), s3 = e3.length, l3 = "";
          o3.length !== r3.length && (r3 = this._buildSelectedItems(o3));
          var d3 = {}, u3 = {};
          for (a3 = 0; a3 < s3; a3++) n3 = e3[a3], i3 = this._value(n3), -1 !== (t3 = this._selectedItemIndex(i3, r3)) && r3.splice(t3, 1), u3[i3] = a3, l3 += this._option(i3, this._text(n3), -1 !== t3);
          if (r3.length) for (a3 = 0; a3 < r3.length; a3++) n3 = r3[a3], d3[i3 = this._value(n3)] = s3, u3[i3] = s3, s3 += 1, l3 += this._option(i3, this._text(n3), true);
          this._customOptions = d3, this._optionsMap = u3, this.element.html(l3);
        }, _buildSelectedItems: function(e3) {
          for (var t3, n3 = this.options.dataValueField, i3 = this.options.dataTextField, a3 = [], r3 = 0; r3 < e3.length; r3++) (t3 = {})[n3] = e3[r3], t3[i3] = e3[r3], a3.push(t3);
          return a3;
        }, _selectedItemIndex: function(e3, t3) {
          for (var n3 = this._value, i3 = 0; i3 < t3.length; i3++) if (e3 === n3(t3[i3])) return i3;
          return -1;
        }, _search: function() {
          var e3 = this;
          clearTimeout(e3._typingTimeout), e3._typingTimeout = setTimeout(function() {
            var t3 = e3._inputValue();
            e3._prev !== t3 && (e3._prev = t3, e3.search(t3), e3._toggleCloseVisibility());
          }, e3.options.delay);
        }, _toggleCloseVisibility: function() {
          this.value().length || this.input.val() && this.input.val() !== this.options.placeholder ? this._showClear() : this._hideClear();
        }, _allowOpening: function() {
          return this._allowSelection() && a2.fn._allowOpening.call(this);
        }, _allowSelection: function() {
          var e3 = this.options.maxSelectedItems;
          return null === e3 || e3 > this.listView.value().length;
        }, _angularTagItems: function(t3) {
          var n3 = this;
          n3.angular(t3, function() {
            return { elements: n3.tagList[0].children, data: e2.map(n3.dataItems(), function(e3) {
              return { dataItem: e3 };
            }) };
          });
        }, updatePersistTagList: function(e3, t3) {
          this.persistTagList.added && this.persistTagList.added.length === t3.length && this.persistTagList.removed && this.persistTagList.removed.length === e3.length ? this.persistTagList = false : (this.listView._removedAddedIndexes = this._old.slice(), this.persistTagList = { added: e3, removed: t3 });
        }, _selectValue: function(e3, t3) {
          var n3, i3, a3, r3 = this, o3 = r3.dataSource.total(), s3 = r3.tagList, l3 = r3._value;
          if (this.persistTagList) this.updatePersistTagList(e3, t3);
          else {
            if (r3._angularTagItems("cleanup"), "multiple" === r3.options.tagMode) {
              for (a3 = t3.length - 1; a3 > -1; a3--) n3 = t3[a3], s3.children(u2).length && (s3[0].removeChild(s3[0].children[n3.position]), r3._setOption(l3(n3.dataItem), false));
              for (a3 = 0; a3 < e3.length; a3++) i3 = e3[a3], r3.input.before(r3.tagTemplate(i3.dataItem)), r3._setOption(l3(i3.dataItem), true);
            } else {
              for ((!r3._maxTotal || r3._maxTotal < o3) && (r3._maxTotal = o3), this._updateTagListHTML(), a3 = t3.length - 1; a3 > -1; a3--) r3._setOption(l3(t3[a3].dataItem), false);
              for (a3 = 0; a3 < e3.length; a3++) r3._setOption(l3(e3[a3].dataItem), true);
            }
            r3._refreshFloatingLabel(), r3._angularTagItems("compile"), r3._placeholder();
          }
        }, _updateTagListHTML: function() {
          var t3 = this, n3 = t3.value(), i3 = t3.dataSource.total();
          t3.tagList.children(u2).each(function(t4, n4) {
            e2(n4).remove();
          }), n3.length && t3.input.before(t3.tagTemplate({ values: n3, dataItems: t3.dataItems(), maxTotal: t3._maxTotal, currentTotal: i3 }));
        }, _select: function(t3) {
          var n3 = e2.Deferred().resolve();
          if (!t3) return n3;
          var i3 = this, a3 = i3.listView, r3 = a3.dataItemByIndex(a3.getElementIndex(t3)), o3 = t3.hasClass("k-selected");
          return i3._state === h2 && (i3._state = ""), i3._allowSelection() || o3 ? i3.trigger(o3 ? _2 : v2, { dataItem: r3, item: t3 }) ? (i3._close(), n3) : (i3.persistTagList = false, a3.select(t3).done(function() {
            i3._placeholder(), i3._state === p2 && (i3._state = c2, a3.skipUpdate(true));
          })) : n3;
        }, _selectRange: function(t3, n3) {
          var i3, a3 = this, r3 = this.listView, o3 = this.options.maxSelectedItems, s3 = this._getSelectedIndices().slice(), l3 = [], d3 = function(t4) {
            r3.select(t4).done(function() {
              t4.forEach(function(t5) {
                var n4 = r3.dataItemByIndex(t5), i4 = r3.element.children()[t5], o4 = e2(i4).hasClass("k-selected");
                a3.trigger(o4 ? v2 : _2, { dataItem: n4, item: e2(i4) });
              }), a3._change();
            });
          };
          if (s3.length - 1 == n3 - t3) return d3(s3);
          if (t3 < n3) for (i3 = t3; i3 <= n3; i3++) l3.push(i3);
          else for (i3 = t3; i3 >= n3; i3--) l3.push(i3);
          for (null !== o3 && l3.length > o3 && (l3 = l3.slice(0, o3)), i3 = 0; i3 < l3.length; i3++) {
            var u3 = l3[i3];
            -1 == this._getSelectedIndices().indexOf(u3) ? s3.push(u3) : s3.splice(s3.indexOf(u3), 1);
          }
          return s3.length ? (a3.persistTagList = false, d3(s3)) : void 0;
        }, _input: function() {
          var t3 = this, n3 = t3.element, i3 = n3[0].accessKey, a3 = t3.tagList.children("input.k-input-inner");
          a3[0] || (a3 = e2('<input class="k-input-inner" />').appendTo(t3.tagList)), n3.removeAttr("accesskey"), t3._focused = t3.input = a3.attr({ autocomplete: "off", title: n3[0].title }), i3 && t3._focused.attr("accesskey", i3);
        }, _tagList: function() {
          var t3 = this, n3 = t3.options, i3 = t3.wrapper.children(".k-input-values");
          i3[0] || (i3 = e2(r2.renderChipList('<div unselectable="on" class="k-input-values k-selection-multiple" />', e2.extend({}, n3))).appendTo(t3.wrapper)), t3.tagList = i3;
        }, _tagTemplate: function() {
          var t3, i3 = this, a3 = i3.options, o3 = a3.tagTemplate, s3 = a3.dataSource, l3 = "multiple" === a3.tagMode, d3 = a3.messages.singleTag;
          i3.element[0].length && !s3 && (a3.dataTextField = a3.dataTextField || "text", a3.dataValueField = a3.dataValueField || "value"), t3 = l3 ? n2.template("#:" + n2.expr(a3.dataTextField, "data") + "#", { useWithBlock: false }) : n2.template("#:values.length# " + d3), i3.tagTextTemplate = o3 = o3 ? n2.template(o3) : t3, i3.tagTemplate = function(t4) {
            return r2.renderChip('<span unselectable="on"></span>', e2.extend({}, a3, { fillMode: "solid", rounded: "medium", themeColor: "base", text: o3(t4), attr: { unselectable: "on" }, removable: l3, removableAttr: { unselectable: "on", "aria-hidden": true, "aria-label": i3.options.messages.deleteTag, title: i3.options.messages.deleteTag }, icon: l3 ? "" : "arrow-s", iconAttr: { unselectable: "on", "aria-hidden": true, "aria-label": "open" } }));
          };
        }, _loader: function() {
          this._loading = e2('<span class="k-icon k-i-loading k-input-loading-icon k-hidden"></span>').insertAfter(this.tagList);
        }, _clearButton: function() {
          a2.fn._clearButton.call(this), this.options.clearButton && (this._clear.insertAfter(this.tagList), this.wrapper.addClass("k-multiselect-clearable"));
        }, _arrowButton: function() {
          var t3 = this.options.messages.downArrow, n3 = e2(r2.renderButton('<button type="button" aria-label="' + t3 + '" class="k-input-button k-multiselect-toggle-button"></button>', e2.extend({}, this.options, { icon: "arrow-s" })));
          this._arrow && (this._arrow.remove(), this._arrow = null), this.options.downArrow && (this._arrow = n3.attr({ tabIndex: -1 }), this._arrow.appendTo(this.wrapper));
        }, _textContainer: function() {
          var t3 = n2.getComputedStyles(this.input[0], B);
          t3.position = "absolute", t3.visibility = "hidden", t3.top = -3333, t3.left = -3333, this._span = e2("<span/>").css(t3).appendTo(this.wrapper);
        }, _wrapper: function() {
          var e3 = this.element, t3 = e3.parent("span.k-multiselect");
          t3[0] || ((t3 = e3.wrap('<span class="k-multiselect k-input" unselectable="on" />').parent())[0].style.cssText = e3[0].style.cssText), this.wrapper = t3.addClass(e3[0].className).removeClass("input-validation-error").css("display", "");
        }, _closeHandler: function(e3) {
          this.trigger(m2) ? e3.preventDefault() : (this.input.attr(w, false), this.ul.attr(y, true));
        }, _openHandler: function(e3) {
          this._adjustListWidth(), this.trigger(f2) ? e3.preventDefault() : (this.input.attr(w, true), this.ul.attr(y, false));
        } });
        i2.plugin(L), n2.cssProperties.registerPrefix("MultiSelect", "k-input-"), n2.cssProperties.registerValues("MultiSelect", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2, i2 = window.kendo, a2 = i2.ui, r2 = i2.keys, o2 = e2.extend, s2 = e2.each, l2 = Array.isArray, d2 = i2.template, u2 = a2.Widget, c2 = i2.data.HierarchicalDataSource, p2 = /^(ul|a|div)$/i, h2 = ".kendoPanelBar", f2 = "href", m2 = "k-last", g2 = "k-link", v2 = "." + g2, _2 = "error", b2 = ".k-item", k2 = ".k-group:visible", w = "k-image", y = "k-first", x = "change", C = "expand", T = "select", S = "click", I = "k-content", D = "activate", E = "collapse", A = "dataBound", F = "mouseenter", z = "contentLoad", P = "k-active", H = "> .k-panel", N = "> .k-content", R = "k-focus", O = "k-disabled", M = "k-selected", B = ".k-selected", L = "k-highlight", V = b2 + ":not(.k-disabled)", U = "> .k-item:not(.k-disabled) > .k-link, .k-panel > .k-item:not(.k-disabled) > .k-link", W = "> li > .k-selected, .k-panel > li > .k-selected", j = "aria-disabled", q = "aria-expanded", G = "aria-hidden", K = "aria-selected", $ = ":visible", Y = "single", Q = { text: "dataTextField", url: "dataUrlField", spriteCssClass: "dataSpriteCssClassField", imageUrl: "dataImageUrlField" }, X = { aria: function(e3) {
          var t3 = "";
          return (e3.items || e3.content || e3.contentUrl || e3.expanded) && (t3 += "aria-expanded='" + (e3.expanded ? "true" : "false") + "' "), false === e3.enabled && (t3 += "aria-disabled='true'"), t3;
        }, wrapperCssClass: function(e3, t3) {
          var n3 = "k-item", i3 = t3.index;
          return n3 += e3.firstLevel ? " k-panelbar-header" : " k-panelbar-item", false === t3.enabled ? n3 += " k-disabled" : true === t3.expanded && (n3 += " k-active"), 0 === i3 && (n3 += " k-first"), i3 == e3.length - 1 && (n3 += " k-last"), t3.cssClass && (n3 += " " + t3.cssClass), t3.level && (n3 += " k-level-" + t3.level()), n3;
        }, textClass: function(e3) {
          var t3 = g2;
          return e3.selected && (t3 += " k-selected"), t3;
        }, textAttributes: function(e3) {
          return e3 ? " href='" + e3 + "'" : "";
        }, arrowClass: function(e3) {
          var t3 = "k-icon";
          return t3 += e3.expanded ? " k-panelbar-toggle k-panelbar-collapse k-i-arrow-chevron-up" : " k-panelbar-toggle k-panelbar-expand k-i-arrow-chevron-down";
        }, text: function(e3) {
          return false === e3.encoded ? e3.text : i2.htmlEncode(e3.text);
        }, groupAttributes: function(e3) {
          return true !== e3.expanded ? " style='display:none'" : "";
        }, ariaHidden: function(e3) {
          return true !== e3.expanded;
        }, groupCssClass: function() {
          return "k-panelbar-group k-group k-panel";
        }, contentAttributes: function(e3) {
          return true !== e3.item.expanded ? " style='display:none'" : "";
        }, content: function(e3) {
          return e3.content ? e3.content : e3.contentUrl ? "" : "&nbsp;";
        }, contentUrl: function(e3) {
          return e3.contentUrl ? 'href="' + e3.contentUrl + '"' : "";
        } };
        function J(t3) {
          (t3 = e2(t3)).filter(".k-first:not(:first-child)").removeClass(y), t3.filter(".k-last:not(:last-child)").removeClass(m2), t3.filter(":first-child").addClass(y), t3.filter(":last-child").addClass(m2);
        }
        function Z(t3) {
          (t3 = e2(t3)).addClass("k-level-" + t3.parentsUntil(".k-panelbar", "ul").length);
        }
        n2 = function(e3) {
          return e3.children("span").children(".k-icon");
        };
        var ee = i2.ui.DataBoundWidget.extend({ init: function(e3, t3) {
          var n3, a3, r3 = this;
          l2(t3) && (t3 = { dataSource: t3 }), a3 = t3 && !!t3.dataSource, u2.fn.init.call(r3, e3, t3), e3 = r3.wrapper = r3.element.addClass("k-panelbar"), t3 = r3.options, e3[0].id && (r3._itemId = e3[0].id + "_pb_active"), r3._tabindex(), r3._accessors(), r3._dataSource(), r3._templates(), r3._initData(a3), r3._updateClasses(), r3._animations(t3), e3.on(S + h2, U, r3._click.bind(r3)).on(F + h2 + " mouseleave" + h2, U, r3._toggleHover).on(S + h2, ".k-item.k-disabled > .k-link", false).on(S + h2, ".k-request-retry", r3._retryRequest.bind(r3)).on("keydown" + h2, r3._keydown.bind(r3)).on("focus" + h2, function() {
            var e4 = r3.select();
            r3._current(e4[0] ? e4 : r3._first());
          }).on("blur" + h2, function() {
            r3._current(null);
          }).attr("role", "tree"), (n3 = e3.find("li.k-active > ." + I))[0] && r3.expand(n3.parent(), false), t3.dataSource || r3._angularCompile(), i2.notify(r3);
        }, events: [C, E, T, D, x, _2, A, z], options: { name: "PanelBar", dataSource: {}, animation: { expand: { effects: "expand:vertical", duration: 200 }, collapse: { duration: 200 } }, messages: { loading: "Loading...", requestFailed: "Request failed.", retry: "Retry" }, autoBind: true, loadOnDemand: true, expandMode: "multiple", template: "", dataTextField: null }, _angularCompile: function() {
          var e3 = this;
          e3.angular("compile", function() {
            return { elements: e3.element.children("li"), data: [{ dataItem: e3.options.$angular }] };
          });
        }, _angularCompileElements: function(t3, n3) {
          this.angular("compile", function() {
            return { elements: t3, data: e2.map(n3, function(e3) {
              return [{ dataItem: e3 }];
            }) };
          });
        }, _angularCleanup: function() {
          var e3 = this;
          e3.angular("cleanup", function() {
            return { elements: e3.element.children("li") };
          });
        }, destroy: function() {
          u2.fn.destroy.call(this), this.element.off(h2), this._angularCleanup(), i2.destroy(this.element);
        }, _initData: function(e3) {
          var t3 = this;
          e3 && (t3.element.empty(), t3.options.autoBind && (t3._progress(true), t3.dataSource.fetch()));
        }, _templates: function() {
          var e3 = this, t3 = e3.options, n3 = e3._fieldAccessor.bind(e3);
          t3.template && "string" == typeof t3.template ? t3.template = d2(t3.template) : t3.template || (t3.template = d2("# var text = " + n3("text") + "(data.item); ## if (typeof data.item.encoded != 'undefined' && data.item.encoded === false) {#<span class='k-panelbar-item-text'>#= text #</span># } else { #<span class='k-panelbar-item-text'>#: text #</span># } #")), e3.templates = { content: d2("<div class='k-panelbar-content k-content'#= contentAttributes(data) #>#= content(item) #</div>"), group: d2("<ul role='group' aria-hidden='#= ariaHidden(group) #' class='#= groupCssClass(group) #'#= groupAttributes(group) #>#= renderItems(data) #</ul>"), itemWrapper: d2("# var url = " + n3("url") + "(item); ## var imageUrl = " + n3("imageUrl") + "(item); ## var spriteCssClass = " + n3("spriteCssClass") + "(item); ## var contentUrl = contentUrl(item); ## var tag = url||contentUrl ? 'a' : 'span'; #<#= tag # class='#= textClass(item) #' #= contentUrl ##= textAttributes(url) #># if (imageUrl) { #<img class='k-panelbar-item-icon k-image' alt='' src='#= imageUrl #' /># } ## if (spriteCssClass) { #<span class='k-sprite #= spriteCssClass #'></span># } ##= data.panelBar.options.template(data) ##= arrow(data) #</#= tag #>"), item: d2("<li aria-selected='false' role='treeitem' #=aria(item)#class='#= wrapperCssClass(group, item) #'" + i2.attr("uid") + "='#= item.uid #'>#= itemWrapper(data) ## if (item.items && item.items.length > 0) { ##= subGroup({ items: item.items, panelBar: panelBar, group: { expanded: item.expanded } }) ## } else if (item.content || item.contentUrl) { ##= renderContent(data) ## } #</li>"), loading: d2("<li class='k-item'><span class='k-icon k-i-loading'></span> #: data.messages.loading #</li>"), retry: d2("<li class='k-item'>#: data.messages.requestFailed # <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>#: data.messages.retry #</span></button></li>"), arrow: d2("<span class='#= arrowClass(item) #'></span>"), empty: d2("") };
        }, setOptions: function(e3) {
          var t3 = this.options.animation;
          this._animations(e3), e3.animation = o2(true, t3, e3.animation), "dataSource" in e3 && this.setDataSource(e3.dataSource), u2.fn.setOptions.call(this, e3);
        }, expand: function(t3, n3) {
          var i3 = this, a3 = {};
          if (t3 = this.element.find(t3), !i3._animating || !t3.find("ul").is(":visible")) return i3._animating = true, n3 = false !== n3, t3.each(function(r3, o3) {
            o3 = e2(o3);
            var s3 = t3.children(".k-group,.k-content");
            s3.length || (s3 = i3._addGroupElement(t3));
            var l3 = s3.add(o3.find(N));
            if (!o3.hasClass(O) && l3.length > 0) {
              if (i3.options.expandMode == Y && i3._collapseAllExpanded(o3)) return i3;
              t3.find(".k-highlight").removeClass(L), o3.addClass(L), n3 || (a3 = i3.options.animation, i3.options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } }), i3._triggerEvent(C, o3) || i3._toggleItem(o3, false, false), n3 || (i3.options.animation = a3);
            }
          }), i3;
          i3.one("complete", function() {
            setTimeout(function() {
              i3.expand(t3);
            });
          });
        }, collapse: function(t3, n3) {
          var i3 = this, a3 = {};
          return i3._animating = true, n3 = false !== n3, (t3 = i3.element.find(t3)).each(function(t4, r3) {
            var o3 = (r3 = e2(r3)).find(H).add(r3.find(N));
            !r3.hasClass(O) && o3.is($) && (r3.removeClass(L), n3 || (a3 = i3.options.animation, i3.options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } }), i3._triggerEvent(E, r3) || i3._toggleItem(r3, true), n3 || (i3.options.animation = a3));
          }), i3;
        }, updateArrow: function(t3) {
          var n3 = this;
          (t3 = e2(t3)).children(v2).children(".k-panelbar-collapse, .k-panelbar-expand").remove(), t3.filter(function() {
            var t4 = n3.dataItem(this);
            return t4 ? t4.hasChildren || t4.content || t4.contentUrl : e2(this).find(".k-panel").length > 0 || e2(this).find(".k-content").length > 0;
          }).children(".k-link:not(:has([class*=k-i-arrow]))").each(function() {
            var t4 = e2(this), n4 = t4.parent();
            t4.append("<span class='k-icon " + (n4.hasClass(P) ? " k-panelbar-toggle k-panelbar-collapse k-i-arrow-chevron-up" : " k-panelbar-toggle k-panelbar-expand k-i-arrow-chevron-down") + "'/>");
          });
        }, _accessors: function() {
          var e3, t3, n3, a3 = this.options, r3 = this.element;
          for (e3 in Q) t3 = a3[Q[e3]], n3 = r3.attr(i2.attr(e3 + "-field")), !t3 && n3 && (t3 = n3), t3 || (t3 = e3), l2(t3) || (t3 = [t3]), a3[Q[e3]] = t3;
        }, _progress: function(e3, t3) {
          var i3 = this.element, a3 = this.templates.loading({ messages: this.options.messages });
          1 == arguments.length ? (t3 = e3) ? i3.html(a3) : i3.empty() : n2(e3).toggleClass("k-i-loading", t3).removeClass("k-i-refresh");
        }, _refreshRoot: function(t3) {
          var n3 = this, i3 = { firstLevel: true, expanded: true, length: n3.element.children().length };
          this.element.empty();
          var r3 = e2.map(t3, function(t4, a3) {
            return "string" == typeof t4 ? e2(t4) : (t4.items = [], e2(n3.renderItem({ group: i3, item: o2(t4, { index: a3 }) })));
          });
          this.element.append(r3);
          for (var s3 = this.element.children(".k-item"), l3 = 0; l3 < t3.length; l3++) this.trigger("itemChange", { item: s3.eq(l3).find(".k-link").first(), data: t3[l3], ns: a2 });
          this._angularCompileElements(r3, t3);
        }, _refreshChildren: function(t3, n3) {
          var i3, r3, o3;
          n3.children(".k-group").empty();
          var s3 = t3.children.data();
          if (s3.length) for (this.append(t3.children, n3), this.options.loadOnDemand && this._toggleGroup(n3.children(".k-group"), false), r3 = n3.children(".k-group").children("li"), i3 = 0; i3 < r3.length; i3++) o3 = r3.eq(i3), this.trigger("itemChange", { item: o3.find(".k-link").first(), data: this.dataItem(o3), ns: a2 });
          else !function(t4) {
            var n4 = t4, i4 = t4.children("ul"), a3 = n4.children(".k-link").children(".k-icon");
            t4.hasClass("k-panelbar") || (!a3.length && i4.length ? a3 = e2("<span class='k-icon' />").appendTo(n4) : i4.length && i4.children().length || (a3.remove(), i4.remove()));
          }(n3), r3 = n3.children(".k-group").children("li"), this._angularCompileElements(r3, s3);
        }, findByUid: function(t3) {
          for (var n3, a3 = this.element.find(".k-item"), r3 = i2.attr("uid"), o3 = 0; o3 < a3.length; o3++) if (a3[o3].getAttribute(r3) == t3) {
            n3 = a3[o3];
            break;
          }
          return e2(n3);
        }, refresh: function(e3) {
          var n3 = this.options, i3 = e3.node, a3 = e3.action, r3 = e3.items, o3 = this.wrapper, s3 = n3.loadOnDemand;
          if (e3.field) {
            if (!r3[0] || !r3[0].level) return;
            return this._updateItems(r3, e3.field);
          }
          if (i3 && (o3 = this.findByUid(i3.uid), this._progress(o3, false)), "add" == a3 ? this._appendItems(e3.index, r3, o3) : "remove" == a3 ? this.remove(this.findByUid(r3[0].uid)) : "itemchange" == a3 ? this._updateItems(r3) : "itemloaded" == a3 ? this._refreshChildren(i3, o3) : this._refreshRoot(r3), "remove" != a3) {
            for (var l3 = 0; l3 < r3.length; l3++) if (!s3 || r3[l3].expanded) {
              var d3 = r3[l3];
              this._hasChildItems(d3) && d3.load();
            }
          }
          this.trigger(A, { node: i3 ? o3 : t2 });
        }, _error: function(e3) {
          var t3 = e3.node && this.findByUid(e3.node.uid), i3 = this.templates.retry({ messages: this.options.messages });
          t3 ? (this._progress(t3, false), this._expanded(t3, false), n2(t3).addClass("k-i-refresh"), e3.node.loaded(false)) : (this._progress(false), this.element.html(i3));
        }, _retryRequest: function(e3) {
          e3.preventDefault(), this.dataSource.fetch();
        }, items: function() {
          return this.element.find(".k-item > span:first-child");
        }, setDataSource: function(e3) {
          this.options.dataSource = e3, this._dataSource(), this.options.autoBind && (this._progress(true), this.dataSource.fetch());
        }, _bindDataSource: function() {
          this._refreshHandler = this.refresh.bind(this), this._errorHandler = this._error.bind(this), this.dataSource.bind(x, this._refreshHandler), this.dataSource.bind(_2, this._errorHandler);
        }, _unbindDataSource: function() {
          var e3 = this.dataSource;
          e3 && (e3.unbind(x, this._refreshHandler), e3.unbind(_2, this._errorHandler));
        }, _fieldAccessor: function(t3) {
          var n3 = this.options[Q[t3]] || [], a3 = n3.length, r3 = "(function(item) {";
          return 0 === a3 ? r3 += "return item['" + t3 + "'];" : (r3 += "var levels = [" + e2.map(n3, function(e3) {
            return "function(d){ return " + i2.expr(e3) + "}";
          }).join(",") + "];", r3 += "if(item.level){return levels[Math.min(item.level(), " + a3 + "-1)](item);}else", r3 += "{return levels[" + a3 + "-1](item)}"), r3 += "})";
        }, _dataSource: function() {
          var e3 = this, t3 = e3.options.dataSource;
          t3 && (t3 = l2(t3) ? { data: t3 } : t3, e3._unbindDataSource(), t3.fields || (t3.fields = [{ field: "text" }, { field: "url" }, { field: "spriteCssClass" }, { field: "imageUrl" }]), e3.dataSource = c2.create(t3), e3._bindDataSource());
        }, _appendItems: function(t3, n3, i3) {
          var a3, r3, s3 = this;
          i3.hasClass("k-panelbar") ? (a3 = i3.children("li"), r3 = i3) : ((r3 = i3.children(".k-group")).length || (r3 = s3._addGroupElement(i3)), a3 = r3.children("li"));
          var l3 = { firstLevel: i3.hasClass("k-panelbar"), expanded: true, length: a3.length }, d3 = e2.map(n3, function(t4, n4) {
            return e2("string" == typeof t4 ? t4 : s3.renderItem({ group: l3, item: o2(t4, { index: n4 }) }));
          });
          void 0 === t3 && (t3 = a3.length);
          for (var u3 = 0; u3 < d3.length; u3++) 0 === a3.length || 0 === t3 ? r3.append(d3[u3]) : d3[u3].insertAfter(a3[t3 - 1]);
          s3._angularCompileElements(d3, n3), s3.dataItem(i3) && (s3.dataItem(i3).hasChildren = true, s3.updateArrow(i3));
        }, _updateItems: function(t3, n3) {
          var i3, r3, s3, l3, d3 = this, u3 = { panelBar: d3.options, item: l3, group: {} }, c3 = "expanded" != n3;
          if ("selected" == n3) if (t3[0][n3]) {
            var p3 = d3.findByUid(t3[0].uid);
            p3.hasClass(O) || d3.select(p3, true);
          } else d3.clearSelection();
          else {
            var h3 = e2.map(t3, function(e3) {
              return d3.findByUid(e3.uid);
            });
            for (c3 && d3.angular("cleanup", function() {
              return { elements: h3 };
            }), i3 = 0; i3 < t3.length; i3++) u3.item = l3 = t3[i3], u3.panelBar = d3, r3 = (s3 = h3[i3]).parent(), c3 && (u3.group = { firstLevel: r3.hasClass("k-panelbar"), expanded: s3.parent().hasClass(P), length: s3.children().length }, s3.children(".k-link").remove(), s3.prepend(d3.templates.itemWrapper(o2(u3, { arrow: l3.hasChildren || l3.content || l3.contentUrl ? d3.templates.arrow : d3.templates.empty }, X)))), "expanded" == n3 ? d3._toggleItem(s3, !l3[n3], !l3[n3] || "true") : "enabled" == n3 && (d3.enable(s3, l3[n3]), l3[n3] || l3.selected && l3.set("selected", false)), s3.length && this.trigger("itemChange", { item: s3.find(".k-link").first(), data: l3, ns: a2 });
            c3 && d3.angular("compile", function() {
              return { elements: h3, data: e2.map(t3, function(e3) {
                return [{ dataItem: e3 }];
              }) };
            });
          }
        }, _toggleDisabled: function(e3, t3) {
          (e3 = this.element.find(e3)).toggleClass(O, !t3).attr(j, !t3);
        }, dataItem: function(t3) {
          var n3 = e2(t3).closest(b2).attr(i2.attr("uid")), a3 = this.dataSource;
          return a3 && a3.getByUid(n3);
        }, select: function(n3, i3) {
          var a3 = this;
          return n3 === t2 ? a3.element.find(W).parent() : ((n3 = a3.element.find(n3)).length ? n3.each(function() {
            var t3 = e2(this), n4 = t3.children(v2);
            if (t3.hasClass(O)) return a3;
            a3._updateSelected(n4, i3);
          }) : this._updateSelected(n3), a3);
        }, clearSelection: function() {
          this.select(e2());
        }, enable: function(e3, t3) {
          return this._toggleDisabled(e3, false !== t3), this;
        }, disable: function(e3) {
          return this._toggleDisabled(e3, false), this;
        }, append: function(e3, t3) {
          t3 = this.element.find(t3);
          var n3 = this._insert(e3, t3, t3.length ? t3.find(H) : null);
          return s2(n3.items, function() {
            n3.group.append(this), J(this), Z(this);
          }), this.updateArrow(t3), J(n3.group.find(".k-first, .k-last")), n3.group.height("auto"), this;
        }, insertBefore: function(e3, t3) {
          t3 = this.element.find(t3);
          var n3 = this._insert(e3, t3, t3.parent());
          return s2(n3.items, function() {
            t3.before(this), J(this), Z(this);
          }), J(t3), n3.group.height("auto"), this;
        }, insertAfter: function(e3, t3) {
          t3 = this.element.find(t3);
          var n3 = this._insert(e3, t3, t3.parent());
          return s2(n3.items, function() {
            t3.after(this), J(this), Z(this);
          }), J(t3), n3.group.height("auto"), this;
        }, remove: function(e3) {
          var t3 = this, n3 = (e3 = this.element.find(e3)).parentsUntil(t3.element, b2), i3 = e3.parent("ul");
          return e3.remove(), !i3 || i3.hasClass("k-panelbar") || i3.children(b2).length || i3.remove(), n3.length && (n3 = n3.eq(0), t3.updateArrow(n3), J(n3)), t3;
        }, reload: function(t3) {
          var n3 = this;
          (t3 = n3.element.find(t3)).each(function() {
            var t4 = e2(this);
            n3._ajaxRequest(t4, t4.children("." + I), !t4.is($));
          });
        }, _first: function() {
          return this.element.children(V).first();
        }, _last: function() {
          var e3 = this.element.children(V).last(), t3 = e3.children(k2);
          return t3[0] ? t3.children(V).last() : e3;
        }, _current: function(n3) {
          var i3 = this, a3 = i3._focused, r3 = i3._itemId;
          if (n3 === t2) return a3;
          i3.element.removeAttr("aria-activedescendant"), a3 && a3.length && (a3[0].id === r3 && a3.removeAttr("id"), a3.children(v2).removeClass(R)), e2(n3).length && (r3 = n3[0].id || r3, n3.attr("id", r3).children(v2).addClass(R), i3.element.attr("aria-activedescendant", r3)), i3._focused = n3;
        }, _keydown: function(e3) {
          var t3 = this, n3 = e3.keyCode, i3 = t3._current();
          e3.target == e3.currentTarget && (n3 == r2.DOWN || n3 == r2.RIGHT ? (t3._current(t3._nextItem(i3)), e3.preventDefault()) : n3 == r2.UP || n3 == r2.LEFT ? (t3._current(t3._prevItem(i3)), e3.preventDefault()) : n3 == r2.ENTER || n3 == r2.SPACEBAR ? (t3._click(e3), e3.preventDefault()) : n3 == r2.HOME ? (t3._current(t3._first()), e3.preventDefault()) : n3 == r2.END && (t3._current(t3._last()), e3.preventDefault()));
        }, _nextItem: function(e3) {
          if (!e3) return this._first();
          var t3 = e3.children(k2), n3 = e3.nextAll(":visible").first();
          return t3[0] && (n3 = t3.children("." + y)), n3[0] || (n3 = e3.parent(k2).parent(b2).next()), n3[0] || (n3 = this._first()), n3;
        }, _prevItem: function(e3) {
          if (!e3) return this._last();
          var t3, n3 = e3.prevAll(":visible").first();
          if (n3[0]) for (t3 = n3; t3[0]; ) (t3 = t3.children(k2).children("." + m2))[0] && (n3 = t3);
          else (n3 = e3.parent(k2).parent(b2))[0] || (n3 = this._last());
          return n3;
        }, _insert: function(t3, n3, i3) {
          var a3, r3, s3 = this, l3 = e2.isPlainObject(t3), d3 = n3 && n3[0];
          if (d3 || (i3 = s3.element), r3 = { firstLevel: i3.hasClass("k-panelbar"), expanded: e2(n3).hasClass(P), length: i3.children().length }, d3 && !i3.length && (i3 = e2(s3.renderGroup({ group: r3, options: s3.options })).appendTo(n3)), l3 || Array.isArray(t3) || t3 instanceof c2) {
            if (t3 instanceof c2 && (t3 = t3.data()), a3 = e2.map(l3 ? [t3] : t3, function(t4, n4) {
              return e2("string" == typeof t4 ? t4 : s3.renderItem({ group: r3, item: o2(t4, { index: n4 }) }));
            }), d3) {
              var u3 = s3.dataItem(n3);
              u3 ? (u3.hasChildren = true, n3.attr(q, u3.expanded).not(".k-active").children("ul").attr(G, !u3.expanded)) : n3.attr(q, false);
            }
          } else a3 = "string" == typeof t3 && "<" != t3.charAt(0) ? s3.element.find(t3) : e2(t3), s3._updateItemsClasses(a3);
          return t3.length || (t3 = [t3]), s3._angularCompileElements(a3, t3), { items: a3, group: i3 };
        }, _toggleHover: function(t3) {
          var n3 = e2(t3.currentTarget);
          n3.parents("li.k-disabled").length || n3.toggleClass("k-hover", t3.type == F);
        }, _updateClasses: function() {
          var t3, n3, i3, a3, r3, o3 = this;
          a3 = (t3 = o3.element.find("li > ul").not(function() {
            return e2(this).parentsUntil(".k-panelbar", "div").length;
          }).addClass("k-panelbar-group k-group k-panel").attr("role", "group")).parent(), i3 = (r3 = o3.dataItem(a3)) && r3.expanded || false, t3.parent().not("[aria-expanded]").attr(q, i3).not(".k-active").children("ul").attr(G, !i3).hide(), n3 = o3.element.add(t3).children(), o3._updateItemsClasses(n3), o3.updateArrow(n3), J(n3);
        }, _updateItemsClasses: function(e3) {
          for (var t3 = e3.length, n3 = 0; n3 < t3; n3++) this._updateItemClasses(e3[n3], n3);
        }, _updateItemClasses: function(t3, n3) {
          var a3, r3, o3 = this._selected, s3 = this.options.contentUrls, l3 = s3 && s3[n3], d3 = this.element[0];
          t3 = e2(t3).addClass("k-item").attr({ role: "treeitem", "aria-selected": false }), i2.support.browser.msie && t3.css("list-style-position", "inside").css("list-style-position", ""), t3.children("img").addClass(w), (r3 = t3.children("a").addClass(g2))[0] && (r3.attr("href", l3), r3.children("img").addClass(w)), t3.filter("li[disabled]").addClass("k-disabled").attr(j, true).prop("disabled", false), t3.children("div").addClass(I + " k-panelbar-content").attr(G, true).hide().parent().attr(q, false), (r3 = t3.children(B))[0] && (o3 && o3.attr(K, false).children(B).removeClass(M), r3.addClass(M), this._selected = t3.attr(K, true)), t3.children(v2)[0] || (a3 = "<span class='k-link'><span class='k-panelbar-item-text'></span></span>", s3 && s3[n3] && t3[0].parentNode == d3 && (a3 = '<a class="k-link" href="' + s3[n3] + '"></a>'), t3.contents().filter(function() {
            return !(this.nodeName.match(p2) || 3 == this.nodeType && !i2.trim(this.nodeValue.trim));
          }).wrapAll(a3)), t3.parent(".k-panelbar")[0] ? t3.addClass("k-panelbar-header") : t3.addClass("k-panelbar-item"), /k\-level\-\d+/i.test(t3.attr("class")) || t3.addClass("k-level-" + t3.parentsUntil(this.element, "ul").length);
        }, _click: function(t3) {
          var n3, i3, a3, r3 = this, o3 = t3.type == S ? e2(t3.target) : r3._current().children(v2), s3 = r3.element;
          if (!o3.parents("li.k-disabled").length && o3.closest(".k-panelbar")[0] == s3[0] && (!o3.is(":kendoFocusable") || o3.hasClass(g2))) {
            var l3 = o3.closest(v2), d3 = l3.closest(b2);
            r3._updateSelected(l3);
            var u3 = d3.children(".k-group,.k-content"), c3 = this.dataItem(d3);
            if (!u3.length && (r3.options.loadOnDemand && c3 && c3.hasChildren || this._hasChildItems(d3) || d3.content || d3.contentUrl) && (u3 = r3._addGroupElement(d3)), i3 = d3.find(H).add(d3.find(N)), n3 = !(!((a3 = l3.attr(f2)) && ("#" == a3.charAt(a3.length - 1) || -1 != a3.indexOf("#" + r3.element[0].id + "-"))) && !i3.length), i3.data("animating") && n3) t3.preventDefault();
            else if (r3._triggerEvent(T, d3) && (n3 = true), false !== n3) if (r3.options.expandMode == Y && r3._collapseAllExpanded(d3) && n3) t3.preventDefault();
            else {
              if (i3.length) {
                var p3 = i3.is($);
                r3._triggerEvent(p3 ? E : C, d3) || (n3 = r3._toggleItem(d3, p3));
              }
              n3 && t3.preventDefault();
            }
          }
        }, _hasChildItems: function(e3) {
          return e3.items && e3.items.length > 0 || e3.hasChildren;
        }, _toggleItem: function(e3, n3, i3) {
          var a3, r3, o3 = this, s3 = e3.find(H), l3 = e3.find(v2).attr(f2), d3 = o3.dataItem(e3), u3 = !n3, c3 = d3 && d3.loaded();
          return d3 && !i3 && d3.expanded !== u3 ? (d3.set("expanded", u3), a3 = d3.hasChildren || !!d3.content || !!d3.contentUrl) : (!d3 || i3 && "true" !== i3 || c3 || d3.content || d3.contentUrl ? s3.length ? (this._toggleGroup(s3, n3), a3 = true) : (r3 = e3.children("." + I)).length && (a3 = true, r3.is(":empty") && l3 !== t2 ? o3._ajaxRequest(e3, r3, n3) : o3._toggleGroup(r3, n3)) : (o3.options.loadOnDemand && this._progress(e3, true), e3.children(".k-group,.k-content").remove(), a3 = d3.hasChildren, d3.load()), a3);
        }, _toggleGroup: function(e3, t3) {
          var n3 = this, i3 = n3.options.animation, a3 = i3.expand, r3 = i3.collapse && "effects" in i3.collapse, s3 = o2({}, i3.expand, i3.collapse);
          r3 || (s3 = o2(s3, { reverse: true })), e3.is($) == t3 ? (e3.attr(G, !!t3), e3.parent().attr(q, !t3).toggleClass(P, !t3).find("> .k-link > .k-panelbar-collapse,> .k-link > .k-panelbar-expand").toggleClass("k-i-arrow-chevron-up", !t3).toggleClass("k-panelbar-collapse", !t3).toggleClass("k-i-arrow-chevron-down", t3).toggleClass("k-panelbar-expand", t3), t3 ? (a3 = o2(s3, { hide: true })).complete = function() {
            n3._animationCallback();
          } : a3 = o2({ complete: function(e4) {
            n3._triggerEvent(D, e4.closest(b2)), n3._animationCallback();
          } }, a3), e3.toggle(0).kendoStop(true, true).kendoAnimate(a3)) : n3._animating = false;
        }, _animationCallback: function() {
          this.trigger("complete"), this._animating = false;
        }, _addGroupElement: function(t3) {
          var n3 = e2('<ul role="group" aria-hidden="true" class="k-panelbar-group k-group k-panel" style="display:none"></ul>');
          return t3.append(n3), n3;
        }, _collapseAllExpanded: function(t3) {
          var n3, i3 = this, a3 = false, r3 = t3.find(H).add(t3.find(N));
          return r3.is($) && (a3 = true), r3.is($) || 0 === r3.length || ((n3 = t3.siblings()).find(H).add(n3.find(N)).filter(function() {
            return e2(this).is($);
          }).each(function(t4, n4) {
            n4 = e2(n4), (a3 = i3._triggerEvent(E, n4.closest(b2))) || i3._toggleGroup(n4, true);
          }), i3.one("complete", function() {
            setTimeout(function() {
              n3.each(function(e3, t4) {
                var n4 = i3.dataItem(t4);
                n4 && n4.set("expanded", false);
              });
            });
          })), a3;
        }, _ajaxRequest: function(t3, n3, i3) {
          var a3 = this, r3 = t3.find(".k-panelbar-collapse, .k-panelbar-expand"), o3 = t3.find(v2), s3 = setTimeout(function() {
            r3.addClass("k-i-loading");
          }, 100), l3 = o3.attr(f2);
          e2.ajax({ type: "GET", cache: false, url: l3, dataType: "html", data: {}, error: function(e3, t4) {
            r3.removeClass("k-i-loading"), a3.trigger(_2, { xhr: e3, status: t4 }) && this.complete();
          }, complete: function() {
            clearTimeout(s3), r3.removeClass("k-i-loading");
          }, success: function(e3) {
            function r4() {
              return { elements: n3.get() };
            }
            try {
              a3.angular("cleanup", r4), n3.html(e3), a3.angular("compile", r4);
            } catch (e4) {
              var o4 = window.console;
              o4 && o4.error && o4.error(e4.name + ": " + e4.message + " in " + l3), this.error(this.xhr, "error");
            }
            a3._toggleGroup(n3, i3), a3.trigger(z, { item: t3[0], contentElement: n3[0] });
          } });
        }, _triggerEvent: function(e3, t3) {
          return this.trigger(e3, { item: t3[0] });
        }, _updateSelected: function(e3, t3) {
          var n3 = this, i3 = n3.element, a3 = e3.parent(b2), r3 = n3._selected, o3 = n3.dataItem(a3);
          r3 && r3.attr(K, false), n3._selected = a3.attr(K, true), i3.find(W).removeClass(M), i3.find("> .k-highlight, .k-panel > .k-highlight").removeClass(L), e3.addClass(M), e3.parentsUntil(i3, b2).filter(":has(.k-link)").addClass(L), n3._current(a3[0] ? a3 : null), o3 && o3.set("selected", true), t3 || n3.trigger(x);
        }, _animations: function(e3) {
          e3 && "animation" in e3 && !e3.animation && (e3.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } });
        }, renderItem: function(e3) {
          var t3 = this;
          e3 = o2({ panelBar: t3, group: {} }, e3);
          var n3 = t3.templates.empty, i3 = e3.item;
          return t3.templates.item(o2(e3, { itemWrapper: t3.templates.itemWrapper, renderContent: t3.renderContent, arrow: t3._hasChildItems(i3) || i3.content || i3.contentUrl ? t3.templates.arrow : n3, subGroup: !e3.loadOnDemand || i3.expanded ? t3.renderGroup : n3 }, X));
        }, renderGroup: function(e3) {
          return (this.templates || e3.panelBar.templates).group(o2({ renderItems: function(e4) {
            for (var t3 = "", n3 = 0, i3 = e4.items, a3 = i3 ? i3.length : 0, r3 = o2({ length: a3 }, e4.group); n3 < a3; n3++) t3 += e4.panelBar.renderItem(o2(e4, { group: r3, item: o2({ index: n3 }, i3[n3]) }));
            return t3;
          } }, e3, X));
        }, renderContent: function(e3) {
          return e3.panelBar.templates.content(o2(e3, X));
        } });
        i2.ui.plugin(ee);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = n2.keys, r2 = e2.extend, o2 = i2.Widget, s2 = /^\d+(\.\d+)?px$/i, l2 = /^\d+(\.\d+)?%$/i, d2 = ".kendoSplitter", u2 = "expand", c2 = "collapse", p2 = "contentLoad", h2 = "error", f2 = "layoutChange", m2 = "horizontal", g2 = "vertical", v2 = "click", _2 = "pane", b2 = "k-focus", k2 = "k-pane", w = ".k-pane";
        function y(e3) {
          return l2.test(e3);
        }
        function x(e3) {
          return s2.test(e3) || /^\d+$/.test(e3);
        }
        function C(e3) {
          return !y(e3) && !x(e3);
        }
        function T(e3, t3) {
          var n3 = parseInt(e3, 10);
          return y(e3) && (n3 = Math.floor(n3 * t3 / 100)), n3;
        }
        function S(e3, t3) {
          return function(n3, i3) {
            var a3 = this.element.find(n3).data(_2);
            if (1 == arguments.length) return a3[e3];
            if (a3[e3] = i3, t3) {
              var r3 = this.element.data("kendo" + this.options.name);
              r3.resize(true);
            }
          };
        }
        var I = o2.extend({ init: function(e3, t3) {
          var i3, r3 = this;
          o2.fn.init.call(r3, e3, t3), r3.wrapper = r3.element, r3.options.orientation && (i3 = r3.options.orientation.toLowerCase() != g2), r3.orientation = i3 ? m2 : g2, r3._dimension = i3 ? "width" : "height", r3._keys = { decrease: i3 ? a2.LEFT : a2.UP, increase: i3 ? a2.RIGHT : a2.DOWN }, r3._resizeStep = 10, r3._marker = n2.guid().substring(0, 8), r3._initPanes(), r3.resizing = new A(r3), r3.element.triggerHandler("init" + d2);
        }, events: [u2, c2, p2, h2, "resize", f2], _addOverlays: function() {
          this._panes().append("<div class='k-splitter-overlay k-overlay' />");
        }, _removeOverlays: function() {
          this._panes().children(".k-splitter-overlay").remove();
        }, _attachEvents: function() {
          var t3 = this, n3 = t3.options.orientation;
          t3.element.children(".k-splitbar-draggable-" + n3).on("keydown" + d2, t3._keydown.bind(t3)).on("mousedown" + d2, function(e3) {
            e3.currentTarget.focus();
          }).on("focus" + d2, function(t4) {
            e2(t4.currentTarget).addClass(b2);
          }).on("blur" + d2, function(n4) {
            e2(n4.currentTarget).removeClass(b2), t3.resizing && t3.resizing.end();
          }).on("mouseenter" + d2, function() {
            e2(this).addClass("k-splitbar-" + t3.orientation + "-hover");
          }).on("mouseleave" + d2, function() {
            e2(this).removeClass("k-splitbar-" + t3.orientation + "-hover");
          }).on("mousedown" + d2, t3._addOverlays.bind(t3)).end().children(".k-splitbar").on("dblclick" + d2, t3._togglePane.bind(t3)).children(".k-collapse-next, .k-collapse-prev").on(v2 + d2, t3._arrowClick(c2)).end().children(".k-expand-next, .k-expand-prev").on(v2 + d2, t3._arrowClick(u2)).end().end(), e2(window).on("resize" + d2 + t3._marker, t3.resize.bind(t3, false)), e2(document).on("mouseup" + d2 + t3._marker, t3._removeOverlays.bind(t3));
        }, _detachEvents: function() {
          var t3 = this;
          t3.element.children(".k-splitbar-draggable-" + t3.orientation).off(d2).end().children(".k-splitbar").off("dblclick" + d2).children(".k-collapse-next, .k-collapse-prev, .k-expand-next, .k-expand-prev").off(d2), e2(window).off(d2 + t3._marker), e2(document).off(d2 + t3._marker);
        }, options: { name: "Splitter", orientation: m2, panes: [] }, destroy: function() {
          o2.fn.destroy.call(this), this._detachEvents(), this.resizing && this.resizing.destroy(), n2.destroy(this.element), this.wrapper = this.element = null;
        }, _keydown: function(t3) {
          var n3, i3 = this, r3 = t3.keyCode, o3 = i3.resizing, s3 = e2(t3.currentTarget), l3 = i3._keys, d3 = r3 === l3.increase, p3 = r3 === l3.decrease;
          d3 || p3 ? (t3.ctrlKey ? (n3 = s3[p3 ? "next" : "prev"](), o3 && o3.isResizing() && o3.end(), n3[i3._dimension]() ? i3._triggerAction(c2, s3[p3 ? "prev" : "next"]()) : i3._triggerAction(u2, n3)) : o3 && o3.move((p3 ? -1 : 1) * i3._resizeStep, s3), t3.preventDefault()) : r3 === a2.HOME ? (n3 = s3.prev(), i3.collapse(n3), t3.preventDefault()) : r3 === a2.END ? (n3 = s3.prev(), i3.expand(n3), t3.preventDefault()) : r3 === a2.ENTER && o3 && (o3.end(), t3.preventDefault());
        }, _initPanes: function() {
          var e3 = this.options.panes || [], t3 = this;
          this.element.addClass("k-widget").addClass("k-splitter").children().each(function(n3, i3) {
            "script" != i3.nodeName.toLowerCase() && t3._initPane(i3, e3[n3]);
          }), this.resize();
        }, _initPane: function(t3, n3) {
          (t3 = e2(t3).attr("role", "group").addClass(k2)).data(_2, n3 || {}).toggleClass("k-scrollable", !n3 || false !== n3.scrollable), this.ajaxRequest(t3);
        }, ajaxRequest: function(e3, t3, i3) {
          var a3, r3 = this;
          a3 = (e3 = r3.element.find(e3)).data(_2), (t3 = t3 || a3.contentUrl) && (e3.append("<span class='k-icon k-i-loading k-pane-loading' />"), n2.isLocalUrl(t3) ? jQuery2.ajax({ url: t3, data: i3 || {}, type: "GET", dataType: "html", success: function(t4) {
            r3.angular("cleanup", function() {
              return { elements: e3.get() };
            }), e3.html(t4), r3.angular("compile", function() {
              return { elements: e3.get() };
            }), r3.trigger(p2, { pane: e3[0] });
          }, error: function(t4, n3) {
            r3.trigger(h2, { pane: e3[0], status: n3, xhr: t4 });
          } }) : e3.removeClass("k-scrollable").html("<iframe src='" + t3 + "' frameborder='0' class='k-content-frame'>This page requires frames in order to show content</iframe>"));
        }, _triggerAction: function(e3, t3) {
          var n3 = t3.data(_2), i3 = n3.collapsed && e3 == u2 || !n3.collapsed && e3 == c2;
          n3.collapsible && i3 && !this.trigger(e3, { pane: t3[0] }) && this[e3](t3[0]);
        }, _togglePane: function(t3) {
          var n3, i3 = this, a3 = e2(t3.target);
          a3.closest(".k-splitter")[0] == i3.element[0] && 1 === (n3 = a3.children(".k-icon:not(.k-resize-handle)")).length && (n3.is(".k-collapse-prev") ? i3._triggerAction(c2, a3.prev()) : n3.is(".k-collapse-next") ? i3._triggerAction(c2, a3.next()) : n3.is(".k-expand-prev") ? i3._triggerAction(u2, a3.prev()) : n3.is(".k-expand-next") && i3._triggerAction(u2, a3.next()));
        }, _arrowClick: function(t3) {
          var n3 = this;
          return function(i3) {
            var a3, r3 = e2(i3.target);
            r3.closest(".k-splitter")[0] == n3.element[0] && (a3 = r3.is(".k-" + t3 + "-prev") ? r3.parent().prev() : r3.parent().next(), n3._triggerAction(t3, a3));
          };
        }, _updateSplitBar: function(e3, t3, i3, a3) {
          var r3 = function(e4, t4) {
            return t4 ? "<div class='k-icon " + e4 + "'></div>" : "";
          }, o3 = this.orientation, s3 = false !== t3.resizable && false !== i3.resizable, l3 = t3.collapsible, d3 = t3.collapsed, u3 = i3.collapsible, c3 = i3.collapsed, p3 = a3.attr("id");
          p3 || (p3 = n2.guid(), a3.attr("id", p3)), e3.addClass("k-splitbar k-splitbar-" + o3).attr("role", "separator").attr("aria-valuemin", "0").attr("aria-valuemax", "100").attr("aria-controls", p3).removeClass("k-splitbar-" + o3 + "-hover").toggleClass("k-splitbar-draggable-" + o3, s3 && !d3 && !c3).toggleClass("k-splitbar-static-" + o3, !s3 && !l3 && !u3).html(r3("k-collapse-prev k-i-arrow-60-up", l3 && !d3 && !c3 && o3 == g2) + r3("k-collapse-prev k-i-arrow-60-left", l3 && !d3 && !c3 && o3 == m2) + r3("k-expand-prev k-i-arrow-60-down", l3 && d3 && !c3 && o3 == g2) + r3("k-expand-prev k-i-arrow-60-right", l3 && d3 && !c3 && o3 == m2) + r3("k-resize-handle k-i-hbar", s3 && o3 == g2) + r3("k-resize-handle k-i-vbar", s3 && o3 == m2) + r3("k-collapse-next k-i-arrow-60-down", u3 && !c3 && !d3 && o3 == g2) + r3("k-collapse-next k-i-arrow-60-right", u3 && !c3 && !d3 && o3 == m2) + r3("k-expand-next k-i-arrow-60-up", u3 && c3 && !d3 && o3 == g2) + r3("k-expand-next k-i-arrow-60-left", u3 && c3 && !d3 && o3 == m2)), t3.labelId ? e3.attr("aria-labelledby", t3.labelId) : t3.label && e3.attr("aria-label", t3.label), o3 == m2 && e3.attr("aria-orientation", g2), s3 || l3 || u3 || e3.removeAttr("tabindex");
        }, _updateSplitBars: function() {
          var t3 = this;
          this.element.children(".k-splitbar").each(function() {
            var n3 = e2(this), i3 = n3.prevAll(w).first(), a3 = i3.data(_2), r3 = n3.nextAll(w).first().data(_2);
            r3 && t3._updateSplitBar(n3, a3, r3, i3);
          });
        }, _removeSplitBars: function() {
          this.element.children(".k-splitbar").remove();
        }, _panes: function() {
          return this.element ? this.element.children(w) : e2();
        }, _resetAriaValueNow: function(e3, t3) {
          var n3, i3, a3;
          for (n3 = 0; n3 < e3.length; n3++) a3 = t3[n3] + t3[n3 + 1] || 1, i3 = Math.round(t3[n3] / a3 * 100), e3[n3].setAttribute("aria-valuenow", i3);
        }, _resize: function() {
          var t3 = this, i3 = t3.element, a3 = i3.children(w), r3 = t3.orientation == m2, o3 = i3.children(".k-splitbar"), s3 = o3.length, l3 = r3 ? "width" : "height", d3 = i3[l3](), u3 = [];
          t3.wrapper.addClass("k-splitter-resizing"), 0 === s3 ? (s3 = a3.length - 1, a3.slice(0, s3).after("<div tabindex='0' class='k-splitbar' data-marker='" + t3._marker + "' />"), t3._updateSplitBars(), o3 = i3.children(".k-splitbar")) : t3._updateSplitBars(), o3.each(function() {
            d3 -= this[r3 ? "offsetWidth" : "offsetHeight"];
          });
          var c3 = 0, p3 = e2();
          a3.css({ position: "absolute", top: 0 })[l3](function() {
            var t4, n3 = e2(this), i4 = n3.data(_2) || {};
            if (n3.removeClass("k-collapsed"), i4.collapsed) t4 = i4.collapsedSize ? T(i4.collapsedSize, d3) : 0, n3.css("overflow", "hidden").addClass("k-collapsed");
            else {
              if (C(i4.size)) return p3 = p3.add(this), void u3.push(false);
              t4 = T(i4.size, d3);
            }
            return c3 += t4, u3.push(t4), t4;
          }), d3 -= c3;
          var h3 = p3.length, g3 = Math.floor(d3 / h3);
          p3.slice(0, h3 - 1).css(l3, g3).end().eq(h3 - 1).css(l3, d3 - (h3 - 1) * g3), u3.forEach(function(e3, t4) {
            false === e3 && (u3[t4] = g3);
          }), t3._resetAriaValueNow(o3, u3);
          var v3 = 0, b3 = r3 ? "height" : "width", k3 = r3 ? "left" : "top", y2 = r3 ? "offsetWidth" : "offsetHeight";
          if (0 === h3) {
            var x2 = a3.filter(function() {
              return !(e2(this).data(_2) || {}).collapsed;
            }).last();
            x2[l3](d3 + x2[0][y2]);
          }
          i3.children().css(b3, i3[b3]()).each(function(e3, t4) {
            "script" != t4.tagName.toLowerCase() && (t4.style[k3] = Math.floor(v3) + "px", v3 += t4[y2]);
          }), t3._detachEvents(), t3._attachEvents(), t3.wrapper.removeClass("k-splitter-resizing"), n2.resize(a3), t3.trigger(f2);
        }, toggle: function(e3, n3) {
          var i3, a3 = this;
          i3 = (e3 = a3.element.find(e3)).data(_2), (n3 || i3.collapsible) && (1 == arguments.length && (n3 = i3.collapsed !== t2 && i3.collapsed), i3.collapsed = !n3, i3.collapsed ? e3.css("overflow", "hidden") : e3.css("overflow", ""), a3.resize(true));
        }, collapse: function(e3) {
          this.toggle(e3, false);
        }, expand: function(e3) {
          this.toggle(e3, true);
        }, _addPane: function(e3, t3, n3) {
          var i3 = this;
          return n3.length && (i3.options.panes.splice(t3, 0, e3), i3._initPane(n3, e3), i3._removeSplitBars(), i3.resize(true)), n3;
        }, append: function(t3) {
          t3 = t3 || {};
          var n3 = this, i3 = e2("<div />").appendTo(n3.element);
          return n3._addPane(t3, n3.options.panes.length, i3);
        }, insertBefore: function(t3, n3) {
          n3 = e2(n3), t3 = t3 || {};
          var i3 = this.wrapper.children(".k-pane").index(n3), a3 = e2("<div />").insertBefore(e2(n3));
          return this._addPane(t3, i3, a3);
        }, insertAfter: function(t3, n3) {
          n3 = e2(n3), t3 = t3 || {};
          var i3 = this.wrapper.children(".k-pane").index(n3), a3 = e2("<div />").insertAfter(e2(n3));
          return this._addPane(t3, i3 + 1, a3);
        }, remove: function(t3) {
          var i3 = this;
          return (t3 = i3.wrapper.find(t3)).length && (n2.destroy(t3), t3.each(function(t4, n3) {
            i3.options.panes.splice(i3.wrapper.children(".k-pane").index(n3), 1), e2(n3).remove();
          }), i3._removeSplitBars(), i3.options.panes.length && i3.resize(true)), i3;
        }, size: S("size", true), min: S("min"), max: S("max") });
        i2.plugin(I);
        var D = { sizingProperty: "height", sizingDomProperty: "offsetHeight", alternateSizingProperty: "width", positioningProperty: "top", mousePositioningProperty: "pageY" }, E = { sizingProperty: "width", sizingDomProperty: "offsetWidth", alternateSizingProperty: "height", positioningProperty: "left", mousePositioningProperty: "pageX" };
        function A(e3) {
          var t3 = this, i3 = e3.orientation;
          t3.owner = e3, t3._element = e3.element, t3.orientation = i3, r2(t3, i3 === m2 ? E : D), t3._resizable = new n2.ui.Resizable(e3.element, { orientation: i3, handle: ".k-splitbar-draggable-" + i3 + "[data-marker=" + e3._marker + "]", hint: t3._createHint.bind(t3), start: t3._start.bind(t3), max: t3._max.bind(t3), min: t3._min.bind(t3), invalidClass: "k-restricted-size-" + i3, resizeend: t3._stop.bind(t3) });
        }
        A.prototype = { press: function(e3) {
          this._resizable.press(e3);
        }, move: function(e3, t3) {
          this.pressed || (this.press(t3), this.pressed = true), this._resizable.target || this._resizable.press(t3), this._resizable.move(e3);
        }, end: function() {
          this._resizable.end(), this.pressed = false;
        }, destroy: function() {
          this._resizable.destroy(), this._resizable = this._element = this.owner = null;
        }, isResizing: function() {
          return this._resizable.resizing;
        }, _createHint: function(t3) {
          var n3 = this;
          return e2("<div class='k-ghost-splitbar k-ghost-splitbar-" + n3.orientation + "' />").css(n3.alternateSizingProperty, t3[n3.alternateSizingProperty]());
        }, _start: function(t3) {
          var n3 = this, i3 = e2(t3.currentTarget), a3 = i3.prev(), r3 = i3.next(), o3 = a3.data(_2), s3 = r3.data(_2), l3 = parseInt(a3[0].style[n3.positioningProperty], 10), d3 = parseInt(r3[0].style[n3.positioningProperty], 10) + r3[0][n3.sizingDomProperty] - i3[0][n3.sizingDomProperty], u3 = parseInt(n3._element.css(n3.sizingProperty), 10), c3 = function(e3) {
            var t4 = parseInt(e3, 10);
            return (x(e3) ? t4 : u3 * t4 / 100) || 0;
          }, p3 = c3(o3.min), h3 = c3(o3.max) || d3 - l3, f3 = c3(s3.min), m3 = c3(s3.max) || d3 - l3;
          n3.previousPane = a3, n3.nextPane = r3, n3._maxPosition = Math.min(d3 - f3, l3 + h3), n3._minPosition = Math.max(l3 + p3, d3 - m3);
        }, _max: function() {
          return this._maxPosition;
        }, _min: function() {
          return this._minPosition;
        }, _stop: function(t3) {
          var i3 = this, a3 = e2(t3.currentTarget), r3 = i3.owner;
          if (r3._panes().children(".k-splitter-overlay").remove(), t3.keyCode !== n2.keys.ESC) {
            var o3 = t3.position, s3 = a3.prev(), l3 = a3.next(), d3 = s3.data(_2), u3 = l3.data(_2), c3 = o3 - parseInt(s3[0].style[i3.positioningProperty], 10), p3 = parseInt(l3[0].style[i3.positioningProperty], 10) + l3[0][i3.sizingDomProperty] - o3 - a3[0][i3.sizingDomProperty], h3 = i3._element.children(w).filter(function() {
              return C(e2(this).data(_2).size);
            }).length;
            (!C(d3.size) || h3 > 1) && (C(d3.size) && h3--, d3.size = c3 + "px"), (!C(u3.size) || h3 > 1) && (u3.size = p3 + "px"), r3.resize(true);
          }
          return false;
        } };
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = n2.ui.Popup, r2 = n2.isFunction, o2 = e2.isPlainObject, s2 = e2.extend, l2 = e2(document), d2 = n2.isLocalUrl, u2 = "_tb_active", c2 = "aria-describedby", p2 = "show", h2 = "hide", f2 = "error", m2 = "contentLoad", g2 = "requestStart", v2 = "k-content-frame", _2 = n2.template("<iframe frameborder='0' class='k-content-frame' src='#= content.url #'>This page requires frames in order to show content</iframe>"), b2 = ".kendoTooltip", k2 = { bottom: { origin: "bottom center", position: "top center" }, top: { origin: "top center", position: "bottom center" }, left: { origin: "center left", position: "center right", collision: "fit flip" }, right: { origin: "center right", position: "center left", collision: "fit flip" }, center: { position: "center center", origin: "center center" } }, w = { top: "bottom", bottom: "top", left: "right", right: "left", center: "center" }, y = { bottom: "n", top: "s", left: "e", right: "w", center: "n" }, x = { horizontal: { offset: "top", size: "outerHeight" }, vertical: { offset: "left", size: "outerWidth" } };
        function C(e3) {
          for (; e3.length && !T(e3); ) e3 = e3.parent();
        }
        function T(e3) {
          var t3 = e3.data(n2.ns + "title");
          if (t3) return e3.attr("title", t3), e3.removeData(n2.ns + "title"), true;
        }
        function S(e3) {
          var t3 = e3.attr("title");
          if (t3) return e3.data(n2.ns + "title", t3), e3.attr("title", ""), true;
        }
        function I(e3) {
          for (; e3.length && !e3.is("body") && !S(e3); ) e3 = e3.parent();
        }
        var D = i2.extend({ init: function(e3, t3) {
          var a3, r3 = this;
          i2.fn.init.call(r3, e3, t3), a3 = r3.options.position.match(/left|right/) ? "horizontal" : "vertical", r3.dimensions = x[a3], n2.support.touch && this._isShownOnMouseEnter() && r3.element.on(n2.support.mousedown + b2, r3.options.filter, r3._showOn.bind(r3)), r3.element.on(r3.options.showOn + b2, r3.options.filter, r3._showOn.bind(r3)), "click" === r3.options.showOn && r3.element.on("keydown" + b2, r3.options.filter, r3._keydown.bind(r3));
        }, options: { name: "TooltipBase", filter: "", offset: 0, showAfter: 100, hideAfter: 100, callout: true, position: "bottom", showOn: "mouseenter", animation: { open: { effects: "fade:in", duration: 0 }, close: { duration: 40, hide: true } } }, destroy: function() {
          var e3 = this.popup;
          e3 && (e3.element.off(b2), e3.destroy()), clearTimeout(this.timeout), i2.fn.destroy.call(this);
        }, hide: function() {
          this.popup && this.popup.close();
        }, show: function(e3) {
          e3 = e3 || this.element, this._saveTitle(e3), this._show(e3);
        }, target: function() {
          return this.popup ? this.popup.options.anchor : null;
        }, _keydown: function(t3) {
          var i3 = e2(t3.currentTarget);
          t3.keyCode == n2.keys.ENTER && this._show(i3);
        }, _showOn: function(t3) {
          var n3 = this, i3 = e2(t3.currentTarget);
          n3._isShownOnClick() && !n3._isShownOnMouseEnter() ? n3._show(i3) : n3._isShownOnFocus() ? (n3._saveTitle(i3), n3._show(i3)) : (clearTimeout(n3.timeout), n3.timeout = setTimeout(function() {
            n3._show(i3);
          }, n3.options.showAfter));
        }, _isShownOnFocus: function() {
          return this.options.showOn && this.options.showOn.match(/focus/);
        }, _isShownOnMouseEnter: function() {
          return this.options.showOn && this.options.showOn.match(/mouseenter/);
        }, _isShownOnClick: function() {
          return this.options.showOn && this.options.showOn.match(/click/);
        }, _positionCallout: function() {
          var t3 = this, n3 = t3.options.position, i3 = t3.dimensions, a3 = i3.offset, r3 = t3.popup, o3 = r3.options.anchor, s3 = e2(o3).offset(), l3 = e2(r3.element).offset(), d3 = y[r3.flipped ? w[n3] : n3], u3 = s3[a3] - l3[a3] + e2(o3)[i3.size]() / 2;
          t3._offset(n3, t3.options.offset), t3.arrow.removeClass("k-callout-n k-callout-s k-callout-w k-callout-e").addClass("k-callout-" + d3).css(a3, u3);
        }, _offset: function(e3, t3, i3) {
          var a3 = this, r3 = "top" == e3 || "left" == e3, o3 = a3.popup.flipped, s3 = r3 && o3 || !r3 && !o3 ? 1 : -1, l3 = r3 ? "margin-" + e3 : "margin-" + w[e3], d3 = (i3 || n2._outerWidth(a3.arrow)) / 2 + t3;
          a3.popup.wrapper.css(l3, d3 * s3 + "px");
        }, _addDescribedBy: function() {
          var e3 = this, t3 = e3.popup.options.anchor, i3 = t3[0].id || e3.element[0].id || n2.guid(), a3 = [];
          t3.attr(c2) && a3.push(t3.attr(c2)), i3 && (a3.push(i3 + u2), t3.attr(c2, a3.join(" ")), e3.popup.element.attr("id", i3 + u2));
        }, _removeDescribedBy: function(e3) {
          var t3, n3, i3, a3 = this.popup.element.attr("id"), r3 = e3.attr(c2);
          r3 && ((t3 = r3.split(" ")) && t3.length > 0 && (n3 = t3.filter(function(e4) {
            return e4 !== a3;
          })), n3 && n3.length > 0 ? (i3 = n3.join(" "), e3.attr(c2, i3)) : e3.removeAttr(c2));
        }, _openPopup: function() {
          this.popup && (this.popup._hovered = true, this.popup.open());
        } });
        n2.ui.plugin(D);
        var E = D.extend({ init: function(e3, t3) {
          var i3, a3 = this;
          D.fn.init.call(a3, e3, t3), i3 = a3.options.position.match(/left|right/) ? "horizontal" : "vertical", a3.dimensions = x[i3], a3._documentKeyDownHandler = a3._documentKeyDown.bind(a3), (this._isShownOnMouseEnter() || this._isShownOnClick()) && a3.element.on("mouseenter" + b2, a3.options.filter, a3._mouseenter.bind(a3)), this.options.autoHide && this._isShownOnMouseEnter() && a3.element.on("mouseleave" + b2, a3.options.filter, a3._mouseleave.bind(a3)), this.options.autoHide && this._isShownOnFocus() && a3.element.on("blur" + b2, a3.options.filter, a3._blur.bind(a3)), n2.support.touch && a3.element.on(n2.support.mousedown + b2, a3.options.filter, a3._mouseenter.bind(a3));
        }, options: { name: "Tooltip", filter: "", content: function(e3) {
          return e3.target.data(n2.ns + "title");
        }, showAfter: 100, callout: true, offset: 0, position: "bottom", showOn: "mouseenter", autoHide: true, width: null, height: null, animation: { open: { effects: "fade:in", duration: 0 }, close: { duration: 40, hide: true } } }, events: [p2, h2, m2, f2, g2], _mouseenter: function(t3) {
          I(e2(t3.currentTarget));
        }, _saveTitle: function(e3) {
          I(e3);
        }, _appendContent: function(e3) {
          var t3, i3 = this, a3 = i3.options.content, s3 = i3.content, l3 = i3.options.iframe;
          o2(a3) && a3.url ? ("iframe" in i3.options || (l3 = !d2(a3.url)), i3.trigger(g2, { options: a3, target: e3 }), l3 ? (s3.hide(), (t3 = s3.find("." + v2)[0]) ? t3.src = a3.url || t3.src : s3.html(_2({ content: a3 })), s3.find("." + v2).off("load" + b2).on("load" + b2, function() {
            i3.trigger(m2), s3.show();
          })) : (s3.empty(), n2.ui.progress(s3, true), i3._ajaxRequest(a3))) : a3 && r2(a3) ? (a3 = a3({ sender: this, target: e3 }), s3.html(a3 || "")) : s3.html(a3), i3.angular("compile", function() {
            return { elements: s3 };
          });
        }, _ajaxRequest: function(e3) {
          var t3 = this;
          jQuery2.ajax(s2({ type: "GET", dataType: "html", cache: false, error: function(e4, i3) {
            n2.ui.progress(t3.content, false), t3.trigger(f2, { status: i3, xhr: e4 });
          }, success: function(e4) {
            n2.ui.progress(t3.content, false), t3.content.html(e4), n2._outerHeight(t3.popup.element) > n2._outerHeight(t3.popup.wrapper) && (t3.popup.wrapper.css("height", n2._outerHeight(t3.popup.element) + "px"), t3.popup.position(), t3._positionCallout()), t3.trigger(m2);
          }.bind(t3) }, e3));
        }, _documentKeyDown: function(e3) {
          e3.keyCode === n2.keys.ESC && this.hide();
        }, refresh: function() {
          var e3 = this.popup;
          e3 && e3.options.anchor && this._appendContent(e3.options.anchor);
        }, _show: function(e3) {
          var t3 = this, n3 = t3.target();
          t3.popup || t3._initPopup(), n3 && n3[0] != e3[0] && (t3.popup.close(), t3.popup.element.kendoStop(true, true)), n3 && n3[0] == e3[0] || (t3._appendContent(e3), t3.popup.options.anchor = e3), t3.popup.one("deactivate", function() {
            C(e3), t3._removeDescribedBy(e3), this.element.removeAttr("id").attr("aria-hidden", true), l2.off("keydown" + b2, t3._documentKeyDownHandler);
          }), t3._openPopup();
        }, _initPopup: function() {
          var t3 = this, i3 = t3.options, r3 = e2(n2.template('<div role="tooltip" class="k-widget k-tooltip#if (!autoHide) {# k-tooltip-closable#}#"><div class="k-tooltip-content"></div>#if (!autoHide) {# <div class="k-tooltip-button"><a href="\\#" class="k-icon k-i-close" title="Close"></a></div> #}##if (callout){ #<div class="k-callout k-callout-#=dir#"></div>#}#</div>')({ callout: i3.callout && "center" !== i3.position, dir: y[i3.position], autoHide: i3.autoHide }));
          t3.popup = new a2(r3, s2({ autosize: true, activate: function() {
            t3._addDescribedBy(), i3.callout ? t3._positionCallout() : t3._offset(t3.options.position, t3.options.offset), this.element.removeAttr("aria-hidden"), l2.on("keydown" + b2, t3._documentKeyDownHandler), t3.trigger(p2), t3.popup._hovered = void 0;
          }, close: function() {
            t3.trigger(h2);
          }, copyAnchorStyles: false, animation: i3.animation }, k2[i3.position])), r3.css({ width: i3.width, height: i3.height }), t3.content = r3.find(".k-tooltip-content"), t3.arrow = r3.find(".k-callout"), i3.autoHide && this._isShownOnMouseEnter() ? r3.on("mouseleave" + b2, t3._mouseleave.bind(t3)) : r3.on("click" + b2, ".k-tooltip-button", t3._closeButtonClick.bind(t3));
        }, _closeButtonClick: function(e3) {
          e3.preventDefault(), this.hide();
        }, _mouseleave: function(e3) {
          var t3 = this;
          clearTimeout(t3.timeout), t3.timeout = setTimeout(function() {
            t3._closePopup(e3.currentTarget);
          }, t3.options.hideAfter);
        }, _blur: function(e3) {
          this._closePopup(e3.currentTarget);
        }, _closePopup: function(t3) {
          this.popup && !this.popup._hovered ? this.popup.close() : C(e2(t3));
        }, destroy: function() {
          this.element.off(b2), l2.off("keydown" + b2, this._documentKeyDownHandler), D.fn.destroy.call(this);
        } });
        n2.ui.plugin(E);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = e2.extend, r2 = "visibility", o2 = "k-hover";
        i2.HierarchicalDragAndDrop = n2.Class.extend({ init: function(t3, r3) {
          this.element = t3, this.hovered = t3, this.options = a2({ dragstart: e2.noop, drag: e2.noop, drop: e2.noop, dragend: e2.noop }, r3), this._draggable = new i2.Draggable(t3, { ignore: "input,a:not(.k-in),textarea,.k-multiselect-wrap,select,button,a.k-button>.k-icon,button.k-button>.k-icon,span.k-icon.k-i-arrow-60-right,span.k-icon.k-i-arrow-45-down-right", filter: r3.filter, autoScroll: r3.autoScroll, cursorOffset: { left: 10, top: n2.support.mobileOS ? -40 / n2.support.zoomLevel() : 10 }, hint: this._hint.bind(this), dragstart: this.dragstart.bind(this), dragcancel: this.dragcancel.bind(this), drag: this.drag.bind(this), dragend: this.dragend.bind(this), $angular: r3.$angular, holdToDrag: r3.holdToDrag });
        }, _hint: function(e3) {
          return "<div class='k-drag-clue'><span class='k-icon k-drag-status'></span>" + this.options.hintText(e3) + "</div>";
        }, _removeTouchHover: function() {
          n2.support.touch && this.hovered && (this.hovered.find(".k-hover").removeClass(o2), this.hovered = false);
        }, _hintStatus: function(e3) {
          var t3 = this._draggable.hint.find(".k-drag-status")[0];
          if (!e3) return n2.trim(t3.className.replace(/(p|k)-(icon|drag-status)/g, ""));
          t3.className = "k-icon k-drag-status " + e3;
        }, dragstart: function(t3) {
          this.source = t3.currentTarget.closest(this.options.itemSelector), this.options.dragstart(this.source) && t3.preventDefault(), this.options.reorderable ? this.dropHint = e2("<div class='k-drop-hint k-drop-hint-h'><div class='k-drop-hint-start'></div><div class='k-drop-hint-line'></div></div>").css(r2, "hidden").appendTo(this.element) : this.dropHint = e2();
        }, drag: function(t3) {
          var i3, a3, s2, l2, d2, u2, c2, p2, h2, f2, m2, g2 = this.options, v2 = this.source, _2 = this.dropTarget = e2(n2.eventTarget(t3)), b2 = _2.closest(g2.allowedContainers);
          b2.length ? v2[0] == _2[0] || g2.contains(v2[0], _2[0]) ? m2 = "k-i-cancel" : (m2 = "k-i-insert-middle", (i3 = (h2 = g2.itemFromTarget(_2)).item).length ? (this._removeTouchHover(), a3 = n2._outerHeight(i3), l2 = h2.content, g2.reorderable ? (d2 = a3 / (l2.length > 0 ? 4 : 2), s2 = n2.getOffset(i3).top, u2 = t3.y.location < s2 + d2, c2 = s2 + a3 - d2 < t3.y.location, p2 = l2.length && !u2 && !c2) : (p2 = true, u2 = false, c2 = false), this.hovered = !!p2 && b2, this.dropHint.css(r2, p2 ? "hidden" : "visible"), this._lastHover && this._lastHover[0] != l2[0] && this._lastHover.removeClass(o2), this._lastHover = l2.toggleClass(o2, p2), p2 ? m2 = "k-i-plus" : ((f2 = i3.position()).top += u2 ? 0 : a3, this.dropHint.css(f2)[u2 ? "prependTo" : "appendTo"](g2.dropHintContainer(i3)), u2 && h2.first && (m2 = "k-i-insert-up"), c2 && h2.last && (m2 = "k-i-insert-down"))) : _2[0] != this.dropHint[0] && (this._lastHover && this._lastHover.removeClass(o2), m2 = e2.contains(this.element[0], b2[0]) ? "k-i-cancel" : "k-i-plus")) : (m2 = "k-i-cancel", this._removeTouchHover()), this.options.drag({ originalEvent: t3.originalEvent, source: v2, target: _2, pageY: t3.y.location, pageX: t3.x.location, status: m2.substring(2), setStatus: function(e3) {
            m2 = e3;
          } }), 0 !== m2.indexOf("k-i-insert") && this.dropHint.css(r2, "hidden"), this._hintStatus(m2);
        }, dragcancel: function() {
          this.dropHint.remove();
        }, dragend: function(e3) {
          var t3, n3, i3, a3 = "over", s2 = this.source, l2 = this.dropHint, d2 = this.dropTarget;
          "visible" == l2.css(r2) ? (a3 = this.options.dropPositionFrom(l2), t3 = l2.closest(this.options.itemSelector)) : d2 && ((t3 = d2.closest(this.options.itemSelector)).length || (t3 = d2.closest(this.options.allowedContainers))), n3 = { originalEvent: e3.originalEvent, source: s2[0], destination: t3[0], valid: "k-i-cancel" != this._hintStatus(), setValid: function(e4) {
            this.valid = e4;
          }, dropTarget: d2[0], position: a3 }, i3 = this.options.drop(n3), l2.remove(), this._removeTouchHover(), this._lastHover && this._lastHover.removeClass(o2), n3.valid && !i3 ? (this._draggable.dropped = true, this.options.dragend({ originalEvent: e3.originalEvent, source: s2, destination: t3, position: a3 })) : this._draggable.dropped = n3.valid;
        }, destroy: function() {
          this._lastHover = this.hovered = null, this._draggable.destroy();
        } });
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2, i2, a2, r2, o2, s2 = window.kendo, l2 = s2.ui, d2 = s2.data, u2 = e2.extend, c2 = s2.template, p2 = Array.isArray, h2 = l2.Widget, f2 = d2.HierarchicalDataSource, m2 = s2.keys, g2 = ".kendoTreeView", v2 = ".kendoTreeViewTemp", _2 = "select", b2 = "check", k2 = "navigate", w = "change", y = "error", x = "checked", C = "indeterminate", T = "dragstart", S = "drag", I = "drop", D = "dragend", E = "dataBound", A = "itemsLoaded", F = "loadCompleted", z = "requestEnd", P = "click", H = "undefined", N = "k-hover", R = "k-treeview", O = ".k-item", M = "string", B = "aria-checked", L = "aria-selected", V = "aria-disabled", U = "aria-expanded", W = "aria-activedescendant", j = "aria-busy", q = "k-disabled", G = { text: "dataTextField", url: "dataUrlField", spriteCssClass: "dataSpriteCssClassField", imageUrl: "dataImageUrlField" }, K = function(e3) {
          return "object" == typeof HTMLElement ? e3 instanceof HTMLElement : e3 && "object" == typeof e3 && 1 === e3.nodeType && typeof e3.nodeName === M;
        };
        function $(e3) {
          return function(t3) {
            var n3 = t3.children(".k-animation-container");
            return n3.length || (n3 = t3), n3.children(e3);
          };
        }
        function Y(e3) {
          return s2.template(e3, { useWithBlock: false });
        }
        function Q(e3) {
          return e3.find(".k-checkbox-wrapper:first input[type=checkbox]");
        }
        function X(e3) {
          return function(t3, n3) {
            var i3, a3 = (n3 = n3.closest(O)).parent();
            return a3.parent().is("li") && (i3 = a3.parent()), this._dataSourceMove(t3, a3, i3, function(t4, i4) {
              var a4 = this.dataItem(n3), r3 = a4 && n3.parent().children().length !== a4.parent().length ? a4.parent().indexOf(a4) : n3.index();
              return this._insert(t4.data(), i4, r3 + e3);
            });
          };
        }
        function J(t3) {
          var n3 = t3.children("div"), i3 = t3.children("ul"), a3 = n3.find(".k-treeview-toggle > .k-icon"), r3 = t3.children("input[type=checkbox]"), l3 = n3.children(".k-in");
          t3.hasClass("k-treeview") || (n3.length || (n3 = e2("<div />").prependTo(t3)), !a3.length && i3.length ? a3 = e2("<span class='k-treeview-toggle'><span class='k-icon' /></span>").prependTo(n3) : i3.length && i3.children().length || (a3.parent().remove(), i3.remove(), t3.removeAttr(U)), r3.length && e2("<span class='k-checkbox-wrapper' />").appendTo(n3).append(r3), l3.length || ((l3 = t3.children("a").eq(0).addClass("k-in k-link")).length || (l3 = e2("<span class='k-treeview-leaf k-in' />")), l3.appendTo(n3), n3.length && function(e3, t4) {
            for (var n4; e3 && "ul" != e3.nodeName.toLowerCase(); ) n4 = e3, e3 = e3.nextSibling, 3 == n4.nodeType && (n4.nodeValue = s2.trim(n4.nodeValue)), o2.test(n4.className) ? t4.insertBefore(n4, t4.firstChild) : t4.appendChild(n4);
          }(n3[0].nextSibling, l3[0])));
        }
        i2 = $(".k-group"), a2 = $(".k-group,.k-content"), r2 = function(e3) {
          return e3.children("div").find(".k-treeview-toggle > .k-icon");
        }, o2 = /k-sprite/, n2 = s2.ui.DataBoundWidget.extend({ init: function(e3, t3) {
          var n3, i3, a3 = this, r3 = t3 && !!t3.dataSource;
          p2(t3) && (t3 = { dataSource: t3 }), t3 && typeof t3.loadOnDemand == H && p2(t3.dataSource) && (t3.loadOnDemand = false), h2.prototype.init.call(a3, e3, t3), e3 = a3.element, t3 = a3.options, a3._dataSourceUids = {}, i3 = e3.is("ul") && e3 || e3.hasClass(R) && e3.children("ul"), (n3 = !r3 && i3.length) && (t3.dataSource.list = i3), a3._animation(), a3._accessors(), a3._templates(), e3.hasClass(R) ? (a3.wrapper = e3, a3.root = e3.children("ul").eq(0)) : (a3._wrapper(), i3 && (a3.root = e3, a3._group(a3.wrapper))), a3._applyCssClasses(), a3._tabindex(), a3.wrapper.attr("role", "tree"), a3.wrapper.find(">ul").attr("role", "none"), a3._dataSource(n3), a3._attachEvents(), a3._dragging(), n3 ? a3._syncHtmlAndDataSource() : t3.autoBind && (a3._progress(true), a3.dataSource.fetch(this._attemptLoadCompleted.bind(this))), t3.checkboxes && t3.checkboxes.checkChildren && a3.updateIndeterminate(), a3.element[0].id ? a3._ariaId = s2.format("{0}_tv_active", a3.element[0].id) : a3._ariaId = s2.guid() + "_tv_active", s2.notify(a3);
        }, _attachEvents: function() {
          var t3 = this, n3 = ".k-in:not(.k-selected,.k-disabled)", i3 = "mouseenter";
          t3._clickHandler = t3._click.bind(t3), t3.wrapper.on(i3 + g2, ".k-in.k-selected", function(e3) {
            e3.preventDefault();
          }).on(i3 + g2, n3, function() {
            e2(this).addClass(N);
          }).on("mouseleave" + g2, n3, function() {
            e2(this).removeClass(N);
          }).on(P + g2, n3, t3._clickHandler).on("dblclick" + g2, ".k-in:not(.k-disabled)", t3._toggleButtonClick.bind(t3)).on(P + g2, ".k-i-expand,.k-i-collapse", t3._toggleButtonClick.bind(t3)).on("keydown" + g2, t3, t3._keydown.bind(t3)).on("keypress" + g2, t3._keypress.bind(t3)).on("focus" + g2, t3._focus.bind(t3)).on("blur" + g2, t3._blur.bind(t3)).on("mousedown" + g2, ".k-in,.k-checkbox-wrapper :checkbox,.k-i-expand,.k-i-collapse", t3._mousedown.bind(t3)).on("change" + g2, ".k-checkbox-wrapper :checkbox", t3._checkboxChange.bind(t3)).on("click" + g2, ".k-request-retry", t3._retryRequest.bind(t3)).on("click" + g2, ".k-link.k-disabled", function(e3) {
            e3.preventDefault();
          }).on("click" + g2, function(n4) {
            var i4 = e2(n4.target);
            i4.is(":kendoFocusable") || i4.find("input,select,textarea,button,object").is(":kendoFocusable") || t3.focus();
          });
        }, _syncHtmlAndDataSource: function(e3, t3) {
          e3 = e3 || this.root;
          var n3, i3, a3, r3, o3, l3 = (t3 = t3 || this.dataSource).view(), d3 = s2.attr("uid"), u3 = s2.attr("expanded"), c3 = this.options.checkboxes, p3 = e3.children("li");
          for (n3 = 0; n3 < p3.length; n3++) r3 = (a3 = l3[n3]).uid, (i3 = p3.eq(n3)).attr("role", "treeitem").attr(d3, r3).attr(L, i3.hasClass("k-selected")), a3.expanded = "true" === i3.attr(u3), a3.hasChildren && i3.attr(U, a3.expanded), c3 && (o3 = Q(i3), a3.checked = o3.prop(x), o3.attr("id", "_" + r3), o3.next(".k-checkbox-label").attr("for", "_" + r3), i3.attr(B, i3.checked)), this._syncHtmlAndDataSource(i3.children("ul"), a3.children);
        }, _animation: function() {
          var e3 = this.options, t3 = e3.animation, n3 = t3.collapse && "effects" in t3.collapse, i3 = u2({}, t3.expand, t3.collapse);
          n3 || (i3 = u2(i3, { reverse: true })), false === t3 && (t3 = { expand: { effects: {} }, collapse: { hide: true, effects: {} } }), t3.collapse = u2(i3, { hide: true }), e3.animation = t3;
        }, _dragging: function() {
          var t3 = this.options.dragAndDrop, n3 = this.dragging;
          if (t3 && !n3) {
            var i3 = this;
            this.dragging = new l2.HierarchicalDragAndDrop(this.element, { reorderable: true, $angular: this.options.$angular, autoScroll: this.options.autoScroll, filter: "div:not(.k-disabled) .k-in", allowedContainers: ".k-treeview", itemSelector: ".k-treeview .k-item", hintText: this._hintText.bind(this), contains: function(t4, n4) {
              return e2.contains(t4, n4);
            }, dropHintContainer: function(e3) {
              return e3;
            }, itemFromTarget: function(e3) {
              var t4 = e3.closest(".k-treeview-top,.k-treeview-mid,.k-treeview-bot");
              return { item: t4, content: e3.closest(".k-in"), first: t4.hasClass("k-treeview-top"), last: t4.hasClass("k-treeview-bot") };
            }, dropPositionFrom: function(e3) {
              return e3.prevAll(".k-in").length > 0 ? "after" : "before";
            }, dragstart: function(e3) {
              return i3.wrapper.attr(s2.attr("scrollable"), false), i3.trigger(T, { sourceNode: e3[0] });
            }, drag: function(e3) {
              i3.trigger(S, { originalEvent: e3.originalEvent, sourceNode: e3.source[0], dropTarget: e3.target[0], pageY: e3.pageY, pageX: e3.pageX, statusClass: e3.status, setStatusClass: e3.setStatus });
            }, drop: function(t4) {
              var n4 = e2(t4.dropTarget).closest("a");
              return n4 && n4.attr("href") && i3._tempPreventNavigation(n4), i3.trigger(I, { originalEvent: t4.originalEvent, sourceNode: t4.source, destinationNode: t4.destination, valid: t4.valid, setValid: function(e3) {
                this.valid = e3, t4.setValid(e3);
              }, dropTarget: t4.dropTarget, dropPosition: t4.position });
            }, dragend: function(e3) {
              var t4 = e3.source, n4 = e3.destination, a3 = e3.position;
              function r3(t5) {
                i3.options.checkboxes && i3.options.checkboxes.checkChildren && i3.updateIndeterminate(), i3.current(t5), i3.element.focus(), i3.trigger(D, { originalEvent: e3.originalEvent, sourceNode: t5 && t5[0], destinationNode: n4[0], dropPosition: a3 });
              }
              i3.wrapper.removeAttr(s2.attr("scrollable")), "over" == a3 ? i3.append(t4, n4, r3) : ("before" == a3 ? t4 = i3.insertBefore(t4, n4) : "after" == a3 && (t4 = i3.insertAfter(t4, n4)), r3(t4));
            } });
          } else !t3 && n3 && (n3.destroy(), this.dragging = null);
        }, _tempPreventNavigation: function(e3) {
          e3.on(P + g2 + v2, function(t3) {
            t3.preventDefault(), e3.off(P + g2 + v2);
          });
        }, _hintText: function(e3) {
          return this.templates.dragClue({ item: this.dataItem(e3), treeview: this.options });
        }, _templates: function() {
          var e3 = this, t3 = e3.options, n3 = e3._fieldAccessor.bind(e3);
          t3.template && typeof t3.template == M ? t3.template = c2(t3.template) : t3.template || (t3.template = Y("# var text = " + n3("text") + "(data.item); ## if (typeof data.item.encoded != 'undefined' && data.item.encoded === false) {#<span class='k-treeview-leaf-text'>#= text #</span># } else { #<span class='k-treeview-leaf-text'>#: text #</span># } #")), e3._checkboxes(), e3.templates = { setAttributes: function(e4) {
            var t4 = "", n4 = e4.attr || {};
            for (var i3 in n4) n4.hasOwnProperty(i3) && "class" !== i3 && (t4 += i3 + '="' + n4[i3] + '" ');
            return t4;
          }, wrapperCssClass: function(e4, t4) {
            var n4 = "k-item k-treeview-item", i3 = t4.index;
            return e4.firstLevel && 0 === i3 && (n4 += " k-first"), i3 == e4.length - 1 && (n4 += " k-last"), n4;
          }, cssClass: function(e4, t4) {
            var n4 = "", i3 = t4.index, a3 = e4.length - 1;
            return e4.firstLevel && 0 === i3 && (n4 += "k-treeview-top "), n4 += 0 === i3 && i3 != a3 ? "k-treeview-top" : i3 == a3 ? "k-treeview-bot" : "k-treeview-mid";
          }, textClass: function(e4, t4) {
            var n4 = "k-treeview-leaf k-in";
            return t4 && (n4 += " k-link"), false === e4.enabled && (n4 += " k-disabled"), true === e4.selected && (n4 += " k-selected"), n4;
          }, toggleButtonClass: function(e4) {
            var t4 = "k-icon";
            return true !== e4.expanded ? t4 += " k-i-expand" : t4 += " k-i-collapse", t4;
          }, groupAttributes: function(e4) {
            var t4 = "";
            return e4.firstLevel || (t4 = "role='group'"), t4 + (true !== e4.expanded ? " style='display:none'" : "");
          }, groupCssClass: function(e4) {
            var t4 = "k-group k-treeview-group";
            return e4.firstLevel && (t4 += " k-treeview-lines"), t4;
          }, dragClue: Y("#= data.treeview.template(data) #"), group: Y("<ul class='#= data.r.groupCssClass(data.group) #'#= data.r.groupAttributes(data.group) #>#= data.renderItems(data) #</ul>"), itemContent: Y("# var imageUrl = " + n3("imageUrl") + "(data.item); ## var spriteCssClass = " + n3("spriteCssClass") + "(data.item); ## if (imageUrl) { #<img class='k-image' alt='' src='#= imageUrl #'># } ## if (spriteCssClass) { #<span class='k-sprite #= spriteCssClass #'></span># } ##= data.treeview.template(data) #"), itemElement: Y("# var item = data.item, r = data.r; ## var url = " + n3("url") + "(item); #<div class='#= r.cssClass(data.group, item) #'># if (item.hasChildren) { #<span class='k-treeview-toggle'><span class='#= r.toggleButtonClass(item) #'></span></span># } ## if (data.treeview.checkboxes) { #<span class='k-checkbox-wrapper' role='presentation'>#= data.treeview.checkboxes.template(data) #</span># } ## var tag = url ? 'a' : 'span'; ## var textAttr = url ? ' href=\\'' + url + '\\'' : ''; #<#=tag# class='#= r.textClass(item, !!url) #'#= textAttr #>#= r.itemContent(data) #</#=tag#></div>"), item: Y("# var item = data.item, r = data.r; #<li role='treeitem' class='#= r.wrapperCssClass(data.group, item) #'" + s2.attr("uid") + `='#= item.uid #' #= r.setAttributes(item.toJSON ? item.toJSON() : item) # # if (data.treeview.checkboxes) { #aria-checked='#= item.checked ? "true" : "false" #' # } #aria-selected='#= item.selected ? "true" : "false" #' #=item.enabled === false ? "aria-disabled='true'" : ''## if (item.hasChildren) { #aria-expanded='#= item.expanded ? "true" : "false" #' # } #data-expanded='#= item.expanded ? "true" : "false" #' >#= r.itemElement(data) #</li>`), loading: Y("<div class='k-icon k-i-loading'></div> #: data.messages.loading #"), retry: Y("#: data.messages.requestFailed # <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>#: data.messages.retry #</span></button>") };
        }, items: function() {
          return this.element.find(".k-item > div:first-child");
        }, setDataSource: function(e3) {
          var t3 = this.options;
          t3.dataSource = e3, this._dataSourceUids = {}, this._dataSource(), t3.checkboxes && t3.checkboxes.checkChildren && this.dataSource.one("change", this.updateIndeterminate.bind(this, null)), this.options.autoBind && this.dataSource.fetch(this._attemptLoadCompleted.bind(this));
        }, _bindDataSource: function() {
          var e3 = this;
          e3._refreshHandler = e3.refresh.bind(e3), e3._errorHandler = e3._error.bind(e3), e3._loadCompletedHandler = e3._loadCompleted.bind(e3), e3._requestEndHandler = e3._dsRequestEnd.bind(e3), e3._loadedNodes = [], e3.dataSource.bind(w, e3._refreshHandler), e3.dataSource.bind(y, e3._errorHandler), e3.dataSource.bind(A, e3._loadCompletedHandler), e3.dataSource.bind(z, e3._requestEndHandler);
        }, _dsRequestEnd: function(e3) {
          var t3 = this;
          setTimeout(function() {
            "read" !== e3.type || t3._loadCompletedFired || t3._attemptLoadCompleted();
          });
        }, _loadCompleted: function(e3) {
          var t3 = this;
          t3._loadedNodes = t3._loadedNodes.concat(e3.nodes), t3.dataSource.loading() || false !== t3.options.loadOnDemand || (t3.trigger(F, { nodes: t3._loadedNodes }), t3._loadedNodes = []);
        }, _attemptLoadCompleted: function() {
          var e3, t3, n3 = this, i3 = n3.dataSource.view();
          if (false === n3.options.loadOnDemand) {
            for (t3 = 0; t3 < i3.length; t3++) if ((e3 = i3[t3]).hasChildren && (!e3.children || !e3.children.data() || 0 === e3.children.data().length)) return;
            n3._loadCompletedFired = true, n3.trigger(F, { nodes: [] });
          }
        }, _unbindDataSource: function() {
          var e3 = this.dataSource;
          e3 && (e3.unbind(w, this._refreshHandler), e3.unbind(y, this._errorHandler), e3.unbind(A, this._loadCompletedHandler), e3.unbind(z, this._requestEndHandler));
        }, _dataSource: function(e3) {
          var t3 = this, n3 = t3.options.dataSource;
          n3 = p2(n3) ? { data: n3 } : n3, t3._unbindDataSource(), n3.fields || (n3.fields = [{ field: "text" }, { field: "url" }, { field: "spriteCssClass" }, { field: "imageUrl" }]), t3.dataSource = n3 = f2.create(n3), e3 && (n3.fetch(), function e4(t4) {
            for (var n4 = 0; n4 < t4.length; n4++) t4[n4]._initChildren(), t4[n4].children.fetch(), e4(t4[n4].children.view());
          }(n3.view())), t3._bindDataSource();
        }, events: [T, S, I, D, E, F, "expand", "collapse", _2, w, k2, b2, "kendoKeydown"], options: { name: "TreeView", dataSource: {}, animation: { expand: { effects: "expand:vertical", duration: 200 }, collapse: { duration: 100 } }, messages: { loading: "Loading...", requestFailed: "Request failed.", retry: "Retry" }, dragAndDrop: false, checkboxes: false, autoBind: true, autoScroll: false, loadOnDemand: true, template: "", dataTextField: null, size: "medium" }, _accessors: function() {
          var e3, t3, n3, i3 = this.options, a3 = this.element;
          for (e3 in G) t3 = i3[G[e3]], n3 = a3.attr(s2.attr(e3 + "-field")), !t3 && n3 && (t3 = n3), t3 || (t3 = e3), p2(t3) || (t3 = [t3]), i3[G[e3]] = t3;
        }, _fieldAccessor: function(t3) {
          var n3 = this.options[G[t3]], i3 = n3.length, a3 = "(function(item) {";
          return 0 === i3 ? a3 += "return item['" + t3 + "'];" : (a3 += "var levels = [" + e2.map(n3, function(e3) {
            return "function(d){ return " + s2.expr(e3) + "}";
          }).join(",") + "];", a3 += "return levels[Math.min(item.level(), " + i3 + "-1)](item)"), a3 += "})";
        }, setOptions: function(e3) {
          h2.fn.setOptions.call(this, e3), this._animation(), this._dragging(), this._templates();
        }, _trigger: function(e3, t3) {
          return this.trigger(e3, { node: t3.closest(O)[0] });
        }, _setChecked: function(e3, t3) {
          if (e3 && s2.isFunction(e3.view)) for (var n3 = 0, i3 = e3.view(); n3 < i3.length; n3++) false !== i3[n3].enabled && this._setCheckedValue(i3[n3], t3), i3[n3].children && this._setChecked(i3[n3].children, t3);
        }, _setCheckedValue: function(e3, t3) {
          e3.checked = t3;
        }, _setIndeterminate: function(e3) {
          var t3, n3, a3, r3 = i2(e3), o3 = true;
          if (r3.length && (n3 = (t3 = Q(r3.children())).length)) {
            if (n3 > 1) {
              for (a3 = 1; a3 < n3; a3++) if (t3[a3].checked != t3[a3 - 1].checked || t3[a3].indeterminate || t3[a3 - 1].indeterminate) {
                o3 = false;
                break;
              }
            } else o3 = !t3[0].indeterminate;
            return e3.attr(B, o3 ? t3[0].checked : "mixed"), Q(e3).data(C, !o3).prop(C, !o3).prop(x, o3 && t3[0].checked);
          }
        }, updateIndeterminate: function(e3) {
          e3 = e3 || this.wrapper;
          var t3, n3, a3, r3 = i2(e3).children();
          if (r3.length) {
            for (t3 = 0; t3 < r3.length; t3++) this.updateIndeterminate(r3.eq(t3));
            if (e3.is(".k-treeview")) return;
            n3 = this._setIndeterminate(e3), a3 = this.dataItem(e3), n3 && n3.prop(x) ? a3.checked = true : a3 && delete a3.checked;
          }
        }, _bubbleIndeterminate: function(e3, t3) {
          if (e3.length) {
            t3 || this.updateIndeterminate(e3);
            var n3, i3 = this.parent(e3);
            i3.length && (this._setIndeterminate(i3), n3 = i3.children("div").find(".k-checkbox-wrapper input[type=checkbox]"), this._skip = true, false === n3.prop(C) ? this.dataItem(i3).set(x, n3.prop(x)) : this.dataItem(i3).set(x, false), this._skip = false, this._bubbleIndeterminate(i3, true));
          }
        }, _checkboxChange: function(t3) {
          var n3 = e2(t3.target), i3 = n3.prop(x), a3 = n3.closest(O), r3 = this.dataItem(a3);
          this._preventChange || (r3.checked != i3 && (r3.set(x, i3), a3.attr(B, i3), this._trigger(b2, a3)), n3.is(":focus") && (this._trigger(k2, a3), this.focus()));
        }, _toggleButtonClick: function(t3) {
          var n3 = e2(t3.currentTarget).closest(O);
          n3.is("[aria-disabled='true']") || this.toggle(n3);
        }, _mousedown: function(t3) {
          var n3 = this, i3 = e2(t3.currentTarget), a3 = e2(t3.currentTarget).closest(O), r3 = s2.support.browser;
          a3.is("[aria-disabled='true']") || ((r3.msie || r3.edge) && i3.is(":checkbox") && (i3.prop(C) ? (n3._preventChange = false, i3.prop(x, !i3.prop(x)), i3.trigger(w), i3.on(P + g2, function(e3) {
            e3.preventDefault();
          }), n3._preventChange = true) : (i3.off(P + g2), n3._preventChange = false)), n3._clickTarget = a3, n3.current(a3));
        }, _focusable: function(e3) {
          return e3 && e3.length && e3.is(":visible") && !e3.find(".k-in").first().hasClass(q);
        }, _focus: function() {
          var t3 = this.select(), n3 = this._clickTarget;
          s2.support.touch || (n3 && n3.length && (t3 = n3), this._focusable(t3) || (t3 = this.current()), this._focusable(t3) || (t3 = this._nextVisible(e2())), this.current(t3));
        }, focus: function() {
          var e3, t3 = this.wrapper, n3 = t3[0], i3 = [], a3 = [], r3 = document.documentElement;
          do {
            (n3 = n3.parentNode).scrollHeight > n3.clientHeight && (i3.push(n3), a3.push(n3.scrollTop));
          } while (n3 != r3);
          for (s2.focusElement(t3), e3 = 0; e3 < i3.length; e3++) i3[e3].scrollTop = a3[e3];
        }, _blur: function() {
          this.current().find(".k-in").first().removeClass("k-focus");
        }, _enabled: function(e3) {
          return !e3.children("div").children(".k-in").hasClass(q);
        }, parent: function(t3) {
          var n3, i3, a3 = /\bk-treeview\b(?!-)/, r3 = /\bk-item\b/;
          typeof t3 == M && (t3 = this.element.find(t3)), K(t3) || (t3 = t3[0]), i3 = r3.test(t3.className);
          do {
            t3 = t3.parentNode, r3.test(t3.className) && (i3 ? n3 = t3 : i3 = true);
          } while (!a3.test(t3.className) && !n3);
          return e2(n3);
        }, _nextVisible: function(e3) {
          var t3, n3 = this, a3 = n3._expanded(e3);
          function r3(e4) {
            for (; e4.length && !e4.next().length; ) e4 = n3.parent(e4);
            return e4.next().length ? e4.next() : e4;
          }
          return e3.length && e3.is(":visible") ? a3 && (t3 = i2(e3).children().first()).length || (t3 = r3(e3)) : t3 = n3.root.children().eq(0), t3;
        }, _previousVisible: function(e3) {
          var t3, n3, a3 = this;
          if (!e3.length || e3.prev().length) for (n3 = e3.length ? e3.prev() : a3.root.children().last(); a3._expanded(n3) && (t3 = i2(n3).children().last()).length; ) n3 = t3;
          else n3 = a3.parent(e3) || e3;
          return n3;
        }, _keydown: function(n3) {
          var i3, a3 = this, r3 = n3.keyCode, o3 = a3.current(), l3 = a3._expanded(o3), d3 = o3.find(".k-checkbox-wrapper").first().find(":checkbox"), u3 = s2.support.isRtl(a3.element);
          n3.target == n3.currentTarget && (!u3 && r3 == m2.RIGHT || u3 && r3 == m2.LEFT ? l3 ? i3 = a3._nextVisible(o3) : o3.find(".k-in").first().hasClass(q) || a3.expand(o3) : !u3 && r3 == m2.LEFT || u3 && r3 == m2.RIGHT ? l3 && !o3.find(".k-in").first().hasClass(q) ? a3.collapse(o3) : (i3 = a3.parent(o3), a3._enabled(i3) || (i3 = t2)) : r3 == m2.DOWN ? i3 = a3._nextVisible(o3) : r3 == m2.UP ? i3 = a3._previousVisible(o3) : r3 == m2.HOME ? i3 = a3._nextVisible(e2()) : r3 == m2.END ? i3 = a3._previousVisible(e2()) : r3 != m2.ENTER || o3.find(".k-in").first().hasClass(q) ? r3 == m2.SPACEBAR && d3.length && (o3.find(".k-in").first().hasClass(q) || (d3.prop(x, !d3.prop(x)).data(C, false).prop(C, false), a3._checkboxChange({ target: d3 })), i3 = o3) : o3.find(".k-in").first().hasClass("k-selected") || a3._trigger(_2, o3) || a3.select(o3), i3 && (n3.preventDefault(), o3[0] != i3[0] && (a3._trigger(k2, i3), a3.current(i3))));
        }, _keypress: function(e3) {
          var t3, n3 = this, i3 = n3.current().get(0), a3 = e3.key;
          1 === a3.length && (n3._match || (n3._match = ""), n3._match += a3, clearTimeout(n3._matchTimer), n3._matchTimer = setTimeout(function() {
            n3._match = "";
          }, 300), (t3 = i3 && n3._matchNextByText(Array.prototype.indexOf.call(n3.element.find(".k-item"), i3), n3._match)).length || (t3 = n3._matchNextByText(-1, n3._match)), t3.get(0) && t3.get(0) !== i3 && (n3._trigger(k2, t3), n3.current(t3)));
        }, _matchNextByText: function(t3, n3) {
          return this.element.find(".k-in").filter(function(i3, a3) {
            return i3 > t3 && e2(a3).is(":visible") && 0 === e2(a3).text().toLowerCase().indexOf(n3);
          }).eq(0).closest(O);
        }, _click: function(t3) {
          var n3 = e2(t3.currentTarget), i3 = a2(n3.closest(O)), r3 = n3.attr("href");
          (r3 ? "#" == r3 || r3.indexOf("#" + this.element.id + "-") >= 0 : i3.length && !i3.children().length) && t3.preventDefault(), n3.hasClass(".k-selected") || this._trigger(_2, n3) || this.select(n3);
        }, _wrapper: function() {
          var e3, t3, n3 = this, i3 = n3.element;
          i3.is("ul") ? (e3 = i3.wrap("<div />").parent(), t3 = i3) : t3 = (e3 = i3).children("ul").eq(0), n3.wrapper = e3.addClass("k-treeview"), n3.root = t3;
        }, _getSelectedNode: function() {
          return this.element.find(".k-selected").closest(O);
        }, _group: function(e3) {
          var t3 = this, n3 = e3.hasClass(R), i3 = { firstLevel: n3, expanded: n3 || t3._expanded(e3) }, a3 = e3.children("ul");
          a3.addClass(t3.templates.groupCssClass(i3)).css("display", i3.expanded ? "" : "none"), n3 || a3.attr("role", "group"), t3._nodes(a3, i3);
        }, _nodes: function(t3, n3) {
          var i3, a3 = this, r3 = t3.children("li");
          n3 = u2({ length: r3.length }, n3), r3.each(function(t4, r4) {
            r4 = e2(r4), i3 = { index: t4, expanded: a3._expanded(r4) }, J(r4), a3._updateNodeClasses(r4, n3, i3), a3._group(r4);
          });
        }, _checkboxes: function() {
          var t3, n3, i3 = this.options, a3 = i3.checkboxes;
          a3 && (n3 = "<input id='_#= item.uid #' aria-hidden='true' type='checkbox' tabindex='-1'", a3.name && (n3 += " name='" + a3.name + "'"), n3 += " />", t3 = (t3 = s2.html.renderCheckBox(e2(n3), e2.extend({}, i3, { rounded: "medium" }))).replace(/(<input[^/>]*)/, "$1 #= (item.enabled === false) ? 'disabled' : '' # #= item.checked ? 'checked' : '' #"), typeof (a3 = u2({ template: t3 }, i3.checkboxes)).template == M && (a3.template = c2(a3.template)), i3.checkboxes = a3);
        }, _updateNodeClasses: function(e3, t3, n3) {
          var i3 = e3.children("div"), a3 = e3.children("ul"), r3 = this.templates;
          if (!e3.hasClass("k-treeview")) {
            (n3 = n3 || {}).expanded = typeof n3.expanded != H ? n3.expanded : this._expanded(e3), n3.index = typeof n3.index != H ? n3.index : e3.index(), n3.enabled = typeof n3.enabled != H ? n3.enabled : !i3.children(".k-in").hasClass("k-disabled"), (t3 = t3 || {}).firstLevel = typeof t3.firstLevel != H ? t3.firstLevel : e3.parent().parent().hasClass(R), t3.length = typeof t3.length != H ? t3.length : e3.parent().children().length, e3.removeClass("k-first k-last").addClass(r3.wrapperCssClass(t3, n3)), i3.removeClass("k-treeview-top k-treeview-mid k-treeview-bot").addClass(r3.cssClass(t3, n3));
            var o3 = i3.children(".k-in"), s3 = o3[0] && "a" == o3[0].nodeName.toLowerCase();
            o3.removeClass("k-in k-link k-disabled").addClass(r3.textClass(n3, s3)), (a3.length || "true" == e3.attr("data-hasChildren")) && (i3.find(".k-treeview-toggle > .k-icon").removeClass("k-i-expand k-i-collapse").addClass(r3.toggleButtonClass(n3)), a3.addClass("k-group k-treeview-group"));
          }
        }, _processNodes: function(t3, n3) {
          for (var i3 = this.element.find(t3), a3 = 0; a3 < i3.length; a3++) n3.call(this, a3, e2(i3[a3]).closest(O));
        }, dataItem: function(t3) {
          var n3 = e2(t3).closest(O).attr(s2.attr("uid")), i3 = this.dataSource;
          return i3 && i3.getByUid(n3);
        }, _dataItem: function(t3) {
          var n3 = e2(t3).closest(O).attr(s2.attr("uid"));
          return this.dataSource && this._dataSourceUids[n3];
        }, _insertNode: function(t3, n3, a3, r3, o3) {
          var l3, d3, u3, c3, p3, h3, f3 = this, m3 = i2(a3), g3 = m3.children().length + 1, v3 = { firstLevel: a3.hasClass(R), expanded: !o3, length: g3 }, _3 = "", b3 = function(e3, t4) {
            e3.appendTo(t4);
          };
          for (u3 = 0; u3 < t3.length; u3++) (c3 = t3[u3]).index = n3 + u3, _3 += f3._renderItem({ group: v3, item: c3 });
          if ((d3 = e2(_3)).length) {
            for (f3.angular("compile", function() {
              return { elements: d3.get(), data: t3.map(function(e3) {
                return { dataItem: e3 };
              }) };
            }), m3.length || (m3 = e2(f3._renderGroup({ group: v3 })).appendTo(a3), a3.attr(U, true)), r3(d3, m3), a3.hasClass("k-item") && (J(a3), f3._updateNodeClasses(a3, v3, { expanded: !o3 })), p3 = d3.prev().first(), h3 = d3.next().last(), f3._updateNodeClasses(p3, {}, { expanded: "true" == p3.attr(s2.attr("expanded")) }), f3._updateNodeClasses(h3, {}, { expanded: "true" == h3.attr(s2.attr("expanded")) }), u3 = 0; u3 < t3.length; u3++) (c3 = t3[u3]).hasChildren && (l3 = c3.children.data()).length && f3._insertNode(l3, c3.index, d3.eq(u3), b3, !c3.expanded);
            return d3;
          }
        }, _updateNodes: function(t3, n3) {
          var i3, r3, o3, d3, u3, c3, p3 = this, h3 = { treeview: p3.options, item: d3 }, f3 = "expanded" != n3 && "checked" != n3;
          function m3(e3, t4) {
            e3.is(".k-group") && e3.find(".k-item:not([aria-disabled])").attr(B, t4), e3.find(".k-checkbox-wrapper input[type=checkbox]:not([disabled])").prop(x, t4).data(C, false).prop(C, false);
          }
          if ("selected" == n3) d3 = t3[0], (r3 = p3.findByUid(d3.uid)).find(".k-in").first().removeClass("k-hover").toggleClass("k-selected", d3[n3]).end(), d3[n3] && p3.current(r3), r3.attr(L, !!d3[n3]);
          else {
            var g3 = e2.map(t3, function(e3) {
              return p3.findByUid(e3.uid).children("div");
            });
            for (f3 && p3.angular("cleanup", function() {
              return { elements: g3 };
            }), i3 = 0; i3 < t3.length; i3++) h3.item = d3 = t3[i3], r3 = (o3 = g3[i3]).parent(), f3 && (s2.unbind && s2.unbind(o3), o3.children(".k-in").html(p3.templates.itemContent(h3))), n3 == x ? (m3(o3, u3 = d3[n3]), r3.attr(B, u3), p3.options.checkboxes.checkChildren && (m3(r3.children(".k-group"), u3), p3._setChecked(d3.children, u3), p3._bubbleIndeterminate(r3))) : "expanded" == n3 ? p3._toggle(r3, d3, d3[n3]) : "enabled" == n3 && (r3.find(".k-checkbox-wrapper input[type=checkbox]").prop("disabled", !d3[n3]), c3 = !a2(r3).is(":visible"), r3.removeAttr(V), d3[n3] || (d3.selected && d3.set("selected", false), d3.expanded && d3.set("expanded", false), c3 = true, r3.attr(L, false).attr(V, true)), p3._updateNodeClasses(r3, {}, { enabled: d3[n3], expanded: !c3 })), o3.length && this.trigger("itemChange", { item: o3, data: d3, ns: l2 });
            f3 && p3.angular("compile", function() {
              return { elements: g3, data: e2.map(t3, function(e3) {
                return [{ dataItem: e3 }];
              }) };
            });
          }
        }, _appendItems: function(e3, t3, n3) {
          var a3 = i2(n3).children(), r3 = !this._expanded(n3);
          if (this.element === n3) {
            var o3 = this.dataSource.data(), s3 = this.dataSource.view(), l3 = s3.length < o3.length ? s3 : o3;
            e3 = l3.indexOf(t3[0]);
          } else t3.length && (e3 = t3[0].parent().indexOf(t3[0]));
          typeof e3 == H && (e3 = a3.length), this._insertNode(t3, e3, n3, function(t4, n4) {
            e3 >= a3.length ? t4.appendTo(n4) : t4.insertBefore(a3.eq(e3));
          }, r3), r3 || (this._updateNodeClasses(n3, {}, { expanded: !r3 }), i2(n3).css("display", "block"));
        }, _refreshChildren: function(e3, t3, n3) {
          var a3, r3, o3, s3 = this.options, d3 = s3.loadOnDemand, u3 = s3.checkboxes && s3.checkboxes.checkChildren;
          if (i2(e3).empty(), t3.length) for (this._appendItems(n3, t3, e3), r3 = i2(e3).children(), d3 && u3 && this._bubbleIndeterminate(r3.last()), a3 = 0; a3 < r3.length; a3++) o3 = r3.eq(a3), this.trigger("itemChange", { item: o3.children("div"), data: t3[a3], ns: l2 });
          else J(e3);
        }, _refreshRoot: function(t3) {
          var n3 = this._renderGroup({ items: t3, group: { firstLevel: true, expanded: true } });
          if (this.root.length && this.root[0].parentElement) {
            this._angularItems("cleanup");
            var i3 = e2(n3);
            this.root.attr("class", i3.attr("class")).html(i3.html());
          } else this.root = this.wrapper.html(n3).children("ul");
          for (var a3 = this.root.children(".k-item"), r3 = 0; r3 < t3.length; r3++) this.trigger("itemChange", { item: a3.eq(r3), data: t3[r3], ns: l2 });
          this._angularItems("compile");
        }, refresh: function(e3) {
          var n3, i3 = e3.node, a3 = e3.action, r3 = e3.items, o3 = this.wrapper, s3 = this.options, l3 = s3.loadOnDemand, d3 = s3.checkboxes && s3.checkboxes.checkChildren;
          if (!this._skip) {
            for (n3 = 0; n3 < r3.length; n3++) this._dataSourceUids[r3[n3].uid] = r3[n3];
            if (e3.field) {
              if (!r3[0] || !r3[0].level) return;
              return this._updateNodes(r3, e3.field);
            }
            if (i3 && (o3 = this.findByUid(i3.uid), this._progress(o3, false)), d3 && "remove" != a3) {
              var u3 = false;
              for (n3 = 0; n3 < r3.length; n3++) if ("checked" in r3[n3]) {
                u3 = true;
                break;
              }
              if (!u3 && i3 && i3.checked) for (n3 = 0; n3 < r3.length; n3++) r3[n3].checked = true;
            }
            if ("add" == a3 ? this._appendItems(e3.index, r3, o3) : "remove" == a3 ? this._remove(this.findByUid(r3[0].uid), false) : "itemchange" == a3 ? this._updateNodes(r3) : "itemloaded" == a3 ? this._refreshChildren(o3, r3, e3.index) : (this._refreshRoot(r3), this.element.attr(j, false)), "remove" != a3) for (n3 = 0; n3 < r3.length; n3++) (!l3 || r3[n3].expanded || r3[n3]._loaded) && r3[n3].load();
            this.wrapper.find(">ul").attr("role", "none"), this.trigger(E, { node: i3 ? o3 : t2 }), this.dataSource.filter() && this.options.checkboxes.checkChildren && this.updateIndeterminate(o3);
          }
        }, _error: function(e3) {
          var t3 = e3.node && this.findByUid(e3.node.uid), n3 = this.templates.retry({ messages: this.options.messages });
          t3 ? (this._progress(t3, false), this._expanded(t3, false), r2(t3).addClass("k-i-reload"), e3.node.loaded(false)) : (this._progress(false), this.dataSource.data([]), this.element.html(n3));
        }, _retryRequest: function(e3) {
          e3.preventDefault(), this.dataSource.fetch(this._attemptLoadCompleted.bind(this));
        }, expand: function(e3) {
          this._processNodes(e3, function(e4, t3) {
            this.toggle(t3, true);
          });
        }, collapse: function(e3) {
          this._processNodes(e3, function(e4, t3) {
            this.toggle(t3, false);
          });
        }, enable: function(e3, t3) {
          "boolean" == typeof e3 ? (t3 = e3, e3 = this.items()) : t3 = 2 != arguments.length || !!t3, this._processNodes(e3, function(e4, n3) {
            this.dataItem(n3).set("enabled", t3);
          });
        }, current: function(t3) {
          var n3 = this, i3 = n3._current, a3 = n3.element;
          return arguments.length > 0 && t3 && t3.length ? (i3 && i3.find(".k-in").first().removeClass("k-focus"), (i3 = n3._current = e2(t3, a3).closest(O)).find(".k-in").first().addClass("k-focus"), void n3._updateActiveDescendant()) : (i3 || (i3 = n3._nextVisible(e2())), i3);
        }, _updateActiveDescendant: function() {
          var e3 = this._current, t3 = e3[0].id || this._ariaId, n3 = this.element.find("#" + this._ariaId);
          n3.length > 0 && n3.removeAttr("id"), this.wrapper.removeAttr(W), e3.attr("id", t3), this.wrapper.attr(W, t3);
        }, select: function(t3) {
          var n3 = this, i3 = n3.element;
          if (!arguments.length) return i3.find(".k-selected").closest(O);
          t3 = e2(t3, i3).closest(O), i3.find(".k-selected").each(function() {
            var t4 = n3.dataItem(this);
            t4 ? (t4.set("selected", false), delete t4.selected) : e2(this).removeClass("k-selected");
          }), t3.length && (n3.dataItem(t3).set("selected", true), n3._clickTarget = t3), n3.trigger(w);
        }, _toggle: function(e3, t3, n3) {
          var i3, r3 = this.options, o3 = a2(e3), s3 = n3 ? "expand" : "collapse";
          o3.data("animating") || (i3 = t3 && t3.loaded(), n3 && !i3 ? (r3.loadOnDemand && this._progress(e3, true), o3.remove(), t3.load()) : (this._updateNodeClasses(e3, {}, { expanded: n3 }), n3 || o3.css("height", o3.height()).css("height"), o3.kendoStop(true, true).kendoAnimate(u2({ reset: true }, r3.animation[s3], { complete: function() {
            n3 && o3.css("height", "");
          } }))));
        }, toggle: function(t3, n3) {
          t3 = e2(t3), r2(t3).is(".k-i-expand, .k-i-collapse") && (1 == arguments.length && (n3 = !this._expanded(t3)), this._expanded(t3, n3));
        }, destroy: function() {
          var e3 = this;
          h2.fn.destroy.call(e3), e3.wrapper.off(g2), e3.wrapper.find(".k-checkbox-wrapper :checkbox").off(g2), e3._clickHandler = null, e3._unbindDataSource(), e3.dragging && e3.dragging.destroy(), e3._dataSourceUids = {}, s2.destroy(e3.element), e3.root = e3.wrapper = e3.element = null;
        }, _expanded: function(e3, t3, n3) {
          var i3, r3 = s2.attr("expanded"), o3 = t3, l3 = o3 ? "expand" : "collapse";
          if (1 == arguments.length) return i3 = this._dataItem(e3), "true" === e3.attr(r3) || i3 && i3.expanded;
          i3 = this.dataItem(e3), a2(e3).data("animating") || !n3 && this._trigger(l3, e3) || (o3 ? (e3.attr(r3, "true"), e3.attr(U, "true")) : (e3.removeAttr(r3), e3.attr(U, "false")), i3 && (i3.set("expanded", o3), o3 = i3.expanded));
        }, _progress: function(e3, t3) {
          var n3 = this.element, i3 = this.templates.loading({ messages: this.options.messages });
          1 == arguments.length ? ((t3 = e3) ? n3.html(i3) : n3.empty(), n3.attr(j, t3)) : (r2(e3).toggleClass("k-i-loading", t3).removeClass("k-i-reload"), e3.attr(j, t3));
        }, text: function(e3, t3) {
          var n3 = this.dataItem(e3), i3 = this.options[G.text], a3 = n3.level(), r3 = i3.length, o3 = i3[Math.min(a3, r3 - 1)];
          if (!t3) return n3[o3];
          n3.set(o3, t3);
        }, _objectOrSelf: function(t3) {
          return e2(t3).closest("[data-role=treeview]").data("kendoTreeView") || this;
        }, _dataSourceMove: function(t3, n3, i3, a3) {
          var r3, o3 = this._objectOrSelf(i3 || n3), s3 = o3.dataSource, l3 = e2.Deferred().resolve().promise();
          return i3 && i3[0] != o3.element[0] && ((r3 = o3.dataItem(i3)).loaded() || (o3._progress(i3, true), l3 = r3.load()), i3 != this.root && ((s3 = r3.children) && s3 instanceof f2 || (r3._initChildren(), r3.loaded(true), s3 = r3.children))), t3 = this._toObservableData(t3), a3.call(o3, s3, t3, l3);
        }, _toObservableData: function(t3) {
          var n3, i3, a3, r3 = t3;
          return ((a3 = t3) instanceof s2.jQuery || window.jQuery && a3 instanceof window.jQuery || K(t3)) && (n3 = this._objectOrSelf(t3).dataSource, i3 = e2(t3).attr(s2.attr("uid")), (r3 = n3.getByUid(i3)) && (r3 = n3.remove(r3))), r3;
        }, _insert: function(e3, t3, n3) {
          t3 instanceof s2.data.ObservableArray ? t3 = t3.toJSON() : p2(t3) || (t3 = [t3]);
          var i3 = e3.parent();
          return i3 && i3._initChildren && (i3.hasChildren = true, i3._initChildren()), e3.splice.apply(e3, [n3, 0].concat(t3)), this.findByUid(e3[n3].uid);
        }, insertAfter: X(1), insertBefore: X(0), append: function(t3, n3, a3) {
          var r3 = this.root;
          if (!(n3 && t3 instanceof jQuery2 && n3[0] === t3[0])) return (n3 = n3 && n3.length ? n3 : null) && (r3 = i2(n3)), this._dataSourceMove(t3, r3, n3, function(t4, i3, r4) {
            var o3, s3 = this;
            return r4.done(function() {
              o3 = function() {
                n3 && s3._expanded(n3, true, true);
                var e3 = t4.data(), a4 = Math.max(e3.length, 0);
                return s3._insert(e3, i3, a4);
              }(), (a3 = a3 || e2.noop)(o3);
            }), o3 || null;
          });
        }, _remove: function(t3, n3) {
          var i3, a3, r3, o3 = this;
          return (t3 = e2(t3, o3.element)).attr("id") === o3.element.attr(W) && o3.element.removeAttr(W), this.angular("cleanup", function() {
            return { elements: t3.get() };
          }), i3 = t3.parent().parent(), a3 = t3.prev(), r3 = t3.next(), t3[n3 ? "detach" : "remove"](), i3.hasClass("k-item") && (J(i3), o3._updateNodeClasses(i3)), o3._updateNodeClasses(a3), o3._updateNodeClasses(r3), t3;
        }, remove: function(e3) {
          var t3 = this.dataItem(e3);
          t3 && this.dataSource.remove(t3);
        }, detach: function(e3) {
          return this._remove(e3, true);
        }, findByText: function(t3) {
          return e2(this.element).find(".k-in").filter(function(n3, i3) {
            return e2(i3).text() == t3;
          }).closest(O);
        }, findByUid: function(t3) {
          for (var n3, i3 = this.element.find(".k-item"), a3 = s2.attr("uid"), r3 = 0; r3 < i3.length; r3++) if (i3[r3].getAttribute(a3) == t3) {
            n3 = i3[r3];
            break;
          }
          return e2(n3);
        }, expandPath: function(t3, n3) {
          var i3 = this, a3 = t3.slice(0), r3 = n3 || e2.noop;
          function o3(t4) {
            var n4, a4 = e2.Deferred(), r4 = i3.dataSource.get(t4), o4 = s2.attr("expanded");
            return r4 ? (n4 = i3.findByUid(r4.uid), r4.loaded() ? (r4.set("expanded", true), n4.attr(o4, true), n4.attr(U, true), a4.resolve()) : (i3._progress(n4, true), r4.load().then(function() {
              r4.set("expanded", true), n4.attr(o4, true), n4.attr(U, true), a4.resolve();
            }))) : a4.resolve(), a4.promise();
          }
          o3(a3[0]).then(function e3() {
            a3.shift(), a3.length ? o3(a3[0]).then(e3) : r3.call(i3);
          });
        }, _parentIds: function(e3) {
          for (var t3 = e3 && e3.parentNode(), n3 = []; t3 && t3.parentNode; ) n3.unshift(t3.id), t3 = t3.parentNode();
          return n3;
        }, expandTo: function(e3) {
          e3 instanceof s2.data.Node || (e3 = this.dataSource.get(e3));
          var t3 = this._parentIds(e3);
          this.expandPath(t3);
        }, _renderItem: function(e3) {
          return e3.group || (e3.group = {}), e3.treeview = this.options, e3.r = this.templates, this.templates.item(e3);
        }, _renderGroup: function(e3) {
          var t3 = this;
          return e3.renderItems = function(e4) {
            var n3 = "", i3 = 0, a3 = e4.items, r3 = a3 ? a3.length : 0, o3 = e4.group;
            for (o3.length = r3; i3 < r3; i3++) e4.group = o3, e4.item = a3[i3], e4.item.index = i3, n3 += t3._renderItem(e4);
            return n3;
          }, e3.r = t3.templates, t3.templates.group(e3);
        } }), s2.cssProperties.registerPrefix("TreeView", "k-treeview-"), l2.plugin(n2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = Math.abs, r2 = i2.extend({ init: function(e3, t3) {
          var a3 = this;
          function r3(e4) {
            return function(t4) {
              a3._triggerTouch(e4, t4);
            };
          }
          function o2(e4) {
            return function(t4) {
              a3.trigger(e4, { touches: t4.touches, distance: t4.distance, center: t4.center, event: t4.event });
            };
          }
          i2.fn.init.call(a3, e3, t3), t3 = a3.options, e3 = a3.element, a3.wrapper = e3, a3.events = new n2.UserEvents(e3, { filter: t3.filter, surface: t3.surface, minHold: t3.minHold, multiTouch: t3.multiTouch, allowSelection: true, fastTap: t3.fastTap, press: r3("touchstart"), hold: r3("hold"), tap: a3._tap.bind(a3), gesturestart: o2("gesturestart"), gesturechange: o2("gesturechange"), gestureend: o2("gestureend") }), t3.enableSwipe ? (a3.events.bind("start", a3._swipestart.bind(a3)), a3.events.bind("move", a3._swipemove.bind(a3))) : (a3.events.bind("start", a3._dragstart.bind(a3)), a3.events.bind("move", r3("drag")), a3.events.bind("end", r3("dragend"))), n2.notify(a3);
        }, events: ["touchstart", "dragstart", "drag", "dragend", "tap", "doubletap", "hold", "swipe", "gesturestart", "gesturechange", "gestureend"], options: { name: "Touch", surface: null, global: false, fastTap: false, filter: null, multiTouch: false, enableSwipe: false, minXDelta: 30, maxYDelta: 20, maxDuration: 1e3, minHold: 800, doubleTapTimeout: 800 }, cancel: function() {
          this.events.cancel();
        }, destroy: function() {
          i2.fn.destroy.call(this), this.events.destroy();
        }, _triggerTouch: function(e3, t3) {
          this.trigger(e3, { touch: t3.touch, event: t3.event }) && t3.preventDefault();
        }, _tap: function(e3) {
          var t3 = this, i3 = t3.lastTap, a3 = e3.touch;
          i3 && a3.endTime - i3.endTime < t3.options.doubleTapTimeout && n2.touchDelta(a3, i3).distance < 20 ? (t3._triggerTouch("doubletap", e3), t3.lastTap = null) : (t3._triggerTouch("tap", e3), t3.lastTap = a3);
        }, _dragstart: function(e3) {
          this._triggerTouch("dragstart", e3);
        }, _swipestart: function(e3) {
          2 * a2(e3.x.velocity) >= a2(e3.y.velocity) && e3.sender.capture();
        }, _swipemove: function(e3) {
          var t3 = this.options, n3 = e3.touch, i3 = e3.event.timeStamp - n3.startTime, r3 = n3.x.initialDelta > 0 ? "right" : "left";
          a2(n3.x.initialDelta) >= t3.minXDelta && a2(n3.y.initialDelta) < t3.maxYDelta && i3 < t3.maxDuration && (this.trigger("swipe", { direction: r3, touch: e3.touch }), n3.cancel());
        } });
        n2.ui.plugin(r2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = ".kendoButtonMenu", r2 = n2.ui, o2 = n2.keys, s2 = e2.extend, l2 = ".", d2 = "id", u2 = "next", c2 = "k-disabled", p2 = "aria-disabled", h2 = "tabindex", f2 = "click", m2 = "menuClick", g2 = "menuOpen", v2 = "menuClose", _2 = "keydown", b2 = "focus", k2 = "k-menu-popup", w = "k-group k-menu-group k-reset", y = "k-item k-menu-item", x = "k-menu-item", C = "k-link k-menu-link", T = { text: null, icon: null, url: null, attributes: null, enabled: true, hidden: false, id: null, imageUrl: null, spriteCssClass: null }, S = '#if(imageUrl){#<img alt="icon" class="k-image" src="#:imageUrl#" />#}#', I = '#if(spriteCssClass){#<span class="k-sprite #:spriteCssClass#"></span>#}#', D = '#if(icon){#<span class="k-icon k-i-#:icon#"></span>#}#', E = '#if(text){#<span class="k-menu-link-text">#:text#</span>#}#', A = '<span class="' + C + '">' + S + I + D + E + "</span>", F = '<a href="#:url#" class="' + C + '">' + S + I + D + E + "</a>";
        function z(t3, n3) {
          var i3 = n3 === u2 ? e2.fn.next : e2.fn.prev, a3 = n3 === u2 ? e2.fn.first : e2.fn.last, r3 = i3.call(t3), o3 = ":kendoFocusable";
          return r3.length || (r3 = a3.call(t3.parent().find(l2 + x))), r3.is(o3) || !r3.length ? r3 : r3.find(o3).length ? a3.call(r3.find(o3)) : z(r3, n3);
        }
        var P = i2.extend({ init: function(e3, t3) {
          var n3 = this;
          i2.fn.init.call(n3, e3, t3), n3.mainButton = t3.mainButton, n3._clickHandlers = {}, n3._renderList(), n3._initPopup(), n3._attachEvents(), n3._applyCssClasses(n3.list);
        }, options: { name: "ButtonMenu", element: null, items: [], size: "medium" }, events: [m2, g2, v2], _renderList: function() {
          var t3 = this, i3 = t3.options.items, a3 = t3.element.addClass(k2), r3 = t3.mainButton.attr(d2) || n2.guid(), o3 = e2('<ul role="menu"></ul>').addClass(w);
          t3.list = o3.appendTo(a3), t3.list.attr(d2, r3 + "_buttonmenu"), i3.forEach(t3._renderListItem.bind(t3));
        }, _renderListItem: function(t3) {
          var i3, a3, r3 = this;
          i3 = (t3 = s2({}, T, t3, { enabled: t3.enable && t3.enabled })).id || n2.guid(), a3 = e2('<li id="' + i3 + '" role="menuitem" class="' + y + '">' + r3._renderItemButton(t3) + "</li>"), t3.click && (r3._clickHandlers[i3] = t3.click), t3.attributes && a3.attr(t3.attributes), t3.data && n2.isFunction(t3.data) && a3.data(t3.data(t3)), r3.list.append(a3), r3.enable(t3.enabled, a3), r3._hide(t3.hidden, a3);
        }, _renderItemButton: function(e3) {
          var t3 = this.options;
          return t3.itemTemplate ? n2.template(t3.itemTemplate)(e3) : e3.url ? n2.template(F)(e3) : n2.template(A)(e3);
        }, _initPopup: function() {
          var e3 = this, t3 = e3.options;
          e3._popup = new r2.Popup(e3.element, s2({}, t3.popup, { anchor: e3.mainButton, isRtl: e3._isRtl, toggleTarget: t3.toggleTarget, copyAnchorStyles: false, animation: t3.animation, open: e3._popupOpenHandler.bind(e3), close: e3._popupCloseHandler.bind(e3), activate: e3._popupExpandHandler.bind(e3) }));
        }, _popupOpenHandler: function(e3) {
          this.trigger(g2) ? e3.preventDefault() : this.list.find(l2 + x).attr(h2, 0);
        }, _popupCloseHandler: function(e3) {
          this.trigger(v2) && e3.preventDefault(), this.list.find(l2 + x).attr(h2, -1);
        }, _popupExpandHandler: function() {
          this.list.find(":kendoFocusable").first().trigger(b2);
        }, adjustPopupWidth: function(e3) {
          this.element.addClass("k-split-wrapper"), this.element.css({ "min-width": e3 });
        }, _attachEvents: function() {
          var e3 = this;
          e3.list.on(f2 + a2, l2 + x, e3._click.bind(e3)).on(_2 + a2, l2 + x, e3.listItemKeydown.bind(e3)), e3.mainButton.on(_2 + a2, e3._keydown.bind(e3));
        }, _keydown: function(t3) {
          if (!e2(t3.target).is(".k-disabled") && !e2(t3.target).parents(".k-disabled").length) return t3.altKey && t3.keyCode === o2.DOWN ? (this._popup.open(), void t3.preventDefault()) : void 0;
        }, listItemKeydown: function(t3) {
          var n3 = this, i3 = e2(t3.target);
          t3.preventDefault(), t3.keyCode === o2.ESC || t3.keyCode === o2.TAB || t3.altKey && t3.keyCode === o2.UP ? (n3._popup.close(), n3.mainButton.trigger(b2)) : t3.keyCode === o2.DOWN ? z(i3, u2).trigger(b2) : t3.keyCode === o2.UP ? z(i3, "prev").trigger(b2) : i3.is(".k-disabled") || t3.keyCode !== o2.SPACEBAR && t3.keyCode !== o2.ENTER ? t3.keyCode === o2.HOME ? n3.list.find(":kendoFocusable").filter(l2 + x).first().trigger(b2) : t3.keyCode === o2.END && n3.list.find(":kendoFocusable").filter(l2 + x).last().trigger(b2) : i3.trigger(f2);
        }, _click: function(t3) {
          var n3 = this, i3 = e2(t3.target).closest(l2 + x), a3 = i3.attr(d2);
          n3._clickHandlers[a3] && n3._clickHandlers[a3](t3), n3.trigger(m2, { id: a3, target: i3, type: "menu-click", originalEvent: t3 });
        }, toggle: function() {
          this._popup.toggle();
        }, enable: function(e3, t3) {
          (t3 = t3 && t3.length ? this.list.find(t3) : this.items()).toggleClass(c2, !e3), e3 ? t3.removeAttr(p2) : t3.attr(p2, !e3);
        }, _hide: function(e3, t3) {
          (t3 = t3 && t3.length ? this.list.find(t3) : this.items()).toggleClass("k-hidden", e3);
        }, hide: function(e3) {
          this._hide(true, e3);
        }, show: function(e3) {
          this._hide(false, e3);
        }, close: function() {
          this._popup.close();
        }, items: function() {
          return this.list.children(l2 + x);
        }, destroyPopup: function() {
          var e3 = this;
          e3._popup && (e3._popup.destroy(), e3._popup = null, e3.list.off(a2), e3.list.remove(), e3.list = null);
        }, destroy: function() {
          var e3 = this;
          delete e3._clickHandlers, e3.destroyPopup(), e3.mainButton.off(a2), i2.fn.destroy.call(e3);
        } });
        n2.cssProperties.registerPrefix("ButtonMenu", "k-menu-group-"), r2.plugin(P);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = ".kendoSplitButton", r2 = n2.ui, o2 = e2.extend, s2 = n2.html, l2 = n2._outerWidth, d2 = n2.keys, u2 = "id", c2 = "aria-disabled", p2 = "aria-label", h2 = "aria-expanded", f2 = "disabled", m2 = "k-disabled", g2 = "k-focus", v2 = "click", _2 = "open", b2 = "close", k2 = "focus", w = "k-split-button k-button-group", y = i2.extend({ init: function(t3, a3) {
          var r3 = this;
          a3.enabled = false !== a3.enabled && !e2(t3).prop(f2), i2.fn.init.call(r3, t3, a3), r3._wrapper(), r3._renderButtons(), r3._renderMenu(), r3._enable(r3.options.enabled), r3._aria(), r3._attachEvents(), n2.notify(r3), r3._applyCssClasses();
        }, options: { name: "SplitButton", enabled: true, items: [], rounded: "medium", size: "medium", fillMode: "solid", themeColor: "base", icon: null, popup: null, arrowIcon: "arrow-s", messages: { labelSuffix: "splitbutton" } }, events: [v2, _2, b2], _wrapper: function() {
          var t3 = this, i3 = (t3.element.attr(u2) || n2.guid()) + "_wrapper";
          t3.wrapper = t3.element.wrap('<div id="' + i3 + '" class="' + w + '"></div>').parent(".k-split-button"), t3.arrowButton = e2('<button tabindex="-1" aria-label="arrow-button" class="k-split-button-arrow"></button>').appendTo(t3.wrapper);
        }, _applyCssClasses: function() {
          this.wrapper.addClass(this._getAppearanceClasses());
        }, _clearCssClasses: function() {
          this.wrapper.removeClass(this._getAppearanceClasses());
        }, _getAppearanceClasses: function() {
          var e3 = this.__proto__.options.name;
          return n2.cssProperties.getValidClass({ widget: e3, propName: "rounded", value: this.options.rounded });
        }, _renderButtons: function() {
          this._mainButton(), this._arrowButton();
        }, _mainButton: function() {
          var e3 = this, t3 = o2({}, e3.options, { type: e3.element.attr("type") || "button" });
          delete t3.click, s2.renderButton(e3.element, t3);
        }, _arrowButton: function() {
          var e3 = this, t3 = o2({}, e3.options, { type: "button", icon: e3.options.arrowIcon });
          delete t3.text, delete t3.imageUrl, delete t3.click, s2.renderButton(e3.arrowButton, t3);
        }, _aria: function() {
          var e3 = this, t3 = e3.element, n3 = e3.menu;
          t3.attr("aria-haspopup", n3 ? "menu" : null), t3.attr(h2, !n3 && null), t3.attr("aria-controls", n3 ? n3.list.attr(u2) : null), t3.attr(p2) || t3.attr(p2, t3.text() + " " + e3.options.messages.labelSuffix);
        }, _renderMenu: function() {
          var t3 = this, n3 = o2({}, t3.options), i3 = e2("<div></div>");
          delete n3.click, delete n3.name, n3.items.length && (t3.menu = i3.appendTo(t3.wrapper).kendoButtonMenu(o2({ mainButton: t3.element, toggleTarget: t3.arrowButton, menuOpen: t3.menuOpenHandler.bind(t3), menuClose: t3.menuCloseHandler.bind(t3), menuClick: t3._click.bind(t3) }, n3)).data("kendoButtonMenu"));
        }, menuOpenHandler: function(e3) {
          var t3 = this, n3 = l2(t3.wrapper);
          t3.trigger(_2, { target: t3.element }) ? e3.preventDefault() : (e3.sender.adjustPopupWidth(n3), t3.element.attr(h2, true));
        }, menuCloseHandler: function(e3) {
          var t3 = this;
          t3.trigger(b2, { target: t3.element }) ? e3.preventDefault() : (t3.element.attr(h2, false), t3.element.trigger(k2));
        }, _attachEvents: function() {
          var e3 = this;
          e3.element.on(v2 + a2, e3._click.bind(e3)), e3.element.on("keydown" + a2, e3._keydown.bind(e3)), e3.element.on(k2 + a2, e3._focus.bind(e3)), e3.element.on("blur" + a2, e3._blur.bind(e3));
        }, _focus: function() {
          this.wrapper.addClass(g2);
        }, _blur: function() {
          this.wrapper.removeClass(g2);
        }, _click: function(t3) {
          var n3 = e2(t3.target).closest(".k-button"), i3 = n3.attr(u2), a3 = t3;
          "menu-click" === t3.type && (i3 = t3.id, n3 = t3.target, a3 = t3.originalEvent), this.menu.close(), this.trigger(v2, { id: i3, target: n3, originalEvent: a3 });
        }, _keydown: function(e3) {
          !this.element.is(".k-disabled") || e3.keyCode !== d2.ENTER && e3.keyCode !== d2.SPACEBAR || e3.preventDefault();
        }, focus: function() {
          this.element.trigger(k2);
        }, _enable: function(e3, t3) {
          this.element.add(this.arrowButton).toggleClass(m2, !e3), e3 ? this.element.removeAttr(c2) : this.element.attr(c2, !e3), t3 || this.element.attr(f2, !e3), this.arrowButton.attr(f2, !e3);
        }, enable: function(e3, t3, n3) {
          var i3 = this;
          void 0 === e3 && (e3 = true), t3 && t3.length ? i3.menu.enable(e3, t3) : (i3.options.enabled = e3, i3._enable(e3, n3), i3.menu.enable(e3));
        }, hide: function(e3) {
          e3 && e3.length && this.menu.hide(e3);
        }, show: function(e3) {
          e3 && e3.length && this.menu.show(e3);
        }, open: function() {
          this.menu._popup.open();
        }, close: function() {
          this.menu._popup.close();
        }, items: function() {
          return this.menu.items();
        }, setOptions: function(e3) {
          var t3 = this;
          i2.fn.setOptions.call(t3, e3), (e3.popup || e3.items || e3.size) && (t3.menu.destroy(), t3._renderMenu()), t3._renderButtons(), t3._aria();
        }, destroy: function() {
          var e3 = this;
          e3.menu.destroy(), e3.element.off(a2), i2.fn.destroy.call(e3);
        } });
        n2.cssProperties.registerPrefix("SplitButton", "k-splitbutton-"), n2.cssProperties.registerValues("SplitButton", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), r2.plugin(y);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui.Widget, a2 = ".kendoDropDownButton", r2 = n2.ui, o2 = n2.keys, s2 = e2.extend, l2 = n2.html, d2 = n2._outerWidth, u2 = "aria-disabled", c2 = "aria-label", p2 = "aria-expanded", h2 = "disabled", f2 = "k-disabled", m2 = "click", g2 = "open", v2 = "close", _2 = "focus", b2 = "k-menu-button", k2 = i2.extend({ init: function(t3, a3) {
          var r3 = this;
          a3.enabled = false !== a3.enabled && !e2(t3).prop(h2), i2.fn.init.call(r3, t3, a3), r3.wrapper = r3.element, r3._mainButton(), r3._renderMenu(), r3._enable(r3.options.enabled), r3._aria(), r3._attachEvents(), n2.notify(r3), r3._applyCssClasses();
        }, options: { name: "DropDownButton", enabled: true, items: [], rounded: "medium", size: "medium", fillMode: "solid", themeColor: "base", icon: null, popup: null, messages: { labelSuffix: "dropdownbutton" } }, events: [m2, g2, v2], _mainButton: function() {
          var e3 = this, t3 = s2({}, e3.options, { type: e3.element.attr("type") || "button" });
          delete t3.click, e3.element.addClass(b2), l2.renderButton(e3.element, t3);
        }, _aria: function() {
          var e3 = this, t3 = e3.element, n3 = e3.menu;
          t3.attr("aria-haspopup", n3 ? "menu" : null), t3.attr(p2, !n3 && null), t3.attr("aria-controls", n3 ? n3.list.attr("id") : null), t3.attr(c2) || t3.attr(c2, t3.text() + " " + e3.options.messages.labelSuffix);
        }, _renderMenu: function() {
          var t3 = this, n3 = s2({}, t3.options), i3 = e2("<div></div>");
          delete n3.click, delete n3.name, n3.items.length && (t3.menu = i3.appendTo(document.body).kendoButtonMenu(s2({ mainButton: t3.element, toggleTarget: t3.element, menuOpen: t3.menuOpenHandler.bind(t3), menuClose: t3.menuCloseHandler.bind(t3), menuClick: t3._click.bind(t3) }, n3)).data("kendoButtonMenu"));
        }, menuOpenHandler: function(e3) {
          var t3 = this, n3 = d2(t3.element);
          t3.trigger(g2, { target: t3.element }) ? e3.preventDefault() : (e3.sender.adjustPopupWidth(n3), t3.element.attr(p2, true));
        }, menuCloseHandler: function(e3) {
          var t3 = this;
          t3.trigger(v2, { target: t3.element }) ? e3.preventDefault() : (t3.element.attr(p2, false), t3.element.trigger(_2));
        }, _attachEvents: function() {
          var e3 = this;
          e3.element.on("keydown" + a2, e3._keydown.bind(e3));
        }, _click: function(e3) {
          var t3 = e3.id, n3 = e3.target, i3 = e3.originalEvent;
          this.menu.close(), this.trigger(m2, { id: t3, target: n3, originalEvent: i3 });
        }, _keydown: function(e3) {
          !this.element.is(".k-disabled") || e3.keyCode !== o2.ENTER && e3.keyCode !== o2.SPACEBAR || e3.preventDefault();
        }, focus: function() {
          this.element.trigger(_2);
        }, _enable: function(e3, t3) {
          this.element.toggleClass(f2, !e3), e3 ? this.element.removeAttr(u2) : this.element.attr(u2, !e3), t3 || this.element.attr(h2, !e3);
        }, enable: function(e3, t3, n3) {
          var i3 = this;
          void 0 === e3 && (e3 = true), t3 && t3.length ? i3.menu.enable(e3, t3) : (i3.options.enabled = e3, i3._enable(e3, n3), i3.menu.enable(e3));
        }, hide: function(e3) {
          e3 && e3.length && this.menu.hide(e3);
        }, show: function(e3) {
          e3 && e3.length && this.menu.show(e3);
        }, open: function() {
          this.menu._popup.open();
        }, close: function() {
          this.menu._popup.close();
        }, items: function() {
          return this.menu.items();
        }, setOptions: function(e3) {
          var t3 = this;
          i2.fn.setOptions.call(t3, e3), (e3.popup || e3.items || e3.size) && (t3.menu.destroy(), t3._renderMenu()), t3._mainButton(), t3._aria();
        }, destroy: function() {
          var e3 = this;
          e3.menu.destroy(), e3.element.off(a2), i2.fn.destroy.call(e3);
        } });
        r2.plugin(k2);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.Class, a2 = n2.ui, r2 = a2.Widget, o2 = n2.isFunction, s2 = n2.keys, l2 = n2._outerWidth, d2 = ".kendoToolBar", u2 = "k-button", c2 = "k-overflow-button", p2 = "k-toggle-button", h2 = "k-button-group", f2 = "k-split-button", m2 = "k-menu-button", g2 = "k-separator", v2 = "k-spacer", _2 = "k-selected", b2 = "k-disabled", k2 = "k-hidden", w = "k-force-hidden", y = "k-overflow-hidden", x = "k-overflow-anchor", C = "k-overflow-container", T = "k-toolbar-first-visible", S = "k-toolbar-last-visible", I = "k-split-button-arrow", D = "k-toolbar-item", E = "k-dropdownlist", A = "k-colorpicker", F = "k-input-button", z = "k-focus", P = "aria-disabled", H = "aria-label", N = "click", R = "toggle", O = "open", M = "close", B = "focus", L = "keydown", V = "spacer", U = "both", W = "primary", j = "role", q = "button", G = "splitButton", K = "dropDownButton", $ = "separator", Y = "overflow", Q = "next", X = "tabindex", J = "template", Z = "input", ee = "hidden", te = "group", ne = ":kendoFocusable", ie = "overflowOpen", ae = "overflowClose", re = "never", oe = "auto", se = "_optionlist", le = n2.attr("uid"), de = " ", ue = "", ce = "textItem", pe = ".", he = ",";
        n2.toolbar = {};
        var fe = { overflowAnchor: '<div tabindex="0" class="k-overflow-anchor k-button k-button-md k-rounded-md k-button-flat k-button-flat-base" title="More tools" role="button"></div>', overflowContainer: '<ul class="k-overflow-container k-list-container"></ul>' };
        n2.toolbar.registerComponent = function(e3, t3, n3) {
          fe[e3] = { toolbar: t3, overflow: n3 };
        };
        var me = n2.Class.extend({ addOverflowAttr: function() {
          this.element.attr(n2.attr(Y), this.options.overflow || oe);
        }, addUidAttr: function() {
          this.element.attr(le, this.options.uid);
        }, addIdAttr: function() {
          this.options.id && this.element.attr("id", this.options.id);
        }, addOverflowIdAttr: function() {
          this.options.id && this.element.attr("id", this.options.id + "_overflow");
        }, attributes: function() {
          var e3, t3 = this.options.attributes;
          t3 && (t3.class && (e3 = t3.class, this.element.addClass(e3), delete t3.class), this.element.attr(t3), t3.class = e3);
        }, show: function() {
          this.element.removeClass(k2), this.element.removeClass(w), this.options.hidden = false;
        }, hide: function() {
          this.element.addClass(k2), this.element.addClass(w), this.overflow && this.overflowHidden && this.overflowHidden(), this.options.hidden = true;
        }, remove: function() {
          this.element.remove();
        }, enable: function(e3) {
          e3 === t2 && (e3 = true), this.element.toggleClass(b2, !e3), this.element.attr(P, !e3), this.options.enable = e3;
        }, twin: function() {
          var t3 = this.element.attr(le);
          return this.overflow && this.options.splitContainerId ? e2("#" + this.options.splitContainerId).find("[" + le + "='" + t3 + "']").data(this.options.type) : this.overflow ? this.toolbar.element.find("[" + le + "='" + t3 + "']").data(this.options.type) : this.toolbar.options.resizable ? this.toolbar.popup.element.find("[" + le + "='" + t3 + "']").data(this.options.type) : void 0;
        } });
        n2.toolbar.Item = me;
        var ge = me.extend({ init: function(t3, n3) {
          this.options = e2.extend({}, this.options, t3), this.toolbar = n3;
        } });
        n2.toolbar.BareItem = ge;
        var ve = me.extend({ init: function(i3, a3) {
          var r3 = i3.useButtonTag ? e2("<button></button>") : e2('<a role="button" href></a>');
          this.element = r3, this.options = e2.extend({}, this.options, i3), this.toolbar = a3, this.attributes(), i3.primary && (this.options.themeColor = W), i3.togglable && (r3.addClass(p2), this.toggle(i3.selected)), i3.url === t2 || i3.useButtonTag || (r3.attr("href", i3.url), i3.mobile && r3.attr(n2.attr(j), q)), i3.group && (r3.attr(n2.attr(te), i3.group), this.group = this.toolbar.addToGroup(this, i3.group)), !i3.togglable && i3.click && o2(i3.click) && (this.clickHandler = i3.click), i3.togglable && i3.toggle && o2(i3.toggle) && (this.toggleHandler = i3.toggle);
        }, options: { showIcon: U, showText: U }, toggle: function(e3, t3) {
          e3 = !!e3, this.group && e3 ? this.group.select(this) : this.group || this.select(e3), t3 && this.twin() && this.twin().toggle(e3);
        }, getParentGroup: function() {
          if (this.options.isChild) return this.element.closest(pe + h2).data("buttonGroup");
        } });
        n2.toolbar.Button = ve;
        var _e = ve.extend({ init: function(e3, t3) {
          ve.fn.init.call(this, e3, t3);
          var i3 = this.element;
          e3 = this.options, i3.addClass(u2), this.addIdAttr(), e3.align && i3.addClass("k-align-" + e3.align), !e3.text || "toolbar" != e3.showText && e3.showText != U ? e3.text && i3.attr(H, e3.text) : e3.mobile ? i3.html('<span class="km-text">' + e3.text + "</span>") : i3.html(e3.text), (e3.icon || e3.spriteCssClass || e3.imageUrl) && "toolbar" !== e3.showIcon && e3.showIcon !== U && (e3.icon = null, e3.spriteCssClass = null, e3.imageUrl = null), n2.html.renderButton(i3, e3), this.addUidAttr(), this.addOverflowAttr(), this.enable(e3.enable), e3.hidden && this.hide(), this.element.data({ type: q, button: this });
        }, select: function(e3) {
          e3 === t2 && (e3 = false), this.options.togglable && this.element.attr("aria-pressed", e3), this.element.toggleClass(_2, e3), this.options.selected = e3;
        } });
        n2.toolbar.ToolBarButton = _e;
        var be = ve.extend({ init: function(t3, i3) {
          this.overflow = true, ve.fn.init.call(this, e2.extend({}, t3), i3);
          var a3 = this.element;
          !(t3 = this.options).text || t3.showText != Y && t3.showText != U ? t3.text && a3.attr(H, t3.text) : t3.mobile ? a3.html('<span class="km-text">' + t3.text + "</span>") : a3.html(t3.text), (t3.icon || t3.spriteCssClass || t3.imageUrl) && t3.showIcon !== Y && t3.showIcon !== U && (t3.icon = null, t3.spriteCssClass = null, t3.imageUrl = null), n2.html.renderButton(a3, t3), t3.isChild || this._wrap(), this.addOverflowIdAttr(), this.attributes(), this.addUidAttr(), this.addOverflowAttr(), this.enable(t3.enable), a3.addClass("k-overflow-button " + u2), t3.hidden && this.hide(), t3.togglable && this.toggle(t3.selected), this.element.data({ type: q, button: this });
        }, _wrap: function() {
          this.element = this.element.wrap('<li class="k-menu-item k-item">').parent();
        }, overflowHidden: function() {
          this.element.addClass(y);
        }, select: function(e3) {
          e3 === t2 && (e3 = false), this.options.isChild ? this.element.toggleClass(_2, e3) : this.element.find(pe + u2).toggleClass(_2, e3), this.options.selected = e3;
        } });
        n2.toolbar.OverflowButton = be, n2.toolbar.registerComponent(q, _e, be);
        var ke = me.extend({ createButtons: function(t3) {
          for (var i3 = this.options, a3 = i3.buttons || [], r3 = 0; r3 < a3.length; r3++) a3[r3].uid || (a3[r3].uid = n2.guid()), new t3(e2.extend({ mobile: i3.mobile, isChild: true, type: q }, a3[r3]), this.toolbar).element.appendTo(this.element);
        }, refresh: function() {
          this.element.children().filter(":not('.k-hidden')").first().addClass("k-group-start"), this.element.children().filter(":not('.k-hidden')").last().addClass("k-group-end");
        } });
        n2.toolbar.ButtonGroup = ke;
        var we = ke.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<div></div>");
          this.options = t3, this.toolbar = n3, this.addIdAttr(), t3.align && i3.addClass("k-align-" + t3.align), this.createButtons(_e), this.attributes(), this.addUidAttr(), this.addOverflowAttr(), this.refresh(), i3.addClass(h2), t3.hidden && this.hide(), this.element.data({ type: "buttonGroup", buttonGroup: this });
        } });
        n2.toolbar.ToolBarButtonGroup = we;
        var ye = ke.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<li></li>");
          this.options = t3, this.toolbar = n3, this.overflow = true, this.addOverflowIdAttr(), this.createButtons(be), this.attributes(), this.addUidAttr(), this.addOverflowAttr(), this.refresh(), i3.addClass((t3.mobile ? ue : h2) + de + "k-overflow-group"), this.element.data({ type: "buttonGroup", buttonGroup: this });
        }, overflowHidden: function() {
          this.element.addClass(y);
        } });
        n2.toolbar.OverflowButtonGroup = ye, n2.toolbar.registerComponent("buttonGroup", we, ye);
        var xe = _e.extend({ init: function(i3, a3) {
          var r3;
          r3 = (i3 = this.options = e2.extend({}, this.options, i3)).url !== t2 ? e2(n2.template('<a href="#:href#" class="k-link k-menu-link"><span class="k-menu-link-text">#:text#</span></a>')({ href: i3.url, text: i3.text })) : e2(n2.template('<span tabindex="0" class="k-link k-menu-link"><span class="k-menu-link-text">#:text#</span></span>')({ text: i3.text })), this.element = r3, this.toolbar = a3, i3.click && o2(i3.click) && (this.clickHandler = i3.click), i3.togglable && i3.toggle && o2(i3.toggle) && (this.toggleHandler = i3.toggle), i3.imageUrl ? e2('<img alt="icon" class="k-image" />').prependTo(r3).attr("src", i3.imageUrl) : i3.icon ? e2("<span></span>").prependTo(r3).attr("class", "k-icon k-i-" + i3.icon) : i3.spriteCssClass && e2('<span class="k-sprite"></span>').prependTo(r3).addClass(i3.spriteCssClass), this.addIdAttr(), this.addUidAttr(), this.addOverflowAttr(), this.attributes(), this.enable(i3.enable), i3.group && (r3.attr(n2.attr(te), i3.group), this.group = this.toolbar.addToGroup(this, i3.group)), i3.hidden && this.hide(), this.element.data({ type: q, button: this });
        } });
        n2.toolbar.ToolBarMenuButton = xe;
        var Ce = me.extend({ init: function(t3, n3) {
          var i3 = this;
          i3.options = e2.extend({ id: t3.id || t3.uid, enable: true }, t3, { togglable: false }), t3.primary && (i3.options.themeColor = W), t3.showIcon === Y && (i3.options.icon = null), t3.showText === Y && (i3.options.text = ""), i3.toolbar = n3, i3.splitButton = new a2.SplitButton(e2("<button id='" + i3.options.id + "'>" + i3.options.text + "</button>"), e2.extend({}, i3.options, { items: i3._extend(t3.menuButtons) }), n3.options), i3.element = i3.splitButton.wrapper, i3.splitButton.bind(N, n3._buttonClick.bind(n3)), i3.splitButton.bind(M, i3._close.bind(i3)), i3.splitButton.bind(O, i3._open.bind(i3)), i3.splitButton.element.data({ type: G, button: i3, splitButton: i3 }), i3.splitButton.wrapper.data({ type: G, button: i3, splitButton: i3 }), i3.addOverflowAttr(), i3.addUidAttr(), i3.attributes(), i3.addMenuAttributes(), false === i3.options.enable && i3.enable(this.options.enable), i3.options.hidden && i3.hide();
        }, _open: function(e3) {
          this.toolbar.trigger(O, { target: this.element }) && e3.preventDefault();
        }, _close: function(e3) {
          var t3 = this;
          t3.toolbar.trigger(M, { target: t3.element }) && e3.preventDefault(), t3.splitButton.element.trigger(B);
        }, _extend: function(t3) {
          var n3 = this;
          return t3.map(function(t4) {
            var i3 = new ge(t4, n3.toolbar);
            return e2.extend({}, t4, { togglable: false, data: function() {
              return { type: q, button: i3, splitButton: n3 };
            } });
          });
        }, addMenuAttributes: function() {
          var t3;
          this.splitButton.items().each(function(n3, i3) {
            i3 = e2(i3), (t3 = i3.data(q)).element = i3, t3.options = e2.extend({ type: q, enable: true }, t3.options), t3.addOverflowAttr(), t3.addUidAttr();
          });
        }, remove: function() {
          var e3 = this.splitButton.wrapper;
          this.splitButton.destroy(), e3.remove();
        }, enable: function(e3, t3) {
          this.splitButton.enable(e3, t3, true), this.twin() && this.twin().enable(e3);
        }, attributes: function() {
          var e3, t3 = this.splitButton.element, n3 = this.options.attributes;
          n3 && (n3.class && (e3 = n3.class, t3.addClass(e3), delete n3.class), t3.attr(n3), n3.class = e3);
        } });
        n2.toolbar.ToolBarSplitButton = Ce;
        var Te = me.extend({ init: function(t3, n3) {
          var i3, a3 = this.element = e2('<li class="k-split-button"></li>'), r3 = t3.menuButtons;
          this.options = e2.extend({}, t3, { togglable: false }), this.toolbar = n3, this.overflow = true, i3 = (t3.id || t3.uid) + se, this.mainButton = new be(e2.extend({ isChild: true }, t3, { togglable: false })), this.mainButton.element.appendTo(a3);
          for (var o3 = 0; o3 < r3.length; o3++) new be(e2.extend({ mobile: t3.mobile, type: q, splitContainerId: i3, isChild: true }, r3[o3], { click: t3.click }), this.toolbar).element.appendTo(a3);
          this.addUidAttr(), this.addOverflowAttr(), this.mainButton.main = true, false === this.options.enable && this.enable(this.options.enable), a3.data({ type: G, splitButton: this });
        }, enable: function(e3) {
          var n3 = this.element.add(this.element.find(pe + c2));
          e3 === t2 && (e3 = true), n3.toggleClass(b2, !e3), n3.attr(P, !e3), this.options.enable = e3;
        }, overflowHidden: function() {
          this.element.addClass(y);
        } });
        n2.toolbar.OverflowSplitButton = Te, n2.toolbar.registerComponent(G, Ce, Te);
        var Se = me.extend({ init: function(t3, n3) {
          var i3 = this;
          i3.options = e2.extend({ id: t3.id || t3.uid, enable: true }, t3, { togglable: false }), t3.primary && (i3.options.themeColor = W), t3.showIcon === Y && (i3.options.icon = null), t3.showText === Y && (i3.options.text = ""), i3.toolbar = n3, i3.dropDownButton = new a2.DropDownButton(e2("<button id='" + i3.options.id + "'>" + i3.options.text + "</button>"), e2.extend({}, i3.options, { items: i3._extend(t3.menuButtons) }), n3.options), i3.element = i3.dropDownButton.element, i3.dropDownButton.bind(N, n3._buttonClick.bind(n3)), i3.dropDownButton.bind(M, i3._close.bind(i3)), i3.dropDownButton.bind(O, i3._open.bind(i3)), i3.dropDownButton.element.data({ type: K, button: i3, dropDownButton: i3 }), i3.addOverflowAttr(), i3.addUidAttr(), i3.attributes(), i3.addMenuAttributes(), false === i3.options.enable && i3.enable(this.options.enable), i3.options.hidden && i3.hide();
        }, _open: function(e3) {
          this.toolbar.trigger(O, { target: this.element }) && e3.preventDefault();
        }, _close: function(e3) {
          var t3 = this;
          t3.toolbar.trigger(M, { target: t3.element }) && e3.preventDefault(), t3.dropDownButton.element.trigger(B);
        }, _extend: function(t3) {
          var n3 = this;
          return t3.map(function(t4) {
            var i3 = new ge(t4, n3.toolbar);
            return e2.extend({}, t4, { data: function() {
              return { type: q, button: i3, dropDownButton: n3 };
            } });
          });
        }, addMenuAttributes: function() {
          var t3;
          this.dropDownButton.items().each(function(n3, i3) {
            i3 = e2(i3), (t3 = i3.data(q)).element = i3, t3.options = e2.extend({ type: q, enable: true }, t3.options), t3.addOverflowAttr(), t3.addUidAttr();
          });
        }, remove: function() {
          var e3 = this.dropDownButton.element;
          this.dropDownButton.destroy(), e3.remove();
        }, enable: function(e3, t3) {
          this.dropDownButton.enable(e3, t3, true), this.twin() && this.twin().enable(e3);
        }, attributes: function() {
          var e3, t3 = this.element, n3 = this.options.attributes;
          n3 && (n3.class && (e3 = n3.class, t3.addClass(e3), delete n3.class), t3.attr(n3), n3.class = e3);
        } });
        n2.toolbar.ToolBarSplitButton = Ce;
        var Ie = me.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<span></span>");
          this.element = i3, this.options = t3, this.toolbar = n3, this.overflow = true, this.attributes(), this.addUidAttr(), this.addOverflowIdAttr(), !t3.icon || t3.showIcon && "toolbar" === t3.showIcon || i3.append('<span class="k-icon k-i-' + t3.icon + '"></span>'), "toolbar" !== t3.showText && i3.append("<span>" + this.options.text + "</span>"), i3.data({ type: ce, textItem: this });
        }, overflowHidden: function() {
          this.element.addClass(y);
        } }), De = me.extend({ init: function(t3, n3) {
          var i3, a3 = this.element = e2('<li class="k-split-button k-menu-button"></li>'), r3 = t3.menuButtons;
          this.options = e2.extend({}, t3, { togglable: false }), this.toolbar = n3, this.overflow = true, i3 = (t3.id || t3.uid) + se, this.mainButton = new Ie(e2.extend({ isChild: true }, t3, { togglable: false })), this.mainButton.element.appendTo(a3);
          for (var o3 = 0; o3 < r3.length; o3++) new be(e2.extend({ mobile: t3.mobile, type: q, splitContainerId: i3, isChild: true }, r3[o3], { click: t3.click }), this.toolbar).element.appendTo(a3);
          this.addUidAttr(), this.addOverflowAttr(), this.mainButton.main = true, false === this.options.enable && this.enable(this.options.enable), a3.data({ type: K, dropDownButton: this });
        }, enable: function(e3) {
          var n3 = this.element.add(this.element.find(pe + c2));
          e3 === t2 && (e3 = true), n3.toggleClass(b2, !e3), n3.attr(P, !e3), this.options.enable = e3;
        }, overflowHidden: function() {
          this.element.addClass(y);
        } });
        n2.toolbar.OverflowSplitButton = De, n2.toolbar.registerComponent(K, Se, De);
        var Ee = me.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<div>&nbsp;</div>");
          this.element = i3, this.options = t3, this.toolbar = n3, this.attributes(), this.addIdAttr(), this.addUidAttr(), this.addOverflowAttr(), i3.addClass(g2), i3.attr(j, $), i3.data({ type: $, separator: this });
        } }), Ae = me.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<li>&nbsp;</li>");
          this.element = i3, this.options = t3, this.toolbar = n3, this.overflow = true, this.attributes(), this.addUidAttr(), this.addOverflowIdAttr(), i3.addClass(g2), i3.attr(j, $), i3.data({ type: $, separator: this });
        }, overflowHidden: function() {
          this.element.addClass(y);
        } });
        n2.toolbar.registerComponent("separator", Ee, Ae);
        var Fe = me.extend({ init: function(t3, n3) {
          var i3 = this.element = e2("<div>&nbsp;</div>");
          this.element = i3, this.options = t3, this.toolbar = n3, i3.addClass(v2), i3.data({ type: V }), this.addOverflowAttr();
        } });
        n2.toolbar.registerComponent(V, Fe);
        var ze = me.extend({ init: function(t3, n3, i3) {
          var a3 = o2(t3) ? t3(n3) : t3;
          a3 = a3 instanceof jQuery2 ? a3.wrap("<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>").parent() : e2("<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>").html(a3), this.element = a3, this.options = n3, this.options.type = n3.type || J, this.toolbar = i3, this.attributes(), this.addUidAttr(), this.addIdAttr(), this.addOverflowAttr(), n3.hidden && this.hide(), a3.data({ type: J, template: this });
        } });
        n2.toolbar.TemplateItem = ze;
        var Pe = me.extend({ init: function(t3, n3, i3) {
          var a3 = o2(t3) ? e2(t3(n3)) : e2(t3);
          a3 = a3 instanceof jQuery2 ? a3.wrap("<li></li>").parent() : e2("<li></li>").html(a3), this.element = a3, this.options = n3, this.options.type = J, this.toolbar = i3, this.overflow = true, this.attributes(), this.addUidAttr(), this.addOverflowIdAttr(), this.addOverflowAttr(), a3.data({ type: J, template: this });
        }, overflowHidden: function() {
          this.element.addClass(y);
        } });
        function He(e3) {
          e3.target.is(".k-toggle-button") || e3.target.toggleClass(_2, "press" == e3.type);
        }
        function Ne(t3) {
          e2(t3.target).closest("a.k-button").length && t3.preventDefault();
        }
        function Re(t3, n3) {
          var i3 = n3 === Q ? e2.fn.next : e2.fn.prev, a3 = n3 === Q ? e2.fn.first : e2.fn.last, r3 = i3.call(t3);
          return !r3.length && t3.is(pe + x) ? t3 : r3.is(ne) || !r3.length ? r3 : r3.find(ne).length ? a3.call(r3.find(ne)) : Re(r3, n3);
        }
        n2.toolbar.OverflowTemplateItem = Pe;
        var Oe = i2.extend({ init: function(e3) {
          this.name = e3, this.buttons = [];
        }, add: function(e3) {
          this.buttons[this.buttons.length] = e3;
        }, remove: function(t3) {
          var n3 = e2.inArray(t3, this.buttons);
          this.buttons.splice(n3, 1);
        }, select: function(e3) {
          for (var t3 = 0; t3 < this.buttons.length; t3++) this.buttons[t3].select(false);
          e3.select(true), e3.twin() && e3.twin().select(true);
        } }), Me = r2.extend({ init: function(t3, i3) {
          var a3 = this;
          if (r2.fn.init.call(a3, t3, i3), i3 = a3.options, (t3 = a3.wrapper = a3.element).addClass("k-toolbar k-widget"), t3.attr(j, "toolbar"), this.uid = n2.guid(), this._isRtl = n2.support.isRtl(t3), this._groups = {}, t3.attr(le, this.uid), a3.isMobile = "boolean" == typeof i3.mobile ? i3.mobile : a3.element.closest(".km-root")[0], a3.animation = a3.isMobile ? { open: { effects: "fade" } } : {}, a3.isMobile && (t3.addClass("km-widget"), u2 = "km-button", h2 = "km-buttongroup", _2 = "km-state-active", b2 = "km-state-disabled"), i3.resizable ? (a3._renderOverflow(), t3.addClass("k-toolbar-resizable"), a3.overflowUserEvents = new n2.UserEvents(a3.element, { threshold: 5, allowSelection: true, filter: pe + x, tap: a3._toggleOverflow.bind(a3) }), a3._resizeHandler = n2.onResize(function() {
            a3.resize();
          })) : a3.popup = { element: e2([]) }, i3.items && i3.items.length) {
            for (var o3 = 0; o3 < i3.items.length; o3++) a3.add(i3.items[o3]);
            i3.resizable && a3._shrink(a3.element.innerWidth());
          }
          a3.userEvents = new n2.UserEvents(document.documentElement, { threshold: 5, allowSelection: true, filter: "[" + le + "=" + a3.uid + "] a." + u2 + he + " [" + le + "=" + a3.uid + "] ." + x + he + " [" + le + "=" + a3.uid + "] ." + I + he + " [" + le + "=" + a3.uid + "] ." + D + he + " [" + le + "=" + a3.uid + "] ." + m2, tap: a3._buttonClick.bind(a3), press: He, release: He }), a3.element.on(N + d2, "a.k-button", Ne).on(L + d2, a3._keydown.bind(a3)).on("focusin" + d2, a3._focusIn.bind(a3)).on("focusout" + d2, a3._focusOut.bind(a3)), a3.options.resizable && a3.popup.element.on(N + d2, NaN, Ne), i3.resizable && (a3.overflowAnchor.appendTo(a3.wrapper), this._toggleOverflowAnchor()), a3._tabIndex(), n2.notify(a3);
        }, events: [N, R, O, M, ie, ae], options: { name: "ToolBar", items: [], resizable: true, mobile: null, navigateOnTab: false }, addToGroup: function(e3, t3) {
          var n3;
          return (n3 = this._groups[t3] ? this._groups[t3] : this._groups[t3] = new Oe()).add(e3), n3;
        }, destroy: function() {
          var e3 = this;
          e3.destroySplitButtons(), e3.destroyDropDownButtons(), e3.element.off(d2, "a.k-button"), e3.userEvents.destroy(), e3.options.resizable && (n2.unbindResize(e3._resizeHandler), e3.overflowUserEvents.destroy(), e3.popup.element.off(d2, "a.k-button"), e3.popup.destroy()), r2.fn.destroy.call(e3);
        }, destroySplitButtons: function() {
          var t3, n3 = this;
          n3.element.find(pe + f2).each(function(i3, a3) {
            (t3 = n3._getItem(a3)) && t3.type === G && (t3 = t3.toolbar), t3 && t3.splitButton && t3.splitButton.destroy && (t3.splitButton.destroy(), e2(a3).remove());
          });
        }, destroyDropDownButtons: function() {
          var t3, n3 = this;
          n3.element.find(pe + m2).each(function(i3, a3) {
            (t3 = n3._getItem(a3)) && t3.type === K && (t3 = t3.toolbar), t3 && t3.dropDownButton && t3.dropDownButton.destroy && (t3.dropDownButton.destroy(), e2(a3).remove());
          });
        }, add: function(t3) {
          var i3, a3, r3, o3 = fe[t3.type], s3 = t3.template, l3 = this, d3 = l3.isMobile ? ue : "k-item", u3 = t3.overflowTemplate;
          if (e2.extend(t3, { uid: n2.guid(), animation: l3.animation, mobile: l3.isMobile, rootUid: l3.uid }), t3.menuButtons) for (var c3 = 0; c3 < t3.menuButtons.length; c3++) e2.extend(t3.menuButtons[c3], { uid: n2.guid() });
          s3 && !u3 || t3.type === V ? t3.overflow = re : t3.overflow || (t3.overflow = oe), t3.overflow !== re && l3.options.resizable && (u3 ? a3 = new Pe(u3, t3, l3) : o3 && (a3 = new o3.overflow(t3, l3)).element.addClass(d3), a3 && (t3.overflow === oe && a3.overflowHidden(), a3.element.appendTo(l3.popup.container), l3.angular("compile", function() {
            return { elements: a3.element.get() };
          }))), "always" !== t3.overflow && (s3 ? (r3 = (i3 = new ze(s3, t3, l3)).element.find("input,select"), !this.options.navigateOnTab && r3.length > 0 && (i3.element.attr(X, 0), r3.attr(X, -1))) : o3 && (i3 = new o3.toolbar(t3, l3)), i3 && (i3.element.appendTo(l3.element), l3.angular("compile", function() {
            return { elements: i3.element.get() };
          })));
        }, _getItem: function(t3) {
          var n3, i3, a3, r3, o3 = this.options.resizable;
          return (n3 = this.element.find(t3)).length || (n3 = e2('[data-role="buttonmenu"]').find(t3)), r3 = n3.length ? n3.data("type") : ue, (i3 = n3.data(r3)) && o3 ? a3 = i3.twin() : o3 && (r3 = (n3 = this.popup.element.find(t3)).length ? n3.data("type") : ue, a3 = n3.data(r3), r3 === ce && (r3 = "dropDownButton", a3 = (n3 = n3.parent(pe + m2)).data(r3)), a3 && a3.main && r3 !== ce && (r3 = "splitButton", a3 = (n3 = n3.parent(pe + f2)).data(r3))), { type: r3, toolbar: i3, overflow: a3 };
        }, remove: function(e3) {
          var t3 = this._getItem(e3);
          t3.toolbar && t3.toolbar.remove(), t3.overflow && t3.overflow.remove(), this.resize(true);
        }, hide: function(e3) {
          var t3, n3 = this._getItem(e3);
          n3.toolbar && (n3.toolbar.options.type === q && n3.toolbar.options.isChild ? (t3 = n3.toolbar.getParentGroup(), n3.toolbar.hide(), t3 && t3.refresh()) : n3.toolbar.options.hidden || n3.toolbar.hide()), n3.overflow && (n3.overflow.options.type === q && n3.overflow.options.isChild ? (t3 = n3.overflow.getParentGroup(), n3.overflow.hide(), t3 && t3.refresh()) : n3.overflow.options.hidden || n3.overflow.hide()), this.resize(true);
        }, show: function(e3) {
          var t3, n3 = this._getItem(e3);
          n3.toolbar && (n3.toolbar.options.type === q && n3.toolbar.options.isChild ? (t3 = n3.toolbar.getParentGroup(), n3.toolbar.show(), t3 && t3.refresh()) : n3.toolbar.options.hidden && n3.toolbar.show()), n3.overflow && (n3.overflow.options.type === q && n3.overflow.options.isChild ? (t3 = n3.overflow.getParentGroup(), n3.toolbar.show(), t3 && t3.refresh()) : n3.overflow.options.hidden && n3.overflow.show()), this.resize(true);
        }, enable: function(e3, t3) {
          var n3 = this._getItem(e3);
          void 0 === t3 && (t3 = true), n3.toolbar && n3.toolbar.enable(t3, n3.element), n3.overflow && n3.overflow.enable(t3);
        }, getSelectedFromGroup: function(e3) {
          return this.element.find(".k-toggle-button[data-group='" + e3 + "']").filter(pe + _2);
        }, toggle: function(n3, i3) {
          var a3 = e2(n3).data(q);
          a3.options.togglable && (i3 === t2 && (i3 = true), a3.toggle(i3, true));
        }, _renderOverflow: function() {
          var t3, i3 = this, a3 = fe.overflowContainer, r3 = i3._isRtl, o3 = r3 ? "left" : "right";
          i3.overflowAnchor = e2(fe.overflowAnchor).addClass(u2), i3.element.append(i3.overflowAnchor), i3.isMobile ? (i3.overflowAnchor.append('<span class="km-icon km-more"></span>'), a3 = (t3 = e2(t3 = a3)).hasClass("km-actionsheet") ? t3.closest(".km-popup-wrapper") : t3.addClass("km-widget km-actionsheet").wrap('<div class="km-actionsheet-wrapper km-actionsheet-tablet km-widget km-popup"></div>').parent().wrap('<div class="km-popup-wrapper k-popup"></div>').parent()) : i3.overflowAnchor.append('<span class="k-icon k-i-more-vertical"></span>'), i3.popup = new n2.ui.Popup(a3, { origin: "bottom " + o3, position: "top " + o3, anchor: i3.overflowAnchor, isRtl: r3, animation: i3.animation, appendTo: i3.isMobile ? e2(i3.isMobile).children(".km-pane") : null, copyAnchorStyles: false, open: function(t4) {
            var a4 = n2.wrap(i3.popup.element).addClass("k-overflow-wrapper");
            i3.isMobile ? i3.popup.container.css("max-height", parseFloat(e2(".km-content:visible").innerHeight()) - 15 + "px") : a4.css("margin-left", (r3 ? -1 : 1) * ((l2(a4) - a4.width()) / 2 + 1)), i3.trigger(ie) && t4.preventDefault();
          }, activate: function() {
            this.element.find(ne).first().trigger(B);
          }, close: function(e3) {
            i3.trigger(ae) && e3.preventDefault(), this.element.trigger(B);
          } }), i3.popup.element.on(L + d2, pe + u2, function(t4) {
            var n3 = e2(t4.target), a4 = n3.parent(), r4 = a4.is(pe + h2) || a4.is(pe + f2);
            t4.preventDefault(), t4.keyCode === s2.ESC || t4.keyCode === s2.TAB || t4.altKey && t4.keyCode === s2.UP ? (i3._toggleOverflow(), i3.overflowAnchor.trigger(B)) : t4.keyCode === s2.DOWN ? Re(!r4 || r4 && n3.is(":last-child") || r4 && !n3.next().is(ne) ? a4 : n3, Q).trigger(B) : t4.keyCode === s2.UP ? Re(!r4 || r4 && n3.is(":first-child") || r4 && !n3.prev().is(ne) ? a4 : n3, "prev").trigger(B) : t4.keyCode !== s2.SPACEBAR && t4.keyCode !== s2.ENTER || e2(t4.target).is(pe + b2) ? t4.keyCode === s2.HOME ? a4.parent().find(ne).first().trigger(B) : t4.keyCode === s2.END && a4.parent().find(ne).last().trigger(B) : (i3.userEvents.trigger("tap", { target: e2(t4.target) }), i3.overflowAnchor.trigger(B));
          }), i3.isMobile ? i3.popup.container = i3.popup.element.find(pe + C) : i3.popup.container = i3.popup.element, i3.popup.container.attr(le, this.uid);
        }, _toggleOverflowAnchor: function() {
          var e3 = this._isRtl ? "padding-left" : "padding-right";
          (this.options.mobile ? this.popup.element.find(pe + C).children(":not(.k-overflow-hidden, .k-popup)").length > 0 : this.popup.element.children(":not(.k-overflow-hidden, .k-popup)").length > 0) ? (this.overflowAnchor.css({ visibility: "visible", width: ue }), this.wrapper.css(e3, this.overflowAnchor.outerWidth(true))) : (this.overflowAnchor.css({ visibility: ee, width: "1px" }), this.wrapper.css(e3, ue));
        }, _buttonClick: function(t3) {
          var n3, i3, a3, r3, s3, l3 = this, d3 = e2(t3.target);
          0 === d3.closest(".k-toolbar-item").length && t3.preventDefault(), d3.hasClass(m2) || d3.hasClass(x) ? l3._resetTabIndex(d3) : d3.hasClass(I) ? l3._resetTabIndex(d3.prev()) : d3.hasClass(D) ? (s3 = d3.find("input,select,." + E)).length > 0 && l3._resetTabIndex(s3.first()) : (d3.data(G) || (d3 = e2(t3.target).closest(pe + u2 + he + pe + "k-menu-link", l3.element)), (n3 = d3.data(q)) && !d3.hasClass("k-menu-item") && l3._resetTabIndex(d3), !n3 && l3.popup && (n3 = (d3 = e2(t3.target).closest(pe + c2, l3.popup.container)).parent("li").data(q)), n3 && n3.options.enable && (n3.options.togglable ? (i3 = o2(n3.toggleHandler) ? n3.toggleHandler : null, n3.toggle(!n3.options.selected, true), a3 = { target: d3, group: n3.options.group, checked: n3.options.selected, id: n3.options.id, item: n3 }, i3 && i3.call(l3, a3), l3.trigger(R, a3)) : (i3 = o2(n3.clickHandler) ? n3.clickHandler : null, a3 = { sender: l3, target: d3, id: n3.options.id, item: n3 }, i3 && i3.call(l3, a3), l3.trigger(N, a3)), n3.options.url && (n3.options.attributes && n3.options.attributes.target && (r3 = n3.options.attributes.target), window.open(n3.options.url, r3 || "_self")), d3.hasClass(c2) && l3.popup.close()));
        }, _focusOut: function(e3) {
          this.wrapper.find(pe + u2 + pe + z).removeClass(z);
        }, _focusIn: function(t3) {
          var n3 = e2(t3.target);
          n3.closest(pe + u2).length > 0 && n3.closest(pe + u2).addClass(z);
        }, _keydown: function(t3) {
          var i3, a3, r3, o3, l3, d3 = e2(t3.target), u3 = t3.keyCode, c3 = this._getItems(), p3 = this._isRtl ? -1 : 1, h3 = d3.closest(".k-toolbar-item");
          if (t3.altKey && u3 === s2.DOWN) e2(document.activeElement).is(pe + x) && this._toggleOverflow();
          else if (this.options.navigateOnTab || u3 !== s2.ENTER || !d3.hasClass(D)) if (!this.options.navigateOnTab && u3 === s2.ESC && h3.length > 0) {
            if (o3 = h3.find("[data-role]"), r3 = h3.find(":kendoFocusable:not('.k-input-button'),." + E), o3.length > 0 && (l3 = n2.widgetInstance(o3))) {
              if (l3.popup && l3.popup.visible()) return;
              h3.attr(X, 0), h3.trigger(B), h3.find(ne).attr(X, -1);
            }
            r3.length > 0 && (h3.attr(X, 0), h3.trigger(B), r3.attr(X, -1));
          } else if (u3 !== s2.SPACEBAR && u3 !== s2.ENTER || d3.is("input,checkbox,button")) if (u3 === s2.HOME) {
            if (d3.is(pe + E) || d3.is(Z)) return;
            this._resetTabIndex(c3.first()), c3.first().trigger(B), t3.preventDefault();
          } else if (u3 === s2.END) {
            if (d3.is(pe + E) || d3.is(Z)) return;
            0 === (i3 = c3.last()).width() && (i3 = c3.eq(c3.length - 2)), this._resetTabIndex(i3), i3.trigger(B), t3.preventDefault();
          } else this.options.navigateOnTab || u3 !== s2.RIGHT || d3.is("input:not([type=file]),select,.k-dropdownlist,." + A) || !this._getNextElement(t3.target, 1 * p3) ? this.options.navigateOnTab || u3 !== s2.LEFT || d3.is("input:not([type=file]),select, .k-dropdownlist,." + A) || !this._getNextElement(t3.target, -1 * p3) || (a3 = e2(this._getNextElement(t3.target, -1 * p3)), this._resetTabIndex(a3), a3.trigger(B), t3.preventDefault()) : (a3 = e2(this._getNextElement(t3.target, 1 * p3)), this._resetTabIndex(a3), a3.trigger(B), t3.preventDefault());
          else u3 === s2.SPACEBAR && (t3.preventDefault(), this.userEvents.trigger("tap", { target: d3 }));
          else (r3 = d3.find(":kendoFocusable:not('.k-input-button'),." + E)).length > 0 && (d3.attr(X, -1), r3.attr(X, 0), r3.first().trigger(B));
        }, _getNextElement: function(e3, t3) {
          var n3 = this._getItems(), i3 = -1 === n3.index(e3) ? n3.index(e3.parentElement) : n3.index(e3), a3 = n3[i3 + t3];
          return a3 || (a3 = -1 === t3 ? n3.last() : n3.first()), a3;
        }, _getItems: function() {
          return this.wrapper.find(":kendoFocusable,.k-toolbar-item,.k-overflow-anchor,.k-switch").filter(function() {
            var t3 = e2(this);
            return !t3.hasClass("k-hidden") && ((!t3.hasClass(x) || t3.css("visibility") !== ee) && ((!t3.hasClass(D) || 0 !== t3.find("input:visible,.k-picker,.k-input").length) && (!(!t3.hasClass(D) && t3.closest(".k-toolbar-item").length > 0) && (!t3.hasClass(F) && !t3.hasClass(I)))));
          });
        }, _toggle: function(t3) {
          var n3 = e2(t3.target).closest(pe + f2).data("splitButton");
          t3.preventDefault(), n3.options.enable && n3.toggle();
        }, _toggleOverflow: function() {
          this.popup.toggle();
        }, _resize: function(e3) {
          var t3 = e3.width;
          this.options.resizable && (this.popup.close(), this._shrink(t3), this._stretch(t3), this._markVisibles(), this._toggleOverflowAnchor());
        }, _childrenWidth: function() {
          var t3 = 0, n3 = parseInt(this.element.css("gap"), 10) || 0;
          return this.element.children(":visible:not(.k-spacer)").each(function() {
            t3 += l2(e2(this), true) + n3;
          }), Math.ceil(t3);
        }, _shrink: function(e3) {
          var t3, n3, i3;
          if (e3 < this._childrenWidth()) for (var a3 = (n3 = this.element.children(":visible:not([data-overflow='never'], .k-overflow-anchor)")).length - 1; a3 >= 0 && (t3 = n3.eq(a3), !(e3 > this._childrenWidth())); a3--) (i3 = t3.find("[tabindex=0]")).length > 0 && (i3.attr(X, -1), this.element.children(pe + x).attr(X, 0)), this._hideItem(t3);
        }, _stretch: function(e3) {
          var t3, n3;
          if (e3 > this._childrenWidth()) {
            n3 = this.element.children(".k-hidden:not(.k-force-hidden)");
            for (var i3 = 0; i3 < n3.length && (t3 = n3.eq(i3), !(e3 < this._childrenWidth()) && this._showItem(t3, e3)); i3++) ;
          }
        }, _hideItem: function(e3) {
          e3.addClass(k2), this.popup && this.popup.container.find(">li[data-uid='" + e3.data("uid") + "']").removeClass(y);
        }, _showItem: function(e3, t3) {
          var n3 = parseInt(this.element.css("gap"), 10) || 0;
          e3.removeClass(k2);
          var i3 = l2(e3, true) + n3;
          return e3.addClass(k2), !!(e3.length && t3 > this._childrenWidth() + i3) && (e3.removeClass(k2), true !== this.options.navigateOnTab && e3.find(ne).attr(X, -1), this.popup && this.popup.container.find(">li[data-uid='" + e3.data("uid") + "']").addClass(y), true);
        }, _markVisibles: function() {
          var e3 = this.popup.container.children(), t3 = this.element.children(":not(.k-overflow-anchor)"), n3 = e3.filter(":not(.k-overflow-hidden)"), i3 = t3.filter(":visible");
          e3.add(t3).removeClass("k-toolbar-first-visible " + S), n3.first().add(i3.first()).addClass(T), n3.last().add(i3.last()).addClass(S);
        }, _resetTabIndex: function(e3) {
          true !== this.options.navigateOnTab && (this.wrapper.find(ne).attr(X, -1), e3.attr(X, 0));
        }, _tabIndex: function() {
          var e3 = this.wrapper.find(":kendoFocusable:not('[tabindex=-1]')"), t3 = e3.first();
          true !== this.options.navigateOnTab && (e3.attr(X, -1), t3.attr(X, 0));
        } });
        n2.ui.plugin(Me);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = ".kendoSwitch", r2 = i2.Widget, o2 = n2.support, s2 = "change", l2 = { widget: "k-switch", track: "k-switch-track", thumbWrapper: "k-switch-thumb-wrap", thumb: "k-switch-thumb", checked: "k-switch-on", checkedLabel: "k-switch-label-on", unchecked: "k-switch-off", uncheckedLabel: "k-switch-label-off", disabled: "k-disabled", readonly: "k-readonly", active: "k-active" }, d2 = "disabled", u2 = "aria-disabled", c2 = "readonly", p2 = "aria-readonly", h2 = "aria-hidden", f2 = "checked", m2 = o2.click + a2, g2 = o2.pointers ? "pointerup" : "touchend", v2 = ".", _2 = n2.template('<span class="#=styles.widget#" role="switch"></span>'), b2 = n2.template("<span class='#=styles.track#'><span class='#=styles.checkedLabel#'>#=checked#</span><span class='#=styles.uncheckedLabel#'>#=unchecked#</span></span>"), k2 = n2.template("<span class='#=styles.thumbWrapper#'><span class='#=styles.thumb#'></span></span>"), w = r2.extend({ init: function(e3, t3) {
          var i3 = this;
          r2.fn.init.call(i3, e3, t3), i3._wrapper(), i3._initSettings(), i3._aria(), i3._attachEvents(), n2.notify(i3, n2.ui);
        }, _wrapper: function() {
          var t3 = this, n3 = t3.options, i3 = t3.element[0], a3 = e2(_2({ styles: l2 }));
          i3.type = "checkbox", t3.wrapper = t3.element.wrap(a3).parent(), t3.wrapper[0].style.cssText = t3.element[0].style.cssText, t3.element.hide(), t3.wrapper.append(e2(b2({ styles: l2, checked: n3.messages.checked, unchecked: n3.messages.unchecked }))).append(e2(k2({ styles: l2 }))).addClass(i3.className).removeClass("input-validation-error"), t3.options.rounded = t3.options.trackRounded, t3._applyCssClasses(), t3._applyRoundedClasses();
        }, _applyRoundedClasses: function(e3) {
          var t3 = this, i3 = t3.options, a3 = n2.cssProperties.getValidClass({ widget: i3.name, propName: "rounded", value: i3.trackRounded }), r3 = n2.cssProperties.getValidClass({ widget: i3.name, propName: "rounded", value: i3.thumbRounded });
          e3 = e3 || "addClass", t3.wrapper.find(v2 + l2.track)[e3](a3), t3.wrapper.find(v2 + l2.thumb)[e3](r3);
        }, _attachEvents: function() {
          var e3 = this;
          e3.wrapper.on(m2, e3._click.bind(e3)).on(g2, e3._touchEnd.bind(e3)).on("keydown.kendoSwitch", e3._keydown.bind(e3));
        }, setOptions: function(n3) {
          var i3 = this, a3 = n3.messages;
          i3._clearCssClasses(n3), i3._applyRoundedClasses("removeClass"), i3.options = e2.extend(i3.options, n3), a3 && a3.checked !== t2 && i3.wrapper.find(v2 + l2.checkedLabel).text(a3.checked), a3 && a3.unchecked !== t2 && i3.wrapper.find(v2 + l2.uncheckedLabel).text(a3.unchecked), n3.width && i3.wrapper.css({ width: n3.width }), n3.enabled !== t2 && i3.enable(n3.enabled), n3.readonly !== t2 && i3.readonly(n3.readonly), i3.check(n3.checked), i3.options.rounded = i3.options.trackRounded, i3._applyCssClasses(), i3._applyRoundedClasses();
        }, _initSettings: function() {
          var e3 = this, t3 = e3.element[0], n3 = e3.options;
          n3.enabled && e3._tabindex(), n3.width && e3.wrapper.css({ width: n3.width }), null === n3.checked && (n3.checked = t3.checked), e3.check(n3.checked), n3.enabled = n3.enabled && !e3.element.attr(d2), e3.enable(n3.enabled), n3.readonly = n3.readonly || !!e3.element.attr(c2), e3.readonly(n3.readonly);
        }, _aria: function() {
          var t3 = this.element, i3 = this.wrapper, a3 = t3.attr("id"), r3 = e2('label[for="' + a3 + '"]'), o3 = t3.attr("aria-label"), s3 = t3.attr("aria-labelledby");
          if (o3) i3.attr("aria-label", o3);
          else if (s3) i3.attr("aria-labelledby", s3);
          else if (r3.length) {
            var l3 = r3.attr("id");
            l3 || (l3 = (a3 || n2.guid()) + "_label", r3.attr("id", l3)), i3.attr("aria-labelledby", l3);
          }
        }, events: [s2], options: { name: "Switch", messages: { checked: "On", unchecked: "Off" }, width: null, checked: null, enabled: true, readonly: false, size: "medium", rounded: "full", trackRounded: "full", thumbRounded: "full" }, check: function(e3) {
          var n3 = this, i3 = n3.element[0];
          if (e3 === t2) return i3.checked;
          i3.checked !== e3 && (n3.options.checked = i3.checked = e3), n3.wrapper.attr("aria-checked", e3).toggleClass(l2.checked, e3).toggleClass(l2.unchecked, !e3).find("[aria-hidden='true']").removeAttr(h2), e3 ? (n3.element.attr(f2, f2), n3.wrapper.find(v2 + l2.uncheckedLabel).attr(h2, true)) : (n3.element.prop(f2, false), n3.wrapper.find(v2 + l2.checkedLabel).attr(h2, true));
        }, value: function(e3) {
          return "string" == typeof e3 ? e3 = "true" === e3 : null === e3 && (e3 = false), this.check.apply(this, [e3]);
        }, destroy: function() {
          r2.fn.destroy.call(this), this.wrapper.off(a2);
        }, toggle: function() {
          this.check(!this.element[0].checked);
        }, enable: function(e3) {
          var t3 = this.element, n3 = this.wrapper;
          void 0 === e3 && (e3 = true), this.options.enabled = e3, e3 ? (t3.prop(d2, false), n3.removeAttr(u2)) : (t3.attr(d2, d2), n3.attr(u2, true)), n3.toggleClass(l2.disabled, !e3);
        }, readonly: function(e3) {
          var t3 = this, n3 = t3.element, i3 = t3.wrapper;
          void 0 === e3 && (e3 = true), t3.options.readonly = e3, e3 ? (n3.attr(c2, true), i3.attr(p2, true)) : (n3.prop(c2, false), i3.removeAttr(p2)), i3.toggleClass(l2.readonly, e3);
        }, _check: function() {
          var e3 = this, t3 = e3.element[0].checked = !e3.element[0].checked;
          e3.wrapper.trigger("focus"), !e3.options.enabled || e3.options.readonly || e3.trigger(s2, { checked: t3 }) ? e3.element[0].checked = !t3 : e3.check(t3);
        }, _keydown: function(e3) {
          e3.keyCode === n2.keys.SPACEBAR && (this._check(), e3.preventDefault());
        }, _isTouch: function(e3) {
          return /touch/.test(e3.type) || e3.originalEvent && /touch/.test(e3.originalEvent.pointerType);
        }, _click: function(e3) {
          this._isTouch(e3) || 1 !== e3.which || this._check();
        }, _touchEnd: function(e3) {
          this._isTouch(e3) && (this._check(), e3.preventDefault());
        } });
        n2.cssProperties.registerPrefix("Switch", "k-switch-"), n2.cssProperties.registerValues("Switch", [{ prop: "rounded", values: n2.cssProperties.roundedValues.concat([["full", "full"]]) }]), i2.plugin(w);
      }(window.kendo.jQuery);
      !function(e2, t2) {
        var n2 = window.kendo, i2 = n2.ui, a2 = i2.Widget, r2 = n2.keys, o2 = n2.template, s2 = ".kendoButtonGroup", l2 = "k-button", d2 = "k-icon-button", u2 = "k-selected", c2 = "k-disabled", p2 = "select", h2 = n2.support.browser.msie, f2 = { item: o2('<span #= item.enabled === false ? "disabled" : "" # >#= icon(iconClass) ##= image(item) ## if(!!text) { #<span class="k-button-text"> #= text # </span># } #</span>'), image: o2('<img alt="icon" src="#=data.imageUrl#" class="k-button-icon"/>'), icon: o2('<span class="k-button-icon #=data#"></span>'), empty: o2("") };
        function m2(n3, a3) {
          var r3;
          null !== n3 && n3 !== t2 && (n3.constructor !== Object && (n3 = { text: n3 }), n3.position !== t2 && "" !== n3.position || (n3.position = "edge", n3.align !== t2 && "" !== n3.align || (n3.align = "top end")), n3._classNames = ["k-button-badge"], a3.addClass("k-badge-container"), r3 = e2("<span />").appendTo(a3), a3.badge = new i2.Badge(r3, n3));
        }
        var g2 = a2.extend({ init: function(t3, n3) {
          var i3 = this;
          a2.fn.init.call(i3, t3, n3), i3.wrapper = i3.element, i3.options.items && i3._renderItems(i3.options.items), i3.selectedIndices = [], i3.element.addClass("k-widget k-button-group").attr("role", "group").attr("tabindex", i3.element.attr("tabindex") || "0").children().each(function() {
            var t4 = e2(this);
            i3._updateClasses.bind(i3)(t4);
          }), i3._enable = true, i3.options.enable && i3.options.enabled || (i3._enable = false, i3.element.attr("aria-disabled", true).addClass(c2), i3.element.children().addClass(c2)), i3.select(i3.options.index), i3._attachEvents();
        }, events: [p2], options: { name: "ButtonGroup", selection: "single", index: -1, enable: true, enabled: true }, current: function() {
          return this.element.find("." + u2);
        }, _attachEvents: function() {
          var e3 = this;
          e3.element.on("click" + s2, ".k-button", e3._click.bind(e3)).on("focus" + s2, e3._focus.bind(e3)).on("focusout" + s2, e3._focusout.bind(e3)).on("keydown" + s2, e3._keyDown.bind(e3)).on("mousedown" + s2, e3._mouseDown.bind(e3));
        }, _renderItems: function(t3) {
          var i3 = this;
          t3.forEach(function(t4) {
            var a3 = e2(f2.item({ image: t4.imageUrl ? f2.image : f2.empty, icon: t4.imageUrl || !t4.iconClass && !t4.icon ? f2.empty : f2.icon, iconClass: t4.iconClass || "k-icon k-i-" + t4.icon, item: t4, text: t4.text ? false === t4.encoded ? t4.text : n2.htmlEncode(t4.text) : "" }));
            t4.attributes && a3.attr(t4.attributes), t4.selected && a3.addClass(u2), (t4.iconClass || t4.icon || t4.imageUrl) && !t4.text && a3.addClass(d2), t4.badge && m2(t4.badge, a3), a3.appendTo(i3.element);
          });
        }, _mouseDown: function(e3) {
          var t3 = e3.clientX, n3 = e3.clientY;
          document.elementFromPoint(t3, n3) !== this.element[0] && (this.preventFocus = true, this.preventFocusOut = true), h2 && this._focus();
        }, _focus: function() {
          var t3 = e2(this.element);
          t3.removeAttr("tabindex"), t3.find("[role='button']").attr("tabindex", "0"), this.preventFocus ? this.preventFocus = false : t3.find("." + u2).length ? t3.find("." + u2).first().trigger("focus") : t3.children().first().trigger("focus");
        }, _focusout: function() {
          var e3 = this.wrapper;
          this.preventFocusOut ? this.preventFocusOut = false : setTimeout(function() {
            e3[0].contains(document.activeElement) || (e3.attr("tabindex", "0"), e3.find("[role='button']").removeAttr("tabindex"));
          });
        }, _keyDown: function(t3) {
          var i3 = this, a3 = e2(i3.element), o3 = a3.find(".k-button"), s3 = a3.find(":focus"), l3 = o3.index(s3), d3 = n2.support.isRtl(i3.element);
          t3.keyCode === r2.LEFT && !d3 || t3.keyCode === r2.RIGHT && d3 ? ((0 === l3 ? o3.eq(o3.length - 1) : e2(o3[l3 - 1])).trigger("focus"), t3.preventDefault()) : t3.keyCode === r2.LEFT && d3 || t3.keyCode === r2.RIGHT && !d3 ? ((l3 + 1 === o3.length ? o3.eq(0) : e2(o3[l3 + 1])).trigger("focus"), t3.preventDefault()) : t3.keyCode !== r2.ENTER && t3.keyCode !== r2.SPACEBAR || (i3._select(s3), t3.preventDefault());
        }, select: function(n3) {
          var i3, a3 = this, r3 = -1;
          n3 !== t2 && -1 !== n3 && ("number" == typeof n3 ? (r3 = n3, n3 = a3.element.children().eq(n3)) : n3.nodeType && (r3 = (n3 = e2(n3)).index()), "multiple" === a3.options.selection ? (i3 = "true" === n3.attr("aria-pressed"), n3.attr("aria-pressed", !i3).toggleClass(u2), -1 === a3.selectedIndices.indexOf(r3) ? a3.selectedIndices.push(r3) : a3.selectedIndices.splice(a3.selectedIndices.indexOf(r3), 1)) : (a3.selectedIndices = [], a3.current().attr("aria-pressed", false).removeClass(u2), n3.attr("aria-pressed", true).addClass(u2), a3.selectedIndices.push(r3)));
        }, badge: function(e3, t3) {
          var i3, a3 = this.element, r3 = isNaN(e3) ? a3.find(e3) : a3.children().eq(e3), o3 = t3 || 0 === t3;
          if (r3.length) {
            if (!(i3 = r3.children(".k-badge").eq(0).data("kendoBadge")) && o3) return m2({ text: n2.htmlEncode(t3) }, r3), n2.htmlEncode(t3);
            if (o3) i3.text(n2.htmlEncode(t3));
            else if (false === t3) return i3.element.empty().remove(), void i3.destroy();
            return i3 ? i3.text() : null;
          }
        }, enable: function(e3) {
          void 0 === e3 && (e3 = true), this.element.attr("aria-disabled", !e3).toggleClass(c2, !e3), this.element.children().toggleClass(c2, !e3), this._enable = this.options.enable = e3;
        }, destroy: function() {
          var t3 = this;
          t3.element.off(s2), t3.element.find(".k-badge").each(function() {
            e2(this).data("kendoBadge").destroy();
          }), a2.fn.destroy.call(t3);
        }, _updateClasses: function(t3) {
          var i3 = n2.attrValue(t3, "icon"), a3 = n2.attrValue(t3, "badge"), r3 = t3.find("img").addClass("k-image"), o3 = true;
          t3.attr("aria-pressed", false).attr("role", "button").addClass(l2).addClass("k-button-md k-rounded-md k-button-solid k-button-solid-base"), (t3.is("[disabled]") || t3.hasClass(c2)) && t3.addClass(c2).attr("aria-disabled", true).removeAttr("disabled"), t3.is("." + u2) && (t3.removeClass(u2), (!t3.hasClass(c2) && "single" === this.options.selection || "multiple" === this.options.selection) && this.select(t3[0])), !r3[0] && i3 && t3.prepend(e2(f2.icon("k-icon k-i-" + i3))), t3.contents().filter(function() {
            return !e2(this).hasClass("k-icon") && !e2(this).hasClass("k-image");
          }).each(function() {
            (1 == this.nodeType || 3 == this.nodeType && n2.trim(this.nodeValue).length > 0) && (o3 = false);
          }), (r3[0] || i3) && o3 && t3.addClass(d2), (a3 || 0 === a3) && m2(a3, t3);
        }, _click: function(t3) {
          var n3 = e2(t3.target).closest(".k-button");
          t3.isDefaultPrevented() || (t3.target.focus(), this._select(n3));
        }, _select: function(e3) {
          var t3 = e3;
          this._enable && !t3.is("." + c2) && (this.select(e3[0]), this.trigger(p2, { indices: this.selectedIndices }));
        } });
        i2.plugin(g2);
      }(window.kendo.jQuery);
    });
    module.exports = kendo;
  }
});

// node_modules/@progress/telerik-angular-report-viewer/dist/dependencies/telerikReportViewer.js
var require_telerikReportViewer = __commonJS({
  "node_modules/@progress/telerik-angular-report-viewer/dist/dependencies/telerikReportViewer.js"(exports, module) {
    var $ = require_jquery();
    var telerikReportViewer = function(exports2) {
      "use strict";
      var stringFormatRegExp = /{(\w+?)}/g;
      var specialKeys = {
        DELETE: 46,
        BACKSPACE: 8,
        TAB: 9,
        ESC: 27,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        END: 35,
        HOME: 36
      };
      function isSpecialKey() {
        var userAgent = window.navigator.userAgent.toLowerCase();
        if (userAgent.indexOf("firefox") > -1) {
          var specialKeysArray = Object.keys(specialKeys);
          var specialKeysLength = specialKeysArray.length;
          return function(keyCode) {
            for (var i = 0; i < specialKeysLength; i++) {
              if (specialKeys[specialKeysArray[i]] == keyCode) {
                return true;
              }
            }
          };
        }
        return function(keyCode) {
          return false;
        };
      }
      function toXhrErrorData(xhr, status, error) {
        return {
          xhr,
          status,
          error
        };
      }
      function rectangle(left, top2, width, height) {
        return {
          left,
          top: top2,
          width,
          height,
          right: function() {
            return left + width;
          },
          bottom: function() {
            return top2 + height;
          },
          union: function(other) {
            var newLeft = Math.min(left, other.left);
            var newTop = Math.min(top2, other.top);
            var newWidth = Math.max(this.right(), other.right()) - newLeft;
            var newHeight = Math.max(this.bottom(), other.bottom()) - newTop;
            return rectangle(
              newLeft,
              newTop,
              newWidth,
              newHeight
            );
          }
        };
      }
      function generateGuidString() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
          var r = Math.random() * 16 | 0;
          var v = c == "x" ? r : r & 3 | 8;
          return v.toString(16);
        });
      }
      function trim(s, charlist) {
        return rTrim(lTrim(s, charlist), charlist);
      }
      function replaceAll(str, find, replace) {
        return str.replace(new RegExp(find, "g"), replace);
      }
      function lTrim(s, charlist) {
        if (charlist === void 0) {
          charlist = "s";
        }
        return s.replace(new RegExp("^[" + charlist + "]+"), "");
      }
      function rTrim(s, charlist) {
        if (charlist === void 0) {
          charlist = "s";
        }
        return s.replace(new RegExp("[" + charlist + "]+$"), "");
      }
      function stringFormat(template, data) {
        var isArray2 = Array.isArray(data);
        return template.replace(stringFormatRegExp, function($0, $1) {
          return data[isArray2 ? parseInt($1) : $1];
        });
      }
      function escapeHtml(str) {
        return $("<div>").text(str).html();
      }
      function tryParseInt(value) {
        if (/^(\-|\+)?([0-9]+)$/.test(value)) {
          return Number(value);
        }
        return NaN;
      }
      function tryParseFloat(value) {
        if (/^(\-|\+)?([0-9]+(\.[0-9]+)?)$/.test(value)) {
          return Number(value);
        }
        return NaN;
      }
      function parseToLocalDate(date) {
        if (date instanceof Date)
          return date;
        var isUtc = /Z|[\+\-]\d\d:?\d\d/i.test(date);
        if (!isUtc) {
          date += "Z";
        }
        return new Date(date);
      }
      function adjustTimezone(date) {
        return new Date(
          Date.UTC(
            date.getFullYear(),
            date.getMonth(),
            date.getDate(),
            date.getHours(),
            date.getMinutes(),
            date.getSeconds(),
            date.getMilliseconds()
          )
        );
      }
      function unadjustTimezone(date) {
        return new Date(
          date.getUTCFullYear(),
          date.getUTCMonth(),
          date.getUTCDate(),
          date.getUTCHours(),
          date.getUTCMinutes(),
          date.getUTCSeconds(),
          date.getUTCMilliseconds()
        );
      }
      function areEqual(v1, v2) {
        if (v1 instanceof Date && v2 instanceof Date) {
          if (v1.getTime() !== v2.getTime()) {
            return false;
          }
        } else if (v1 !== v2) {
          return false;
        }
        return true;
      }
      function reportSourcesAreEqual(rs1, rs2) {
        if (rs1 && rs2 && rs1.report === rs2.report) {
          var params1String = "";
          if (rs1.parameters) {
            params1String = JSON.stringify(rs1.parameters);
          }
          var params2String = "";
          if (rs2.parameters) {
            params2String = JSON.stringify(rs2.parameters);
          }
          return params1String === params2String;
        }
        return false;
      }
      function areEqualArrays(array1, array2) {
        if (array1 === null) {
          if (array2 !== null) {
            return false;
          }
          return true;
        }
        if (array2 === null) {
          return false;
        }
        if (array1.length !== array2.length) {
          return false;
        }
        for (var j = array1.length - 1; j >= 0; j--) {
          if (!areEqual(array1[j], array2[j])) {
            return false;
          }
        }
        return true;
      }
      function isSvgSupported() {
        var matches = /Version\/(\d+.\d+.\d+) Safari/.exec(navigator.userAgent);
        if (matches && matches.length > 1) {
          var version = parseFloat(matches[1]);
          return version >= 6;
        }
        return true;
      }
      function isInternalServerError(error) {
        if (error) {
          return replaceAll(error, " ", "").toLowerCase() === "internalservererror";
        }
        return false;
      }
      function isSystemArgumentException(xhr) {
        var exceptionShortName = "ArgumentException";
        var exceptionInstance = getExceptionInstance(xhr);
        return isExceptionInstanceOfType(exceptionInstance, exceptionShortName, "System." + exceptionShortName);
      }
      function isInvalidClientException(xhr) {
        var exceptionShortName = "InvalidClientException";
        var exceptionInstance = getExceptionInstance(xhr);
        return isExceptionInstanceOfType(exceptionInstance, exceptionShortName, "Telerik.Reporting.Services.Engine." + exceptionShortName);
      }
      function isApplicationException(xhr) {
        return isApplicationExceptionInstance(getExceptionInstance(xhr));
      }
      function isApplicationExceptionInstance(exception) {
        var exceptionShortName = "DrawingFactoryUnavailableException";
        return isExceptionInstanceOfType(exception, exceptionShortName, "Telerik.Drawing.Contract." + exceptionShortName);
      }
      function isExceptionOfType(xhr, exceptionType) {
        return isExceptionInstanceOfType(getExceptionInstance(xhr), exceptionType, exceptionType);
      }
      function isExceptionInstanceOfType(exceptionInstance, exceptionTypeShortName, exceptionTypeFullName) {
        return exceptionInstance && exceptionInstance.exceptionType && exceptionTypeNamesMatch(exceptionInstance.exceptionType, exceptionTypeShortName, exceptionTypeFullName);
      }
      function exceptionTypeNamesMatch(instanceTypeName, exceptionTypeShortName, exceptionTypeFullName) {
        return instanceTypeName && (instanceTypeName === exceptionTypeFullName || instanceTypeName.endsWith(exceptionTypeShortName));
      }
      function parseJSON(json) {
        try {
          return JSON.parse(
            json,
            function(key, value) {
              if (key && value) {
                var firstChar = key.charAt(0);
                if (firstChar === firstChar.toUpperCase()) {
                  var newPropertyName = firstChar.toLowerCase() + key.slice(1);
                  this[newPropertyName] = value;
                }
              }
              return value;
            }
          );
        } catch (e) {
          return null;
        }
      }
      function getExceptionInstance(xhr) {
        if (!xhr || !xhr.responseText) {
          return false;
        }
        return parseJSON(xhr.responseText);
      }
      function extend() {
        var copy;
        var name;
        var options;
        var target;
        var i = 0;
        var length = arguments.length;
        target = length > 1 ? arguments[i++] || {} : {};
        for (; i < length; i++) {
          if ((options = arguments[i]) != null) {
            for (name in options) {
              target[name];
              copy = options[name];
              if (target === copy) {
                continue;
              }
              if (copy !== void 0) {
                target[name] = copy;
              }
            }
          }
        }
        return target;
      }
      function each(obj, callback) {
        var length;
        var i = 0;
        if (isArray(obj)) {
          length = obj.length;
          for (; i < length; i++) {
            if (callback.call(obj[i], i, obj[i]) === false) {
              break;
            }
          }
        } else {
          for (i in obj) {
            if (callback.call(obj[i], i, obj[i]) === false) {
              break;
            }
          }
        }
        return obj;
      }
      function selector() {
        return document.querySelectorAll(arguments[0]);
      }
      function isArray(obj) {
        if (Array.isArray(obj))
          return true;
        var length = Boolean(obj) && "length" in obj && obj.length;
        if (typeof length === "number") {
          return true;
        }
        return false;
      }
      function loadScriptWithCallback(src, done, version) {
        var js = document.createElement("script");
        js.src = src;
        js.onload = function() {
          done(version);
        };
        js.onerror = function() {
          logError(new Error("Failed to load script " + src));
        };
        document.head.appendChild(js);
      }
      function loadScript(url) {
        var ajaxOptions = {
          dataType: "script",
          cache: true
        };
        return $ajax(url, ajaxOptions);
      }
      function filterUniqueLastOccurrence(array) {
        function onlyLastUnique(value, index, self) {
          return self.lastIndexOf(value) === index;
        }
        return array.filter(onlyLastUnique);
      }
      function logError(error) {
        var console2 = window.console;
        if (console2 && console2.error) {
          console2.error(error);
        }
      }
      function findElement(selectorChain) {
        if (selectorChain.constructor != Array) {
          selectorChain = [selectorChain];
        }
        var $area = $(selectorChain[0]);
        for (var i = 1; i < selectorChain.length; i++) {
          $area = $area.find(selectorChain[i]);
        }
        return $area;
      }
      function toRgbColor(hexColor) {
        if (hexColor && hexColor.length < 6) {
          var index = 1;
          var hexParts = hexColor.split("");
          if (hexParts[0] !== "#") {
            index = 0;
          }
          for (index; index < hexParts.length; index++) {
            hexParts[index] = hexParts[index] + hexParts[index];
          }
          hexColor = hexParts.join("");
        }
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hexColor);
        return result ? parseInt(result[1], 16) + ", " + parseInt(result[2], 16) + ", " + parseInt(result[3], 16) : null;
      }
      function isRgbColor(color) {
        if (!color) {
          return false;
        }
        return color.indexOf(",") > -1 ? true : false;
      }
      function getColorAlphaValue(color) {
        if (color.toLowerCase() === "transparent") {
          return 0;
        }
        if (!isRgbColor(color)) {
          return 1;
        }
        if (color.indexOf("#") !== -1) {
          color = toRgbColor(color);
        }
        var colorComponents = color.split(",").map(function(c) {
          return c.trim();
        });
        var alpha = colorComponents.length === 4 ? parseFloat((parseFloat(colorComponents[3].replace(/[()]/g, "")) / 255).toFixed(2)) : 1;
        return alpha;
      }
      function $ajax(url, ajaxSettings) {
        return new Promise(function(resolve, reject) {
          $.ajax(url, ajaxSettings).done(function(data) {
            return resolve(data);
          }).fail(function(xhr, status, error) {
            reject(toXhrErrorData(xhr, status, error));
          });
        });
      }
      function type(obj) {
        return Object.prototype.toString.call(obj).slice(8, -1);
      }
      function isEqual(a, b) {
        if (a === b) {
          return true;
        }
        if (a !== a && b !== b) {
          return true;
        }
        if (a !== a && b === b || a === a && b !== b) {
          return false;
        }
        const typeA = type(a);
        const typeB = type(b);
        if (typeA !== typeB) {
          return false;
        }
        if (typeA === "Array") {
          if (a.length !== b.length) {
            return false;
          }
          const length = a.length;
          for (let i = 0; i < length; i++) {
            if (!isEqual(a[i], b[i])) {
              return false;
            }
          }
          return true;
        }
        if (typeA === "Object") {
          const keysA = Object.keys(a);
          const keysB = Object.keys(b);
          if (keysA.length !== keysB.length) {
            return false;
          }
          const length = keysA.length;
          for (let i = 0; i < length; i++) {
            const key = keysA[i];
            if (!isEqual(a[key], b[key])) {
              return false;
            }
          }
          return true;
        }
        if (typeA === "Date") {
          return a.getTime() === b.getTime();
        }
        return false;
      }
      var utils = Object.freeze({
        __proto__: null,
        isSpecialKey,
        rectangle,
        generateGuidString,
        trim,
        replaceAll,
        lTrim,
        rTrim,
        stringFormat,
        escapeHtml,
        tryParseInt,
        tryParseFloat,
        parseToLocalDate,
        adjustTimezone,
        unadjustTimezone,
        areEqual,
        reportSourcesAreEqual,
        areEqualArrays,
        isSvgSupported,
        isInternalServerError,
        isSystemArgumentException,
        isInvalidClientException,
        isApplicationException,
        isApplicationExceptionInstance,
        isExceptionOfType,
        exceptionTypeNamesMatch,
        parseJSON,
        getExceptionInstance,
        extend,
        each,
        selector,
        isArray,
        loadScriptWithCallback,
        loadScript,
        filterUniqueLastOccurrence,
        logError,
        findElement,
        toRgbColor,
        isRgbColor,
        getColorAlphaValue,
        $ajax,
        type,
        isEqual
      });
      function toPixels(value) {
        return parseInt(value, 10) || 0;
      }
      function getMargins(dom) {
        var $target = $(dom);
        return {
          left: toPixels($target.css("marginLeft")),
          right: toPixels($target.css("marginRight")),
          top: toPixels($target.css("marginTop")),
          bottom: toPixels($target.css("marginBottom"))
        };
      }
      function getPadding(dom) {
        var $target = $(dom);
        return {
          left: toPixels($target.css("paddingLeft")),
          right: toPixels($target.css("paddingRight")),
          top: toPixels($target.css("paddingTop")),
          bottom: toPixels($target.css("paddingBottom"))
        };
      }
      function getBorderWidth(dom) {
        var $target = $(dom);
        return {
          left: toPixels($target.css("borderLeftWidth")),
          right: toPixels($target.css("borderRightWidth")),
          top: toPixels($target.css("borderTopWidth")),
          bottom: toPixels($target.css("borderBottomWidth"))
        };
      }
      function scale(dom, scaleX, scaleY, originX, originY) {
        scaleX = scaleX || 1;
        scaleY = scaleY || 1;
        originX = originX || 0;
        originY = originY || 0;
        var scale2 = stringFormat("scale({0}, {1})", [scaleX, scaleY]);
        var origin = stringFormat("{0} {1}", [originX, originY]);
        $(dom).css("transform", scale2).css("transform-origin", origin);
      }
      var domUtils = Object.freeze({
        __proto__: null,
        getMargins,
        getPadding,
        getBorderWidth,
        scale
      });
      var _a;
      var sr$1 = {
        // warning and error string resources
        controllerNotInitialized: "Controller is not initialized.",
        noReportInstance: "No report instance.",
        missingTemplate: "!obsolete resource!",
        noReport: "No report.",
        noReportDocument: "No report document.",
        missingOrInvalidParameter: "There are missing or invalid parameter values. Please input valid data for the following parameters:\n",
        invalidParameter: "Please input a valid value.",
        invalidDateTimeValue: "Please input a valid date.",
        parameterIsEmpty: "Parameter value cannot be empty.",
        cannotValidateType: "Cannot validate parameter of type {type}.",
        loadingFormats: "Loading...",
        loadingReport: "Loading report...",
        loadingParameters: "Loading parameters...",
        autoRunDisabled: "Please validate the report parameter values and press Preview to generate the report.",
        preparingDownload: "Preparing document to download. Please wait...",
        preparingPrint: "Preparing document to print. Please wait...",
        errorLoadingTemplates: "Error loading the report viewer's templates. (trvTemplateUrl = '{0}').",
        errorServiceUrl: "Cannot access the Reporting REST service. (serviceUrl = '{0}'). Make sure the service address is correct and enable CORS if needed. (https://enable-cors.org)",
        errorServiceVersion: "The version of the Report Viewer '{1}' does not match the version of the Reporting REST Service '{0}'. Please make sure both are running same version.",
        loadingReportPagesInProgress: "{0} pages loaded so far...",
        loadedReportPagesComplete: "Done. Total {0} pages loaded.",
        noPageToDisplay: "No page to display.",
        errorDeletingReportInstance: "Error deleting report instance: '{0}'.",
        errorRegisteringViewer: "Error registering the viewer with the service.",
        noServiceClient: "No serviceClient has been specified for this controller.",
        errorRegisteringClientInstance: "Error registering client instance.",
        errorCreatingReportInstance: "Error creating report instance (Report = '{0}').",
        errorCreatingReportDocument: "Error creating report document (Report = '{0}'; Format = '{1}').",
        unableToGetReportParameters: "Unable to get report parameters.",
        errorObtainingAuthenticationToken: "Error obtaining authentication token.",
        clientExpired: "Click 'Refresh' to restore client session.",
        promisesChainStopError: "Error shown. Throwing promises chain stop error.",
        renderingCanceled: "Report processing was canceled.",
        tryReportPreview: "The report may now be previewed.",
        // viewer template string resources
        parameterEditorSelectNone: "clear selection",
        parameterEditorSelectAll: "select all",
        parametersAreaPreviewButton: "Preview",
        menuNavigateBackwardText: "Navigate Backward",
        menuNavigateBackwardTitle: "Navigate Backward",
        menuNavigateForwardText: "Navigate Forward",
        menuNavigateForwardTitle: "Navigate Forward",
        menuStopRenderingText: "Stop Rendering",
        menuStopRenderingTitle: "Stop Rendering",
        menuRefreshText: "Refresh",
        menuRefreshTitle: "Refresh",
        menuFirstPageText: "First Page",
        menuFirstPageTitle: "First Page",
        menuLastPageText: "Last Page",
        menuLastPageTitle: "Last Page",
        menuPreviousPageTitle: "Previous Page",
        menuNextPageTitle: "Next Page",
        menuPageNumberTitle: "Page Number Selector",
        menuDocumentMapTitle: "Toggle Document Map",
        menuParametersAreaTitle: "Toggle Parameters Area",
        menuZoomInTitle: "Zoom In",
        menuZoomOutTitle: "Zoom Out",
        menuPageStateTitle: "Toggle FullPage/PageWidth",
        menuPrintText: "Print...",
        menuContinuousScrollText: "Toggle Continuous Scrolling",
        menuSendMailText: "Send an email",
        menuPrintTitle: "Print",
        menuContinuousScrollTitle: "Toggle Continuous Scrolling",
        menuSendMailTitle: "Send an email",
        menuExportText: "Export",
        menuExportTitle: "Export",
        menuPrintPreviewText: "Toggle Print Preview",
        menuPrintPreviewTitle: "Toggle Print Preview",
        menuSearchText: "Search",
        menuSearchTitle: "Toggle Search",
        menuSideMenuTitle: "Toggle Side Menu",
        sendEmailFromLabel: "From:",
        sendEmailToLabel: "To:",
        sendEmailCCLabel: "CC:",
        sendEmailSubjectLabel: "Subject:",
        sendEmailFormatLabel: "Format:",
        sendEmailSendLabel: "Send",
        sendEmailCancelLabel: "Cancel",
        // accessibility string resources
        ariaLabelPageNumberSelector: "Page number selector. Showing page {0} of {1}.",
        ariaLabelPageNumberEditor: "Page number editor",
        ariaLabelExpandable: "Expandable",
        ariaLabelSelected: "Selected",
        ariaLabelParameter: "parameter",
        ariaLabelErrorMessage: "Error message",
        ariaLabelParameterInfo: "Contains {0} options",
        ariaLabelMultiSelect: "Multiselect",
        ariaLabelMultiValue: "Multivalue",
        ariaLabelSingleValue: "Single value",
        ariaLabelParameterDateTime: "DateTime",
        ariaLabelParameterString: "String",
        ariaLabelParameterNumerical: "Numerical",
        ariaLabelParameterBoolean: "Boolean",
        ariaLabelParametersAreaPreviewButton: "Preview the report",
        ariaLabelMainMenu: "Main menu",
        ariaLabelCompactMenu: "Compact menu",
        ariaLabelSideMenu: "Side menu",
        ariaLabelDocumentMap: "Document map area",
        ariaLabelDocumentMapSplitter: "Document map area splitbar.",
        ariaLabelParametersAreaSplitter: "Parameters area splitbar.",
        ariaLabelPagesArea: "Report contents area",
        ariaLabelSearchDialogArea: "Search area",
        ariaLabelSendEmailDialogArea: "Send email area",
        ariaLabelSearchDialogStop: "Stop search",
        ariaLabelSearchDialogOptions: "Search options",
        ariaLabelSearchDialogNavigateUp: "Navigate up",
        ariaLabelSearchDialogNavigateDown: "Navigate down",
        ariaLabelSearchDialogMatchCase: "Match case",
        ariaLabelSearchDialogMatchWholeWord: "Match whole word",
        ariaLabelSearchDialogUseRegex: "Use regex",
        ariaLabelMenuNavigateBackward: "Navigate backward",
        ariaLabelMenuNavigateForward: "Navigate forward",
        ariaLabelMenuStopRendering: "Stop rendering",
        ariaLabelMenuRefresh: "Refresh",
        ariaLabelMenuFirstPage: "First page",
        ariaLabelMenuLastPage: "Last page",
        ariaLabelMenuPreviousPage: "Previous page",
        ariaLabelMenuNextPage: "Next page",
        ariaLabelMenuPageNumber: "Page number selector",
        ariaLabelMenuDocumentMap: "Toggle document map",
        ariaLabelMenuParametersArea: "Toggle parameters area",
        ariaLabelMenuZoomIn: "Zoom in",
        ariaLabelMenuZoomOut: "Zoom out",
        ariaLabelMenuPageState: "Toggle FullPage/PageWidth",
        ariaLabelMenuPrint: "Print",
        ariaLabelMenuContinuousScroll: "Continuous scrolling",
        ariaLabelMenuSendMail: "Send an email",
        ariaLabelMenuExport: "Export",
        ariaLabelMenuPrintPreview: "Toggle print preview",
        ariaLabelMenuSearch: "Search in report contents",
        ariaLabelMenuSideMenu: "Toggle side menu",
        ariaLabelSendEmailFrom: "From email address",
        ariaLabelSendEmailTo: "Recipient email address",
        ariaLabelSendEmailCC: "Carbon Copy email address",
        ariaLabelSendEmailSubject: "Email subject:",
        ariaLabelSendEmailFormat: "Report format:",
        ariaLabelSendEmailSend: "Send email",
        ariaLabelSendEmailCancel: "Cancel sending email",
        // search dialog resources
        searchDialogTitle: "Search in report contents",
        searchDialogSearchInProgress: "searching...",
        searchDialogNoResultsLabel: "No results",
        searchDialogResultsFormatLabel: "Result {0} of {1}",
        searchDialogStopTitle: "Stop Search",
        searchDialogNavigateUpTitle: "Navigate Up",
        searchDialogNavigateDownTitle: "Navigate Down",
        searchDialogMatchCaseTitle: "Match Case",
        searchDialogMatchWholeWordTitle: "Match Whole Word",
        searchDialogUseRegexTitle: "Use Regex",
        searchDialogCaptionText: "Find",
        searchDialogPageText: "page",
        // Send Email dialog resources
        sendEmailDialogTitle: "Send Email",
        sendEmailValidationEmailRequired: "Email field is required",
        sendEmailValidationEmailFormat: "Email format is not valid",
        sendEmailValidationSingleEmail: "The field accepts a single email address only",
        sendEmailValidationFormatRequired: "Format field is required",
        errorSendingDocument: "Error sending report document (Report = '{0}')."
      };
      window.telerikReportViewer || (window.telerikReportViewer = {});
      (_a = window.telerikReportViewer).sr || (_a.sr = sr$1);
      var sr = sr || {};
      const userResources = (window.telerikReportViewer || {}).sr || {};
      const stringResources = $.extend({}, sr, userResources);
      var defaultOptions$7 = {};
      function Accessibility(options) {
        var controller;
        var pageInitialized = false;
        var areas;
        var lastArea;
        var keyMap = {
          CONFIRM_KEY: 13,
          // C
          CONTENT_AREA_KEY: 67,
          // D
          DOCUMENT_MAP_AREA_KEY: 68,
          // M
          MENU_AREA_KEY: 77,
          // P
          PARAMETERS_AREA_KEY: 80
        };
        options = $.extend({}, defaultOptions$7, options);
        controller = options.controller;
        if (!controller) {
          throw "No controller (telerikReporting.ReportViewerController) has been specified.";
        }
        controller.reportLoadComplete(function() {
          setAccessibilityUI();
          var content = findContentArea();
          if (content.length > 0) {
            content.focus();
          }
        }).pageReady(function(event2, page) {
          initPage(page);
          pageInitialized = true;
        }).error(function(e, message) {
          focusOnErrorMessage();
          window.setTimeout(setAccessibilityUI, 500);
        });
        controller.updateUI(function(e) {
          if (pageInitialized) {
            setPageSelector();
            decorateMenuItems();
          }
        });
        function setAccessibilityUI() {
          if (!areas) {
            initAreas();
            $(document.body).off("keydown", processKeyDown);
            $(document.body).on("keydown", processKeyDown);
          }
        }
        function focusOnErrorMessage() {
          var $errMsg = $("div.trv-pages-area div.trv-error-message");
          if ($errMsg.length === 0) {
            return;
          }
          $errMsg.attr("tabIndex", 0);
          $errMsg.focus();
        }
        function initPage(page) {
          if (!page) {
            return;
          }
          setAccessibilityUI();
          var area = areas[keyMap.CONTENT_AREA_KEY];
          setContentAreaKeyDown(area);
        }
        function setPageSelector() {
          var pagers = document.querySelectorAll(".trv-report-pager");
          var pageNumber = controller.getCurrentPageNumber();
          var pageCount = controller.getPageCount();
          pagers.forEach((pager) => {
            pager.setAttribute("aria-label", stringFormat(stringResources.ariaLabelPageNumberSelector, [pageNumber, pageCount]));
            var pageInputs = pager.querySelectorAll("input[data-role=telerik_ReportViewer_PageNumberInput]");
            pageInputs.forEach((input) => {
              input.setAttribute("aria-label", stringResources.ariaLabelPageNumberEditor);
            });
          });
        }
        function initAreas() {
          areas = {};
          areas[keyMap.DOCUMENT_MAP_AREA_KEY] = findDocumentMapArea();
          areas[keyMap.MENU_AREA_KEY] = findMenuArea();
          areas[keyMap.CONTENT_AREA_KEY] = findContentArea();
          var parametersArea = findParametersArea();
          if (parametersArea) {
            areas[keyMap.PARAMETERS_AREA_KEY] = parametersArea;
            setParameterEditorsKeyDown(parametersArea);
          }
        }
        function findContentArea() {
          return $("div[data-role=telerik_ReportViewer_PagesArea]");
        }
        function findDocumentMapArea() {
          return $("div[data-role=telerik_ReportViewer_DocumentMapArea] div[data-role=treeview]");
        }
        function findMenuArea() {
          return $("ul[data-role=telerik_ReportViewer_MainMenu]");
        }
        function findParametersArea() {
          return $("div[data-role=telerik_ReportViewer_ParametersArea] div.trv-parameters-area-content");
        }
        function processKeyDown(event2) {
          if (!areas) {
            return;
          }
          if (!(event2.altKey && event2.ctrlKey)) {
            return;
          }
          var currentArea = areas[event2.which];
          if (!currentArea) {
            return;
          }
          if (!IsAreaContainerVisible(currentArea.parent())) {
            return;
          }
          var className = "k-focus";
          if (lastArea) {
            lastArea.removeClass(className);
          }
          currentArea.addClass(className);
          currentArea.focus();
          lastArea = currentArea;
          event2.preventDefault();
        }
        function setParameterEditorsKeyDown(parametersAreaContent) {
          if (parametersAreaContent.length === 0) {
            return;
          }
          var $paramsArea = parametersAreaContent.parent("div[data-role=telerik_ReportViewer_ParametersArea]");
          if (!IsAreaContainerVisible($paramsArea)) {
            return;
          }
          Array.from(parametersAreaContent.children()).forEach((child) => {
            $(child).on("keydown", (event2) => {
              if (event2.which == keyMap.CONFIRM_KEY) {
                var paramsButton = $paramsArea.find("button.trv-parameters-area-preview-button");
                paramsButton.focus();
                event2.preventDefault();
              }
            });
          });
        }
        function IsAreaContainerVisible(container) {
          return container && !(container.hasClass("k-collapsed") || container.hasClass("trv-hidden"));
        }
        function setContentAreaKeyDown(contentArea) {
          if (!contentArea) {
            return;
          }
          var actions = contentArea.find("div [data-reporting-action]");
          if (!actions.length > 0) {
            return;
          }
          Array.from(actions).forEach((action) => {
            var $action = $(action);
            $action.on("keydown", (event2) => {
              if (event2.which == keyMap.CONFIRM_KEY) {
                $action.trigger("click");
              }
            });
          });
        }
        function decorateMenuItems() {
          var menuAreas = areas[keyMap.MENU_AREA_KEY];
          if (!menuAreas) {
            return;
          }
          Array.from(menuAreas).forEach((menu) => {
            var $menu = $(menu);
            var menuItems = $menu.children("li.k-item");
            Array.from(menuItems).forEach((menuItem) => {
              var $menuItem = $(menuItem);
              if (!$menuItem.hasClass("trv-report-pager")) {
                var ariaLabel = $menuItem.attr("aria-label");
                var expandableSr = stringFormat(". {0}", [stringResources.ariaLabelExpandable]);
                var expandable = $menuItem.find("ul").length > 0 && ariaLabel.indexOf(expandableSr) < 0 ? expandableSr : "";
                var selectedSr = stringFormat(". {0}", [stringResources.ariaLabelSelected]);
                var selected = $menuItem.hasClass("k-selected") && ariaLabel.indexOf(selectedSr) < 0 ? selectedSr : "";
                var label = ariaLabel + expandable + selected;
                $menuItem.attr("aria-label", label);
                if ($menuItem.hasClass("k-disabled")) {
                  $menuItem.attr("aria-disabled", "true");
                } else {
                  $menuItem.removeAttr("aria-disabled");
                }
              }
            });
          });
        }
        function setKeyMap(keyMapValues) {
          keyMap = keyMapValues;
          areas = void 0;
        }
        function getKeyMap() {
          return keyMap;
        }
        return {
          getKeyMap,
          setKeyMap
        };
      }
      const GlobalSettings = {
        viewerInstances: []
      };
      class Binder {
        static bind($element, ...args) {
          const commands = args[0].commands;
          const viewerOptions = args[1];
          Binder.attachCommands($element, commands, viewerOptions);
          var plugins2 = $element.find('[data-role^="telerik_ReportViewer_"]');
          Array.from(plugins2).forEach((element) => {
            var $element2 = $(element);
            var fn = $.fn[$element2.attr("data-role")];
            if (typeof fn === "function") {
              fn.apply($element2, args);
            }
          });
        }
        static attachCommands($element, commands, viewerOptions) {
          var elementSelector = '[data-command^="telerik_ReportViewer_"]';
          var customElementSelector = "[data-target-report-viewer]" + elementSelector;
          $element.on("click", elementSelector, commandHandler);
          if (!GlobalSettings.CommandHandlerAttached) {
            $(document.body).on("click", customElementSelector, customCommandHandler);
            GlobalSettings.CommandHandlerAttached = true;
          }
          Object.entries(commands).forEach(([key, command]) => {
            attachCommand(key, command, viewerOptions, $element);
          });
          function commandHandler(event2) {
            var prefixedDataCommand = $(this).attr("data-command");
            if (prefixedDataCommand) {
              var dataCommand = prefixedDataCommand.substring("telerik_ReportViewer_".length);
              var cmd = commands[dataCommand];
              if (cmd && cmd.enabled()) {
                cmd.exec($(this).attr("data-command-parameter"));
              }
              event2.preventDefault();
            }
          }
          function customCommandHandler(event2) {
            var $this = $(this);
            var prefixedDataCommand = $this.attr("data-command");
            var reportViewerTarget = $this.attr("data-target-report-viewer");
            if (prefixedDataCommand && reportViewerTarget) {
              var dataCommand = prefixedDataCommand.substring("telerik_ReportViewer_".length);
              var reportViewer = $(reportViewerTarget).data("telerik_ReportViewer");
              var cmd = reportViewer.commands[dataCommand];
              if (cmd.enabled()) {
                cmd.exec($(this).attr("data-command-parameter"));
              }
              event2.preventDefault();
            }
          }
        }
      }
      function attachCommand(dataCommand, cmd, viewerOptions, $element) {
        if (cmd) {
          var elementSelector = '[data-command="telerik_ReportViewer_' + dataCommand + '"]';
          var customElementSelector = '[data-target-report-viewer="' + viewerOptions.selector + '"]' + elementSelector;
          var $defaultElement = $element.find(elementSelector);
          var $customElement = $(customElementSelector);
          $(cmd).on("enabledChanged", function(event2) {
            (cmd.enabled() ? $.fn.removeClass : $.fn.addClass).call($defaultElement.parent("li"), "k-disabled");
            (cmd.enabled() ? $.fn.removeClass : $.fn.addClass).call($customElement, viewerOptions.disabledButtonClass);
          }).on("checkedChanged", function(event2) {
            var defaultTarget = $defaultElement.parent("li");
            (cmd.checked() ? $.fn.addClass : $.fn.removeClass).call(defaultTarget, getSelectedClassName(defaultTarget));
            (cmd.checked() ? $.fn.addClass : $.fn.removeClass).call($customElement, viewerOptions.checkedButtonClass);
          });
        }
      }
      function getSelectedClassName($element) {
        return $element.hasClass("trv-menu-toggleable") ? "k-selected !k-bg-primary" : "k-selected";
      }
      const ViewModes = {
        INTERACTIVE: "INTERACTIVE",
        PRINT_PREVIEW: "PRINT_PREVIEW"
      };
      const PrintModes = {
        AUTO_SELECT: "AUTO_SELECT",
        FORCE_PDF_PLUGIN: "FORCE_PDF_PLUGIN",
        FORCE_PDF_FILE: "FORCE_PDF_FILE"
      };
      const PageModes = {
        SINGLE_PAGE: "SINGLE_PAGE",
        CONTINUOUS_SCROLL: "CONTINUOUS_SCROLL"
      };
      const ScaleModes = {
        FIT_PAGE_WIDTH: "FIT_PAGE_WIDTH",
        FIT_PAGE: "FIT_PAGE",
        SPECIFIC: "SPECIFIC"
      };
      const ParameterTypes = {
        INTEGER: "System.Int64",
        FLOAT: "System.Double",
        STRING: "System.String",
        DATETIME: "System.DateTime",
        BOOLEAN: "System.Boolean"
      };
      const ParameterEditorTypes = {
        COMBO_BOX: "COMBO_BOX",
        LIST_VIEW: "LIST_VIEW"
      };
      const ParametersAreaPositions = {
        RIGHT: "RIGHT",
        LEFT: "LEFT",
        TOP: "TOP",
        BOTTOM: "BOTTOM"
      };
      const DocumentMapAreaPositions = {
        RIGHT: "RIGHT",
        LEFT: "LEFT"
      };
      function Command(execCallback) {
        var enabledState = true;
        var checkedState = false;
        var cmd = {
          enabled: function(state) {
            if (arguments.length === 0) {
              return enabledState;
            }
            var newState = Boolean(state);
            enabledState = newState;
            $(this).trigger("enabledChanged");
            return cmd;
          },
          checked: function(state) {
            if (arguments.length === 0) {
              return checkedState;
            }
            var newState = Boolean(state);
            checkedState = newState;
            $(this).trigger("checkedChanged");
            return cmd;
          },
          exec: execCallback
        };
        return cmd;
      }
      var scaleTransitionMap = {};
      scaleTransitionMap[ScaleModes.FIT_PAGE] = { scaleMode: ScaleModes.FIT_PAGE_WIDTH };
      scaleTransitionMap[ScaleModes.FIT_PAGE_WIDTH] = { scaleMode: ScaleModes.SPECIFIC, scale: 1 };
      scaleTransitionMap[ScaleModes.SPECIFIC] = { scaleMode: ScaleModes.FIT_PAGE };
      var scaleValues = [0.1, 0.25, 0.5, 0.75, 1, 1.5, 2, 4, 8];
      function CommandSet(options) {
        var controller = options.controller;
        if (!controller) {
          throw "No options.controller.";
        }
        var historyManager = options.history;
        if (!historyManager) {
          throw "No options.history.";
        }
        function getDocumentMapVisible() {
          var args = {};
          controller.getDocumentMapState(args);
          return Boolean(args.visible);
        }
        function getParametersAreaVisible() {
          var args = {};
          controller.getParametersAreaState(args);
          return Boolean(args.visible);
        }
        function getSideMenuVisible() {
          var args = {};
          controller.getSideMenuVisible(args);
          return Boolean(args.visible);
        }
        function getSearchDialogVisible() {
          var args = {};
          controller.getSearchDialogState(args);
          return Boolean(args.visible);
        }
        function getSendEmailDialogVisible() {
          var args = {};
          controller.getSendEmailDialogState(args);
          return Boolean(args.visible);
        }
        return {
          "historyBack": new Command(function() {
            historyManager.back();
          }),
          "historyForward": new Command(function() {
            historyManager.forward();
          }),
          "stopRendering": new Command(function() {
            controller.stopRendering();
          }),
          "goToPrevPage": new Command(function() {
            controller.navigateToPage(controller.getCurrentPageNumber() - 1);
          }),
          "goToNextPage": new Command(function() {
            controller.navigateToPage(controller.getCurrentPageNumber() + 1);
          }),
          "goToFirstPage": new Command(function() {
            controller.navigateToPage(1);
          }),
          "goToLastPage": new Command(function() {
            controller.navigateToPage(controller.getPageCount());
          }),
          "goToPage": new Command(function(pageNumber) {
            if (!isNaN(pageNumber)) {
              var pageCount = controller.getPageCount();
              if (pageNumber > pageCount) {
                pageNumber = pageCount;
              } else if (pageNumber < 1) {
                pageNumber = 1;
              }
              controller.navigateToPage(pageNumber);
              return pageNumber;
            }
          }),
          "refresh": new Command(
            function() {
              controller.refreshReport(true, false);
            }
          ),
          "export": new Command(function(format) {
            if (format) {
              controller.exportReport(format);
            }
          }),
          "print": new Command(function() {
            controller.printReport();
          }),
          "pageMode": new Command(function() {
            controller.setPageMode(
              controller.getPageMode() === PageModes.SINGLE_PAGE ? PageModes.CONTINUOUS_SCROLL : PageModes.SINGLE_PAGE
            );
          }),
          "togglePrintPreview": new Command(function() {
            controller.setViewMode(
              controller.getViewMode() === ViewModes.PRINT_PREVIEW ? ViewModes.INTERACTIVE : ViewModes.PRINT_PREVIEW
            );
          }),
          "toggleDocumentMap": new Command(function() {
            controller.setDocumentMapVisible({ visible: !getDocumentMapVisible() });
          }),
          "toggleParametersArea": new Command(function() {
            controller.setParametersAreaVisible({ visible: !getParametersAreaVisible() });
          }),
          "zoom": new Command(function(scale2) {
            controller.setScale(scale2);
          }),
          "zoomIn": new Command(function() {
            zoom(1);
          }),
          "zoomOut": new Command(function() {
            zoom(-1);
          }),
          "toggleSideMenu": new Command(function() {
            controller.setSideMenuVisible({ visible: !getSideMenuVisible() });
          }),
          "toggleZoomMode": new Command(function(e) {
            var scale2 = controller.getScale();
            var scaleMode = controller.getScaleMode();
            controller.setScale(scaleTransitionMap[scaleMode].scale || scale2);
            controller.setScaleMode(scaleTransitionMap[scaleMode].scaleMode);
          }),
          "toggleSearchDialog": new Command(function() {
            controller.setSearchDialogVisible({ visible: !getSearchDialogVisible() });
          }),
          "toggleSendEmailDialog": new Command(function() {
            controller.setSendEmailDialogVisible({ visible: !getSendEmailDialogVisible() });
          })
        };
        function zoom(step) {
          controller.setScale(getZoomScale(controller.getScale(), step));
        }
        function getZoomScale(scale2, steps) {
          var pos = -1;
          var length = scaleValues.length;
          for (var i = 0; i < length; i++) {
            var value = scaleValues[i];
            if (scale2 < value) {
              pos = i - 0.5;
              break;
            }
            if (scale2 === value) {
              pos = i;
              break;
            }
          }
          pos = pos + steps;
          if (steps >= 0) {
            pos = Math.round(pos - 0.49);
          } else {
            pos = Math.round(pos + 0.49);
          }
          if (pos < 0) {
            pos = 0;
          } else if (pos > length - 1) {
            pos = length - 1;
          }
          return scaleValues[pos];
        }
      }
      function IEHelper() {
        function getPdfPlugin() {
          var classIds = ["AcroPDF.PDF.1", "PDF.PdfCtrl.6", "PDF.PdfCtrl.5"];
          var plugin = null;
          $.each(classIds, function(index, classId) {
            try {
              plugin = new ActiveXObject(classId);
              if (plugin) {
                return false;
              }
            } catch (ex) {
            }
          });
          return plugin;
        }
        return {
          hasPdfPlugin: function() {
            return getPdfPlugin() !== null;
          }
        };
      }
      function FirefoxHelper() {
        function hasPdfPlugin2() {
          var matches = /Firefox[\/\s](\d+\.\d+)/.exec(navigator.userAgent);
          if (null !== matches && matches.length > 1) {
            var version = parseFloat(matches[1]);
            if (version >= 19) {
              return false;
            }
          }
          var pdfPlugins = navigator.mimeTypes["application/pdf"];
          var pdfPlugin = pdfPlugins !== null ? pdfPlugins.enabledPlugin : null;
          if (pdfPlugin) {
            var description = pdfPlugin.description;
            return description.indexOf("Adobe") !== -1 && (description.indexOf("Version") === -1 || parseFloat(description.split("Version")[1]) >= 6);
          }
          return false;
        }
        return {
          hasPdfPlugin: function() {
            return hasPdfPlugin2();
          }
        };
      }
      function ChromiumHelper(defaultPlugin) {
        function hasPdfPlugin2() {
          var navPlugins = navigator.plugins;
          var found = false;
          $.each(navPlugins, function(key, value) {
            if (navPlugins[key].name === defaultPlugin || navPlugins[key].name === "Adobe Acrobat") {
              found = true;
              return false;
            }
          });
          return found;
        }
        return {
          hasPdfPlugin: function() {
            return hasPdfPlugin2();
          }
        };
      }
      function OtherBrowserHelper() {
        return {
          hasPdfPlugin: function() {
            return false;
          }
        };
      }
      function selectBrowserHelper() {
        if (window.navigator) {
          var userAgent = window.navigator.userAgent.toLowerCase();
          if (userAgent.indexOf("msie") > -1 || userAgent.indexOf("mozilla") > -1 && userAgent.indexOf("trident") > -1)
            return IEHelper();
          else if (userAgent.indexOf("firefox") > -1)
            return FirefoxHelper();
          else if (userAgent.indexOf("edg/") > -1)
            return ChromiumHelper("Microsoft Edge PDF Plugin");
          else if (userAgent.indexOf("chrome") > -1)
            return ChromiumHelper("Chrome PDF Viewer");
          else if (userAgent.indexOf("safari") > -1)
            return ChromiumHelper("WebKit built-in PDF");
          return OtherBrowserHelper();
        }
        return null;
      }
      var helper = selectBrowserHelper();
      var hasPdfPlugin = helper ? helper.hasPdfPlugin() : false;
      var PrintManager = function() {
        var iframe;
        function printDesktop(src) {
          var sameOriginUrl = null;
          if (!iframe) {
            iframe = document.createElement("iframe");
            iframe.style.display = "none";
            iframe.onload = function() {
              try {
                iframe.contentDocument.execCommand("print", true, null);
              } catch (e) {
                logError(e);
              } finally {
                if (sameOriginUrl) {
                  (window.URL || window.webkitURL).revokeObjectURL(sameOriginUrl);
                }
              }
            };
          }
          if (isSameOriginUrl(src) && useMsBlobHandling()) {
            iframe.src = src;
            document.body.appendChild(iframe);
            return;
          }
          var request = new XMLHttpRequest();
          request.open("GET", src, true);
          request.responseType = "arraybuffer";
          request.onload = function(e) {
            if (this.status === 200) {
              var localPdf = new Blob([this.response], { type: "application/pdf" });
              if (useMsBlobHandling()) {
                window.navigator.msSaveOrOpenBlob(localPdf);
              } else {
                sameOriginUrl = (window.URL || window.webkitURL).createObjectURL(localPdf);
                iframe.src = sameOriginUrl;
                document.body.appendChild(iframe);
              }
            } else {
              console.log("Could not retrieve remote PDF document.");
            }
          };
          request.send();
        }
        function useMsBlobHandling() {
          return window.navigator && window.navigator.msSaveOrOpenBlob;
        }
        function isSameOriginUrl(url) {
          var location2 = window.location;
          var anchor = document.createElement("a");
          anchor.setAttribute("href", url);
          if (anchor.host == "") {
            anchor.href = anchor.href;
          }
          return location2.hostname === anchor.hostname && location2.protocol === anchor.protocol && location2.port === anchor.port;
        }
        function printMobile(src) {
          window.open(src, "_self");
        }
        var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        var printFunc = isMobile ? printMobile : printDesktop;
        return {
          print: function(src) {
            printFunc(src);
          },
          getDirectPrintState: function() {
            return hasPdfPlugin;
          }
        };
      }();
      var ParameterValidators = function() {
        var validators = {};
        function validateParameter(parameter, value, validatorFunc, compareFunc) {
          var values = [].concat(value).map(function(value1) {
            return checkAvailableValues(parameter, validatorFunc(value1), compareFunc);
          });
          if (parameter.multivalue) {
            if (value == null || value.length == 0) {
              if (parameter.allowNull) {
                return value;
              }
              throw stringResources.invalidParameter;
            }
            return values;
          }
          return values[0];
        }
        function isNull(parameter, value) {
          return parameter.allowNull && -1 != [null, "", void 0].indexOf(value);
        }
        function checkAvailableValues(parameter, value, compareFunc) {
          if (parameter.availableValues) {
            var found = Array.from(parameter.availableValues).some(function(av) {
              return compareFunc(value, av.value);
            });
            if (!found) {
              if (parameter.allowNull && !value) {
                return value;
              }
              throw stringResources.invalidParameter;
            }
          }
          return value;
        }
        validators[ParameterTypes.STRING] = {
          validate: function(parameter, value) {
            return validateParameter(
              parameter,
              value,
              function(value2) {
                if (!value2) {
                  if (parameter.allowNull) {
                    return null;
                  }
                  if (parameter.allowBlank) {
                    return "";
                  }
                  throw stringResources.parameterIsEmpty;
                }
                return value2;
              },
              function(s1, s2) {
                return s1 == s2;
              }
            );
          }
        };
        validators[ParameterTypes.FLOAT] = {
          validate: function(parameter, value) {
            return validateParameter(
              parameter,
              value,
              function(value2) {
                var num = tryParseFloat(value2);
                if (isNaN(num)) {
                  if (isNull(parameter, value2)) {
                    return null;
                  }
                  throw stringResources.parameterIsEmpty;
                }
                return num;
              },
              function(f1, f2) {
                return tryParseFloat(f1) == tryParseFloat(f2);
              }
            );
          }
        };
        validators[ParameterTypes.INTEGER] = {
          validate: function(parameter, value) {
            return validateParameter(
              parameter,
              value,
              function(value2) {
                var num = tryParseInt(value2);
                if (isNaN(num)) {
                  if (isNull(parameter, value2)) {
                    return null;
                  }
                  throw stringResources.parameterIsEmpty;
                }
                return num;
              },
              function(n1, n2) {
                return tryParseInt(n1) == tryParseFloat(n2);
              }
            );
          }
        };
        validators[ParameterTypes.DATETIME] = {
          validate: function(parameter, value) {
            return validateParameter(
              parameter,
              value,
              function(value2) {
                if (parameter.allowNull && (value2 === null || value2 === "" || value2 === void 0)) {
                  return null;
                }
                if (!isNaN(Date.parse(value2))) {
                  if (parameter.availableValues) {
                    return value2;
                  }
                  return parseToLocalDate(value2);
                }
                throw stringResources.invalidDateTimeValue;
              },
              function(d1, d2) {
                d1 = parseToLocalDate(d1);
                d2 = parseToLocalDate(d2);
                return d1.getTime() == d2.getTime();
              }
            );
          }
        };
        validators[ParameterTypes.BOOLEAN] = {
          validate: function(parameter, value) {
            return validateParameter(
              parameter,
              value,
              function(value2) {
                if (-1 != ["true", "false"].indexOf(String(value2).toLowerCase())) {
                  return Boolean(value2);
                }
                if (isNull(parameter, value2)) {
                  return null;
                }
                throw stringResources.parameterIsEmpty;
              },
              function(b1, b2) {
                return Boolean(b1) == Boolean(b2);
              }
            );
          }
        };
        return {
          validate: function(parameter, value) {
            var v = validators[parameter.type];
            if (!v) {
              throw stringFormat(stringResources.cannotValidateType, parameter);
            }
            return v.validate(parameter, value);
          }
        };
      }();
      function isNumber(value) {
        return typeof value === "number" && isFinite(value);
      }
      function secondsToMilliseconds(seconds) {
        return seconds * 1e3;
      }
      function ServiceClientSentinel(serviceClient, clientID, sessionTimeoutSeconds) {
        if (!serviceClient) {
          throw stringResources.noServiceClient;
        }
        if (!isNumber(sessionTimeoutSeconds)) {
          throw "sessionTimeoutSeconds must a number and must be finite";
        }
        var interval;
        var pingMilliseconds;
        if (sessionTimeoutSeconds <= 120) {
          pingMilliseconds = secondsToMilliseconds(sessionTimeoutSeconds) / 2;
        } else {
          pingMilliseconds = secondsToMilliseconds(sessionTimeoutSeconds - 60);
        }
        function start() {
          if (pingMilliseconds <= 0) {
            return;
          }
          pingMilliseconds = Math.min(pingMilliseconds, 2147483647);
          interval = setInterval(function() {
            serviceClient.keepClientAlive(clientID);
          }, pingMilliseconds);
        }
        function restart() {
          stop();
          start();
        }
        function stop() {
          if (interval) {
            clearInterval(interval);
            interval = null;
          }
        }
        return {
          start,
          restart,
          stop
        };
      }
      var __defProp$6 = Object.defineProperty;
      var __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField$5 = (obj, key, value) => {
        __defNormalProp$6(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class EventEmitter extends EventTarget {
        constructor() {
          super();
          __publicField$5(this, "_events");
          __publicField$5(this, "_eventsCount");
          this._events = {};
          this._eventsCount = 0;
        }
        /**
         * @param {string} type
         * @param {(event: CustomEvent, ...args: any[]) => void} listener
         * @returns
         */
        addListener(type2, listener) {
          if (typeof listener !== "function") {
            throw new TypeError("listener must be a function");
          }
          if (!this._events[type2]) {
            this._events[type2] = [];
          }
          function wrappedListener(event2) {
            listener.call(this, event2, ...event2.detail);
          }
          wrappedListener.listener = listener;
          this._events[type2].push(wrappedListener);
          this._eventsCount++;
          this.addEventListener(type2, wrappedListener.bind(this));
          return this;
        }
        /**
         * @alias addListener
         * @param {string} type
         * @param {(event: CustomEvent, ...args: any[]) => void} listener
         * @returns
         */
        on(type2, listener) {
          return this.addListener(type2, listener);
        }
        /**
         * @param {string} type
         * @param {any[]} args
         * @returns
         */
        trigger(type2, ...args) {
          if (!this._events[type2]) {
            return void 0;
          }
          const event2 = new CustomEvent(type2, {
            detail: args,
            cancelable: true
          });
          return this.dispatchEvent(event2);
        }
        /**
         * @alias trigger
         * @param {string} type
         * @param {any[]} args
         * @returns
         */
        emit(type2, ...args) {
          return this.trigger(type2, ...args);
        }
        /**
         * @param {string} type
         * @param {(event: CustomEvent, ...args: any[]) => void} listener
         * @returns
         */
        removeListener(type2, listener) {
          if (!this._events[type2]) {
            return this;
          }
          this._events[type2] = this._events[type2].filter((wrappedListener) => {
            if (wrappedListener.listener !== listener) {
              return true;
            }
            this.removeEventListener(type2, wrappedListener);
            return false;
          });
          if (this._events[type2].length === 0) {
            delete this._events[type2];
            this._eventsCount--;
          }
          return this;
        }
        /**
         * @param {string} type
         * @returns
         */
        removeAllListeners(type2) {
          if (type2 === void 0) {
            Object.keys(this._events).forEach((eventType) => {
              this.removeAllListeners(eventType);
            });
            return this;
          }
          if (this._events[type2]) {
            this._events[type2].forEach((wrappedListener) => {
              this.removeEventListener(type2, wrappedListener);
            });
            delete this._events[type2];
            this._eventsCount--;
          }
          return this;
        }
        /**
         * @param {string} type
         * @param {(event: CustomEvent, ...args: any[]) => void} listener
         * @returns
         */
        off(type2, listener) {
          if (type2 === void 0) {
            return this.removeAllListeners();
          }
          if (listener === void 0) {
            return this.removeAllListeners(type2);
          }
          return this.removeListener(type2, listener);
        }
      }
      var defaultOptions$6 = {
        pagePollIntervalMs: 500,
        documentInfoPollIntervalMs: 2e3
      };
      function ReportViewerController(options) {
        var controller = {};
        var clientId;
        var reportInstanceId;
        var reportDocumentId;
        var registerClientPromise;
        var registerInstancePromise;
        var documentFormatsPromise;
        var report;
        var parameterValues;
        var processedParameterValues;
        var currentPageNumber;
        var pageCount;
        var viewMode = ViewModes.INTERACTIVE;
        var pageMode = PageModes.CONTINUOUS_SCROLL;
        var loader;
        var printMode = PrintModes.AUTO_SELECT;
        var bookmarkNodes;
        var renderingExtensions;
        var clientHasExpired = false;
        var parameterValidators = ParameterValidators;
        var eventEmitter = new EventEmitter();
        var serviceClientSentinel;
        clearReportState();
        options = $.extend({}, defaultOptions$6, options);
        var settings = options.settings;
        if (typeof settings.getPrintMode === "function") {
          printMode = settings.getPrintMode();
        }
        var client = options.serviceClient;
        if (!client) {
          throw stringResources.noServiceClient;
        }
        clientId = settings.getClientId();
        initializeAndStartSentinel();
        function setClientId(id) {
          clientId = id;
          stopSentinel();
          settings.setClientId(clientId);
          initializeAndStartSentinel();
        }
        function clearClientId() {
          clientId = null;
          registerClientPromise = null;
          stopSentinel();
          serviceClientSentinel = null;
          settings.setClientId(null);
        }
        function initializeAndStartSentinel() {
          if (typeof settings.getKeepClientAlive !== "function") {
            throw new Error("Required settings.getKeepClientAlive() is not supplied for ReportViewerController");
          }
          if (settings.getKeepClientAlive() && clientId) {
            return client.getClientsSessionTimeoutSeconds().then(function(sessionTimeout) {
              serviceClientSentinel = new ServiceClientSentinel(client, clientId, sessionTimeout);
              serviceClientSentinel.start();
            });
          }
        }
        function stopSentinel() {
          if (settings.getKeepClientAlive() && !!serviceClientSentinel) {
            serviceClientSentinel.stop();
          }
        }
        function getFormat() {
          if (viewMode === ViewModes.PRINT_PREVIEW) {
            return "HTML5";
          }
          return "HTML5Interactive";
        }
        function handleRequestError(xhrData, localizedMessage, suppressErrorBubbling) {
          var errorMessage = "";
          if (!xhrData.xhr) {
            errorMessage = xhrData;
            controller.raiseError(formatXhrError({ "responseText": errorMessage }, null, null, null));
            throw errorMessage;
          }
          var xhr = xhrData.xhr;
          if (isInvalidClientException(xhr)) {
            onClientExpired();
          }
          var formattedError = formatXhrError(
            xhr,
            xhrData.status,
            isInternalServerError(xhrData.error) ? "" : xhrData.error,
            localizedMessage
          );
          controller.raiseError(formattedError);
          if (!suppressErrorBubbling) {
            if (isApplicationException(xhr)) {
              var exception = getExceptionInstance(xhr);
              if (exception) {
                throw exception;
              }
            }
            throw xhr.responseJSON && xhr.responseJSON.exceptionMessage ? xhr.responseJSON.exceptionMessage : stringResources.promisesChainStopError;
          }
        }
        function initializeClientAsync() {
          if (!registerClientPromise) {
            registerClientPromise = client.registerClient().catch(function(xhrErrorData) {
              handleRequestError(xhrErrorData, stringResources.errorRegisteringViewer);
            }).then(function(clientId2) {
              setClientId(clientId2);
            }).catch(clearClientId);
          }
          return registerClientPromise;
        }
        function registerInstanceAsync() {
          if (!registerInstancePromise) {
            registerInstancePromise = createReportInstanceAsync(report, parameterValues).then(function(instanceId) {
              reportInstanceId = instanceId;
            });
            registerInstancePromise.catch(function(errorMessage) {
              registerInstancePromise = null;
            });
          }
          return registerInstancePromise;
        }
        function clearReportState() {
          reportDocumentId = null;
          reportInstanceId = null;
          registerInstancePromise = null;
          resetPageNumbers();
        }
        function resetPageNumbers() {
          currentPageNumber = pageCount = 0;
        }
        function formatError(args) {
          var len = args.length;
          if (len === 1) {
            return args[0];
          }
          if (len > 1) {
            return stringFormat(args[0], Array.prototype.slice.call(args, 1));
          }
          return "";
        }
        function createReportInstanceAsync(report2, parameterValues2) {
          throwIfNotInitialized();
          return client.createReportInstance(clientId, report2, parameterValues2).catch(function(xhrErrorData) {
            handleRequestError(xhrErrorData, stringFormat(stringResources.errorCreatingReportInstance, [escapeHtml(report2)]));
          });
        }
        function registerDocumentAsync(format, deviceInfo, useCache, baseDocumentId, actionId) {
          throwIfNotInitialized();
          throwIfNoReportInstance();
          return client.createReportDocument(clientId, reportInstanceId, format, deviceInfo, useCache, baseDocumentId, actionId).catch(function(xhrErrorData) {
            handleRequestError(xhrErrorData, stringFormat(stringResources.errorCreatingReportDocument, [escapeHtml(report), escapeHtml(format)]));
          });
        }
        function sendDocumentAsync(documentId, args) {
          throwIfNotInitialized();
          throwIfNoReportInstance();
          return client.sendDocument(clientId, reportInstanceId, documentId, args).catch(function(xhrErrorData) {
            handleRequestError(xhrErrorData, stringFormat(stringResources.errorSendingDocument, [escapeHtml(report)]));
          });
        }
        function getDocumentInfoRecursive(clientId2, instanceId, documentId, options2) {
          if (!options2.isCanceled && instanceId === reportInstanceId) {
            return client.getDocumentInfo(clientId2, instanceId, documentId).catch(handleRequestError).then(function(info) {
              if (info && info.documentReady) {
                return info;
              }
              info["promise"] = new Promise(function(resolve, reject) {
                window.setTimeout(resolve, options2.documentInfoPollIntervalMs);
              }).then(function() {
                return getDocumentInfoRecursive(clientId2, instanceId, documentId, options2);
              });
              return info;
            });
          }
          return Promise.reject();
        }
        function ReportLoader(reportHost, useCache, baseDocumentId, actionId) {
          var loaderOptions = {};
          function onReportDocumentRegistered(id) {
            if (reportHost) {
              reportDocumentId = id;
              onBeginLoadReport();
              getReportDocumentReady();
            }
          }
          function onBeforeLoadReport(args) {
            loaderOptions.documentInfoPollIntervalMs = options.pagePollIntervalMs;
            if (reportHost) {
              reportHost.beforeLoadReport(args);
            }
          }
          function onBeginLoadReport() {
            if (reportHost) {
              reportHost.beginLoadReport();
            }
          }
          function onReportLoadComplete(info) {
            if (reportHost) {
              reportHost.onReportLoadComplete(info);
            }
          }
          function onReportLoadProgress(info) {
            if (reportHost) {
              pageCount = info.pageCount;
              reportHost.reportLoadProgress(info);
            }
          }
          function getReportDocumentReady() {
            throwIfNotInitialized();
            throwIfNoReportInstance();
            throwIfNoReportDocument();
            progressReportDocumentReady(getDocumentInfoRecursive(clientId, reportInstanceId, reportDocumentId, loaderOptions));
          }
          function progressReportDocumentReady(getDocumentReadyPromise) {
            getDocumentReadyPromise.then(function(info) {
              if (info.documentReady) {
                onReportLoadComplete(info);
              } else {
                onReportLoadProgress(info);
                progressReportDocumentReady(info.promise);
              }
            });
          }
          function getPageAsync(pageNo) {
            return new Promise(function(resolve, reject) {
              var fn = function() {
                client.getPage(clientId, reportInstanceId, reportDocumentId, pageNo).catch(handleRequestError).then(function(pageInfo) {
                  if (pageInfo.pageReady) {
                    resolve(pageInfo);
                  } else {
                    window.setTimeout(fn, options.pagePollIntervalMs);
                  }
                });
              };
              fn();
            });
          }
          function onBeginLoadPage(pageNo) {
            if (reportHost) {
              reportHost.beginLoadPage(pageNo);
            }
          }
          var loadPromise;
          function loadAsync() {
            if (!loadPromise) {
              var format = getFormat();
              var deviceInfo = createPreviewDeviceInfo();
              onBeforeLoadReport({ deviceInfo });
              loadPromise = initializeClientAsync().then(registerInstanceAsync).then(function() {
                return registerDocumentAsync(format, deviceInfo, useCache, baseDocumentId, actionId);
              }).then(onReportDocumentRegistered);
            }
            return loadPromise;
          }
          function createPreviewDeviceInfo() {
            var deviceInfo = createDeviceInfo();
            deviceInfo.ContentOnly = true;
            deviceInfo.UseSVG = isSvgSupported();
            return deviceInfo;
          }
          return {
            beginLoad: function() {
              loadAsync();
            },
            beginGetPage: function(pageNo) {
              throwIfNotInitialized();
              loadAsync().then(function() {
                onBeginLoadPage(pageNo);
                return getPageAsync(pageNo);
              }).then(function(pageInfo) {
                loaderOptions.documentInfoPollIntervalMs = options.documentInfoPollIntervalMs;
                if (reportHost) {
                  reportHost.pageReady(pageInfo);
                }
              });
            },
            getPageData: function(pageNo) {
              throwIfNotInitialized();
              return loadAsync().then(function() {
                return getPageAsync(pageNo);
              });
            },
            dispose: function() {
              reportHost = null;
            },
            cancel: function() {
              loaderOptions.isCanceled = true;
            }
          };
        }
        function createDeviceInfo() {
          var deviceInfo = {};
          if (settings.getEnableAccessibility()) {
            deviceInfo.enableAccessibility = true;
            deviceInfo.contentTabIndex = settings.contentTabIndex;
          }
          var args = {};
          controller.getSearchDialogState(args);
          var searchInitiated = args.visible;
          var searchMetadataOnDemand = settings.getSearchMetadataOnDemand();
          var enableSearch = !searchMetadataOnDemand || searchInitiated;
          deviceInfo.enableSearch = enableSearch;
          return deviceInfo;
        }
        function tryResolveClientErrorByExceptionType(exceptionType) {
          var parameterExceptionShortName = "InvalidParameterException";
          return exceptionTypeNamesMatch(exceptionType, parameterExceptionShortName, "Telerik.Reporting.Services.Engine." + parameterExceptionShortName) ? stringResources.missingOrInvalidParameter : "";
        }
        function formatXhrError(xhr, status, error, localizedMessage) {
          var parsedXhr = parseJSON(xhr.responseText);
          var result = "";
          if (parsedXhr) {
            var errorMessage = tryResolveClientErrorByExceptionType(parsedXhr.exceptionType || parsedXhr.error);
            if (errorMessage) {
              return errorMessage;
            }
            result = escapeHtml(parsedXhr.message);
            var exceptionMessage = escapeHtml(parsedXhr.exceptionMessage || parsedXhr.error_description);
            if (exceptionMessage) {
              if (result) {
                result += " " + exceptionMessage;
              } else {
                result = exceptionMessage;
              }
            }
          } else {
            result = escapeHtml(xhr.responseText);
          }
          if (localizedMessage || error) {
            if (result) {
              result = " " + result;
            }
            result = escapeHtml(localizedMessage ? localizedMessage : error) + result;
          }
          if (isInvalidClientException(xhr)) {
            result += "<br />" + stringResources.clientExpired;
          }
          return result;
        }
        function getReportPage(pageNo) {
          if (loader) {
            loader.beginGetPage(pageNo);
          }
        }
        function loadReportAsync(ignoreCache, baseDocumentId, actionId) {
          if (!report) {
            controller.raiseError(stringResources.noReport);
            return;
          }
          if (loader) {
            loader.dispose();
            loader = null;
          }
          clearReportState();
          loader = new ReportLoader(controller, !ignoreCache, baseDocumentId, actionId);
          loader.beginLoad();
        }
        function printReport() {
          throwIfNoReport();
          var deviceInfo = {
            ImmediatePrint: true
          };
          var printStartArgs = {
            deviceInfo,
            handled: false
          };
          controller.printStarted(printStartArgs);
          if (!printStartArgs.handled) {
            controller.setUIState({
              operationName: "PrintInProgress",
              inProgress: true
            });
            controller.showNotification({ stringResources: "preparingPrint" });
            var canUsePlugin = getCanUsePlugin();
            var contentDisposition = canUsePlugin ? "inline" : "attachment";
            var queryString = "response-content-disposition=" + contentDisposition;
            exportAsync("PDF", deviceInfo).then(
              function(info) {
                var url = client.formatDocumentUrl(info.clientId, info.instanceId, info.documentId, queryString);
                var printEndArgs = {
                  url,
                  handled: false
                };
                controller.printReady(printEndArgs);
                controller.hideNotification();
                controller.setUIState({
                  operationName: "PrintInProgress",
                  inProgress: false
                });
                if (!printEndArgs.handled) {
                  PrintManager.print(url);
                }
              }
            );
          }
        }
        function getCanUsePlugin() {
          switch (printMode) {
            case PrintModes.FORCE_PDF_FILE:
            case false:
              return false;
            case PrintModes.FORCE_PDF_PLUGIN:
            case true:
              return true;
            default:
              return PrintManager.getDirectPrintState();
          }
        }
        function exportReport(format, deviceInfo) {
          throwIfNoReport();
          if (!deviceInfo) {
            deviceInfo = createDeviceInfo();
          }
          var exportStartArgs = {
            format,
            deviceInfo,
            handled: false
          };
          controller.exportStarted(exportStartArgs);
          if (!exportStartArgs.handled) {
            var queryString = "response-content-disposition=attachment";
            controller.setUIState({
              operationName: "ExportInProgress",
              inProgress: true
            });
            controller.showNotification({ stringResources: "preparingDownload" });
            exportAsync(format, exportStartArgs.deviceInfo).then(
              function(info) {
                var url = client.formatDocumentUrl(info.clientId, info.instanceId, info.documentId, queryString);
                var exportEndArgs = {
                  url,
                  format,
                  handled: false,
                  windowOpenTarget: "_self"
                };
                controller.exportReady(exportEndArgs);
                controller.hideNotification();
                controller.setUIState({
                  operationName: "ExportInProgress",
                  inProgress: false
                });
                if (!exportEndArgs.handled) {
                  window.open(url, exportEndArgs.windowOpenTarget);
                }
              }
            );
          }
        }
        function sendReport(args) {
          throwIfNoReport();
          if (!args.deviceInfo) {
            args.deviceInfo = createDeviceInfo();
          }
          var sendEmailStartArgs = {
            deviceInfo: args.deviceInfo,
            handled: false,
            format: args.format
          };
          controller.sendEmailStarted(sendEmailStartArgs);
          var queryString = "response-content-disposition=attachment";
          if (!sendEmailStartArgs.handled) {
            exportAsync(args.format, args.deviceInfo).then(
              function(info) {
                var url = client.formatDocumentUrl(info.clientId, info.instanceId, info.documentId, queryString);
                args["url"] = url;
                args["handled"] = false;
                controller.sendEmailReady(args);
                delete args.deviceInfo;
                if (!args.handled) {
                  sendDocumentAsync(info.documentId, args);
                }
              }
            );
          }
        }
        function exportAsync(format, deviceInfo) {
          throwIfNoReport();
          return initializeClientAsync().then(registerInstanceAsync).then(function() {
            return registerDocumentAsync(format, deviceInfo, true, reportDocumentId);
          }).then(function(documentId) {
            return waitReportDocumentReady(clientId, reportInstanceId, documentId, options);
          });
        }
        function waitReportDocumentReady(clientId2, reportInstanceId2, documentId, options2) {
          return new Promise(function(resolve, reject) {
            var fn = function(promise) {
              promise.then(function(info) {
                if (info.documentReady) {
                  resolve({
                    clientId: clientId2,
                    instanceId: reportInstanceId2,
                    documentId
                  });
                } else {
                  fn(info.promise);
                }
              });
            };
            fn(getDocumentInfoRecursive(clientId2, reportInstanceId2, documentId, options2));
          });
        }
        function execServerAction(actionId) {
          throwIfNoReport();
          throwIfNoReportInstance();
          throwIfNoReportDocument();
          onServerActionStarted();
          controller.refreshReportCore(false, reportDocumentId, actionId);
        }
        function throwIfNotInitialized() {
          if (!clientId) {
            throw stringResources.controllerNotInitialized;
          }
        }
        function throwIfNoReportInstance() {
          if (!reportInstanceId) {
            throw stringResources.noReportInstance;
          }
        }
        function throwIfNoReportDocument() {
          if (!reportDocumentId) {
            throw stringResources.noReportDocument;
          }
        }
        function throwIfNoReport() {
          if (!report) {
            throw stringResources.noReport;
          }
        }
        function eventFactory(event2, args) {
          if (typeof args[0] === "function") {
            eventEmitter.on(event2, args[0]);
          } else {
            eventEmitter.trigger(event2, ...args);
          }
          return controller;
        }
        function loadParametersAsync(report2, paramValues) {
          return initializeClientAsync().then(function() {
            return client.getParameters(clientId, report2, paramValues || parameterValues || {}).catch(function(xhrErrorData) {
              handleRequestError(xhrErrorData, stringResources.unableToGetReportParameters);
            });
          });
        }
        function getDocumentFormatsAsync() {
          if (renderingExtensions) {
            return Promise.resolve(renderingExtensions);
          }
          if (!documentFormatsPromise) {
            documentFormatsPromise = client.getDocumentFormats().catch(handleRequestError);
          }
          return documentFormatsPromise;
        }
        function getServiceVersionAsync() {
          return client.getServiceVersion().catch(handleRequestError);
        }
        function getPageForBookmark(nodes, id) {
          if (nodes) {
            for (var i = 0, len = nodes.length; i < len; i++) {
              var node = nodes[i];
              if (node.id === id) {
                return node.page;
              }
              var page = getPageForBookmark(node.items, id);
              if (page) {
                return page;
              }
            }
          }
          return null;
        }
        function fixDataContractJsonSerializer(arr) {
          var dict = {};
          if (Array.isArray(arr)) {
            arr.forEach(function(pair) {
              dict[pair.Key] = pair.Value;
            });
          }
          return dict;
        }
        function changeReportSource(rs) {
          setStateReportSource(rs);
          controller.reportSourceChanged();
        }
        function setStateReportSource(rs) {
          if (typeof settings.setReportSource === "function") {
            settings.setReportSource(rs);
          }
        }
        function changePageNumber(pageNr) {
          settings.setPageNumber(pageNr);
          controller.currentPageChanged();
        }
        var actionHandlers = {
          "sorting": function(action) {
            execServerAction(action.Id);
          },
          "toggleVisibility": function(action) {
            execServerAction(action.Id);
          },
          "navigateToReport": function(action) {
            var args = action.Value;
            onServerActionStarted();
            controller.setReportSource({
              report: args.Report,
              parameters: fixDataContractJsonSerializer(args.ParameterValues)
            });
            controller.refreshReport(false, true);
          },
          "navigateToUrl": function(action) {
            var args = action.Value;
            window.open(args.Url, args.Target);
          },
          "navigateToBookmark": function(action) {
            var id = action.Value;
            var page = getPageForBookmark(bookmarkNodes, id);
            controller.navigateToPage(page, {
              type: "bookmark",
              id
            });
          },
          "customAction": function(action) {
          }
        };
        function onInteractiveActionExecuting(interactiveActionArgs) {
          controller.interactiveActionExecuting(interactiveActionArgs);
        }
        function executeReportAction(interactiveActionArgs) {
          var action = interactiveActionArgs.action;
          var handler = actionHandlers[action.Type];
          if (typeof handler === "function") {
            window.setTimeout(function() {
              onInteractiveActionExecuting(interactiveActionArgs);
              if (!interactiveActionArgs.cancel) {
                handler(action);
              }
            }, 0);
          }
        }
        function onServerActionStarted() {
          controller.serverActionStarted();
        }
        function onReportActionEnter(args) {
          controller.interactiveActionEnter({
            action: args.action,
            element: args.element
          });
        }
        function onReportActionLeave(args) {
          controller.interactiveActionLeave({
            action: args.action,
            element: args.element
          });
        }
        function onClientExpired() {
          clientHasExpired = true;
          controller.clientExpired();
        }
        function onReportToolTipOpening(args) {
          controller.toolTipOpening(args);
        }
        function getSearchResultsAsync(args) {
          if (!args.searchToken || args.searchToken === "") {
            return Promise.resolve(null);
          }
          return client.getSearchResults(clientId, reportInstanceId, reportDocumentId, args.searchToken, args.matchCase, args.matchWholeWord, args.useRegex).catch(handleSearchResultsError);
        }
        function handleSearchResultsError(xhrData) {
          if (!isSystemArgumentException(xhrData.xhr)) {
            handleRequestError(xhrData, null, true);
            throw null;
          }
          var exceptionDetails = parseJSON(xhrData.xhr.responseText);
          throw exceptionDetails.exceptionMessage;
        }
        function appendInvalidReportParameterNames(invalidParameters) {
          var errorElement = document.querySelector(".trv-pages-area .trv-error-message");
          var invalidParametersHolder = document.createElement("ul");
          for (var index = 0; index < invalidParameters.length; index++) {
            var invalidParameterText = document.createElement("li");
            invalidParameterText.classList.add(invalidParameters[index].name);
            invalidParameterText.innerText = stringFormat("{0} ({1})", [invalidParameters[index].text, invalidParameters[index].name]);
            invalidParametersHolder.appendChild(invalidParameterText);
          }
          errorElement.appendChild(invalidParametersHolder);
        }
        controller.Events = {
          ERROR: "error",
          EXPORT_STARTED: "exportStarted",
          EXPORT_DOCUMENT_READY: "exportDocumentReady",
          PRINT_STARTED: "printStarted",
          PRINT_DOCUMENT_READY: "printDocumentReady",
          BEFORE_LOAD_PARAMETERS: "beforeLoadParameters",
          LOADED_REPORT_CHANGE: "loadedReportChange",
          BEFORE_LOAD_REPORT: "beforeLoadReport",
          BEGIN_LOAD_REPORT: "beginLoadReport",
          REPORT_LOAD_COMPLETE: "reportLoadComplete",
          REPORT_LOAD_PROGRESS: "reportLoadProgress",
          REPORT_LOAD_FAIL: "reportLoadFail",
          BEGIN_LOAD_PAGE: "beginLoadPage",
          PAGE_READY: "pageReady",
          VIEW_MODE_CHANGED: "viewModeChanged",
          PAGE_MODE_CHANGED: "pageModeChanged",
          PRINT_MODE_CHANGED: "printModeChanged",
          REPORT_SOURCE_CHANGED: "reportSourceChanged",
          NAVIGATE_TO_PAGE: "navigateToPage",
          CURRENT_PAGE_CHANGED: "currentPageChanged",
          GET_DOCUMENT_MAP_STATE: "trv.GET_DOCUMENT_MAP_STATE",
          SET_DOCUMENT_MAP_VISIBLE: "trv.SET_DOCUMENT_MAP_VISIBLE",
          GET_PARAMETER_AREA_STATE: "trv.GET_PARAMETER_AREA_STATE",
          SET_PARAMETER_AREA_VISIBLE: "trv.SET_PARAMETER_AREA_VISIBLE",
          SCALE_CHANGED: "scaleChanged",
          SCALE_MODE_CHANGED: "scaleModeChanged",
          SERVER_ACTION_STARTED: "serverActionStarted",
          SET_TOGGLE_SIDE_MENU: "trv.SET_TOGGLE_SIDE_MENU",
          GET_TOGGLE_SIDE_MENU: "trv.GET_TOGGLE_SIDE_MENU",
          UPDATE_UI: "trv.UPDATE_UI",
          CSS_LOADED: "cssLoaded",
          RELOAD_PARAMETERS: "reloadParameters",
          PARAMETERS_LOADED: "parametersLoaded",
          INTERACTIVE_ACTION_EXECUTING: "interactiveActionExecuting",
          INTERACTIVE_ACTION_ENTER: "interactiveActionEnter",
          INTERACTIVE_ACTION_LEAVE: "interactiveActionLeave",
          UPDATE_UI_INTERNAL: "trv.UPDATE_UI_INTERNAL",
          CLIENT_EXPIRED: "clientExpired",
          TOOLTIP_OPENING: "tooltipOpening",
          TOOLTIP_CLOSING: "tooltipClosing",
          PAGE_NUMBER: "trv.PAGE_NUMBER",
          PAGE_COUNT: "trv.PAGE_COUNT",
          GET_SEARCH_DIALOG_STATE: "trv.GET_SEARCH_DIALOG_STATE",
          GET_SEND_EMAIL_DIALOG_STATE: "trv.GET_SEND_EMAIL_DIALOG_STATE",
          SET_SEARCH_DIALOG_VISIBLE: "trv.SET_SEARCH_DIALOG_VISIBLE",
          SET_SEND_EMAIL_DIALOG_VISIBLE: "trv.SET_SEND_EMAIL_DIALOG_VISIBLE",
          SEND_EMAIL_STARTED: "sendEmailStarted",
          SEND_EMAIL_READY: "sendEmailDocumentReady",
          SHOW_NOTIFICATION: "trv.SHOW_NOTIFICATION",
          HIDE_NOTIFICATION: "trv.HIDE_NOTIFICATION",
          UI_STATE: "trv.UI_STATE",
          SCROLL_PAGE_READY: "scrollPageReady",
          UPDATE_SCROLL_PAGE_DIMENSIONS_READY: "trv.UPDATE_SCROLL_PAGE_DIMENSIONS_READY",
          MISSING_OR_INVALID_PARAMETERS: "missingOrInvalidParameters",
          RENDERING_STOPPED: "renderingStopped"
        };
        $.extend(
          controller,
          {
            getPageData: function(pageNumber) {
              if (loader) {
                return loader.getPageData(pageNumber);
              }
              return;
            },
            getReportSource: function() {
              if (report === null) {
                return null;
              }
              return {
                report,
                parameters: $.extend({}, parameterValues)
              };
            },
            setReportSource: function(rs) {
              if (rs === null) {
                report = parameterValues = null;
                clearReportState();
                changeReportSource(rs);
                return this;
              }
              report = rs.report;
              controller.setParameters(rs.parameters);
              changeReportSource(rs);
              return this;
            },
            updateSettings: function(settings2) {
              options.settings = $.extend({}, settings2, options.settings);
            },
            clearReportSource: function() {
              report = parameterValues = null;
              clearReportState();
              changeReportSource(void 0);
              return this;
            },
            getReportDocumentId: function() {
              return reportDocumentId;
            },
            setReportDocumentId: function(documentId) {
              reportDocumentId = documentId;
            },
            setParameters: function(paramValues) {
              parameterValues = paramValues;
              controller.parametersLoaded();
            },
            setProcessedParameter: function(processedParamValues) {
              processedParameterValues = processedParamValues;
            },
            getPageCount: function() {
              return pageCount;
            },
            getCurrentPageNumber: function() {
              return currentPageNumber;
            },
            setCurrentPageNumber: function(pageNo) {
              var num = tryParseInt(pageNo);
              if (num !== currentPageNumber) {
                currentPageNumber = num;
                changePageNumber(num);
              }
              return this;
            },
            getScale: function() {
              return settings.getScale();
            },
            setScale: function(scale2) {
              if (settings.getScale() !== scale2) {
                settings.setScale(scale2);
                controller.scaleChanged(scale2);
                controller.setScaleMode(ScaleModes.SPECIFIC);
              }
              return controller;
            },
            getScaleMode: function() {
              return settings.getScaleMode();
            },
            setScaleMode: function(scaleMode) {
              if (settings.getScaleMode() !== scaleMode) {
                settings.setScaleMode(scaleMode);
                controller.scaleModeChanged(scaleMode);
              }
              return controller;
            },
            getViewMode: function() {
              return viewMode;
            },
            setViewMode: function(vm) {
              if (viewMode !== vm) {
                viewMode = vm;
                controller.viewModeChanged(vm);
                if (report) {
                  controller.refreshReportCore(false, reportDocumentId);
                }
              }
              return controller;
            },
            getPageMode: function() {
              return pageMode;
            },
            setPageMode: function(psm) {
              if (pageMode !== psm) {
                pageMode = psm;
                controller.pageModeChanged(psm);
                if (report) {
                  controller.refreshReportCore(false, reportDocumentId);
                }
              }
              return controller;
            },
            getPrintMode: function() {
              return printMode;
            },
            setPrintMode: function(pm) {
              if (printMode !== pm) {
                printMode = pm;
                controller.printModeChanged(pm);
              }
              return controller;
            },
            previewReport: function(ignoreCache, baseDocumentId, actionId) {
              controller.loadedReportChange();
              controller.respectReportAutoRun = false;
              controller.refreshReportCore(ignoreCache, baseDocumentId, actionId);
            },
            refreshReportCore: function(ignoreCache, baseDocumentId, actionId) {
              loadReportAsync(ignoreCache, baseDocumentId, actionId);
            },
            stopRendering: function() {
              throwIfNoReport();
              throwIfNoReportInstance();
              throwIfNoReportDocument();
              client.deleteReportDocument(clientId, reportInstanceId, reportDocumentId).catch(handleRequestError).then(function() {
                if (loader) {
                  loader.cancel();
                }
                resetPageNumbers();
                controller.renderingStopped();
              });
            },
            getReportParameters: function() {
              if (!parameterValues) {
                return [];
              }
              var paramsToBeExposed = {};
              for (var key in processedParameterValues) {
                var processedParam = processedParameterValues[key];
                var paramValue = parameterValues[key];
                if (processedParam && processedParam.availableValues) {
                  if (processedParam.multivalue) {
                    paramsToBeExposed[key] = addMultiComboParam(processedParam, paramValue, key);
                  } else {
                    paramsToBeExposed[key] = addSingleComboParam(processedParam, paramValue, key);
                  }
                } else {
                  paramsToBeExposed[key] = paramValue;
                }
              }
              return paramsToBeExposed;
            },
            refreshReport: function(ignoreCache, respectAutoRun, baseDocumentId, actionId) {
              controller.loadedReportChange();
              if (clientHasExpired) {
                clientHasExpired = false;
                clearClientId();
              }
              if (!report) {
                controller.raiseError(stringResources.noReport);
                return;
              }
              var loadParametersPromise = controller.loadParameters(null);
              loadParametersPromise.then(function(parameters) {
                var parameterValues2 = {};
                var invalidParameters = [];
                var hasError = false;
                Array.from(parameters || []).forEach((parameter) => {
                  try {
                    var value = parameterValidators.validate(parameter, parameter.value);
                    parameterValues2[parameter.id] = value;
                  } catch (e) {
                    hasError = true;
                    invalidParameters.push(parameter);
                    return;
                  }
                });
                if (hasError) {
                  controller.raiseError(stringResources.missingOrInvalidParameter);
                  appendInvalidReportParameterNames(invalidParameters);
                  controller.missingOrInvalidParameters();
                } else {
                  controller.respectReportAutoRun = respectAutoRun;
                  controller.setParameters(parameterValues2);
                  if (controller.isReportAutoRun()) {
                    controller.refreshReportCore(ignoreCache, baseDocumentId, actionId);
                  } else {
                    controller.showNotification({ stringResources: "autoRunDisabled" });
                  }
                }
              });
              controller.reloadParameters(loadParametersPromise);
            },
            isReportAutoRun: function() {
              var _a2;
              var reportAutoRunParameter = true;
              if (parameterValues) {
                reportAutoRunParameter = (_a2 = parameterValues.trv_AutoRun) != null ? _a2 : true;
              }
              return !controller.respectReportAutoRun || reportAutoRunParameter;
            },
            exportReport: function(format, deviceInfo) {
              exportReport(format, deviceInfo);
            },
            sendReport: function(args) {
              sendReport(args);
            },
            printReport: function() {
              printReport();
            },
            getReportPage: function(pageNumber) {
              getReportPage(pageNumber);
            },
            executeReportAction: function(interactiveActionArgs) {
              executeReportAction(interactiveActionArgs);
            },
            reportActionEnter: function(args) {
              onReportActionEnter(args);
            },
            reportActionLeave: function(args) {
              onReportActionLeave(args);
            },
            reportToolTipOpening: function(args) {
              onReportToolTipOpening(args);
            },
            loadParameters: function(paramValues) {
              if (report === null) {
                return {};
              }
              controller.beforeLoadParameters(paramValues === null);
              return loadParametersAsync(report, paramValues);
            },
            getDocumentFormats: function() {
              return getDocumentFormatsAsync();
            },
            getServiceVersion: function() {
              return getServiceVersionAsync();
            },
            setAuthenticationToken: function(token) {
              client.setAccessToken(token);
            },
            clientId: function() {
              return clientId;
            },
            onReportLoadComplete: function(info) {
              pageCount = info.pageCount;
              bookmarkNodes = info.bookmarkNodes;
              renderingExtensions = info.renderingExtensions;
              setStateReportSource(controller.getReportSource());
              controller.reportLoadComplete(info);
            },
            raiseError: function(...args) {
              var errorMessage = formatError(args);
              controller.error(errorMessage);
            },
            getSearchResults: function(args, results) {
              return getSearchResultsAsync(args);
            },
            // --- E V E N T S ---
            on: function(eventName, handler) {
              eventEmitter.on(eventName, handler);
              return controller;
            },
            trigger: function(eventName, ...args) {
              eventEmitter.trigger(eventName, ...args);
              return controller;
            },
            showNotification: function(...args) {
              return eventFactory(controller.Events.SHOW_NOTIFICATION, args);
            },
            hideNotification: function(...args) {
              return eventFactory(controller.Events.HIDE_NOTIFICATION, args);
            },
            setUIState: function(...args) {
              return eventFactory(controller.Events.UI_STATE, args);
            },
            error: function(...args) {
              return eventFactory(controller.Events.ERROR, args);
            },
            reloadParameters: function(...args) {
              return eventFactory(controller.Events.RELOAD_PARAMETERS, args);
            },
            parametersLoaded: function(...args) {
              return eventFactory(controller.Events.PARAMETERS_LOADED, args);
            },
            exportStarted: function(...args) {
              return eventFactory(controller.Events.EXPORT_STARTED, args);
            },
            exportReady: function(...args) {
              return eventFactory(controller.Events.EXPORT_DOCUMENT_READY, args);
            },
            sendEmailStarted: function(...args) {
              return eventFactory(controller.Events.SEND_EMAIL_STARTED, args);
            },
            sendEmailReady: function(...args) {
              return eventFactory(controller.Events.SEND_EMAIL_READY, args);
            },
            printStarted: function(...args) {
              return eventFactory(controller.Events.PRINT_STARTED, args);
            },
            printReady: function(...args) {
              return eventFactory(controller.Events.PRINT_DOCUMENT_READY, args);
            },
            beforeLoadParameters: function(...args) {
              return eventFactory(controller.Events.BEFORE_LOAD_PARAMETERS, args);
            },
            loadedReportChange: function(...args) {
              return eventFactory(controller.Events.LOADED_REPORT_CHANGE, args);
            },
            beforeLoadReport: function(...args) {
              return eventFactory(controller.Events.BEFORE_LOAD_REPORT, args);
            },
            beginLoadReport: function(...args) {
              return eventFactory(controller.Events.BEGIN_LOAD_REPORT, args);
            },
            reportLoadComplete: function(...args) {
              return eventFactory(controller.Events.REPORT_LOAD_COMPLETE, args);
            },
            reportLoadProgress: function(...args) {
              return eventFactory(controller.Events.REPORT_LOAD_PROGRESS, args);
            },
            reportLoadFail: function(...args) {
              return eventFactory(controller.Events.REPORT_LOAD_FAIL, args);
            },
            beginLoadPage: function(...args) {
              return eventFactory(controller.Events.BEGIN_LOAD_PAGE, args);
            },
            pageReady: function(...args) {
              return eventFactory(controller.Events.PAGE_READY, args);
            },
            viewModeChanged: function(...args) {
              return eventFactory(controller.Events.VIEW_MODE_CHANGED, args);
            },
            pageModeChanged: function(...args) {
              return eventFactory(controller.Events.PAGE_MODE_CHANGED, args);
            },
            printModeChanged: function(...args) {
              return eventFactory(controller.Events.PRINT_MODE_CHANGED, args);
            },
            reportSourceChanged: function(...args) {
              return eventFactory(controller.Events.REPORT_SOURCE_CHANGED, args);
            },
            navigateToPage: function(...args) {
              return eventFactory(controller.Events.NAVIGATE_TO_PAGE, args);
            },
            currentPageChanged: function(...args) {
              return eventFactory(controller.Events.CURRENT_PAGE_CHANGED, args);
            },
            getDocumentMapState: function(...args) {
              return eventFactory(controller.Events.GET_DOCUMENT_MAP_STATE, args);
            },
            setDocumentMapVisible: function(...args) {
              return eventFactory(controller.Events.SET_DOCUMENT_MAP_VISIBLE, args);
            },
            getParametersAreaState: function(...args) {
              return eventFactory(controller.Events.GET_PARAMETER_AREA_STATE, args);
            },
            setParametersAreaVisible: function(...args) {
              return eventFactory(controller.Events.SET_PARAMETER_AREA_VISIBLE, args);
            },
            setSideMenuVisible: function(...args) {
              return eventFactory(controller.Events.SET_TOGGLE_SIDE_MENU, args);
            },
            getSideMenuVisible: function(...args) {
              return eventFactory(controller.Events.GET_TOGGLE_SIDE_MENU, args);
            },
            scaleChanged: function(...args) {
              return eventFactory(controller.Events.SCALE_CHANGED, args);
            },
            scaleModeChanged: function(...args) {
              return eventFactory(controller.Events.SCALE_MODE_CHANGED, args);
            },
            serverActionStarted: function(...args) {
              return eventFactory(controller.Events.SERVER_ACTION_STARTED, args);
            },
            cssLoaded: function(...args) {
              return eventFactory(controller.Events.CSS_LOADED, args);
            },
            interactiveActionExecuting: function(...args) {
              return eventFactory(controller.Events.INTERACTIVE_ACTION_EXECUTING, args);
            },
            interactiveActionEnter: function(...args) {
              return eventFactory(controller.Events.INTERACTIVE_ACTION_ENTER, args);
            },
            interactiveActionLeave: function(...args) {
              return eventFactory(controller.Events.INTERACTIVE_ACTION_LEAVE, args);
            },
            updateUI: function(...args) {
              return eventFactory(controller.Events.UPDATE_UI, args);
            },
            updateUIInternal: function(...args) {
              return eventFactory(controller.Events.UPDATE_UI_INTERNAL, args);
            },
            toolTipOpening: function(...args) {
              return eventFactory(controller.Events.TOOLTIP_OPENING, args);
            },
            pageNumberChange: function(...args) {
              return eventFactory(controller.Events.PAGE_NUMBER, args);
            },
            pageCountChange: function(...args) {
              return eventFactory(controller.Events.PAGE_COUNT, args);
            },
            getSearchDialogState: function(...args) {
              return eventFactory(controller.Events.GET_SEARCH_DIALOG_STATE, args);
            },
            getSendEmailDialogState: function(...args) {
              return eventFactory(controller.Events.GET_SEND_EMAIL_DIALOG_STATE, args);
            },
            setSearchDialogVisible: function(...args) {
              return eventFactory(controller.Events.SET_SEARCH_DIALOG_VISIBLE, args);
            },
            setSendEmailDialogVisible: function(...args) {
              return eventFactory(controller.Events.SET_SEND_EMAIL_DIALOG_VISIBLE, args);
            },
            scrollPageReady: function(...args) {
              return eventFactory(controller.Events.SCROLL_PAGE_READY, args);
            },
            updatePageDimensionsReady: function(...args) {
              return eventFactory(controller.Events.UPDATE_SCROLL_PAGE_DIMENSIONS_READY, args);
            },
            missingOrInvalidParameters: function(...args) {
              return eventFactory(controller.Events.MISSING_OR_INVALID_PARAMETERS, args);
            },
            renderingStopped: function(...args) {
              return eventFactory(controller.Events.RENDERING_STOPPED, args);
            },
            clientExpired: function(...args) {
              return eventFactory(controller.Events.CLIENT_EXPIRED, args);
            },
            dispose: function() {
              stopSentinel();
              this.serviceClientSentinel = null;
            }
          }
        );
        return controller;
      }
      function addSingleComboParam(processedParam, paramValue, key) {
        try {
          var nameValuePair = processedParam.availableValues.find((obj) => {
            return obj["value"] === paramValue;
          });
          if (!nameValuePair) {
            throw new Error(`The available values of parameter ${key} do not contain Value property that equals ${paramValue}`);
          }
          return { valueMember: paramValue, displayMember: nameValuePair["name"] };
        } catch (e) {
          logError(e);
        }
      }
      function addMultiComboParam(processedParam, paramValue, key) {
        var paramArr = [];
        for (var i in paramValue) {
          paramArr.push(addSingleComboParam(processedParam, paramValue[i], key));
        }
        return paramArr;
      }
      const Events$1 = {
        EXPORT_BEGIN: "EXPORT_BEGIN",
        EXPORT_END: "EXPORT_END",
        PRINT_BEGIN: "PRINT_BEGIN",
        PRINT_END: "PRINT_END",
        RENDERING_BEGIN: "RENDERING_BEGIN",
        RENDERING_END: "RENDERING_END",
        PAGE_READY: "PAGE_READY",
        ERROR: "ERROR",
        UPDATE_UI: "UPDATE_UI",
        INTERACTIVE_ACTION_EXECUTING: "INTERACTIVE_ACTION_EXECUTING",
        INTERACTIVE_ACTION_ENTER: "INTERACTIVE_ACTION_ENTER",
        INTERACTIVE_ACTION_LEAVE: "INTERACTIVE_ACTION_LEAVE",
        VIEWER_TOOLTIP_OPENING: "VIEWER_TOOLTIP_OPENING",
        SEND_EMAIL_BEGIN: "SEND_EMAIL_BEGIN",
        SEND_EMAIL_END: "SEND_EMAIL_END",
        PARAMETERS_LOADED: "PARAMETERS_LOADED"
      };
      function HistoryManager(options) {
        var controller = options.controller;
        if (!controller) {
          throw "No controller (telerikReporting.reportViewerController) has been specified.";
        }
        var settings = options.settings;
        var history = settings.getHistory() || { records: [], position: -1 };
        controller.loadedReportChange(function() {
          addToHistory(true);
        }).currentPageChanged(function() {
          updatePageInfo();
        }).reportLoadComplete(function(event2, args) {
          addToHistory(false);
        }).clientExpired(function() {
          var records = history.records;
          for (var i = 0; i < records.length; i++) {
            records[i].reportDocumentId = null;
          }
        });
        function getCurrentRecord() {
          var records = history.records;
          if (records.length > 0) {
            return records[history.position];
          }
          return null;
        }
        function pushRecord(rec) {
          var records = history.records;
          var position = history.position;
          records = Array.prototype.slice.call(records, 0, position + 1);
          records.push(rec);
          history.records = records;
          history.position = records.length - 1;
          saveSettings();
        }
        function saveSettings() {
          settings.setHistory(history);
        }
        function updatePageInfo() {
          var currentRecord = getCurrentRecord();
          if (currentRecord) {
            currentRecord.pageNumber = controller.getCurrentPageNumber();
            currentRecord.viewMode = controller.getViewMode();
            currentRecord.reportDocumentId = controller.getReportDocumentId();
            saveSettings();
          }
        }
        function addToHistory(temp) {
          removeTempRecordsFromHistory();
          var currentRecord = getCurrentRecord();
          var rs = controller.getReportSource();
          if (!currentRecord || !reportSourcesAreEqual(currentRecord.reportSource, rs)) {
            pushRecord({
              reportSource: rs,
              pageNumber: 1,
              temp
            });
          }
        }
        function exec(currentRecord, reportChanged) {
          controller.setReportDocumentId(currentRecord.reportDocumentId);
          controller.setViewMode(currentRecord.viewMode);
          controller.setReportSource(currentRecord.reportSource);
          controller.refreshReport(false, reportChanged, currentRecord.reportDocumentId);
          controller.navigateToPage(currentRecord.pageNumber);
        }
        function canMove(step) {
          var position = history.position;
          var length = history.records.length;
          var newPos = position + step;
          return 0 <= newPos && newPos < length;
        }
        function move(step) {
          var position = history.position;
          var length = history.records.length;
          var newPos = position + step;
          if (newPos < 0) {
            newPos = 0;
          } else if (newPos >= length) {
            newPos = length - 1;
          }
          if (newPos != position) {
            var currentRecord = getCurrentRecord();
            var currentReport = currentRecord.reportSource ? currentRecord.reportSource.report : "";
            history.position = newPos;
            saveSettings();
            var newRecord = getCurrentRecord();
            var newReport = newRecord.reportSource ? newRecord.reportSource.report : "";
            exec(newRecord, currentReport !== newReport);
          }
        }
        function removeTempRecordsFromHistory() {
          var lastIndex = history.records.length - 1;
          while (lastIndex >= 0) {
            if (history.records[lastIndex].temp === true) {
              history.records.splice(lastIndex, 1);
              if (history.position >= lastIndex) {
                history.position--;
              }
            } else {
              break;
            }
            lastIndex--;
          }
        }
        return {
          back: function() {
            move(-1);
          },
          forward: function() {
            move(1);
          },
          canMoveBack: function() {
            return canMove(-1);
          },
          canMoveForward: function() {
            return canMove(1);
          },
          loadCurrent: function() {
            var rec = getCurrentRecord();
            if (rec) {
              exec(rec, false);
            }
            return Boolean(rec);
          }
        };
      }
      function TouchBehavior(dom, options) {
        var startDistance;
        var ignoreTouch;
        init(dom);
        function init(element) {
          if (typeof $.fn.kendoTouch === "function") {
            try {
              $(element).mousedown(function() {
                ignoreTouch = true;
              }).mouseup(function() {
                ignoreTouch = false;
              }).kendoTouch({
                multiTouch: true,
                enableSwipe: true,
                swipe: function(e) {
                  if (!ignoreTouch) {
                    onSwipe(e);
                  }
                },
                gesturestart: function(e) {
                  if (!ignoreTouch) {
                    onGestureStart(e);
                  }
                },
                gestureend: function(e) {
                  if (!ignoreTouch) {
                    onGestureEnd(e);
                  }
                },
                gesturechange: function(e) {
                  if (!ignoreTouch) {
                    onGestureChange(e);
                  }
                },
                doubletap: function(e) {
                  if (!ignoreTouch) {
                    onDoubleTap(e);
                  }
                },
                touchstart: function(e) {
                  if (!ignoreTouch) {
                    fire("touchstart");
                  }
                }
              });
            } catch (e) {
              console.error("Instantiation of Kendo Touch threw an exception", e);
              throw e;
            }
          }
        }
        function onDoubleTap(e) {
          fire("doubletap", e);
        }
        function onGestureStart(e) {
          startDistance = kendo.touchDelta(e.touches[0], e.touches[1]).distance;
        }
        function onGestureEnd(e) {
        }
        function onGestureChange(e) {
          var current = kendo.touchDelta(e.touches[0], e.touches[1]).distance;
          onPinch({
            distance: current,
            lastDistance: startDistance
          });
          startDistance = current;
        }
        function onSwipe(e) {
          fire("swipe", e);
        }
        function onPinch(e) {
          fire("pinch", e);
        }
        function fire(func, args) {
          var handler = options[func];
          if (typeof handler === "function") {
            handler(args);
          }
        }
      }
      var Scroll = {
        controller: {},
        $placeholder: null,
        $pageContainer: null,
        pageContainer: null,
        $pageWrapper: null,
        pageWrapper: null,
        viewMode: null,
        loadedPage: {},
        scrollInProgress: false,
        enabled: false,
        pageCount: 0,
        additionalTopOffset: 130,
        pageDistance: 20,
        oldScrollTopPosition: 0,
        skeletonTemplate: '<div class="trv-report-page trv-skeleton-page trv-skeleton-{0}" style="{1}" data-page="{0}"><div class="trv-skeleton-wrapper" style="{2}"></div></div>',
        /**
         * Initialize the scroll object
         * Takes two parameters
         *  - placeholder - PageArea dom element
         *  - options - PageArea options
         */
        init: function init(placeholder, options) {
          var that = this;
          that.$placeholder = $("[data-selector='" + options.viewerSelector + "']").find(placeholder);
          that.$pageContainer = this.$placeholder.find(".trv-page-container");
          that.pageContainer = this.$pageContainer[0];
          that.$pageWrapper = this.$placeholder.find(".trv-page-wrapper");
          that.pageWrapper = this.$pageWrapper[0];
          that.controller = options.controller;
          that.viewMode = null;
          that.loadedPage = {};
          that.scrollInProgress = false;
          that.enabled = false;
          that.pageCount = 0;
          that.controller.scaleChanged(function(e, args) {
            if (that.enabled) {
              setTimeout(function() {
                that._loadMorePages();
                that._keepCurrentPageInToView();
              }, 100);
            }
          }).loadedReportChange(function(event2) {
            if (that.enabled) {
              that.disable();
              if (event2.type !== "loadedReportChange") {
                setTimeout(function() {
                  that.controller.getPageData(1).then(function(newPage) {
                    that.renderPage(newPage);
                  });
                });
              }
            }
          }).viewModeChanged(function(args) {
            if (that.enabled) {
              that.disable();
            }
          }).interactiveActionExecuting(function(e, args) {
            var actionType = args.action.Type;
            if (that.enabled && (actionType === "sorting" || actionType === "toggleVisibility")) {
              that.disable();
            }
          }).updatePageDimensionsReady(function(event2, args) {
            if (that.enabled && that._currentPageNumber() > 0) {
              that._keepCurrentPageInToView();
            }
          }).pageCountChange(function(event2, args) {
            if (that.enabled && that.pageCount !== args) {
              if (that._currentPageNumber() > 0 && !that.scrollInProgress) {
                that._loadMorePages();
              }
              if (args > 1) {
                that._initEvents();
              }
              that.pageCount = args;
            }
          });
        },
        /**
         * Returns true, when Telerik Report Viewer pageMode is set to CONTINUOUS_SCROLL or it is unset
         */
        isEnabled: function isEnabled() {
          return this.enabled;
        },
        disable: function disable() {
          this.$pageWrapper.empty();
          this.enabled = false;
          this.loadedPage = {};
          this.pageCount = 0;
          this.$placeholder.removeClass("scrollable");
          this._unbind();
        },
        enable: function() {
          this.enabled = true;
          this.$placeholder.addClass("scrollable");
          this._initEvents();
        },
        /**
         * Handle the page rendering called from the PageArea
         * Takes one parameter
         * page - the page object
         */
        renderPage: function renderPage(page) {
          var that = this;
          var pageViewMode = that.controller.getViewMode();
          var renderedPage = that.$placeholder.find('[data-page="' + page.pageNumber + '"]');
          if (!that.enabled) {
            that.enabled = true;
            that.$placeholder.addClass("scrollable");
            if (pageViewMode !== that.viewMode || !renderedPage.length) {
              that._updatePageArea(page);
            } else {
              that._render(page, true);
              this.$pageContainer.scrollTop(3);
              that._setCurrentPage(page.pageNumber);
            }
            that.viewMode = that.controller.getViewMode();
            that._loadMorePages();
          } else {
            if (pageViewMode !== that.viewMode || !renderedPage.length) {
              that._updatePageArea(page);
            } else {
              that._navigateToPage(page, renderedPage);
            }
            that.viewMode = that.controller.getViewMode();
          }
        },
        /**
         * Trigger scrolling animation to the specific element.
         */
        navigateToElement: function navigateToElement(offsetTop, pageNumber) {
          var that = this;
          that.scrollInProgress = true;
          if (that._isSkeletonScreen(null, pageNumber)) {
            that.controller.getPageData(pageNumber).then(function(newPage) {
              that._render(newPage, false);
              that.$pageContainer.animate({ scrollTop: offsetTop }, 500, function() {
                that._setCurrentPage(pageNumber);
                setTimeout(function() {
                  that.scrollInProgress = false;
                }, 100);
              });
            });
          } else {
            that.$pageContainer.animate({ scrollTop: offsetTop }, 500, function() {
              that._setCurrentPage(pageNumber);
              setTimeout(function() {
                that.scrollInProgress = false;
              }, 100);
            });
          }
        },
        _setCurrentPage: function _setCurrentPage(pageNumber) {
          var that = this;
          if (pageNumber !== that._currentPageNumber()) {
            that.controller.setCurrentPageNumber(pageNumber);
          }
          if (that.controller.getPageCount() > 1) {
            that.$placeholder.find(".k-state-default").removeClass("k-state-default");
            that.$placeholder.find('[data-page="' + pageNumber + '"]').addClass("k-state-default");
          }
          that._loadNextPreviousPage(pageNumber);
        },
        _updatePageArea: function _updatePageArea(page) {
          var that = this;
          var scrollTo = 0;
          var pageNumber = page.pageNumber;
          that.scrollInProgress = true;
          if (pageNumber > 1) {
            that._generateSkeletonScreens(pageNumber);
          }
          that._render(page, false);
          that._setCurrentPage(page.pageNumber);
          setTimeout(function() {
            scrollTo = pageNumber > 1 ? that.$placeholder.find('[data-page="' + pageNumber + '"]').position().top : 0;
            that.$pageContainer.animate({ scrollTop: scrollTo }, 0, function() {
              that.scrollInProgress = false;
            });
          }, 100);
        },
        _navigateToPage: function _navigateToPage(page, renderedPage) {
          var that = this;
          that.scrollInProgress = true;
          var scrollTo = renderedPage.position().top;
          var pages = that.$placeholder.find(".trv-report-page");
          var pageNumber = page.pageNumber;
          $(pages[0]).height();
          if (that._isSkeletonScreen(renderedPage, pageNumber)) {
            that.controller.getPageData(pageNumber).then(function(newPage) {
              that._render(newPage, false);
              that.$pageContainer.animate({ scrollTop: scrollTo }, 500, function() {
                setTimeout(function() {
                  that._setCurrentPage(newPage.pageNumber);
                  that.scrollInProgress = false;
                });
              });
            });
          } else {
            that._updatePageContent(page, renderedPage);
            that.$pageContainer.animate({ scrollTop: scrollTo }, 500, function() {
              setTimeout(function() {
                that._setCurrentPage(page.pageNumber);
                that.scrollInProgress = false;
              });
            });
          }
        },
        _updatePageContent: function _updatePageContent(page, renderedPage) {
          this._updatePageStyle(page);
          var pageNumber = page.pageNumber;
          var wrapper = $($.parseHTML(page.pageContent));
          var $pageContent = wrapper.find("div.sheet");
          var $page = this.$placeholder.find('[data-page="' + pageNumber + '"]');
          $pageContent.css("margin", 0);
          $page.append($pageContent).append($('<div class="trv-page-overlay"></div>'));
          renderedPage.replaceWith($page);
          this.controller.scrollPageReady({ page, target: $page });
        },
        _currentPageNumber: function _currentPageNumber() {
          return this.controller.getCurrentPageNumber();
        },
        _isSkeletonScreen: function _isSkeletonScreen(page, pageNumber) {
          if (!page) {
            page = this.$placeholder.find('[data-page="' + pageNumber + '"]');
          }
          return page.hasClass("trv-skeleton-" + pageNumber);
        },
        _addSkeletonScreen: function _addSkeletonScreen(pageNumber, position) {
          var that = this;
          var pageStyleNumber = position ? parseInt(pageNumber + 1) : parseInt(pageNumber - 1);
          var pageStyleBaseDom = that.$placeholder.find('[data-page="' + pageStyleNumber + '"]');
          var pageStyle = pageStyleBaseDom.attr("style");
          var contentStyle = pageStyleBaseDom.find("sheet").attr("style");
          var skeletonEl = stringFormat(that.skeletonTemplate, [pageNumber, pageStyle, contentStyle]);
          if (position) {
            that.$pageWrapper.prepend(skeletonEl);
          } else {
            that.$pageWrapper.append(skeletonEl);
          }
        },
        _generateSkeletonScreens: function _generateSkeletonScreens(upToPageNumber) {
          var that = this;
          var skeletonEl = "";
          var pageStyleBaseDom = this.$placeholder.find('[data-page="1"]');
          var pageStyle = pageStyleBaseDom.attr("style");
          var contentStyle = pageStyleBaseDom.find("sheet").attr("style");
          var lastPage = that.$placeholder.find(".trv-report-page").last().attr("data-page");
          var index = lastPage ? parseInt(lastPage) + 1 : 1;
          for (index; index < upToPageNumber; index++) {
            skeletonEl = skeletonEl + stringFormat(that.skeletonTemplate, [index, pageStyle, contentStyle]);
          }
          that.$pageWrapper.append($(skeletonEl));
        },
        _loadMorePages: function _loadMorePages() {
          var that = this;
          var pageCount = that.controller.getPageCount();
          var isViewPortBiggerThanPageHeight = that.$pageContainer.innerHeight() > that.$pageWrapper.innerHeight();
          if (pageCount > 1) {
            if (isViewPortBiggerThanPageHeight) {
              that.scrollInProgress = true;
              var lastPage = parseInt(that.$placeholder.find(".trv-report-page").last().attr("data-page"));
              var nextPage = lastPage + 1;
              if (nextPage <= pageCount) {
                that.controller.getPageData(nextPage).then(function(newPage) {
                  that._render(newPage, false);
                  that._loadMorePages();
                  that.scrollInProgress = false;
                });
              }
            } else {
              that._loadVisiblePages();
              that.scrollInProgress = false;
            }
          }
        },
        _loadVisiblePages: function _loadVisiblePages() {
          var that = this;
          var pages = that.$placeholder.find(".trv-report-page");
          Array.from(pages).forEach((value) => {
            var pageItem = $(value);
            var pageNumber = parseInt(pageItem.attr("data-page"));
            if (that._scrolledInToView(pageItem) && that._isSkeletonScreen(pageItem, pageNumber)) {
              that.controller.getPageData(pageNumber).then((newPage) => {
                that._render(newPage, false);
              });
            }
          });
        },
        _scrolledInToView: function _scrolledInToView(elem) {
          var pageCoords = elem[0].getBoundingClientRect();
          var parentCoords = elem.closest(".trv-pages-area")[0].getBoundingClientRect();
          var parentTop = parentCoords.top;
          var parentBottom = parentCoords.top + parentCoords.height;
          var pageTop = pageCoords.top;
          var pageBottom = pageTop + elem.outerHeight(true);
          var additionalTopOffset = this.additionalTopOffset + parentTop;
          var topVisible = pageTop > 0 && pageTop < parentBottom;
          var bottomVisible = pageBottom < parentBottom && pageBottom > additionalTopOffset;
          return topVisible || bottomVisible;
        },
        _render: function _render(page, empty) {
          var that = this;
          var pageNumber = page.pageNumber;
          var pageItem = that.$placeholder.find('[data-page="' + pageNumber + '"]');
          if (!empty && pageItem && pageItem.length && !that._isSkeletonScreen(pageItem, pageNumber)) {
            return;
          }
          that.loadedPage[pageNumber] = page;
          that._updatePageStyle(page);
          var wrapper = $($.parseHTML(page.pageContent));
          var $pageContent = wrapper.find("div.sheet");
          var $page = $('<div class="trv-report-page" data-page="' + pageNumber + '"></div>');
          $pageContent.css("margin", 0);
          $page.append($pageContent).append($('<div class="trv-page-overlay"></div>'));
          if (empty) {
            that.$pageWrapper.empty();
          }
          that.$pageWrapper.removeData().data("pageNumber", pageNumber);
          var $skeletonPage = that.$placeholder.find(".trv-skeleton-" + pageNumber);
          if ($skeletonPage.length) {
            $skeletonPage.replaceWith($page);
          } else {
            that.$pageWrapper.append($page);
          }
          that.controller.scrollPageReady({ page, target: $page });
        },
        _updatePageStyle: function _updatePageStyle(page) {
          var that = this;
          var lastLoadedPage = that.loadedPage[that._lastLoadedPage()] || page;
          var styleId = "trv-" + that.controller.clientId() + "-styles";
          var pageStyles;
          $("#" + styleId).remove();
          pageStyles = $("<style id=" + styleId + "></style>");
          pageStyles.append(lastLoadedPage.pageStyles);
          pageStyles.appendTo("head");
        },
        _lastLoadedPage: function _lastLoadedPage() {
          var that = this;
          var lastKey;
          for (var key in that.loadedPage) {
            if (that.loadedPage.hasOwnProperty(key)) {
              lastKey = key;
            }
          }
          return lastKey;
        },
        _loadNextPreviousPage: function _loadNextPreviousPage(pageNumber) {
          var that = this;
          var nextPage;
          var previousPage;
          var nextItem;
          var previousItem;
          if (pageNumber < that.controller.getPageCount()) {
            nextPage = pageNumber + 1;
            nextItem = that.$placeholder.find('[data-page="' + nextPage + '"]');
          }
          if (pageNumber > 1) {
            previousPage = pageNumber - 1;
            previousItem = that.$placeholder.find('[data-page="' + previousPage + '"]');
          }
          if (previousItem && previousItem.length && that._isSkeletonScreen(previousItem, previousPage)) {
            that.controller.getPageData(previousPage).then(function(newPage) {
              that._render(newPage, false);
            });
          }
          if (nextItem && nextItem.length && that._isSkeletonScreen(nextItem, nextPage)) {
            that.controller.getPageData(nextPage).then(function(newPage) {
              that._render(newPage, false);
            });
          }
        },
        _clickPage: function _clickPage(pageDom) {
          var that = this;
          var currentPage = that._currentPageNumber();
          var pageNumber = parseInt(pageDom.attr("data-page"));
          if (currentPage !== pageNumber) {
            if (that._isSkeletonScreen(pageDom, pageNumber)) {
              that.controller.getPageData(pageNumber).then(function(newPage) {
                that._render(newPage, false, true);
                that._setCurrentPage(newPage.pageNumber);
              });
            } else {
              that._setCurrentPage(pageNumber);
            }
          }
        },
        _initEvents: function _initEvents() {
          var that = this;
          that.$pageContainer.off("click", ".trv-report-page").on("click", ".trv-report-page", function(e) {
            that._clickPage($(e.currentTarget));
          });
          that.$pageContainer.scroll(function() {
            var pages = that.$placeholder.find(".trv-report-page");
            var scrollPosition = parseInt((that.$pageContainer.scrollTop() + that.$pageContainer.innerHeight()).toFixed(0));
            if (!that.scrollInProgress && that.oldScrollTopPosition !== scrollPosition) {
              if (that.oldScrollTopPosition > scrollPosition) {
                that._scrollUp(pages);
              } else {
                that._scrollDown(pages, scrollPosition);
              }
            }
            that.oldScrollTopPosition = scrollPosition;
          });
          that.$pageContainer.scroll(function() {
            var pages = that.$placeholder.find(".trv-report-page");
            var scrollPosition = parseInt((that.$pageContainer.scrollTop() + that.$pageContainer.innerHeight()).toFixed(0));
            if (!that.scrollInProgress && pages.length && that.oldScrollTopPosition !== scrollPosition) {
              that._advanceCurrentPage(pages);
            }
          });
        },
        _unbind: function() {
          var that = this;
          that.$pageContainer.off("click", ".trv-report-page");
          that.$pageContainer.off("scroll");
        },
        _advanceCurrentPage: function _advanceCurrentPage(pages) {
          var that = this;
          var newCurrentPage = that._findNewCurrentPage(pages);
          var pageNumber;
          var currentPageNumber = that._currentPageNumber();
          var currentPageIsInToView = that._scrolledInToView(that.$placeholder.find('[data-page="' + currentPageNumber + '"]'));
          if (newCurrentPage !== -1) {
            newCurrentPage = $(newCurrentPage);
            pageNumber = parseInt(newCurrentPage.attr("data-page"));
            if (currentPageNumber !== pageNumber && !currentPageIsInToView) {
              if (that._isSkeletonScreen(newCurrentPage, pageNumber)) {
                that.controller.getPageData(pageNumber).then(function(newPage) {
                  that._render(newPage, false, true);
                  that._setCurrentPage(newPage.pageNumber);
                });
              } else {
                that._setCurrentPage(pageNumber);
              }
            }
          } else {
            console.log("Page not found - ", newCurrentPage);
          }
        },
        // Binary search
        _findNewCurrentPage: function _findNewCurrentPage(pages) {
          var that = this;
          var middleIndex = Math.floor(pages.length / 2);
          var result = that._findPageInViewPort(middleIndex, pages);
          if (pages.length === 1) {
            return pages[0];
          }
          if (result === 0) {
            return pages[middleIndex];
          } else if (result < 0 && pages.length > 1) {
            return that._findNewCurrentPage(pages.splice(middleIndex, Number.MAX_VALUE));
          } else if (result > 0 && pages.length > 1) {
            return that._findNewCurrentPage(pages.splice(0, middleIndex));
          }
          return -1;
        },
        _findPageInViewPort: function _findPageInViewPort(index, pages) {
          var pageItem = this.$placeholder.find(pages[index]);
          var pageCoords = pageItem[0].getBoundingClientRect();
          var parentCoords = pageItem.closest(".trv-pages-area")[0].getBoundingClientRect();
          var parentTop = parentCoords.top;
          parentCoords.top + parentCoords.height;
          var pageTop = pageCoords.top;
          var pageBottom = pageTop + pageItem.outerHeight(true);
          var additionalTopOffset = this.additionalTopOffset + parentTop;
          var isCurentPage = pageTop <= additionalTopOffset && additionalTopOffset < pageBottom;
          if (isCurentPage) {
            return 0;
          }
          if (pageBottom < additionalTopOffset) {
            return -1;
          }
          return 1;
        },
        _scrollDown: function _scrollDown(pages, scrollPosition) {
          var that = this;
          if (scrollPosition >= that.pageContainer.scrollHeight - 5) {
            var lastPage = parseInt($(pages[pages.length - 1]).attr("data-page"));
            var nextPage = lastPage + 1;
            if (that._currentPageNumber() < nextPage && nextPage <= that.controller.getPageCount()) {
              that._addSkeletonScreen(nextPage, false);
              that.controller.getPageData(nextPage).then(function(newPage) {
                that._render(newPage, false);
              });
            }
          } else {
            that._advanceCurrentPage(pages);
            that._loadVisiblePages();
          }
        },
        _scrollUp: function _scrollUp(pages) {
          var that = this;
          if (that.$pageContainer.scrollTop() === 0) {
            var firstPage = $(pages[0]);
            var pageNumber = parseInt(firstPage.attr("data-page"));
            var previousPage = pageNumber - 1;
            if (that._currentPageNumber() > previousPage && previousPage >= 1) {
              that._addSkeletonScreen(previousPage, true);
              that.controller.getPageData(previousPage).then(function(newPage) {
                that._render(newPage, false);
                that.$pageContainer.scrollTop(3);
              });
            }
          } else {
            that._advanceCurrentPage(pages);
            that._loadVisiblePages();
          }
        },
        _keepCurrentPageInToView: function _keepCurrentPageInToView() {
          var that = this;
          var currentPage = that.$placeholder.find('[data-page="' + that._currentPageNumber() + '"]');
          var currentPagePosition = currentPage.position().top;
          var currentPageHeight = currentPage.innerHeight();
          var pageContainerHeight = that.$pageContainer.innerHeight();
          var emptyView;
          that.scrollInProgress = true;
          if (currentPageHeight < pageContainerHeight) {
            emptyView = (pageContainerHeight - currentPageHeight) / 2;
            currentPagePosition = parseInt(currentPagePosition - emptyView);
          }
          that.$pageContainer.animate({ scrollTop: currentPagePosition }, 0, function() {
            setTimeout(function() {
              that.scrollInProgress = false;
            }, 100);
          });
        }
      };
      var UIFreezeCoordinator = {
        $placeholder: null,
        $scrollableContainer: null,
        // Holds all items initial position per container
        itemsInitialState: {},
        // Holds the bounds of the frozen areas by X per container
        xFrozenAreasBounds: {},
        // Holds the bounds of the frozen areas by Y per container
        yFrozenAreasBounds: {},
        freezeMaxZIndex: {},
        zIndex: 1,
        // Holds default background-color value per container
        freezeBGColor: {},
        // Holds whether freezing has been applied per container.
        currentlyFrozenContainer: {
          vertical: {},
          horizontal: {}
        },
        isInitialize: false,
        scaleFactor: null,
        /**
         * Initialize the uiFreezeCoordinator object
         * Takes one parameter
         *  - $placeholder - PageArea jQuery DOM element
         */
        init: function($placeholder) {
          this.$placeholder = $placeholder;
          this.$scrollableContainer = $placeholder.find(".trv-page-container");
          if (this.isInitialize) {
            this.reset($placeholder);
          }
          this._attachToScrollEvent();
          this.isInitialize = true;
        },
        reset: function($placeholder) {
          this.$placeholder = $placeholder;
          this.$scrollableContainer = $placeholder.find(".trv-page-container");
          this.itemsInitialState = {};
          this.xFrozenAreasBounds = {};
          this.yFrozenAreasBounds = {};
          this.currentlyfreezedContainer = {
            vertical: {},
            horizontal: {}
          };
        },
        setScaleFactor: function(scale2) {
          this.scaleFactor = scale2;
        },
        /**
         * Initializing scroll listener
         */
        _attachToScrollEvent: function() {
          var thisInstance = this;
          this.$scrollableContainer.scroll(function updateFreezeUIOnScroll() {
            var $freezeItems = thisInstance.$scrollableContainer.find("div[data-sticky-id]");
            if ($freezeItems.length) {
              var tableIDs = $freezeItems.map(function(index2, $element) {
                return $($element).attr("data-sticky-id");
              }).get();
              var uniqueIDs = tableIDs.filter(function(item, index2) {
                return index2 === tableIDs.indexOf(item);
              });
              var scrollableContainerScrollTop = thisInstance.$scrollableContainer.scrollTop();
              var scrollableContainerScrollLeft = thisInstance.$scrollableContainer.scrollLeft();
              for (var index = 0; index < uniqueIDs.length; index++) {
                var freezeItemsContainerID = uniqueIDs[index];
                if (!thisInstance.itemsInitialState[freezeItemsContainerID]) {
                  thisInstance._saveFreezeItemsInitialState(freezeItemsContainerID);
                }
                thisInstance._updateFreezeItemsOnScroll(
                  freezeItemsContainerID,
                  scrollableContainerScrollTop,
                  scrollableContainerScrollLeft
                );
              }
            }
          });
        },
        _saveFreezeItemsInitialState: function(freezeItemsContainerID) {
          var $allFreezeItems = $("[data-sticky-direction][data-sticky-id='" + freezeItemsContainerID + "']");
          var $freezeActions = $("[data-reporting-action][data-sticky-id='" + freezeItemsContainerID + "']");
          var yAreaBounds;
          var xAreaBounds;
          this.itemsInitialState[freezeItemsContainerID] = {};
          this.freezeBGColor[freezeItemsContainerID] = $("[data-id='" + freezeItemsContainerID + "']").attr("data-sticky-bg-color");
          for (var index = 0; index < $allFreezeItems.length; index++) {
            var $item = $($allFreezeItems[index]);
            var scrollDirection = $item.attr("data-sticky-direction");
            var itemID = $item.attr("data-id");
            var itemPosition = $item.position();
            var scaledItemPosition = { top: itemPosition.top / this.scaleFactor, left: itemPosition.left / this.scaleFactor };
            var itemBounds = rectangle(scaledItemPosition.left, scaledItemPosition.top, $item.outerWidth(true) * this.scaleFactor, $item.outerHeight(true) * this.scaleFactor);
            switch (scrollDirection) {
              case "Vertical":
                yAreaBounds = yAreaBounds ? yAreaBounds.union(itemBounds) : itemBounds;
                break;
              case "Horizontal":
                xAreaBounds = xAreaBounds ? xAreaBounds.union(itemBounds) : itemBounds;
                break;
            }
            this._saveFreezeItemInitialState(freezeItemsContainerID, $item, itemID, scaledItemPosition);
          }
          this.freezeMaxZIndex[freezeItemsContainerID] = $freezeActions.length ? $freezeActions.css("zIndex") : this.zIndex;
          this.yFrozenAreasBounds[freezeItemsContainerID] = yAreaBounds;
          this.xFrozenAreasBounds[freezeItemsContainerID] = xAreaBounds;
        },
        /**
         * Save the freeze UI item initial position based on the wrapper element and current page
         *  - freezeItemsContainerID - string. A parent/wrapper element identifier
         *  - $item - JQuery DOM element of the freezed item
         *  - itemID - string. A ID of the freeze UI item
         *  - position - object. Contains the top and left values
         */
        _saveFreezeItemInitialState: function(freezeItemsContainerID, $item, itemID, position) {
          var itemBgColor = $item.css("background-color");
          var hasInitialBgColor = this._hasSetBgColor(itemBgColor);
          var itemState = {
            top: position.top,
            left: position.left,
            zIndex: $item.css("zIndex"),
            hasBgColor: hasInitialBgColor
          };
          this.itemsInitialState[freezeItemsContainerID][itemID] = itemState;
        },
        _updateFreezeItemsOnScroll: function(freezeItemsContainerID, scrollableContainerScrollTop, scrollableContainerScrollLeft) {
          var $elementWrapper = $("div[data-id='" + freezeItemsContainerID + "']");
          if (this._isInScrollVisibleArea($elementWrapper)) {
            var $pageContainer = $elementWrapper.closest(".trv-report-page");
            var pageContainerPosition = $pageContainer.position();
            var pageContainerMargin = parseFloat($pageContainer.css("margin-top"));
            var pageContainerTopOffset = parseFloat($pageContainer.css("padding-top"));
            var pageContainerLeftOffset = parseFloat($pageContainer.css("padding-left"));
            var pageContainerBorderTopWidth = parseFloat($pageContainer.css("border-top-width"));
            var pageContainerBorderLeftWidth = parseFloat($pageContainer.css("border-left-width"));
            var $rowHeaders = $("[data-sticky-direction*='Horizontal'][data-sticky-id='" + freezeItemsContainerID + "']");
            var $colHeaders = $("[data-sticky-direction*='Vertical'][data-sticky-id='" + freezeItemsContainerID + "']");
            var hasFixRow = $rowHeaders.length > 0;
            var hasFixColumn = $colHeaders.length > 0;
            var elementWrapperPosition = $elementWrapper.position();
            var elementWrapperTopPosition = elementWrapperPosition.top + pageContainerPosition.top + pageContainerMargin + pageContainerTopOffset + pageContainerBorderTopWidth;
            var elementWrapperLeftPosition = elementWrapperPosition.left + pageContainerLeftOffset + pageContainerBorderLeftWidth;
            var verticalMoveOffset = scrollableContainerScrollTop - elementWrapperTopPosition;
            var horizontalMoveOffset = scrollableContainerScrollLeft - elementWrapperLeftPosition;
            if (hasFixColumn && verticalMoveOffset > 0) {
              if (scrollableContainerScrollTop <= $elementWrapper.outerHeight() * this.scaleFactor + elementWrapperTopPosition - this.yFrozenAreasBounds[freezeItemsContainerID].height) {
                this.currentlyFrozenContainer.vertical[freezeItemsContainerID] = true;
                this._updateUIElementsPosition($colHeaders, "top", verticalMoveOffset / this.scaleFactor, freezeItemsContainerID);
              }
            } else {
              if (this.currentlyFrozenContainer.vertical[freezeItemsContainerID]) {
                delete this.currentlyFrozenContainer.vertical[freezeItemsContainerID];
                this._updateUIElementsPosition($colHeaders, "top", -1, freezeItemsContainerID);
              }
            }
            if (hasFixRow && horizontalMoveOffset > 0) {
              if (scrollableContainerScrollLeft <= $elementWrapper.outerWidth() * this.scaleFactor + elementWrapperLeftPosition - this.xFrozenAreasBounds[freezeItemsContainerID].width) {
                this.currentlyFrozenContainer.horizontal[freezeItemsContainerID] = true;
                this._updateUIElementsPosition($rowHeaders, "left", horizontalMoveOffset / this.scaleFactor, freezeItemsContainerID);
              }
            } else {
              if (this.currentlyFrozenContainer.horizontal[freezeItemsContainerID]) {
                delete this.currentlyFrozenContainer.horizontal[freezeItemsContainerID];
                this._updateUIElementsPosition($rowHeaders, "left", -1, freezeItemsContainerID);
              }
            }
          } else {
            if (this.currentlyFrozenContainer.horizontal[freezeItemsContainerID] || this.currentlyFrozenContainer.vertical[freezeItemsContainerID]) {
              this._resetToDefaultPosition(freezeItemsContainerID);
            }
          }
        },
        /**
         * Move all freeze items to their initial position
         * Takes one parameters
         *  - freezeItemsContainerID - string. A parent/wrapper element identifier
         */
        _resetToDefaultPosition: function(freezeItemsContainerID) {
          var $rowHeaders = $("[data-sticky-direction*='Horizontal'][data-sticky-id='" + freezeItemsContainerID + "']");
          var $colHeaders = $("[data-sticky-direction*='Vertical'][data-sticky-id='" + freezeItemsContainerID + "']");
          this._updateUIElementsPosition($colHeaders, "top", -1, freezeItemsContainerID);
          this._updateUIElementsPosition($rowHeaders, "left", -1, freezeItemsContainerID);
          delete this.currentlyFrozenContainer.horizontal[freezeItemsContainerID];
          delete this.currentlyFrozenContainer.vertical[freezeItemsContainerID];
        },
        /**
         * Update the freeze elements position
         * Takes four parameters
         *  - targetElements -Array. Collection of DOM element, that has a freeze attribute
         *  - position - string. Indicates which position property to be updated - top or left
         *  - offset - integer. The value of the increase that should be applied.
         *              If it is negative number, should not move the items and it should set their initial position
         *  - freezeItemsContainerID - string. A parent/wrapper element identifier
         */
        _updateUIElementsPosition: function(targetElements, position, offset, freezeItemsContainerID) {
          for (var index = 0; index < targetElements.length; index++) {
            var $item = $(targetElements[index]);
            var itemFreezeDirection = $item.attr("data-sticky-direction");
            var isFrozenBothDirection = itemFreezeDirection.indexOf(",") > 0;
            var itemID = $item.attr("data-id");
            var itemInitialState = this.itemsInitialState[freezeItemsContainerID][itemID];
            var itemNewPostion = itemInitialState[position];
            var initialZIndex = itemInitialState["zIndex"];
            var hasInitialBgColor = itemInitialState["hasBgColor"];
            var zIndexValue = 1;
            var maxZIndex = this.freezeMaxZIndex[freezeItemsContainerID] ? this.freezeMaxZIndex[freezeItemsContainerID] : zIndexValue;
            if (isFrozenBothDirection) {
              zIndexValue = initialZIndex !== "auto" ? initialZIndex : maxZIndex + 2;
            } else {
              zIndexValue = initialZIndex !== "auto" ? initialZIndex + 1 : maxZIndex;
            }
            var newStyleRules = {
              "z-index": zIndexValue
            };
            if (offset >= 0) {
              itemNewPostion = itemNewPostion + offset;
            } else {
              newStyleRules["z-index"] = initialZIndex;
            }
            if (!hasInitialBgColor) {
              this._applyBgColorOnScroll($item, isFrozenBothDirection, hasInitialBgColor, offset >= 0, freezeItemsContainerID);
            }
            newStyleRules[position] = itemNewPostion + "px";
            $item.css(newStyleRules);
          }
        },
        // eslint-disable-next-line max-params
        _applyBgColorOnScroll: function($item, isItemFrozenBothDirection, hasInitialBgColor, shouldApplyBGColor, freezeItemsContainerID) {
          if ($item.is("img")) {
            return true;
          }
          if (isItemFrozenBothDirection && this._isFrozen(freezeItemsContainerID) && !hasInitialBgColor) {
            $item.css("background-color", this.freezeBGColor[freezeItemsContainerID]);
            return true;
          }
          if (shouldApplyBGColor) {
            $item.css("background-color", this.freezeBGColor[freezeItemsContainerID]);
          } else {
            $item.css("background-color", "initial");
          }
        },
        _hasSetBgColor: function(bgColorValue) {
          return getColorAlphaValue(bgColorValue) > 0;
        },
        _isFrozen: function(freezeItemsContainerID) {
          return this.currentlyFrozenContainer.horizontal[freezeItemsContainerID] || this.currentlyFrozenContainer.vertical[freezeItemsContainerID];
        },
        /**
         * Checks if an UI element is in the visible part of the scrollable container
         * Takes one parameters
         *  - $element - JQuery DOM element
         */
        _isInScrollVisibleArea: function($element) {
          var $page = $element.closest(".trv-report-page");
          var elementPosition = $element.position();
          return this._isVisibleVertically($element, $page, elementPosition) && this._isVisibleHorizontally($element, $page, elementPosition);
        },
        _isVisibleHorizontally: function($element, $page, elementPosition) {
          var pageLeftOffset = parseFloat($page.css("padding-left"));
          var scrollableContainerLeftScrollPosition = this.$scrollableContainer.scrollLeft();
          var scrollableContainerWidth = this.$scrollableContainer.width();
          var elementWidth = $element.outerWidth(true) * this.scaleFactor;
          var elementLeftOffset = elementPosition.left + pageLeftOffset;
          return elementLeftOffset > scrollableContainerLeftScrollPosition - elementWidth && elementLeftOffset < scrollableContainerLeftScrollPosition + elementWidth + scrollableContainerWidth;
        },
        _isVisibleVertically: function($element, $page, elementPosition) {
          var pageTopOffset = parseFloat($page.css("padding-top"));
          var pagePosition = $page.position();
          var scrollableContainerTopScrollPosition = this.$scrollableContainer.scrollTop();
          var scrollableContainerHeight = this.$scrollableContainer.height();
          var elementHeight = $element.outerHeight(true) * this.scaleFactor;
          var elementTopOffset = elementPosition.top + pageTopOffset + pagePosition.top;
          return elementTopOffset > scrollableContainerTopScrollPosition - elementHeight && elementTopOffset < scrollableContainerTopScrollPosition + elementHeight + scrollableContainerHeight;
        }
      };
      var defaultOptions$5 = {};
      function PagesArea(placeholder, options, otherOptions) {
        options = $.extend({}, defaultOptions$5, options, otherOptions);
        var controller = options.controller;
        if (!controller)
          throw "No controller (telerikReportViewer.reportViewerController) has been specified.";
        var $placeholder = $(placeholder);
        var $pageContainer = $placeholder.find(".trv-page-container");
        var pageContainer = $pageContainer[0];
        var $pageWrapper = $placeholder.find(".trv-page-wrapper");
        var pageWrapper = $pageWrapper[0];
        var $errorMessage = $placeholder.find(".trv-error-message");
        var actions;
        var pendingElement;
        var pageScaleMode = controller.getScaleMode();
        var pageScale = controller.getScale();
        var minPageScale = 0.1;
        var maxPageScale = 8;
        var documentReady = true;
        var navigateToPageOnDocReady;
        var navigateToElementOnDocReady;
        var isNewReportSource;
        var showErrorTimeoutId;
        var showPageAreaImage = false;
        var reportPageIsLoaded = false;
        var pageAreaImageStyle = '.trv-page-container {background: #ffffff url("{0}") no-repeat center 50px}';
        var pageAreaImageID = "trv-initial-image-styles";
        var scroll = $.extend({}, Scroll);
        var uiFreezeCoordinator = null;
        init();
        if (scroll) {
          scroll.init(placeholder, options);
        }
        function init() {
          replaceStringResources2($placeholder);
        }
        function replaceStringResources2($pagesArea) {
          $pagesArea.attr("aria-label", stringResources[$pagesArea.attr("aria-label")]);
        }
        $(window).on("resize", function(event2, args) {
          if (shouldAutosizePage()) {
            updatePageDimensions();
          }
        });
        enableTouch($placeholder);
        function clearPendingTimeoutIds() {
          if (showErrorTimeoutId) {
            window.clearTimeout(showErrorTimeoutId);
          }
        }
        function invalidateCurrentlyLoadedPage() {
          var page = findPage(navigateToPageOnDocReady);
          if (page) {
            pageNo(page, -1);
          }
        }
        function navigateWhenPageAvailable(pageNumber, pageCount) {
          if (pageNumber && pageNumber <= pageCount) {
            navigateToPage(pageNumber, navigateToElementOnDocReady);
          }
        }
        function navigateOnLoadComplete(pageNumber, pageCount) {
          if (pageNumber) {
            pageNumber = Math.min(pageNumber, pageCount);
            navigateToPage(pageNumber, navigateToElementOnDocReady);
          }
        }
        function clearPage() {
          clear(isNewReportSource);
          isNewReportSource = false;
        }
        controller.pageModeChanged(function() {
          if (controller.getPageMode() === PageModes.CONTINUOUS_SCROLL) {
            scroll.enable();
          } else {
            scroll.disable();
          }
          controller.refreshReport(true);
        }).reportSourceChanged(function() {
          isNewReportSource = true;
          navigateToPageOnDocReady = null;
          navigateToElementOnDocReady = null;
          documentReady = false;
        }).beforeLoadParameters(function(event2, initial) {
          if (initial) {
            clearPendingTimeoutIds();
            showError(stringResources.loadingParameters);
          }
        }).beforeLoadReport(function() {
          documentReady = false;
          if (!navigateToPageOnDocReady) {
            navigateToPageOnDocReady = 1;
          }
          clearPendingTimeoutIds();
          clear();
          disablePagesArea(true);
          if (controller.isReportAutoRun()) {
            showError(stringResources.loadingReport);
          }
        }).beginLoadReport(function(event2, args) {
          documentReady = true;
          invalidateCurrentlyLoadedPage();
        }).reportLoadProgress(function(event2, args) {
          navigateWhenPageAvailable(navigateToPageOnDocReady, args.pageCount);
          showError(stringFormat(stringResources.loadingReportPagesInProgress, [args.pageCount]));
        }).reportLoadComplete(function(event2, args) {
          if (0 === args.pageCount) {
            clearPage();
            showError(stringResources.noPageToDisplay);
          } else {
            navigateOnLoadComplete(navigateToPageOnDocReady, args.pageCount);
            showError(stringFormat(stringResources.loadedReportPagesComplete, [args.pageCount]));
            showErrorTimeoutId = window.setTimeout(showError, 2e3);
            enableInteractivity();
          }
          if (args.containsFrozenContent && !uiFreezeCoordinator) {
            uiFreezeCoordinator = $.extend({}, UIFreezeCoordinator);
            if (controller.getViewMode() === ViewModes.INTERACTIVE) {
              uiFreezeCoordinator.init($placeholder);
            }
          }
        }).navigateToPage(function(event2, pageNumber, targetElement) {
          navigateToPage(pageNumber, targetElement);
        }).pageReady(function(event2, page) {
          if (controller.getPageMode() === PageModes.SINGLE_PAGE) {
            if (scroll.isEnabled()) {
              scroll.disable();
            }
            setPageContent(page);
          } else {
            scroll.renderPage(page);
          }
          if (!reportPageIsLoaded) {
            reportPageIsLoaded = true;
          }
          if (showPageAreaImage) {
            clearPageAreaImage();
          }
          if (controller.getViewMode() === ViewModes.INTERACTIVE && uiFreezeCoordinator) {
            uiFreezeCoordinator.init($placeholder);
          }
          disablePagesArea(false);
        }).error(function(event2, error) {
          disablePagesArea(false);
          clearPage();
          showError(error);
        }).showNotification(function(event2, args) {
          showError(stringResources[args.stringResources]);
        }).hideNotification(function(event2, args) {
          showError();
        }).scaleChanged(function(event2, scale2) {
          setPageScale({
            scale: scale2,
            scaleMode: controller.getScaleMode()
          });
        }).scaleModeChanged(function(event2, scaleMode) {
          setPageScale({
            scale: controller.getScale(),
            scaleMode
          });
        }).serverActionStarted(function() {
          disablePagesArea(true);
          showError(stringResources.loadingReport);
        }).scrollPageReady(function(event2, args) {
          setScrollablePage(args);
        }).missingOrInvalidParameters(function(event2, args) {
          if (options.initialPageAreaImageUrl && !reportPageIsLoaded) {
            clearPage();
            setPageAreaImage();
          }
        }).renderingStopped(function() {
          clear(true);
          showError(stringResources.renderingCanceled);
        });
        controller.setDocumentMapVisible(function() {
          if (shouldAutosizePage()) {
            setTimeout(function() {
              updatePageDimensions();
            });
          }
        }).setParametersAreaVisible(function() {
          if (shouldAutosizePage()) {
            setTimeout(function() {
              updatePageDimensions();
            });
          }
        });
        function enableTouch(dom) {
          var allowSwipeLeft;
          var allowSwipeRight;
          TouchBehavior(
            dom,
            {
              swipe: function(e) {
                var pageNumber = controller.getCurrentPageNumber();
                if (allowSwipeLeft && e.direction === "left") {
                  if (pageNumber < controller.getPageCount()) {
                    controller.navigateToPage(pageNumber + 1);
                  }
                } else if (allowSwipeRight && e.direction === "right") {
                  if (pageNumber > 1) {
                    controller.navigateToPage(pageNumber - 1);
                  }
                }
              },
              pinch: function(e) {
                var page = getCurrentPage();
                var scale2 = $(page).data("pageScale") || pageScale;
                var f = e.distance / e.lastDistance;
                setPageScale({
                  scale: scale2 * f,
                  scaleMode: ScaleModes.SPECIFIC
                });
              },
              doubletap: function(e) {
                options.commands.toggleZoomMode.exec();
              },
              touchstart: function(e) {
                var el = pageWrapper;
                allowSwipeRight = 0 === el.scrollLeft;
                allowSwipeLeft = el.scrollWidth - el.offsetWidth === el.scrollLeft;
              }
            }
          );
        }
        function shouldAutosizePage() {
          return -1 !== [ScaleModes.FIT_PAGE, ScaleModes.FIT_PAGE_WIDTH].indexOf(pageScaleMode);
        }
        function updatePageDimensions() {
          for (var i = 0, children = $pageContainer.find(".trv-report-page"), len = children.length; i < len; i++) {
            var pageNumber = parseInt($(children[i]).attr("data-page"));
            setPageDimensions(children[i], pageScaleMode, pageScale, pageNumber);
          }
          controller.updatePageDimensionsReady();
        }
        function setPageScale({ scale: scale2, scaleMode }) {
          pageScale = scale2 || pageScale;
          pageScaleMode = scaleMode || pageScaleMode;
          pageScale = Math.max(minPageScale, Math.min(maxPageScale, pageScale));
          updatePageDimensions();
        }
        function clear(clearPageWrapper) {
          disableInteractivity();
          pendingElement = void 0;
          if (clearPageWrapper) {
            $pageWrapper.empty();
          }
          showError();
        }
        function getCurrentPage() {
          return findPage(controller.getCurrentPageNumber());
        }
        function findPage(pageNumber) {
          var result;
          var allPages = $pageContainer.find(".trv-report-page");
          if (controller.getPageMode() === PageModes.SINGLE_PAGE) {
            result = Array.from(allPages).find((page) => {
              return pageNo(page) === pageNumber;
            });
          } else {
            result = Array.from(allPages).find((page) => {
              var dataPageNumber = parseInt($(page).attr("data-page"));
              return dataPageNumber === pageNumber;
            });
          }
          return result;
        }
        function navigateToPage(pageNumber, targetElement) {
          if (documentReady) {
            navigateToPageCore(pageNumber, targetElement);
          } else {
            navigateToPageOnDocumentReady(pageNumber, targetElement);
          }
        }
        function navigateToPageOnDocumentReady(pageNumber, targetElement) {
          navigateToPageOnDocReady = pageNumber;
          navigateToElementOnDocReady = targetElement;
        }
        function navigateToPageCore(pageNumber, targetElement) {
          var page = findPage(pageNumber);
          if (page) {
            if (targetElement) {
              navigateToElement(targetElement, pageNumber);
            }
            if (scroll.isEnabled() && !targetElement) {
              scroll.navigateToElement(page.offsetTop, pageNumber);
            }
          } else {
            pendingElement = targetElement;
            beginLoadPage(pageNumber);
          }
        }
        function navigateToElement(targetElement, pageNumber) {
          if (targetElement) {
            var el = $pageContainer.find("[data-" + targetElement.type + "-id=" + targetElement.id + "]")[0];
            if (el) {
              if (options.enableAccessibility) {
                var $nextFocusable = findNextFocusableElement($(el));
                if ($nextFocusable) {
                  $nextFocusable.focus();
                }
              }
              var container = $pageContainer[0];
              var offsetTop = 0;
              var offsetLeft = 0;
              while (el && el !== container) {
                if ($(el).is(".trv-page-wrapper")) {
                  var scale2 = $(el).data("pageScale");
                  if (typeof scale2 === "number") {
                    offsetTop *= scale2;
                    offsetLeft *= scale2;
                  }
                }
                offsetTop += el.offsetTop;
                offsetLeft += el.offsetLeft;
                el = el.offsetParent;
              }
              if (scroll.isEnabled() && pageNumber) {
                scroll.navigateToElement(offsetTop, pageNumber);
              } else {
                container.scrollTop = offsetTop;
                container.scrollLeft = offsetLeft;
              }
            } else {
              if (scroll.isEnabled() && pageNumber) {
                scroll.navigateToElement($placeholder.find('[data-page="' + pageNumber + '"]')[0].offsetTop, pageNumber);
              }
            }
          }
        }
        function findNextFocusableElement(element) {
          if (!element || element.length === 0) {
            return null;
          }
          var num = tryParseInt(element.attr("tabindex"));
          if (!isNaN(num) && num > -1) {
            return element;
          }
          return findNextFocusableElement(element.next());
        }
        function disablePagesArea(disable) {
          (disable ? $.fn.addClass : $.fn.removeClass).call($placeholder, "trv-loading");
        }
        function showError(error) {
          $errorMessage.text(error);
          (error ? $.fn.addClass : $.fn.removeClass).call($placeholder, "trv-error");
        }
        function pageNo(page, no) {
          var $page = page.$ ? page : $(page);
          var dataKey = "pageNumber";
          if (no === void 0) {
            return $page.data(dataKey);
          }
          $page.data(dataKey, no);
          return page;
        }
        function beginLoadPage(pageNumber) {
          disablePagesArea(true);
          window.setTimeout(controller.getReportPage.bind(controller, pageNumber), 1);
          navigateToPageOnDocReady = null;
        }
        function setPageDimensions(page, scaleMode, scale$1, pageNumber) {
          var $target = $(page);
          var $page = pageNumber ? $target : $target.find("div.trv-report-page");
          var $pageContent = $page.find("div.sheet");
          var $pageSkeletonContent = $page.find("div.trv-skeleton-wrapper");
          var pageContent = $pageContent[0] || $pageSkeletonContent[0];
          var pageSkeletonContent = $pageSkeletonContent[0];
          if (!pageContent) {
            return;
          }
          var pageWidth;
          var pageHeight;
          var box = $target.data("box");
          if (!box) {
            var margins = getMargins($target);
            var borders = getBorderWidth($page);
            var padding = getPadding($page);
            box = {
              padLeft: margins.left + borders.left + padding.left,
              padRight: margins.right + borders.right + padding.right,
              padTop: margins.top + borders.top + padding.top,
              padBottom: margins.bottom + borders.bottom + padding.bottom
            };
            $target.data("box", box);
          }
          if ($target.data("pageWidth") === void 0) {
            pageWidth = pageContent.offsetWidth;
            pageHeight = pageContent.offsetHeight;
            $target.data("pageWidth", pageWidth);
            $target.data("pageHeight", pageHeight);
          } else {
            pageWidth = $target.data("pageWidth");
            pageHeight = $target.data("pageHeight");
          }
          var scrollBarV = pageHeight > pageWidth && scaleMode === ScaleModes.FIT_PAGE_WIDTH ? 20 : 0;
          var scaleW = (pageContainer.clientWidth - scrollBarV - box.padLeft - box.padRight) / pageWidth;
          var scaleH = (pageContainer.clientHeight - 1 - box.padTop - box.padBottom) / pageHeight;
          if (scaleMode === ScaleModes.FIT_PAGE_WIDTH) {
            scale$1 = scaleW;
          } else if (!scale$1 || scaleMode === ScaleModes.FIT_PAGE) {
            scale$1 = Math.min(scaleW, scaleH);
          }
          if (uiFreezeCoordinator) {
            uiFreezeCoordinator.setScaleFactor(scale$1);
          }
          $target.data("pageScale", scale$1);
          $page.data("pageScale", scale$1);
          if (!pageSkeletonContent) {
            scale($pageContent, scale$1, scale$1);
          }
          $page.css({
            "height": scale$1 * pageHeight,
            "width": scale$1 * pageWidth
          });
        }
        function enableInteractivity() {
          $pageContainer.on("click", "[data-reporting-action]", onInteractiveItemClick);
          $pageContainer.on("mouseenter", "[data-reporting-action]", onInteractiveItemEnter);
          $pageContainer.on("mouseleave", "[data-reporting-action]", onInteractiveItemLeave);
          $pageContainer.on("mouseenter", "[data-tooltip-title],[data-tooltip-text]", onToolTipItemEnter);
          $pageContainer.on("mouseleave", "[data-tooltip-title],[data-tooltip-text]", onToolTipItemLeave);
        }
        function disableInteractivity() {
          $pageContainer.off("click", "[data-reporting-action]", onInteractiveItemClick);
          $pageContainer.off("mouseenter", "[data-reporting-action]", onInteractiveItemEnter);
          $pageContainer.off("mouseleave", "[data-reporting-action]", onInteractiveItemLeave);
          $pageContainer.off("mouseenter", "[data-tooltip-title],[data-tooltip-text]", onToolTipItemEnter);
          $pageContainer.off("mouseleave", "[data-tooltip-title],[data-tooltip-text]", onToolTipItemLeave);
        }
        function onInteractiveItemClick(event2) {
          var $eventTarget = $(this);
          var actionId = $eventTarget.attr("data-reporting-action");
          var action = getAction(actionId);
          if (action) {
            navigateToPageOnDocReady = getNavigateToPageOnDocReady(event2, action.Type);
            controller.executeReportAction({
              element: event2.currentTarget,
              action,
              cancel: false
            });
          }
          event2.stopPropagation();
        }
        function getNavigateToPageOnDocReady(event2, actionType) {
          if (scroll.isEnabled() && (actionType === "sorting" || actionType === "toggleVisibility")) {
            return $(event2.target).closest(".trv-report-page").attr("data-page") || controller.getCurrentPageNumber();
          }
          return controller.getCurrentPageNumber();
        }
        function onInteractiveItemEnter(args) {
          var $t = $(this);
          var actionId = $t.attr("data-reporting-action");
          var a = getAction(actionId);
          if (a !== null && args.currentTarget === this) {
            controller.reportActionEnter({
              element: args.currentTarget,
              action: a
            });
          }
        }
        function onInteractiveItemLeave(args) {
          var $t = $(this);
          var actionId = $t.attr("data-reporting-action");
          var a = getAction(actionId);
          if (a !== null && args.currentTarget === this) {
            controller.reportActionLeave({
              element: args.currentTarget,
              action: a
            });
          }
        }
        function getAction(actionId) {
          if (actions) {
            return Array.from(actions).find(function(action) {
              return action.Id === actionId;
            });
          }
          return null;
        }
        function onToolTipItemEnter(args) {
          var $t = $(this);
          var title = $t.attr("data-tooltip-title");
          var text = $t.attr("data-tooltip-text");
          if (!title && !text) {
            return;
          }
          var toolTipArgs = {
            element: args.currentTarget,
            toolTip: {
              title: title || "",
              text: text || ""
            },
            cancel: false
          };
          controller.reportToolTipOpening(toolTipArgs);
          if (toolTipArgs.cancel) {
            return;
          }
          var content = applyToolTipTemplate(toolTipArgs);
          var viewportElement = args.currentTarget.viewportElement;
          var ktt = getToolTip($t, content);
          ktt.show($t);
          if (viewportElement && viewportElement.nodeName === "svg") {
            positionToolTip(ktt, args);
          }
        }
        function applyToolTipTemplate(toolTipArgs) {
          var toolTipTemplate = options.templates["trv-pages-area-kendo-tooltip"];
          var $container = $(toolTipTemplate);
          var $titleSpan = $container.find(".trv-pages-area-kendo-tooltip-title");
          var $textSpan = $container.find(".trv-pages-area-kendo-tooltip-text");
          $titleSpan.html(replaceNewLineSymbols(toolTipArgs.toolTip.title));
          $textSpan.html(replaceNewLineSymbols(toolTipArgs.toolTip.text));
          return $container.clone().wrap("<p>").parent().html();
        }
        function replaceNewLineSymbols(tooltipText) {
          tooltipText = escapeHtml(tooltipText);
          tooltipText = tooltipText.replaceAll("\r\n", "<br>");
          tooltipText = tooltipText.replaceAll("\n", "<br>");
          return tooltipText;
        }
        function positionToolTip(toolTip, e) {
          var x = e.pageX;
          var y = e.pageY;
          var container = toolTip.popup.element.closest("[role=region]");
          container.css({
            left: x + 10,
            top: y + 5
          });
        }
        function getToolTip(target, toolTipContent) {
          var ktt = target.data("kendoTooltip");
          if (!ktt) {
            try {
              ktt = target.kendoTooltip({
                content: toolTipContent,
                autohide: true,
                callout: false
              }).data("kendoTooltip");
            } catch (e) {
              console.error("Instantiation of Kendo Tooltip threw an exception", e);
              throw e;
            }
          }
          return ktt;
        }
        function onToolTipItemLeave(args) {
          var $t = $(this);
          var toolTip = $t.data("kendoTooltip");
          if (toolTip) {
            toolTip.hide();
          }
        }
        function updatePageStyle(page) {
          var styleId = "trv-" + controller.clientId() + "-styles";
          $("#" + styleId).remove();
          var pageStyles = $("<style id=" + styleId + "></style>");
          pageStyles.append(page.pageStyles);
          pageStyles.appendTo("head");
        }
        function setPageContent(page) {
          actions = JSON.parse(page.pageActions);
          updatePageStyle(page);
          var pageNumber = page.pageNumber;
          var wrapper = $($.parseHTML(page.pageContent));
          var $pageContent = wrapper.find("div.sheet");
          var $page = $('<div class="trv-report-page" data-page="' + pageNumber + '"></div>');
          $pageContent.css("margin", 0);
          $page.append($pageContent).append($('<div class="trv-page-overlay"></div>'));
          var $target = $pageWrapper.empty().removeData().data("pageNumber", pageNumber).append($page);
          controller.setCurrentPageNumber(pageNumber);
          if (controller.getViewMode() === ViewModes.INTERACTIVE) {
            $placeholder.removeClass("printpreview");
            $placeholder.addClass("interactive");
          } else {
            $placeholder.removeClass("interactive");
            $placeholder.addClass("printpreview");
          }
          setPageDimensions($target, pageScaleMode, pageScale);
          $pageContainer.scrollTop(0);
          $pageContainer.scrollLeft(0);
          navigateToElement(pendingElement);
        }
        function setScrollablePage(args) {
          var pageActions = JSON.parse(args.page.pageActions);
          if (!actions) {
            actions = pageActions;
          } else {
            actions = actions.concat(pageActions);
          }
          if (controller.getViewMode() === ViewModes.INTERACTIVE) {
            $placeholder.removeClass("printpreview");
            $placeholder.addClass("interactive");
          } else {
            $placeholder.removeClass("interactive");
            $placeholder.addClass("printpreview");
          }
          setPageDimensions(args.target, pageScaleMode, pageScale, args.page.pageNumber);
        }
        function setPageAreaImage() {
          var pageStyles = $("<style id=" + pageAreaImageID + "></style>");
          clearPageAreaImage();
          pageStyles.append(stringFormat(pageAreaImageStyle, [options.initialPageAreaImageUrl]));
          pageStyles.appendTo("head");
          showPageAreaImage = true;
        }
        function clearPageAreaImage() {
          $("#" + pageAreaImageID).remove();
        }
      }
      var parameterEditorsMatch = {
        // AvailableValues PROVIDED, MultiValue is TRUE and trv.parameters.editors.multiSelect is unset
        MultiSelect: function(parameter, editorsType) {
          return Boolean(parameter.availableValues) && parameter.multivalue && (!editorsType || !editorsType.multiSelect || editorsType.multiSelect !== ParameterEditorTypes.COMBO_BOX);
        },
        // AvailableValues PROVIDED, MultiValue is TRUE and trv.parameters.editors.multiSelect is set to COMBO_BOX
        MultiSelectCombo: function(parameter, editorsType) {
          return Boolean(parameter.availableValues) && parameter.multivalue && (editorsType && editorsType.multiSelect && editorsType.multiSelect === ParameterEditorTypes.COMBO_BOX);
        },
        // AvailableValues PROVIDED, MultiValue is FALSE and trv.parameters.editors.singleSelect is unset
        SingleSelect: function(parameter, editorsType) {
          return Boolean(parameter.availableValues) && !parameter.multivalue && (!editorsType || !editorsType.singleSelect || editorsType.singleSelect !== ParameterEditorTypes.COMBO_BOX);
        },
        // AvailableValues PROVIDED, MultiValue is FALSE and trv.parameters.editors.singleSelect is set to COMBO_BOX
        SingleSelectCombo: function(parameter, editorsType) {
          return Boolean(parameter.availableValues) && !parameter.multivalue && (editorsType && editorsType.singleSelect && editorsType.singleSelect === ParameterEditorTypes.COMBO_BOX);
        },
        // AvailableValues NOT PROVIDED and MultiValue is TRUE
        MultiValue: function(parameter) {
          return Boolean(parameter.multivalue);
        },
        DateTime: function(parameter) {
          return parameter.type === ParameterTypes.DATETIME;
        },
        String: function(parameter) {
          return parameter.type === ParameterTypes.STRING;
        },
        Number: function(parameter) {
          switch (parameter.type) {
            case ParameterTypes.INTEGER:
            case ParameterTypes.FLOAT:
              return true;
            default:
              return false;
          }
        },
        Boolean: function(parameter) {
          return parameter.type === ParameterTypes.BOOLEAN;
        },
        Default: function(parameter) {
          return true;
        }
      };
      var multivalueUtils = /* @__PURE__ */ function() {
        var lineSeparator = "\n";
        return {
          formatValue: function(value) {
            var text = "";
            if (value) {
              [].concat(value).forEach(function(val) {
                if (text.length > 0) {
                  text += lineSeparator;
                }
                text += val;
              });
            }
            return text;
          },
          parseValues: function(text) {
            return ("" + text).split(lineSeparator);
          }
        };
      }();
      function integerInputBehavior(input) {
        function isValid(newValue) {
          return /^(\-|\+)?([0-9]*)$/.test(newValue);
        }
        function onKeyPress(event2) {
          if (isSpecialKey(event2.keyCode)) {
            return true;
          }
          return isValid($(input).val() + String.fromCharCode(event2.charCode));
        }
        function onPaste(event2) {
        }
        function attach(input2) {
          $(input2).on("keypress", onKeyPress).on("paste", onPaste);
        }
        function detach(input2) {
          $(input2).off("keypress", onKeyPress).off("paste", onPaste);
        }
        attach(input);
        return {
          dispose: function() {
            detach(input);
          }
        };
      }
      function floatInputBehavior(input) {
        function isValid(newValue) {
          return /^(\-|\+)?([0-9]*(\.[0-9]*)?)$/.test(newValue);
        }
        function onKeyPress(event2) {
          if (isSpecialKey(event2.keyCode)) {
            return true;
          }
          return isValid($(input).val() + String.fromCharCode(event2.charCode));
        }
        function onPaste(event2) {
        }
        function attach(input2) {
          $(input2).on("keypress", onKeyPress).on("paste", onPaste);
        }
        function detach(input2) {
          $(input2).off("keypress", onKeyPress).off("paste", onPaste);
        }
        attach(input);
        return {
          dispose: function() {
            detach(input);
          }
        };
      }
      function applyClass(apply, cssClass, item) {
        var fn = apply ? $.fn.addClass : $.fn.removeClass;
        fn.call(item, cssClass);
      }
      function enableItem(item, enable) {
        applyClass(!enable, "k-disabled", item);
      }
      function selectItem(item, select) {
        applyClass(select, "k-selected", item);
        item.attr("aria-selected", select);
      }
      function addAccessibilityAttributes(editor, type2, caption, additionalInfo, error) {
        if (!additionalInfo) {
          additionalInfo = "";
        }
        var label = stringFormat("{0}. {1} {2}. {3}", [caption, type2, stringResources.ariaLabelParameter, additionalInfo]);
        editor.attr("aria-label", label);
        setAccessibilityErrorAttributes(editor, error);
      }
      var containerTabIndex;
      var editorsIndex = 0;
      function setEditorTabIndex(editor) {
        if (!containerTabIndex) {
          var $container = $("div.trv-parameters-area-content");
          if ($container.length > 0) {
            var tabIndexAttr = $container.attr("tabIndex");
            if (tabIndexAttr) {
              containerTabIndex = tryParseInt(tabIndexAttr);
            }
          }
          if (!containerTabIndex || isNaN(containerTabIndex)) {
            containerTabIndex = 300;
          }
        }
        var wrapper = editor.closest(".trv-parameter-value");
        var selectAll = wrapper.find(".trv-select-all");
        var clearSelection = wrapper.find(".trv-select-none");
        var widgetParent = editor.closest(".k-widget");
        var hasFocusableElement = widgetParent.find(".k-input");
        var isComboWidget = hasFocusableElement && hasFocusableElement.length;
        if (selectAll && selectAll.length) {
          selectAll.attr("tabindex", containerTabIndex + ++editorsIndex);
        }
        if (clearSelection && clearSelection.length) {
          clearSelection.attr("tabindex", containerTabIndex + ++editorsIndex);
        }
        if (isComboWidget) {
          hasFocusableElement.attr("tabindex", containerTabIndex + ++editorsIndex);
        } else {
          editor.attr("tabindex", containerTabIndex + ++editorsIndex);
        }
      }
      function setAccessibilityErrorAttributes(editor, error) {
        var errToken = stringFormat(" {0}:", [stringResources.ariaLabelErrorMessage]);
        var label = editor.attr("aria-label");
        if (!label) {
          return;
        }
        var errIdx = label.indexOf(errToken);
        if (errIdx > -1) {
          label = label.substring(0, errIdx);
        }
        if (error && error !== "") {
          editor.attr("aria-required", true);
          editor.attr("aria-invalid", true);
          label += errToken + error;
        } else {
          editor.removeAttr("aria-invalid");
        }
        editor.attr("aria-label", label);
      }
      function navigatableEnabledForList(enableAccessibility) {
        return kendo.version >= "2017.3.1018" || enableAccessibility;
      }
      var ParameterEditors = [
        {
          match: parameterEditorsMatch.MultiSelect,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var enabled = true;
            $placeholder.html(options.templates["trv-parameter-editor-available-values-multiselect"]);
            var $list = $placeholder.find(".trv-list");
            var $selectAll = $placeholder.find(".trv-select-all");
            var $selectNone = $placeholder.find(".trv-select-none");
            var listView;
            var parameter;
            var updateTimeout;
            var valueChangeCallback = options.parameterChanged;
            var initialized;
            $selectAll.text(stringResources[$selectAll.text()]);
            $selectAll.click(function(e) {
              e.preventDefault();
              if (!enabled)
                return;
              setSelectedItems(parameter.availableValues.map(function(av) {
                return av.value;
              }));
            });
            $selectNone.text(stringResources[$selectNone.text()]);
            $selectNone.click(function(e) {
              e.preventDefault();
              if (!enabled)
                return;
              setSelectedItems([]);
            });
            function onSelectionChanged(selection) {
              if (initialized) {
                applyAriaSelected(selection);
                notifyParameterChanged(selection);
              }
            }
            function applyAriaSelected(selection) {
              var children = $list.find(".trv-listviewitem");
              Array.from(children).forEach((item) => {
                var $item = $(item);
                var isSelected = selection.filter($item).length > 0;
                $item.attr("aria-selected", isSelected);
              });
            }
            function notifyParameterChanged(selection) {
              var availableValues = parameter.availableValues;
              var values = $.map(selection, function(item) {
                return availableValues[$(item).index()].value;
              });
              clearPendingChange();
              var immediateUpdate = !parameter.autoRefresh && !parameter.childParameters;
              updateTimeout = window.setTimeout(
                function() {
                  if (!areEqualArrays(parameter.value, values)) {
                    valueChangeCallback(parameter, values);
                  }
                  updateTimeout = null;
                },
                immediateUpdate ? 0 : 1e3
              );
            }
            function clearPendingChange() {
              if (updateTimeout) {
                window.clearTimeout(updateTimeout);
              }
            }
            function getSelectedItems() {
              return $(listView.element).find(".k-selected");
            }
            function onItemClick(e) {
              if (!enabled)
                return;
              var clickedItem = $(e.target);
              var selectedItems = listView.select();
              if (clickedItem.hasClass("k-selected")) {
                selectedItems.splice($.inArray(clickedItem[0], selectedItems), 1);
              } else {
                selectedItems.push(clickedItem);
              }
              listView.clearSelection();
              listView.select(selectedItems);
              listView.trigger("change");
            }
            function onChange(e) {
              onSelectionChanged(getSelectedItems());
            }
            function onKeydown(event2) {
              if (!enabled)
                return;
              if (event2.which !== 32) {
                return;
              }
              var focused = listView.element.find(".k-focus");
              if (focused.length > 0) {
                focused.toggleClass("k-selected");
                onSelectionChanged(getSelectedItems());
                event2.preventDefault();
              }
            }
            function init() {
              setEditorTabIndex($list);
              setSelectedItems(parameter.value);
              listView.element.off().on("touch click", ".trv-listviewitem", onItemClick);
              listView.element.on("keydown", onKeydown);
              initialized = true;
            }
            function clear() {
              initialized = false;
              if (listView) {
                listView.element.off("touch click", ".trv-listviewitem", onItemClick);
                listView.element.off("keydown", onKeydown);
              }
            }
            function setSelectedItems(items) {
              setSelectedItemsCore(items);
              onSelectionChanged(getSelectedItems());
            }
            function setSelectedItemsCore(items) {
              if (!Array.isArray(items)) {
                items = [items];
              }
              var children = $list.find(".trv-listviewitem");
              $.each(parameter.availableValues, (i, av) => {
                var selected = false;
                $.each(items, (j, v) => {
                  var availableValue = av.value;
                  if (v instanceof Date) {
                    availableValue = parseToLocalDate(av.value);
                  }
                  selected = areEqual(v, availableValue);
                  return !selected;
                });
                selectItem($(children[i]), selected);
              });
            }
            return {
              beginEdit: function(param) {
                clear();
                parameter = param;
                try {
                  listView = $list.kendoListView({
                    template: kendo.template('<div class="trv-listviewitem" style="cursor: pointer">${name}</div>'),
                    dataSource: { data: parameter.availableValues },
                    selectable: "MULTIPLE",
                    navigatable: navigatableEnabledForList(options.enableAccessibility),
                    change: onChange
                  }).data("kendoListView");
                } catch (e) {
                  console.error("Instantiation of Kendo ListView as MultiSelect parameter editor threw an exception", e);
                  throw e;
                }
                init();
              },
              enable: function(enable) {
                enabled = enable;
                enableItem($list, enabled);
              },
              clearPendingChange,
              addAccessibility: function(param) {
                var info = stringFormat(stringResources.ariaLabelParameterInfo, [param.availableValues.length]);
                addAccessibilityAttributes($list, stringResources.ariaLabelMultiSelect, param.text, info, param.Error);
                $list.attr("aria-multiselectable", "true");
                var items = $list.find(".trv-listviewitem");
                Array.from(items).forEach((item) => {
                  $(item).attr("aria-label", item.innerText);
                });
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($list, param.Error);
              },
              destroy: function() {
                listView.destroy();
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.MultiSelectCombo,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var enabled = true;
            var selector2 = ".trv-combo";
            var template = "trv-parameter-editor-available-values-multiselect-combo";
            var valueChangeCallback = options.parameterChanged;
            var $editorDom;
            var $selectNone;
            var $selectAll;
            var editor;
            var updateTimeout;
            var popUpIsClosed = true;
            var parameter;
            $placeholder.html(options.templates[template]);
            $editorDom = $placeholder.find(selector2);
            $selectNone = $placeholder.find(".trv-select-none");
            if ($selectNone) {
              $selectNone.text(stringResources[$selectNone.text()]);
              $selectNone.click(function(e) {
                e.preventDefault();
                editor.value([]);
                editor.trigger("change");
              });
            }
            $selectAll = $placeholder.find(".trv-select-all");
            if ($selectAll) {
              $selectAll.text(stringResources[$selectAll.text()]);
              $selectAll.click(function(e) {
                e.preventDefault();
                if (!enabled)
                  return;
                var values = $.map(parameter.availableValues, function(dataItem) {
                  return dataItem.value;
                });
                editor.value(values);
                editor.trigger("change");
              });
            }
            function onSelectionChanged(selection) {
              notifyParameterChanged(selection);
            }
            function notifyParameterChanged(values) {
              clearPendingChange();
              var immediateUpdate = !parameter.autoRefresh && !parameter.childParameters;
              updateTimeout = window.setTimeout(
                function() {
                  if (!areEqualArrays(parameter.value, values)) {
                    valueChangeCallback(parameter, values);
                  }
                  updateTimeout = null;
                },
                immediateUpdate ? 0 : 1e3
              );
            }
            function clearPendingChange() {
              if (updateTimeout) {
                window.clearTimeout(updateTimeout);
              }
            }
            function getSelectedItems() {
              return editor.value();
            }
            function onChange() {
              if (popUpIsClosed) {
                onSelectionChanged(getSelectedItems());
              }
            }
            function init() {
              setEditorTabIndex($editorDom);
              editor.bind("change", onChange);
            }
            function reset() {
              if (editor) {
                editor.unbind("change", onChange);
              }
            }
            return {
              beginEdit: function(param) {
                reset();
                parameter = param;
                try {
                  editor = $editorDom.kendoMultiSelect({
                    itemTemplate: '<div class="trv-editoritem">${name}</div>',
                    dataSource: parameter.availableValues,
                    dataTextField: "name",
                    dataValueField: "value",
                    value: parameter.value,
                    filter: "contains",
                    autoClose: false,
                    open: function() {
                      popUpIsClosed = false;
                    },
                    close: function(e) {
                      popUpIsClosed = true;
                      onChange();
                    },
                    autoWidth: true,
                    clearButton: false
                  }).data("kendoMultiSelect");
                } catch (e) {
                  console.error("Instantiation of Kendo MultiSelect as MultiSelectCombo parameter editor threw an exception", e);
                  throw e;
                }
                init();
              },
              enable: function(enable) {
                enabled = enable;
                editor.enable(enable);
              },
              clearPendingChange,
              addAccessibility: function(param) {
                var $accessibilityDom = editor.input;
                var info = stringFormat(stringResources.ariaLabelParameterInfo, [param.availableValues.length]);
                addAccessibilityAttributes($accessibilityDom, stringResources.ariaLabelMultiSelect, param.text, info, param.Error);
                var items = editor.items();
                Array.from(items).forEach((item) => {
                  $(item).attr("aria-label", item.innerText);
                });
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($editorDom, param.Error);
              },
              destroy: function() {
                editor.destroy();
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.SingleSelect,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var enabled = true;
            $placeholder.html(options.templates["trv-parameter-editor-available-values"]);
            var $list = $placeholder.find(".trv-list");
            var $selectNone = $placeholder.find(".trv-select-none");
            var listView;
            var parameter;
            var valueChangeCallback = options.parameterChanged;
            if ($selectNone) {
              $selectNone.text(stringResources[$selectNone.text()]);
              $selectNone.click(function(e) {
                e.preventDefault();
                listView.clearSelection();
                listView.trigger("change");
              });
            }
            function onSelectionChanged(selection) {
              notifyParameterChanged(selection);
            }
            function notifyParameterChanged(selection) {
              var availableValues = parameter.availableValues;
              var values = $.map(selection, function(item) {
                return availableValues[$(item).index()].value;
              });
              if (Array.isArray(values)) {
                values = values[0];
              }
              valueChangeCallback(parameter, values);
            }
            function getSelectedItems() {
              return listView.select();
            }
            function onChange() {
              onSelectionChanged(getSelectedItems());
            }
            function init() {
              setEditorTabIndex($list);
              setSelectedItems(parameter.value);
              listView.bind("change", onChange);
            }
            function reset() {
              if (listView) {
                listView.unbind("change", onChange);
              }
            }
            function setSelectedItems(value) {
              var items = $list.find(".trv-listviewitem");
              $.each(parameter.availableValues, (i, av) => {
                var availableValue = av.value;
                if (value instanceof Date) {
                  availableValue = parseToLocalDate(av.value);
                }
                if (areEqual(value, availableValue)) {
                  listView.select(items[i]);
                  return false;
                }
                return true;
              });
            }
            return {
              beginEdit: function(param) {
                reset();
                parameter = param;
                try {
                  listView = $list.kendoListView({
                    template: '<div class="trv-listviewitem">${name}</div>',
                    dataSource: { data: parameter.availableValues },
                    selectable: true,
                    navigatable: navigatableEnabledForList(options.enableAccessibility)
                  }).data("kendoListView");
                } catch (e) {
                  console.error("Instantiation of Kendo ListView as SingleSelect parameter editor threw an exception", e);
                  throw e;
                }
                init();
              },
              enable: function(enable) {
                enabled = enable;
                enableItem($list, enabled);
                if (enabled) {
                  listView.bind("change", onChange);
                  $list.addClass("k-selectable");
                } else {
                  listView.unbind("change", onChange);
                  $list.removeClass("k-selectable");
                }
              },
              addAccessibility: function(param) {
                var info = stringFormat(stringResources.ariaLabelParameterInfo, [param.availableValues.length]);
                addAccessibilityAttributes($list, stringResources.ariaLabelSingleValue, param.text, info, param.Error);
                var items = $list.find(".trv-listviewitem");
                Array.from(items).forEach((item) => {
                  $(item).attr("aria-label", item.innerText);
                });
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($list, param.Error);
              },
              destroy: function() {
                listView.destroy();
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.SingleSelectCombo,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var selector2 = ".trv-combo";
            var template = "trv-parameter-editor-available-values-combo";
            var valueChangeCallback = options.parameterChanged;
            var $editorDom;
            var $selectNone;
            var editor;
            var parameter;
            $placeholder.html(options.templates[template]);
            $editorDom = $placeholder.find(selector2);
            $selectNone = $placeholder.find(".trv-select-none");
            if ($selectNone) {
              $selectNone.text(stringResources[$selectNone.text()]);
              $selectNone.click(function(e) {
                e.preventDefault();
                editor.value("");
                editor.trigger("change");
              });
            }
            function onSelectionChanged(selection, value) {
              notifyParameterChanged(selection, value);
            }
            function notifyParameterChanged(selection, value) {
              var values = value || "";
              var availableValues;
              if (!value && selection >= 0) {
                availableValues = parameter.availableValues;
                values = availableValues[selection].value;
              }
              valueChangeCallback(parameter, values);
            }
            function getSelectedItems() {
              return editor.select();
            }
            function onChange(e) {
              onSelectionChanged(getSelectedItems(), this.value());
            }
            function init() {
              setEditorTabIndex($editorDom);
              editor.bind("change", onChange);
            }
            function reset() {
              if (editor) {
                editor.unbind("change", onChange);
              }
            }
            return {
              beginEdit: function(param) {
                reset();
                parameter = param;
                try {
                  editor = $editorDom.kendoComboBox({
                    template: '<div class="trv-editoritem">${name}</div>',
                    dataSource: parameter.availableValues,
                    dataTextField: "name",
                    dataValueField: "value",
                    value: parameter.value,
                    filter: "contains",
                    suggest: true,
                    clearButton: false
                  }).data("kendoComboBox");
                } catch (e) {
                  console.error("Instantiation of Kendo ComboBox as SingleSelectCombo parameter editor threw an exception", e);
                  throw e;
                }
                init();
              },
              enable: function(enable) {
                editor.enable(enable);
              },
              addAccessibility: function(param) {
                var $accessibilityDom = editor.input;
                var info = stringFormat(stringResources.ariaLabelParameterInfo, [param.availableValues.length]);
                addAccessibilityAttributes($accessibilityDom, stringResources.ariaLabelSingleValue, param.text, info, param.Error);
                var items = editor.items();
                Array.from(items).forEach((item) => {
                  $(item).attr("aria-label", item.innerText);
                });
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($editorDom, param.Error);
              },
              destroy: function() {
                editor.destroy();
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.MultiValue,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var parameter;
            $placeholder.html(options.templates["trv-parameter-editor-multivalue"]);
            var $textArea = $placeholder.find("textarea").on("change", function() {
              if (options.parameterChanged) {
                options.parameterChanged(parameter, multivalueUtils.parseValues(this.value));
              }
            });
            function setValue(value) {
              parameter.value = value;
              $textArea.val(multivalueUtils.formatValue(value));
            }
            return {
              beginEdit: function(param) {
                parameter = param;
                setValue(param.value);
                setEditorTabIndex($textArea);
              },
              enable: function(enable) {
                enableItem($textArea, enable);
                $textArea.prop("disabled", !enable);
              },
              addAccessibility: function(param) {
                addAccessibilityAttributes($textArea, stringResources.ariaLabelMultiValue, param.text, null, param.Error);
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($textArea, param.Error);
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.DateTime,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var parameter;
            $placeholder.html(options.templates["trv-parameter-editor-datetime"]);
            try {
              var $dateTimePicker = $placeholder.find("input[type=datetime]").kendoDatePicker({
                change: function() {
                  var handler = options.parameterChanged;
                  if (handler) {
                    var dtv = this.value();
                    if (null !== dtv) {
                      dtv = adjustTimezone(dtv);
                    }
                    handler(parameter, dtv);
                  }
                }
              });
              var dateTimePicker = $dateTimePicker.data("kendoDatePicker");
            } catch (e) {
              console.error("Instantiation of Kendo DatePicker as DateTime parameter editor threw an exception", e);
              throw e;
            }
            function setValue(value) {
              parameter.value = value;
              var dt = null;
              try {
                if (value) {
                  dt = unadjustTimezone(value);
                }
              } catch (e) {
                dt = null;
              }
              dateTimePicker.value(dt);
            }
            return {
              beginEdit: function(param) {
                parameter = param;
                setValue(param.value);
                setEditorTabIndex($dateTimePicker);
              },
              enable: function(enable) {
                dateTimePicker.enable(enable);
                enableItem($dateTimePicker, enable);
              },
              addAccessibility: function(param) {
                addAccessibilityAttributes($dateTimePicker, stringResources.ariaLabelParameterDateTime, param.text, null, param.Error);
                $dateTimePicker.attr("aria-live", "assertive");
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($dateTimePicker, param.Error);
              },
              destroy: function() {
                dateTimePicker.destroy();
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.String,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var parameter;
            $placeholder.html(options.templates["trv-parameter-editor-text"]);
            var $input = $placeholder.find('input[type="text"]').change(function() {
              if (options.parameterChanged) {
                options.parameterChanged(parameter, $input.val());
              }
            });
            function setValue(value) {
              parameter.value = value;
              $input.val(value);
            }
            return {
              beginEdit: function(param) {
                parameter = param;
                setValue(param.value);
                setEditorTabIndex($input);
              },
              enable: function(enabled) {
                $input.prop("disabled", !enabled);
                enableItem($input, enabled);
              },
              addAccessibility: function(param) {
                addAccessibilityAttributes($input, stringResources.ariaLabelParameterString, param.text, null, param.Error);
                $input.attr("aria-live", "assertive");
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($input, param.Error);
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.Number,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var parameter;
            var inputBehavior;
            $placeholder.html(options.templates["trv-parameter-editor-number"]);
            var $input = $placeholder.find("input[type=number]").on("change", function() {
              if (options.parameterChanged) {
                options.parameterChanged(parameter, $input.val());
              }
            });
            return {
              beginEdit: function(param) {
                if (inputBehavior) {
                  inputBehavior.dispose();
                }
                parameter = param;
                $input.val(parameter.value);
                if (parameter.type === ParameterTypes.INTEGER) {
                  inputBehavior = integerInputBehavior($input);
                } else {
                  inputBehavior = floatInputBehavior($input);
                }
                setEditorTabIndex($input);
              },
              enable: function(enable) {
                $input.prop("disabled", !enable);
                enableItem($input, enable);
              },
              addAccessibility: function(param) {
                addAccessibilityAttributes($input, stringResources.ariaLabelParameterNumerical, param.text, null, param.Error);
                $input.attr("aria-live", "assertive");
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($input, param.Error);
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.Boolean,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            var parameter;
            $placeholder.html(options.templates["trv-parameter-editor-boolean"]);
            var $input = $placeholder.find("input[type=checkbox]").on("change", function() {
              if (options.parameterChanged) {
                options.parameterChanged(parameter, this.checked);
              }
            });
            function setValue(value) {
              parameter.value = value;
              $input[0].checked = value === true;
            }
            return {
              beginEdit: function(param) {
                parameter = param;
                setValue(param.value);
                setEditorTabIndex($input);
              },
              enable: function(enable) {
                enableItem($input, enable);
                $input.attr("disabled", !enable);
              },
              addAccessibility: function(param) {
                addAccessibilityAttributes($input, stringResources.ariaLabelParameterBoolean, param.text, null, param.Error);
                $input.attr("aria-live", "assertive");
              },
              setAccessibilityErrorState: function(param) {
                setAccessibilityErrorAttributes($input, param.Error);
              }
            };
          }
        },
        {
          match: parameterEditorsMatch.Default,
          createEditor: function(placeholder, options) {
            var $placeholder = $(placeholder);
            $placeholder.html('<div class="trv-parameter-editor-generic"></div>');
            return {
              beginEdit: function(parameter) {
                $placeholder.find(".trv-parameter-editor-generic").text(parameter.Error ? "(error)" : parameter.value);
              },
              enable: function(enable) {
              }
            };
          }
        }
      ];
      function PerspectiveManager(dom, controller) {
        var smallMenu = dom.querySelectorAll ? dom.querySelectorAll(".trv-menu-small")[0] : false;
        var perspectives = {
          "small": {
            documentMapVisible: false,
            parametersAreaVisible: false,
            onDocumentMapVisibleChanged: function(e, args) {
              if (args.visible) {
                controller.setParametersAreaVisible({ visible: false });
              }
            },
            onParameterAreaVisibleChanged: function(e, args) {
              if (args.visible) {
                controller.setDocumentMapVisible({ visible: false });
              }
            },
            onBeforeLoadReport: function() {
              controller.setParametersAreaVisible({ visible: false });
              controller.setDocumentMapVisible({ visible: false });
            },
            onNavigateToPage: function() {
              controller.setParametersAreaVisible({ visible: false });
              controller.setDocumentMapVisible({ visible: false });
            }
          },
          "large": {
            documentMapVisible: true,
            parametersAreaVisible: true
          }
        };
        var currentPerspective;
        function init() {
          currentPerspective = getPerspective();
          initStateFromController(perspectives["large"]);
        }
        function setPerspective(beforeApplyState) {
          var perspective = getPerspective();
          if (perspective !== currentPerspective) {
            var oldState = perspectives[currentPerspective];
            var newState = perspectives[perspective];
            currentPerspective = perspective;
            if (beforeApplyState) {
              beforeApplyState.call(void 0, oldState, newState);
            }
            applyState(newState);
          }
        }
        function onDocumentMapVisibleChanged(e, args) {
          dispatch("onDocumentMapVisibleChanged", arguments);
        }
        function onParameterAreaVisibleChanged(e, args) {
          dispatch("onParameterAreaVisibleChanged", arguments);
        }
        function onBeforeLoadReport() {
          dispatch("onBeforeLoadReport", arguments);
        }
        function onNavigateToPage() {
          dispatch("onNavigateToPage", arguments);
        }
        function onReportLoadComplete() {
          dispatch("onReportLoadComplete", arguments);
        }
        function onWindowResize() {
          setPerspective(
            function(oldState, newState) {
              initStateFromController(oldState);
            }
          );
        }
        function onCssLoaded() {
          setPerspective(null);
        }
        function dispatch(func, args) {
          var activePerspective = perspectives[currentPerspective];
          var handler = activePerspective[func];
          if (typeof handler === "function") {
            handler.apply(activePerspective, args);
          }
        }
        function attach() {
          window.addEventListener("resize", onWindowResize);
          controller.setDocumentMapVisible(onDocumentMapVisibleChanged);
          controller.setParametersAreaVisible(onParameterAreaVisibleChanged);
          controller.beforeLoadReport(onBeforeLoadReport);
          controller.navigateToPage(onNavigateToPage);
          controller.reportLoadComplete(onReportLoadComplete);
          controller.cssLoaded(onCssLoaded);
        }
        function dispose() {
          window.removeEventListener("resize", onWindowResize);
        }
        function getPerspective() {
          var windowWidthInEm = $(window).width() / parseFloat($("body").css("font-size"));
          var windowMinWidth = 40.5;
          return smallMenu && windowWidthInEm <= windowMinWidth ? "small" : "large";
        }
        function initStateFromController(state) {
          state.documentMapVisible = documentMapVisible();
          state.parametersAreaVisible = parametersAreaVisible();
        }
        function applyState(state) {
          documentMapVisible(state.documentMapVisible);
          parametersAreaVisible(state.parametersAreaVisible);
        }
        function documentMapVisible() {
          if (arguments.length === 0) {
            var args1 = {};
            controller.getDocumentMapState(args1);
            return args1.visible;
          }
          controller.setDocumentMapVisible({
            visible: Boolean(arguments[0])
          });
          return this;
        }
        function parametersAreaVisible() {
          if (arguments.length === 0) {
            var args1 = {};
            controller.getParametersAreaState(args1);
            return args1.visible;
          }
          controller.setParametersAreaVisible({
            visible: Boolean(arguments[0])
          });
          return this;
        }
        init();
        return {
          attach,
          dispose
        };
      }
      var __defProp$5 = Object.defineProperty;
      var __getOwnPropSymbols = Object.getOwnPropertySymbols;
      var __hasOwnProp = Object.prototype.hasOwnProperty;
      var __propIsEnum = Object.prototype.propertyIsEnumerable;
      var __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __spreadValues = (a, b) => {
        for (var prop in b || (b = {}))
          if (__hasOwnProp.call(b, prop))
            __defNormalProp$5(a, prop, b[prop]);
        if (__getOwnPropSymbols)
          for (var prop of __getOwnPropSymbols(b)) {
            if (__propIsEnum.call(b, prop))
              __defNormalProp$5(a, prop, b[prop]);
          }
        return a;
      };
      var JSON_CONTENT_TYPE = "application/json; charset=UTF-8";
      var URLENCODED_CONTENT_TYPE = "application/x-www-form-urlencoded; charset=UTF-8";
      var HTTP_GET = "GET";
      var HTTP_POST = "POST";
      var HTTP_DELETE = "DELETE";
      var defaultOptions$4 = {};
      function getHeaders(authorizationToken) {
        const headers = {
          "Accept": "application/json, text/javascript, */*; q=0.01"
        };
        if (authorizationToken) {
          headers["Authorization"] = "Bearer " + authorizationToken;
        }
        return headers;
      }
      function ServiceClient(options) {
        options = $.extend({}, defaultOptions$4, options);
        var baseUrl = rTrim(options.serviceUrl || options.baseUrl, "\\/");
        var loginPromise;
        var _ajax = $ajax;
        function validateClientID(clientID) {
          if (!clientID) {
            throw "Invalid clientID";
          }
        }
        function urlFromTemplate(template, args) {
          args = $.extend({}, { baseUrl }, args);
          return stringFormat(template, args);
        }
        function login() {
          if (!loginPromise) {
            var loginInfo = options.loginInfo;
            if (loginInfo && loginInfo.url && (loginInfo.username || loginInfo.password)) {
              const endPoint = loginInfo.url;
              loginPromise = _ajax(endPoint, {
                method: HTTP_POST,
                data: {
                  grant_type: "password",
                  username: loginInfo.username,
                  password: loginInfo.password
                },
                dataType: "json",
                contentType: URLENCODED_CONTENT_TYPE
              }).then(function(result) {
                return result.access_token;
              });
            } else {
              loginPromise = Promise.resolve();
            }
          }
          return loginPromise;
        }
        return {
          _urlFromTemplate: urlFromTemplate,
          registerClient: function(settings) {
            const endPoint = `${baseUrl}/clients`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                dataType: "json",
                // Used to avoid Chrome caching functionality for simple async requests
                // when the first request is not completed the second request is not send
                // and the same response is used for both of the request. In this case the
                // second client is not registered to the service and the same clientId is used.
                data: JSON.stringify({ timeStamp: Date.now() })
              }, settings));
            }).then(function(clientData) {
              if (clientData.Message) {
                throw clientData.Message;
              }
              return clientData.clientId;
            });
          },
          unregisterClient: function(clientID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_DELETE
              }, settings));
            });
          },
          getParameters: function(clientID, report, parameterValues, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/parameters`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                contentType: JSON_CONTENT_TYPE,
                dataType: "json",
                data: JSON.stringify({ report, parameterValues })
              }, settings));
            });
          },
          createReportInstance: function(clientID, report, parameterValues, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                contentType: JSON_CONTENT_TYPE,
                dataType: "json",
                data: JSON.stringify({ report, parameterValues })
              }, settings));
            }).then(function(instanceData) {
              return instanceData.instanceId;
            });
          },
          deleteReportInstance: function(clientID, instanceID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_DELETE
              }, settings));
            });
          },
          // eslint-disable-next-line max-params
          createReportDocument: function(clientID, instanceID, format, deviceInfo, useCache, baseDocumentID, actionID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents`;
            return login().then(function(authorizationToken) {
              deviceInfo = deviceInfo || {};
              deviceInfo["BasePath"] = baseUrl;
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                contentType: JSON_CONTENT_TYPE,
                dataType: "json",
                data: JSON.stringify({
                  format,
                  deviceInfo,
                  useCache,
                  baseDocumentID,
                  actionID
                })
              }, settings));
            }).then(function(documentData) {
              return documentData.documentId;
            });
          },
          // eslint-disable-next-line max-params
          sendDocument: function(clientID, instanceID, documentID, mailArgs, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}/send`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                contentType: JSON_CONTENT_TYPE,
                data: JSON.stringify({
                  from: mailArgs.from,
                  to: mailArgs.to,
                  cc: mailArgs.cc,
                  subject: mailArgs.subject,
                  body: mailArgs.body
                })
              }, settings));
            });
          },
          deleteReportDocument: function(clientID, instanceID, documentID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_DELETE
              }, settings));
            });
          },
          getDocumentInfo: function(clientID, instanceID, documentID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}/info`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET,
                dataType: "json"
              }, settings));
            });
          },
          // eslint-disable-next-line max-params
          getPage: function(clientID, instanceID, documentID, pageNumber, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}/pages/${pageNumber}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET,
                dataType: "json"
              }, settings));
            });
          },
          get: function(url) {
            return _ajax(url, {
              method: HTTP_GET
            });
          },
          formatDocumentUrl: function(clientID, instanceID, documentID, queryString) {
            var url = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}`;
            if (queryString) {
              url += "?" + queryString;
            }
            return url;
          },
          getDocumentFormats: function(settings) {
            const endPoint = `${baseUrl}/formats`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET,
                dataType: "json"
              }, settings));
            });
          },
          getServiceVersion: function(settings) {
            const endPoint = `${baseUrl}/version`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET,
                dataType: "json"
              }, settings));
            });
          },
          // eslint-disable-next-line max-params
          getResource: function(clientID, instanceID, documentID, resourceID, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}/resources/${resourceID}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET,
                dataType: (settings == null ? void 0 : settings.dataType) || "json"
              }, settings));
            });
          },
          // eslint-disable-next-line max-params
          getSearchResults: function(clientID, instanceID, documentID, searchToken, matchCase, matchWholeWord, useRegex, settings) {
            validateClientID(clientID);
            const endPoint = `${baseUrl}/clients/${clientID}/instances/${instanceID}/documents/${documentID}/search`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST,
                contentType: JSON_CONTENT_TYPE,
                dataType: "json",
                data: JSON.stringify({
                  searchToken,
                  matchCase,
                  matchWholeWord,
                  useRegularExpressions: useRegex
                })
              }, settings));
            });
          },
          setAccessToken: function(accessToken) {
            loginPromise = Promise.resolve(accessToken);
          },
          login,
          keepClientAlive: function(clientID, settings) {
            const endPoint = `${baseUrl}/clients/keepAlive/${clientID}`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_POST
              }, settings));
            });
          },
          getClientsSessionTimeoutSeconds: function(settings) {
            const endPoint = `${baseUrl}/clients/sessionTimeout`;
            return login().then(function(authorizationToken) {
              return _ajax(endPoint, __spreadValues({
                headers: getHeaders(authorizationToken),
                method: HTTP_GET
              }, settings));
            }).then(function(sessionTimeoutData) {
              return sessionTimeoutData.clientSessionTimeout;
            });
          }
        };
      }
      function UIController(options) {
        var stateFlags = {
          ExportInProgress: 1 << 0,
          PrintInProgress: 1 << 1,
          RenderInProgress: 1 << 2
        };
        function getState(flags) {
          return (state & flags) != 0;
        }
        function setState(flags, value) {
          if (value) {
            state |= flags;
          } else {
            state &= ~flags;
          }
        }
        var controller = options.controller;
        var historyManager = options.history;
        var state = 0;
        var refreshUI;
        var commands = options.commands;
        if (!controller) {
          throw "No controller (telerikReporting.ReportViewerController) has been specified.";
        }
        function getDocumentMapState() {
          var args = {};
          controller.getDocumentMapState(args);
          return args;
        }
        function getParametersAreaState() {
          var args = {};
          controller.getParametersAreaState(args);
          return args;
        }
        function getSearchDialogState() {
          var args = {};
          controller.getSearchDialogState(args);
          return args;
        }
        function getSendEmailDialogState() {
          var args = {};
          controller.getSendEmailDialogState(args);
          return args;
        }
        function updateUI() {
          if (!refreshUI) {
            refreshUI = true;
            window.setTimeout(function() {
              try {
                updateUICore();
              } finally {
                refreshUI = false;
              }
            }, 10);
          }
        }
        function updateUICore() {
          var rs = controller.getReportSource();
          var pageCount = controller.getPageCount();
          var currentPageNumber = controller.getCurrentPageNumber();
          var hasReport = rs && rs.report;
          var hasPages = hasReport && pageCount > 0;
          var nextPage = hasPages && currentPageNumber < pageCount;
          var prevPage = hasPages && currentPageNumber > 1;
          var hasPage = hasPages && currentPageNumber;
          var documentMapState = getDocumentMapState();
          var parametersAreaState = getParametersAreaState();
          var searchDialogState = getSearchDialogState();
          var sendEmailDialogState = getSendEmailDialogState();
          var renderInProgress = getState(stateFlags.RenderInProgress);
          var printInProgress = getState(stateFlags.PrintInProgress);
          var exportInProgress = getState(stateFlags.ExportInProgress);
          commands.goToFirstPage.enabled(prevPage);
          commands.goToPrevPage.enabled(prevPage);
          commands.stopRendering.enabled(hasReport && renderInProgress);
          commands.goToLastPage.enabled(nextPage);
          commands.goToNextPage.enabled(nextPage);
          commands.goToPage.enabled(hasPages);
          commands.print.enabled(hasPages && !renderInProgress && !printInProgress);
          commands.export.enabled(hasPages && !renderInProgress && !exportInProgress);
          commands.refresh.enabled(hasReport);
          commands.historyBack.enabled(historyManager && historyManager.canMoveBack());
          commands.historyForward.enabled(historyManager && historyManager.canMoveForward());
          commands.toggleDocumentMap.enabled(hasReport && documentMapState.enabled).checked(documentMapState.enabled && documentMapState.visible);
          commands.toggleParametersArea.enabled(hasReport && parametersAreaState.enabled).checked(parametersAreaState.enabled && parametersAreaState.visible);
          commands.togglePrintPreview.enabled(hasPages).checked(controller.getViewMode() == ViewModes.PRINT_PREVIEW);
          commands.pageMode.enabled(hasPages).checked(controller.getPageMode() == PageModes.CONTINUOUS_SCROLL);
          commands.zoom.enabled(hasPage);
          commands.zoomIn.enabled(hasPage);
          commands.zoomOut.enabled(hasPage);
          commands.toggleZoomMode.enabled(hasPage).checked(controller.getScaleMode() == ScaleModes.FIT_PAGE || controller.getScaleMode() == ScaleModes.FIT_PAGE_WIDTH);
          commands.toggleSearchDialog.enabled(hasPages).checked(searchDialogState.visible);
          commands.toggleSendEmailDialog.enabled(hasPages).checked(sendEmailDialogState.visible);
          controller.updateUI(null);
          controller.pageNumberChange(currentPageNumber);
          controller.pageCountChange(pageCount);
        }
        controller.setParametersAreaVisible(updateUI);
        controller.setDocumentMapVisible(updateUI);
        controller.updateUIInternal(updateUI);
        controller.setSearchDialogVisible(updateUI);
        controller.setSendEmailDialogVisible(updateUI);
        controller.scaleModeChanged(updateUI);
        controller.currentPageChanged(updateUI);
        controller.beforeLoadReport(function() {
          setState(stateFlags.RenderInProgress, true);
          updateUI();
        });
        controller.reportLoadProgress(updateUI);
        controller.reportLoadComplete(function() {
          setState(stateFlags.RenderInProgress, false);
          updateUI();
        });
        controller.reportSourceChanged(updateUI);
        controller.viewModeChanged(updateUI);
        controller.pageModeChanged(function() {
          updateUI();
        });
        controller.setUIState(function(event2, args) {
          setState(stateFlags[args.operationName], args.inProgress);
          updateUI();
        });
        controller.error(function() {
          setState(stateFlags.ExportInProgress, false);
          setState(stateFlags.PrintInProgress, false);
          setState(stateFlags.RenderInProgress, false);
          updateUI();
        });
        controller.renderingStopped(function() {
          setState(stateFlags.RenderInProgress, false);
          updateUI();
        });
        updateUI();
      }
      var defaultOptions$3 = {};
      function DocumentMapArea(placeholder, options, otherOptions) {
        options = $.extend({}, defaultOptions$3, options, otherOptions);
        var controller = options.controller;
        if (!controller) {
          throw "No controller (telerikReporting.reportViewerController) has been specified.";
        }
        var $placeholder = $(placeholder);
        var $documentMap;
        var documentMapVisible = options.documentMapVisible !== false;
        var enableAccessibility = options.enableAccessibility;
        var currentReport = null;
        var documentMapNecessary = false;
        init();
        function init() {
          $documentMap = $('<div id="' + options.viewerSelector + '-documentMap"></div>');
          $documentMap.appendTo(placeholder);
          attach();
          replaceStringResources2($placeholder);
        }
        function onTreeViewSelectionChanged(e) {
          var documentMapNode = this.dataItem(e.node);
          var page = documentMapNode.page;
          var id = documentMapNode.id;
          controller.navigateToPage(page, {
            type: "bookmark",
            id
          });
        }
        function onTreeViewNodeExpand(e) {
          if (enableAccessibility) {
            window.setTimeout(function() {
              setNodeAccessibilityAttributes(e.node);
            }, 100);
          }
        }
        function setNodeAccessibilityAttributes(node) {
          var $items = $(node).find("li");
          Array.from($items).forEach((item) => {
            var $li = $(item);
            $li.attr("aria-label", $li[0].innerText);
          });
        }
        function resetReportAndClearItems() {
          documentMapNecessary = false;
          showDocumentMap(false);
          var r = controller.getReportSource().report;
          var clearMapItems = currentReport !== r || !isVisible();
          currentReport = r;
          if (clearMapItems) {
            clearDocumentMap();
          }
        }
        function clearDocumentMap() {
          displayDocumentMap([]);
        }
        function displayDocumentMap(documentMap) {
          var hasDocumentMap = documentMap && !$.isEmptyObject(documentMap);
          var $treeView = $documentMap.data("kendoTreeView");
          if (!$treeView) {
            try {
              $documentMap.kendoTreeView({
                dataTextField: "text",
                select: onTreeViewSelectionChanged
              });
              $treeView = $documentMap.data("kendoTreeView");
            } catch (e) {
              console.error("Instantiation of Kendo TreeView as Document Map threw an exception", e);
              throw e;
            }
          }
          $treeView.setDataSource(documentMap);
          if (enableAccessibility) {
            setAccessibilityAttributes($treeView);
          }
          showDocumentMap(hasDocumentMap);
        }
        function setAccessibilityAttributes(treeView) {
          treeView.bind("expand", onTreeViewNodeExpand);
          treeView.element.attr("aria-label", stringResources.ariaLabelDocumentMap);
          var listItems = treeView.element.find("ul");
          Array.from(listItems).forEach((list) => {
            setNodeAccessibilityAttributes(list);
          });
          if (documentMapNecessary) {
            setSplitbarAccessibilityAttributes();
          }
        }
        function setSplitbarAccessibilityAttributes() {
          var splitbar = $placeholder.next();
          if (options.documentMapAreaPosition === DocumentMapAreaPositions.RIGHT) {
            splitbar = $placeholder.prev();
          }
          splitbar.attr("aria-label", stringResources.ariaLabelDocumentMapSplitter);
        }
        function isVisible() {
          var args = {};
          controller.getDocumentMapState(args);
          return args.visible;
        }
        function beginLoad() {
          $placeholder.addClass("trv-loading");
        }
        function endLoad() {
          $placeholder.removeClass("trv-loading");
        }
        function showDocumentMap(show) {
          var splitter = GlobalSettings.viewerInstances.find((element) => element.id === options.viewerSelector + "-document-map-splitter").instance;
          var sibling = $placeholder.next();
          if (options.documentMapAreaPosition === DocumentMapAreaPositions.RIGHT) {
            sibling = $placeholder.prev();
          }
          if (splitter) {
            (documentMapNecessary ? $.fn.removeClass : $.fn.addClass).call(sibling, "trv-hidden");
            splitter.toggle(".trv-document-map", show);
          }
        }
        function attach() {
          controller.beforeLoadParameters(function() {
            resetReportAndClearItems();
          }).beginLoadReport(function() {
            beginLoad();
          }).reportLoadComplete(function(event2, args) {
            if (args.documentMapAvailable) {
              documentMapNecessary = true;
              displayDocumentMap(args.documentMapNodes);
              controller.setDocumentMapVisible({ enabled: true, visible: documentMapVisible });
            } else {
              documentMapNecessary = false;
              showDocumentMap(documentMapNecessary);
            }
            endLoad();
          }).error(function(event2, error) {
            endLoad();
            clearDocumentMap();
          }).renderingStopped(function() {
            documentMapNecessary = false;
            showDocumentMap(false);
          });
          controller.setDocumentMapVisible(function(event2, args) {
            documentMapVisible = args.visible;
            showDocumentMap(documentMapVisible && documentMapNecessary);
          }).getDocumentMapState(function(event2, args) {
            args.enabled = documentMapNecessary;
            args.visible = documentMapVisible;
          });
        }
        function replaceStringResources2($documentMap2) {
          var $documentMapOverlay = $documentMap2.find(".trv-document-map-overlay");
          if (!$documentMapOverlay) {
            return;
          }
          $documentMapOverlay.attr("aria-label", stringResources[$documentMapOverlay.attr("aria-label")]);
        }
      }
      var defaultOptions$2 = {};
      var Events = {
        PARAMETERS_READY: "pa.parametersReady",
        ERROR: "pa.Error"
      };
      function ParametersArea(placeholder, options, otherOptions) {
        options = $.extend({}, defaultOptions$2, options, otherOptions);
        var parametersArea = {};
        var $parametersArea = $(parametersArea);
        var editors = {};
        var controller = options.controller;
        if (!controller) {
          throw "No controller (telerikReporting.reportViewerController) has been specified.";
        }
        var parameterEditors = ParameterEditors;
        if (options.parameterEditors && options.parameterEditors.length > 0) {
          parameterEditors = [].concat(options.parameterEditors, ParameterEditors);
        }
        var recentParameterValues;
        var parameters;
        var initialParameterValues;
        var processedParameterValues = void 0;
        var $placeholder = $(placeholder);
        var $content = $placeholder.find(".trv-parameters-area-content");
        var $errorMessage = $placeholder.find(".trv-error-message");
        var $previewButton = $placeholder.find(".trv-parameters-area-preview-button");
        $previewButton.text(stringResources[$previewButton.text()]);
        $previewButton.attr("aria-label", stringResources[$previewButton.attr("aria-label")]);
        $previewButton.on("click", function(e) {
          e.preventDefault();
          if (allParametersValid()) {
            applyParameters();
          }
        });
        var parameterContainerTemplate = options.templates["trv-parameter"];
        var parametersAreaVisible = options.parametersAreaVisible !== false;
        var enableAccessibility = options.enableAccessibility;
        init();
        function init() {
          replaceStringResources2($placeholder);
        }
        function replaceStringResources2($paramsArea) {
          var $previewButton2 = $paramsArea.find(".trv-parameters-area-preview-button");
          if (!$previewButton2) {
            return;
          }
          $previewButton2.attr("aria-label", stringResources[$previewButton2.attr("aria-label")]);
          $previewButton2.text(stringResources[$previewButton2.text()]);
        }
        function toggleElementDisplay(el, shouldHide) {
          el.style.display = shouldHide ? "none" : "";
        }
        function createParameterContainer() {
          return $(parameterContainerTemplate);
        }
        function createParameterUI(parameter) {
          var $container = createParameterContainer();
          var $editorPlaceholder = $container.find(".trv-parameter-value");
          var $title = $container.find(".trv-parameter-title");
          var $error = $container.find(".trv-parameter-error");
          var $errorMessage2 = $container.find(".trv-parameter-error-message");
          var $useDefaultValueCheckbox = $container.find(".trv-parameter-use-default input");
          var editorsTypes = options.parameters && options.parameters.editors ? options.parameters.editors : null;
          var editorFactory = selectParameterEditorFactory(parameter, editorsTypes);
          var parameterText = escapeHtml(parameter.text);
          var isHiddenParameter = !parameter.isVisible;
          if (isHiddenParameter) {
            parameterText += " [<b>hidden</b>]";
          }
          $title.html(parameterText).attr("title", parameterText);
          $errorMessage2.text(parameter.Error);
          (parameter.Error ? $.fn.show : $.fn.hide).call($error);
          var editor = editorFactory.createEditor(
            $editorPlaceholder,
            {
              templates: options.templates,
              parameterChanged: function(parameter2, newValue) {
                var invalidParameterLI = document.querySelector(".trv-pages-area .trv-error-message ul li." + parameter2.name);
                try {
                  newValue = ParameterValidators.validate(parameter2, newValue);
                  $error.hide();
                  if (invalidParameterLI) {
                    toggleElementDisplay(invalidParameterLI, true);
                  }
                  onParameterChanged(parameter2, newValue);
                } catch (error) {
                  if (invalidParameterLI) {
                    toggleElementDisplay(invalidParameterLI, false);
                  }
                  parameter2.Error = error;
                  parameter2.value = [];
                  $errorMessage2.text(error);
                  $error.show();
                  enablePreviewButton(false);
                } finally {
                  setAccessibilityErrorState(parameter2);
                }
              },
              enableAccessibility
            }
          );
          editors[parameter.id] = editor;
          editor.beginEdit(parameter);
          if (enableAccessibility && !isHiddenParameter) {
            editor.addAccessibility(parameter);
          }
          if ($useDefaultValueCheckbox.length > 0) {
            $useDefaultValueCheckbox.on(
              "click",
              function() {
                var useDefaultValue = $(this).is(":checked");
                if (useDefaultValue) {
                  delete recentParameterValues[parameter.id];
                  delete initialParameterValues[parameter.id];
                  invalidateChildParameters(parameter);
                  updateParameters(onLoadParametersSuccess);
                } else {
                  recentParameterValues[parameter.id] = parameter.value;
                  initialParameterValues[parameter.id] = parameter.value;
                }
                editor.enable(!useDefaultValue);
                raiseParametersReady();
              }
            );
            var hasInitialValues = initialParameterValues !== null;
            if (hasInitialValues) {
              if (!(parameter.id in initialParameterValues)) {
                $useDefaultValueCheckbox.prop("checked", true);
                editor.enable(false);
              }
            } else if (isHiddenParameter) {
              $useDefaultValueCheckbox.prop("checked", true);
              editor.enable(false);
            }
          }
          return $container;
        }
        function setAccessibilityErrorState(parameter) {
          var editor = editors[parameter.id];
          if (!editor || !enableAccessibility) {
            return;
          }
          editor.setAccessibilityErrorState(parameter);
        }
        function enablePreviewButton(enabled) {
          if (enabled) {
            $previewButton.prop("disabled", false);
            $previewButton.removeClass("k-disabled");
          } else {
            $previewButton.prop("disabled", true);
            $previewButton.addClass("k-disabled");
          }
        }
        function selectParameterEditorFactory(parameter, editorsType) {
          var factory = Array.from(parameterEditors).find((editor) => {
            return editor.match(parameter, editorsType);
          });
          return factory;
        }
        function showError(error) {
          $errorMessage.text(error);
          (error ? $.fn.addClass : $.fn.removeClass).call($placeholder, "trv-error");
        }
        function showPreviewButton() {
          (allParametersAutoRefresh() && controller.isReportAutoRun() ? $.fn.removeClass : $.fn.addClass).call($placeholder, "preview");
        }
        function allParametersAutoRefresh() {
          var allAuto = Array.from(parameters).every((parameter) => {
            return !parameter.isVisible || parameter.autoRefresh;
          });
          return allAuto;
        }
        function allParametersValid() {
          var allValid = Array.from(parameters).every((parameter) => {
            return !parameter.Error;
          });
          return allValid;
        }
        function clearEditors() {
          Object.entries(editors).forEach(([key, editor]) => {
            if (typeof editor.destroy === "function") {
              editor.destroy();
            }
          });
          editors = {};
        }
        function fill(newParameters) {
          recentParameterValues = {};
          processedParameterValues = {};
          parameters = newParameters || [];
          clearEditors();
          var $parameterContainer;
          var $tempContainer = $("<div></div>");
          Array.from(parameters).forEach((parameter) => {
            try {
              parameter.value = ParameterValidators.validate(parameter, parameter.value);
            } catch (e) {
              parameter.Error = parameter.Error || e;
            }
            var hasError = Boolean(parameter.Error);
            var hasValue = !hasError;
            if (hasValue) {
              recentParameterValues[parameter.id] = parameter.value;
            } else {
              parameter.Error = stringResources.invalidParameter;
            }
            if (parameter.availableValues) {
              processedParameterValues[parameter.id] = { valueMember: parameter.value, displayMember: parameter.label, availableValues: parameter.availableValues, multivalue: parameter.multivalue };
            } else {
              processedParameterValues[parameter.id] = parameter.value;
            }
            if (parameter.isVisible || options.showHiddenParameters) {
              $parameterContainer = createParameterUI(parameter);
              if ($parameterContainer) {
                $tempContainer.append($parameterContainer);
              }
            }
          });
          if (initialParameterValues !== void 0) {
            if (null === initialParameterValues) {
              initialParameterValues = {};
              Array.from(parameters).forEach((parameter) => {
                if (parameter.isVisible) {
                  initialParameterValues[parameter.id] = parameter.value;
                } else {
                  delete recentParameterValues[parameter.id];
                }
              });
            } else {
              Array.from(parameters).forEach((parameter) => {
                if (!(parameter.id in initialParameterValues)) {
                  delete recentParameterValues[parameter.id];
                }
              });
            }
          }
          $content.empty();
          if (parameters.length > 0) {
            $content.append($tempContainer.children());
            if (enableAccessibility) {
              $content.attr("aria-label", "Parameters area. Contains " + parameters.length + " parameters.");
            }
          }
          showPreviewButton();
          var allValid = allParametersValid();
          enablePreviewButton(allValid);
          applyProcessedParameters();
        }
        function applyParameters() {
          controller.setParameters($.extend({}, recentParameterValues));
          controller.previewReport(false);
        }
        function applyProcessedParameters() {
          controller.setProcessedParameter($.extend({}, processedParameterValues));
        }
        function allParametersValidForAutoRefresh() {
          var triggerAutoUpdate = true;
          for (var i = parameters.length - 1; triggerAutoUpdate && i >= 0; i--) {
            var p = parameters[i];
            triggerAutoUpdate = p.id in recentParameterValues && (Boolean(p.autoRefresh) || !p.isVisible);
          }
          return triggerAutoUpdate;
        }
        function raiseParametersReady() {
          parametersArea.parametersReady(recentParameterValues);
        }
        function tryRefreshReport() {
          raiseParametersReady();
          if (allParametersValidForAutoRefresh()) {
            applyParameters();
          }
        }
        function invalidateChildParameters(parameter) {
          if (parameter.childParameters) {
            Array.from(parameter.childParameters).forEach((parameterId) => {
              var childParameter = getParameterById(parameterId);
              if (childParameter) {
                invalidateChildParameters(childParameter);
              }
              delete recentParameterValues[parameterId];
              resetPendingParameterChange(parameterId);
            });
          }
        }
        function resetPendingParameterChange(parameterId) {
          if (editors) {
            var editor = editors[parameterId];
            if (editor && typeof editor.clearPendingChange === "function") {
              editor.clearPendingChange();
            }
          }
        }
        function onParameterChanged(parameter, newValue) {
          delete parameter["Error"];
          parameter.value = newValue;
          recentParameterValues[parameter.id] = newValue;
          if (initialParameterValues !== void 0) {
            if (parameter.id in initialParameterValues) {
              recentParameterValues[parameter.id] = newValue;
            }
          } else {
            recentParameterValues[parameter.id] = newValue;
          }
          invalidateChildParameters(parameter);
          if (parameter.childParameters) {
            updateParameters(tryRefreshReport);
          } else {
            var allValid = allParametersValid();
            enablePreviewButton(allValid);
            if (allValid) {
              var errorMsg = document.querySelector(".trv-pages-area .trv-error-message");
              if ($previewButton.is(":visible") && errorMsg) {
                errorMsg.textContent = stringResources.tryReportPreview;
              }
              tryRefreshReport();
            }
          }
        }
        function getParameterById(parameterId) {
          if (parameters) {
            for (var i = 0; i < parameters.length; i++) {
              var p = parameters[i];
              if (p.id === parameterId) {
                return p;
              }
            }
          }
          return null;
        }
        function hasVisibleParameters(params) {
          if (!params || null === params) {
            return false;
          }
          var hasVisible = Array.from(params).some((parameter) => {
            return parameter.isVisible;
          });
          return hasVisible;
        }
        var loadingCount = 0;
        function beginLoad() {
          loadingCount++;
          $placeholder.addClass("trv-loading");
        }
        function endLoad() {
          if (loadingCount > 0) {
            if (0 === --loadingCount) {
              $placeholder.removeClass("trv-loading");
            }
          }
        }
        var parametersAreaNecessary = false;
        function onLoadParametersComplete(params, successAction) {
          showParametersAreaIfNecessary(params);
          fill(params);
          showError("");
          if (parametersAreaNecessary && parametersAreaVisible) {
            showParametersArea(true);
            if (enableAccessibility) {
              setSplitbarAccessibilityAttributes();
            }
          }
          controller.updateUIInternal();
          if (typeof successAction === "function") {
            successAction();
          }
          endLoad();
        }
        function showParametersAreaIfNecessary(params) {
          parametersAreaNecessary = hasVisibleParameters(params) || !controller.isReportAutoRun();
          showParametersArea(parametersAreaVisible && parametersAreaNecessary);
        }
        function updateParameters(successAction) {
          acceptParameters(controller.loadParameters(recentParameterValues), successAction);
        }
        function acceptParameters(controllerLoadParametersPromise, successAction) {
          beginLoad();
          controllerLoadParametersPromise.then(function(parameters2) {
            onLoadParametersComplete(parameters2, successAction);
          }).catch(function(error) {
            endLoad();
            clear();
            if (!$placeholder.hasClass("trv-hidden")) {
              showError(error);
            }
            parametersArea.error(error);
          });
        }
        function getEventHandlerFromArguments(args) {
          var arg0;
          if (args && args.length) {
            arg0 = args[0];
          }
          if (typeof arg0 === "function") {
            return arg0;
          }
          return null;
        }
        function eventFactory(event2, args) {
          var h = getEventHandlerFromArguments(args);
          if (h) {
            $parametersArea.on(event2, h);
          } else {
            $parametersArea.trigger(event2, args);
          }
          return controller;
        }
        function onLoadParametersSuccess() {
          if (initialParameterValues === null) {
            initialParameterValues = $.extend({}, recentParameterValues);
          }
          raiseParametersReady();
        }
        function showParametersArea(show) {
          var splitter = GlobalSettings.viewerInstances.find((element) => element.id === options.viewerSelector + "-parameters-splitter");
          if (!splitter) {
            return;
          }
          var sibling = $placeholder.prev();
          if (options.parametersAreaPosition === ParametersAreaPositions.TOP || options.parametersAreaPosition === ParametersAreaPositions.LEFT) {
            sibling = $placeholder.next();
          }
          (parametersAreaNecessary ? $.fn.removeClass : $.fn.addClass).call(sibling, "trv-hidden");
          splitter.instance.toggle(".trv-parameters-area", show);
        }
        function setSplitbarAccessibilityAttributes() {
          var splitbar = $placeholder.prev();
          var tabIndex = $placeholder.find(".trv-parameters-area-content").attr("tabIndex");
          if (options.parametersAreaPosition === ParametersAreaPositions.TOP || options.parametersAreaPosition === ParametersAreaPositions.LEFT) {
            splitbar = $placeholder.next();
          }
          splitbar.attr("aria-label", stringResources.ariaLabelParametersAreaSplitter);
          splitbar.attr("tabIndex", tabIndex);
        }
        function onReloadParameters(event2, controllerLoadParametersPromise) {
          showError();
          $content.empty();
          acceptParameters(controllerLoadParametersPromise, onLoadParametersSuccess);
        }
        controller.reloadParameters(onReloadParameters).beforeLoadReport(function() {
          loadingCount = 0;
          beginLoad();
        }).reportLoadComplete(function() {
          showParametersAreaIfNecessary(parameters);
          showPreviewButton();
        }).error(endLoad).pageReady(endLoad);
        controller.getParametersAreaState(function(event2, args) {
          var parametersAreaNecessary2 = false;
          if (parameters) {
            parametersAreaNecessary2 = hasVisibleParameters(parameters) || !controller.isReportAutoRun();
          }
          args.enabled = parametersAreaNecessary2;
          args.visible = parametersAreaVisible;
        }).setParametersAreaVisible(function(event2, args) {
          parametersAreaVisible = args.visible;
          showParametersArea(args.visible && (hasVisibleParameters(parameters) || !controller.isReportAutoRun()));
        });
        function clear() {
          fill([]);
        }
        $.extend(
          parametersArea,
          {
            allParametersValid: function() {
              return allParametersValid();
            },
            clear: function() {
              clear();
            },
            error: function() {
              return eventFactory(Events.ERROR, arguments);
            },
            parametersReady: function() {
              return eventFactory(Events.PARAMETERS_READY, arguments);
            },
            fill: function(parameters2) {
              return fill(parameters2);
            },
            setParameters: function(parameterValues) {
              initialParameterValues = null === parameterValues ? null : $.extend({}, parameterValues);
            }
          }
        );
        return parametersArea;
      }
      var lastSelectedMenuItem;
      var lastSelectedSubmenuItem;
      function MainMenu(dom, rootOptions, otherOptions) {
        var options = $.extend({}, rootOptions, otherOptions);
        var menu = $(dom).data("kendoMenu");
        var childrenL1 = dom.childNodes;
        var controller = options.controller;
        var enableAccessibility = options.enableAccessibility;
        if (!controller) {
          throw "No controller (telerikReporting.ReportViewerController) has been specified.";
        }
        if (!menu) {
          init();
        }
        controller.reportLoadComplete(function(e, args) {
          if (!enableAccessibility) {
            if (menu && menu._oldHoverItem) {
              menu._oldHoverItem.toggleClass("k-focus");
            }
          }
          if (!args.renderingExtensions) {
            controller.getDocumentFormats().then(fillFormats);
          } else {
            fillFormats(args.renderingExtensions);
          }
        });
        function init() {
          try {
            menu = $(dom).kendoMenu().data("kendoMenu");
          } catch (e) {
            console.error("Instantiation of Kendo Menu as Main Menu threw an exception", e);
            throw e;
          }
          menu.bind("activate", onSubmenuActivate);
          menu.bind("deactivate", onSubmenuDeactivate);
          menu.element.off("keydown", onMenuKeyDown);
          menu.element.on("keydown", onMenuKeyDown);
          if (options.enableAccessibility) {
            setTabIndexes();
          }
          replaceStringResources2();
        }
        function setTabIndexes() {
          var $menus = $('[data-role="telerik_ReportViewer_MainMenu"]');
          Array.from($menus).forEach((menu2) => {
            var $menuArea = $(menu2);
            var listItems = $menuArea.find("li");
            var menuTabIndex = 0;
            var tabIndexAttr = $menuArea.attr("tabIndex");
            if (tabIndexAttr) {
              menuTabIndex = tryParseInt(tabIndexAttr);
              if (!menuTabIndex || isNaN(menuTabIndex)) {
                menuTabIndex = 0;
              }
            }
            setMenuItemsTabIndexes(listItems, menuTabIndex);
            var pager = listItems.find('input[data-role="telerik_ReportViewer_PageNumberInput"]');
            if (pager.length > 0) {
              pager.attr("tabindex", menuTabIndex);
            }
          });
        }
        function setMenuItemsTabIndexes(listItems, menuTabIndex) {
          Array.from(listItems).forEach((item) => {
            var $item = $(item);
            $item.attr("tabindex", menuTabIndex);
            $item.on("focus", (event2) => {
              $item.addClass("k-focus");
            });
            $item.on("blur", (event2) => {
              $item.removeClass("k-focus");
            });
            var anchor = $item.children("a");
            if (anchor.length > 0) {
              var $anchor = $(anchor);
              $anchor.attr("tabindex", -1);
              $item.attr("title", $anchor.attr("title"));
            }
            $item.off("keydown");
            $item.on("keydown", function(event2) {
              if (event2.which == kendo.keys.ENTER) {
                clickOnMenuItem($item);
                lastSelectedMenuItem = $item;
              }
            });
          });
        }
        function fillFormats(formats) {
          Array.from($(dom).find("ul[data-command-list=export-format-list]")).forEach((list) => {
            var $list = $(list);
            var $parent = $list.parents("li");
            var tabIndex = enableAccessibility ? $parent.attr("tabindex") : -1;
            if (!tabIndex) {
              tabIndex = 1;
            }
            $list.empty();
            Array.from(formats).forEach((format) => {
              var ariaLabel = enableAccessibility ? stringFormat('aria-label="{localizedName}" ', format) : " ";
              var li = "<li " + ariaLabel + stringFormat('tabindex="' + tabIndex + '"><a tabindex="-1" href="#" data-command="telerik_ReportViewer_export" data-command-parameter="{name}"><span>{localizedName}</span></a></li>', format);
              menu.append(li, $parent);
            });
            if (enableAccessibility) {
              setInternalListAccessibilityKeyEvents($parent.find("li"));
            }
          });
        }
        function setInternalListAccessibilityKeyEvents(listItems) {
          Array.from(listItems).forEach((item) => {
            var $item = $(item);
            $item.off("keydown");
            $item.on("keydown", (event2) => {
              switch (event2.which) {
                case kendo.keys.ENTER:
                  clickOnMenuItem($item);
                  break;
                case kendo.keys.UP:
                  var $prev = $item.prev();
                  if ($prev.length > 0) {
                    $prev.trigger("focus");
                  } else {
                    $item.parents("li").trigger("focus");
                  }
                  break;
                case kendo.keys.DOWN:
                  var $next = $item.next();
                  if ($next.length > 0) {
                    $next.trigger("focus");
                  } else {
                    $item.parent().children("li").first().trigger("focus");
                  }
                  break;
              }
            });
          });
        }
        function clickOnMenuItem(item) {
          if (isItemExportContainer(item)) {
            clickOnExportDropdown();
          } else if (item && item.length > 0) {
            var anchor = item.children("a");
            if (anchor.length > 0) {
              anchor.click();
            }
          }
        }
        function clickOnExportDropdown() {
          var dropDownItemID = "#trv-main-menu-export-command";
          var mainMenu = $("[data-role='telerik_ReportViewer_MainMenu']").data("kendoMenu");
          mainMenu.open(dropDownItemID);
        }
        function onSubmenuActivate(e) {
          var $item = $(e.item);
          focusOnFirstSubmenuItem($item);
        }
        function onSubmenuDeactivate(e) {
          lastSelectedSubmenuItem = void 0;
        }
        function focusOnFirstSubmenuItem(parentItem) {
          if (lastSelectedMenuItem && lastSelectedMenuItem.is(parentItem)) {
            window.setTimeout(function() {
              var li = parentItem.find("li");
              if (li.length > 0) {
                li[0].focus();
              }
            }, 100);
          }
        }
        function onMenuKeyDown(e) {
          switch (e.which) {
            case kendo.keys.ENTER:
              if (!enableAccessibility) {
                var $item = getFocusedItem();
                if ($item.length > 0) {
                  if (isItemExportContainer($item) && lastSelectedSubmenuItem) {
                    $item = lastSelectedSubmenuItem;
                  }
                  clickOnMenuItem($item);
                }
              }
              break;
            case kendo.keys.RIGHT:
              enableAccessibility ? focusNextItemAccessibilitySelection() : focusNextItemNativeMenuSelection();
              break;
            case kendo.keys.LEFT:
              enableAccessibility ? focusPreviousItemAccessibilitySelection() : focusPreviousItemNativeMenuSelection();
              break;
            case kendo.keys.DOWN:
            case kendo.keys.UP:
              if (!enableAccessibility) {
                lastSelectedSubmenuItem = getKendoFocusedNestedItem();
              }
          }
        }
        function getFocusedItem() {
          var $item;
          var focusedItem = document.activeElement;
          if (focusedItem && focusedItem.localName == "li") {
            var items = $(childrenL1).filter("li.k-item");
            for (var i = 0; i < items.length; i++) {
              var listItem = items[i];
              if (focusedItem === listItem) {
                $item = $(listItem);
                break;
              }
            }
          } else if (focusedItem && focusedItem.localName == "input") {
            $item = $(focusedItem).closest("li.k-item");
          } else {
            $item = menu.element.children("li.k-item.k-focus");
            if ($item.length === 0) {
              $item = menu.element.children("li.k-item").first();
            }
          }
          return $item;
        }
        function focusNextItemAccessibilitySelection() {
          var $item = getFocusedItem();
          if (!$item || !$item.length > 0) {
            return;
          }
          var $next = $item.next();
          if ($next.css("display") == "none") {
            $next = $next.next();
          }
          if (!$next.length > 0) {
            $next = $(childrenL1).filter("li.k-item").first();
          }
          $next.focus();
        }
        var lastKendoFocusedItem;
        function focusNextItemNativeMenuSelection() {
          var allItems = menu.element.children("li.k-item");
          var $focused = allItems.filter(".k-focus");
          if (kendo.version >= "2017.3.913") {
            lastKendoFocusedItem = $focused;
            return;
          }
          if ($focused.hasClass("k-disabled")) {
            if (!lastKendoFocusedItem || $focused.is(lastKendoFocusedItem)) {
              var $next = $focused.next();
              if (!$next.length > 0) {
                $next = allItems.first();
              }
              $focused.toggleClass("k-focus");
              $next.toggleClass("k-focus");
              lastKendoFocusedItem = $next;
              menu._oldHoverItem = $next;
            } else {
              lastKendoFocusedItem = $focused;
            }
          } else {
            menu._oldHoverItem = $focused;
            lastKendoFocusedItem = $focused;
          }
        }
        function focusPreviousItemAccessibilitySelection() {
          var $item = getFocusedItem();
          if (!$item || !$item.length > 0) {
            return;
          }
          var $prev = $item.prev();
          if ($prev.css("display") == "none") {
            $prev = $prev.prev();
          }
          if (!$prev.length > 0) {
            $prev = $(childrenL1).filter("li.k-item").last();
          }
          $prev.focus();
        }
        function focusPreviousItemNativeMenuSelection() {
          var $focused = menu.element.children("li.k-item.k-focus");
          lastKendoFocusedItem = $focused;
        }
        function getKendoFocusedNestedItem() {
          var $focused = menu.element.find('li.k-item.k-focus [data-command="telerik_ReportViewer_export"]');
          if ($focused.length === 1) {
            return $focused.parent("li");
          }
          return void 0;
        }
        function isItemExportContainer(item) {
          if (item.length === 0) {
            return;
          }
          var id = item.attr("id");
          return id == "trv-main-menu-export-command" || id == "trv-side-menu-export-command";
        }
        function replaceStringResources2() {
          var menuAreas = findMenuArea();
          if (!menuAreas) {
            return;
          }
          Array.from(menuAreas).forEach((menu2) => {
            var $menu = $(menu2);
            var menuItems = $menu.children("li.k-item");
            $menu.attr("aria-label", stringResources[$menu.attr("aria-label")]);
            Array.from(menuItems).forEach((menuItem) => {
              var $menuItem = $(menuItem);
              $menuItem.attr("aria-label", stringResources[$menuItem.attr("aria-label")]);
              if (!$menuItem.hasClass("trv-report-pager")) {
                var $a = $menuItem.find("a");
                if ($a) {
                  $a.attr("title", stringResources[$a.attr("title")]);
                }
              } else {
                $menuItem.attr("title", stringResources[$menuItem.attr("title")]);
              }
            });
          });
        }
        function findMenuArea() {
          return $("ul[data-role=telerik_ReportViewer_MainMenu]");
        }
      }
      var defaultOptions$1 = {};
      function replaceStringResources$1($search) {
        if (!$search) {
          return;
        }
        var $searchCaption = $search.find(".trv-search-dialog-caption-label");
        var $searchOptions = $search.find(".trv-search-dialog-search-options");
        var $searchStopButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_StopSearch']");
        var $searchMatchCaseButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_MatchCase']");
        var $searchMatchWholeWordButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_MatchWholeWord']");
        var $searchUseRegexButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_UseRegex']");
        var $searchNavigateUpButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_NavigateUp']");
        var $searchNavigateDownButton = $search.find("a[data-command='telerik_ReportViewer_searchDialog_NavigateDown']");
        replaceAttribute$1($search, "aria-label");
        replaceAttribute$1($searchOptions, "aria-label");
        replaceText$1($searchCaption);
        replaceTitleAndAriaLabel($searchStopButton);
        replaceTitleAndAriaLabel($searchMatchCaseButton);
        replaceTitleAndAriaLabel($searchMatchWholeWordButton);
        replaceTitleAndAriaLabel($searchUseRegexButton);
        replaceTitleAndAriaLabel($searchNavigateUpButton);
        replaceTitleAndAriaLabel($searchNavigateDownButton);
      }
      function replaceTitleAndAriaLabel($a) {
        replaceAttribute$1($a, "title");
        replaceAttribute$1($a, "aria-label");
      }
      function replaceText$1($el) {
        if ($el) {
          $el.text(stringResources[$el.text()]);
        }
      }
      function replaceAttribute$1($el, attribute) {
        if ($el) {
          $el.attr(attribute, stringResources[$el.attr(attribute)]);
        }
      }
      class Search {
        constructor(element, options, viewerOptions) {
          this.options = $.extend({}, defaultOptions$1, options);
          this.viewerOptions = viewerOptions;
          this.element = element;
          this.controller = this.options.controller;
          this.initialized = false;
          this.dialogVisible = false;
          this.$element;
          this.$inputBox;
          this.$searchOptionsPlaceholder;
          this.searchOptionsMenu;
          this.$stopSearchPlaceholder;
          this.stopSearchMenu;
          this.$navigationPlaceholder;
          this.navigationMenu;
          this.$resultsLabel;
          this.$resultsPlaceholder;
          this.kendoComboBox;
          this.kendoSearchDialog;
          this.stopSearchCommand;
          this.optionsCommandSet;
          this.navigationCommandSet;
          this.searchResults;
          this.mruList = [];
          this.inputComboRebinding;
          this.searchMetadataRequested;
          this.searchMetadataLoaded;
          this.pendingHighlightItem;
          this.windowLocation;
          this.reportViewerWrapper = $("[data-selector='" + this.viewerOptions.viewerSelector + "']").find(".trv-report-viewer");
          this.lastSearch = "";
          this.highlightManager = {
            // the results that are found, but not selected (highlighted)
            shadedClassName: "trv-search-dialog-shaded-result",
            // the result that is currently selected (highlighted)
            highlightedClassName: "trv-search-dialog-highlighted-result",
            current: null,
            elements: []
          };
          if (!this.controller) {
            throw "No controller (telerikReporting.ReportViewerController) has been specified.";
          }
          this.controller.pageReady(this.onPageReady.bind(this)).scrollPageReady(this.onPageReady.bind(this)).beginLoadReport(this.closeAndClear.bind(this)).viewModeChanged(this.closeAndClear.bind(this));
          this.controller.setSendEmailDialogVisible((event2, args) => {
            if (args.visible && this.dialogVisible) {
              this.toggle(!this.dialogVisible);
            }
          }).getSearchDialogState((event2, args) => {
            args.visible = this.dialogVisible;
          }).setSearchDialogVisible((event2, args) => {
            this.toggleSearchDialog(args.visible);
          });
          $(window).on("resize", () => {
            if (this.kendoSearchDialog && this.kendoSearchDialog.options.visible) {
              this.storeDialogPosition();
              this.adjustDialogPosition();
            }
          });
        }
        closeAndClear() {
          if (this.searchMetadataRequested) {
            return;
          }
          this.toggle(false);
          this.searchMetadataLoaded = false;
        }
        toggleSearchDialog(show) {
          this.dialogVisible = show;
          if (show) {
            var searchMetadataOnDemand = this.viewerOptions.searchMetadataOnDemand;
            if (searchMetadataOnDemand && !this.searchMetadataLoaded) {
              this.searchMetadataRequested = true;
              this.controller.reportLoadComplete((event2, args) => {
                if (this.searchMetadataRequested) {
                  this.toggle(true);
                  this.searchMetadataRequested = false;
                }
              });
              this.controller.refreshReport(true);
              return;
            }
          }
          this.toggle(show);
        }
        toggle(show) {
          this.dialogVisible = show;
          if (show) {
            this.searchMetadataLoaded = true;
            this.ensureInitialized();
            this.kendoSearchDialog.open();
            this.kendoComboBox.value("");
            this.updateResultsUI(null);
            this.toggleErrorLabel(false, null);
          } else {
            this.clearColoredItems();
            if (this.kendoSearchDialog && this.kendoSearchDialog.options.visible) {
              this.kendoSearchDialog.close();
            }
          }
        }
        ensureInitialized() {
          if (!this.initialized) {
            this.$element = $(this.element);
            this.$inputBox = this.$element.find(".trv-search-dialog-input-box");
            this.$resultsLabel = this.$element.find(".trv-search-dialog-results-label");
            this.$resultsPlaceholder = this.$element.find(".trv-search-dialog-results-area");
            this.initResultsArea();
            replaceStringResources$1(this.$element);
            try {
              this.$searchOptionsPlaceholder = this.$element.find(".trv-search-dialog-search-options").kendoMenu();
              this.$stopSearchPlaceholder = this.$element.find(".trv-search-dialog-stopsearch-placeholder").kendoMenu();
              this.$navigationPlaceholder = this.$element.find(".trv-search-dialog-navigational-buttons").kendoMenu();
            } catch (error) {
              console.error("Instantiation of Kendo Menu for Search Dialog threw an exception", error);
              throw error;
            }
            this.searchOptionsMenu = this.$searchOptionsPlaceholder.data("kendoMenu");
            this.stopSearchMenu = this.$stopSearchPlaceholder.data("kendoMenu");
            this.navigationMenu = this.$navigationPlaceholder.data("kendoMenu");
            this.searchOptionsMenu.element.on("keydown", this.onKeyDown);
            this.stopSearchMenu.element.on("keydown", this.onKeyDown);
            this.navigationMenu.element.on("keydown", this.onKeyDown);
            this.overrideDefaultMenuStyling(".trv-search-dialog-search-options");
            try {
              this.kendoComboBox = this.$inputBox.kendoComboBox({
                dataTextField: "value",
                dataValueField: "value",
                dataSource: this.mruList,
                contentElement: "",
                change: this.kendoComboBoxSelect.bind(this),
                ignoreCase: false,
                // the actual search-when-typing performs on this event.
                filtering: this.onInputFiltering.bind(this),
                filter: "startswith",
                delay: 1e3,
                open: (event2) => {
                  if (this.inputComboRebinding) {
                    event2.preventDefault();
                  }
                },
                select: this.processComboBoxEvent.bind(this)
              }).data("kendoComboBox");
            } catch (error) {
              console.error("Instantiation of Kendo ComboBox as search input threw an exception", error);
              throw error;
            }
            try {
              this.kendoSearchDialog = this.reportViewerWrapper.find(".trv-search-window").kendoWindow({
                title: stringResources.searchDialogTitle,
                height: 390,
                width: 310,
                minWidth: 310,
                minHeight: 390,
                maxHeight: 700,
                scrollable: false,
                close: () => {
                  this.storeDialogPosition();
                  this.lastSearch = "";
                },
                open: () => {
                  this.adjustDialogPosition();
                },
                deactivate: () => {
                  this.controller.setSearchDialogVisible({
                    visible: false
                  });
                },
                activate: () => {
                  this.kendoComboBox.input.focus();
                }
              }).data("kendoWindow");
            } catch (error) {
              console.error("Instantiation of Kendo Window for Search dialog threw an exception", error);
              throw error;
            }
            this.kendoSearchDialog.wrapper.addClass("trv-search");
            this.initCommands();
            this.initialized = true;
          }
        }
        overrideDefaultMenuStyling(kendoMenuSelector) {
          var menuItems = $(kendoMenuSelector).find(".k-menu-item");
          for (var i = 0; i < menuItems.length; i++) {
            $(menuItems[i]).removeClass("k-item");
          }
        }
        onKeyDown(event2) {
          var item = $(event2.target).find(".k-focus");
          if (event2.keyCode === 13 && item && item.length > 0) {
            var anchor = item.children("a");
            if (anchor.length > 0) {
              anchor.click();
            }
          }
        }
        storeDialogPosition() {
          var kendoWindow = this.kendoSearchDialog.element.parent(".k-window");
          this.windowLocation = kendoWindow.offset();
        }
        adjustDialogPosition() {
          var windowWidth = $(window).innerWidth();
          var windowHeight = $(window).innerHeight();
          var kendoWindow = this.kendoSearchDialog.wrapper;
          var width = kendoWindow.outerWidth(true);
          var height = kendoWindow.outerHeight(true);
          var padding = 10;
          if (!this.windowLocation) {
            var reportViewerCoords = this.reportViewerWrapper[0].getBoundingClientRect();
            kendoWindow.css({
              top: reportViewerCoords.top + padding,
              left: reportViewerCoords.right - width - padding
            });
            this.kendoSearchDialog.setOptions({
              position: {
                top: reportViewerCoords.top + padding,
                left: reportViewerCoords.right - width - padding
              }
            });
          } else {
            var left = this.windowLocation.left;
            var top2 = this.windowLocation.top;
            var right = left + width;
            var bottom = top2 + height;
            if (right > windowWidth - padding) {
              left = Math.max(padding, windowWidth - width - padding);
              kendoWindow.css({ left });
              this.kendoSearchDialog.setOptions({
                position: {
                  left
                }
              });
            }
            if (bottom > windowHeight - padding) {
              top2 = Math.max(padding, windowHeight - height - padding);
              kendoWindow.css({ top: top2 });
              this.kendoSearchDialog.setOptions({
                position: {
                  top: top2
                }
              });
            }
          }
        }
        processComboBoxEvent(event2) {
          if (!(window.event || window.event.type)) {
            return;
          }
          var evt = window.event;
          if (evt.type === "keydown") {
            event2.preventDefault();
            if (evt.keyCode === 40) {
              this.moveListSelection(1);
            }
            if (evt.keyCode === 38) {
              this.moveListSelection(-1);
            }
          }
        }
        initCommands() {
          this.optionsCommandSet = {
            "searchDialog_MatchCase": new Command(),
            "searchDialog_MatchWholeWord": new Command(),
            "searchDialog_UseRegex": new Command()
          };
          Object.entries(this.optionsCommandSet).forEach(([commandName, command]) => {
            command.exec = () => {
              this.toggleCommand(command);
            };
          });
          Binder.attachCommands(this.$searchOptionsPlaceholder, this.optionsCommandSet, this.viewerOptions);
          this.stopSearchCommand = new Command(() => {
            this.stopSearch();
          });
          Binder.attachCommands(this.$stopSearchPlaceholder, { "searchDialog_StopSearch": this.stopSearchCommand }, this.viewerOptions);
          this.navigationCommandSet = {
            "searchDialog_NavigateUp": new Command(() => {
              this.moveListSelection(-1);
            }),
            "searchDialog_NavigateDown": new Command(() => {
              this.moveListSelection(1);
            })
          };
          Binder.attachCommands(this.$navigationPlaceholder, this.navigationCommandSet, this.viewerOptions);
        }
        initResultsArea() {
          try {
            this.$resultsPlaceholder.kendoListView({
              selectable: true,
              navigatable: true,
              dataSource: {},
              contentElement: "",
              template: "<div class='trv-search-dialog-results-row'><span>#: description #</span> <span class='trv-search-dialog-results-pageSpan'>" + stringResources.searchDialogPageText + " #:page#</span></div>",
              change: (event2) => {
                var listView = event2.sender;
                var index = listView.select().index();
                var view = listView.dataSource.view();
                var dataItem = view[index];
                this.onSelectedItem(dataItem);
                this.updateUI(index, view.length);
              }
            });
          } catch (error) {
            console.error("Instantiation of Kendo ListView as search result area threw an exception", error);
            throw error;
          }
        }
        stopSearch() {
          this.setStopButtonEnabledState(false);
        }
        toggleCommand(cmd) {
          cmd.checked(!cmd.checked());
          this.searchForCurrentToken();
        }
        setStopButtonEnabledState(enabledState) {
          this.stopSearchCommand.enabled(enabledState);
        }
        onPageReady(args, page) {
          if (this.dialogVisible) {
            this.colorPageElements(this.searchResults);
          }
        }
        onInputFiltering(event2) {
          event2.preventDefault();
          if (event2.filter && event2.filter.value !== this.lastSearch) {
            this.lastSearch = event2.filter.value;
            this.searchForToken(this.lastSearch);
          }
        }
        kendoComboBoxSelect(event2) {
          var newValue = event2.sender.value();
          if (newValue && this.lastSearch !== newValue) {
            this.lastSearch = newValue;
            this.searchForToken(this.lastSearch);
          }
        }
        searchForCurrentToken() {
          if (this.kendoComboBox) {
            this.searchForToken(this.kendoComboBox.value());
          }
        }
        searchForToken(token) {
          this.onSearchStarted();
          this.addToMRU(token);
          this.controller.getSearchResults(
            {
              searchToken: token,
              matchCase: this.optionsCommandSet.searchDialog_MatchCase.checked(),
              matchWholeWord: this.optionsCommandSet.searchDialog_MatchWholeWord.checked(),
              useRegex: this.optionsCommandSet.searchDialog_UseRegex.checked()
            }
          ).then((results) => {
            this.updateResultsUI(results, null);
          }).catch((errorMessage) => {
            if (errorMessage) {
              this.updateResultsUI(null, errorMessage);
            }
          });
        }
        onSearchStarted() {
          this.$resultsLabel.text(stringResources.searchDialogSearchInProgress);
          this.clearColoredItems();
          this.searchResults = null;
          this.setStopButtonEnabledState(true);
          this.toggleErrorLabel(false, null);
        }
        updateResultsUI(results, error) {
          this.setStopButtonEnabledState(false);
          if (error) {
            this.toggleErrorLabel(true, error);
          }
          this.displayResultsList(results);
          this.searchResults = results;
          if (results && results.length > 0) {
            this.colorPageElements(results);
            this.selectFirstElement();
          } else {
            this.updateUI(-1, 0);
          }
        }
        addToMRU(token) {
          if (!token || token === "") {
            return;
          }
          var exists = this.mruList.filter((mru) => {
            return mru.value === token;
          });
          if (exists && exists.length > 0) {
            return;
          }
          this.mruList.unshift({ value: token });
          if (this.mruList.length > 10) {
            this.mruList.pop();
          }
          this.inputComboRebinding = true;
          this.kendoComboBox.dataSource.data(this.mruList);
          this.kendoComboBox.select((item) => {
            return item.value === token;
          });
          this.inputComboRebinding = false;
        }
        displayResultsList(results) {
          var $listView = this.$resultsPlaceholder.data("kendoListView");
          if (!results) {
            results = [];
          }
          $listView.dataSource.data(results);
        }
        colorPageElements(results) {
          if (!results || results.length === 0) {
            return;
          }
          var $parent = this.$element.parent();
          var $pageContainer = $parent.find(".trv-page-container");
          var elements = $pageContainer.find("[data-search-id]");
          Array.from(results).forEach((result) => {
            var $searchElement = elements.filter("[data-search-id=" + result.id + "]");
            if ($searchElement) {
              $searchElement.addClass(this.highlightManager.shadedClassName);
              this.highlightManager.elements.push($searchElement);
            }
          });
          this.highlightItem(this.pendingHighlightItem);
          this.pendingHighlightItem = null;
        }
        highlightItem(item) {
          if (item) {
            var currentItemId = item.id;
            var newHighlighted = $(this.highlightManager.elements.filter((i) => {
              return i.attr("data-search-id") === currentItemId;
            })).first();
            if (newHighlighted) {
              this.highlightManager.current = newHighlighted[0];
              if (this.highlightManager.current) {
                var current = $("[data-search-id='" + currentItemId + "']");
                current.removeClass(this.highlightManager.shadedClassName);
                current.addClass(this.highlightManager.highlightedClassName);
              }
            }
          }
        }
        selectFirstElement() {
          var $listView = this.$resultsPlaceholder.data("kendoListView");
          var first = $listView.element.children().first();
          $listView.select(first);
          $listView.trigger("change");
        }
        onSelectedItem(item) {
          if (!item) {
            return;
          }
          if (this.highlightManager.current) {
            this.highlightManager.current.removeClass(this.highlightManager.highlightedClassName);
            this.highlightManager.current.addClass(this.highlightManager.shadedClassName);
          }
          if (item.page === this.controller.getCurrentPageNumber()) {
            this.highlightItem(item);
          } else {
            if (this.controller.getPageMode() !== PageModes.CONTINUOUS_SCROLL) {
              this.clearColoredItems();
            } else {
              this.highlightItem(item);
            }
          }
          this.pendingHighlightItem = item;
          this.controller.navigateToPage(item.page, { type: "search", id: item.id });
        }
        updateUI(index, count) {
          var str = count === 0 ? stringResources.searchDialogNoResultsLabel : stringFormat(stringResources.searchDialogResultsFormatLabel, [index + 1, count]);
          this.$resultsLabel.text(str);
          var allowMoveUp = index > 0;
          var allowMoveDown = index < count - 1;
          this.navigationCommandSet.searchDialog_NavigateUp.enabled(allowMoveUp);
          this.navigationCommandSet.searchDialog_NavigateDown.enabled(allowMoveDown);
        }
        clearColoredItems() {
          if (this.highlightManager.elements && this.highlightManager.elements.length > 0) {
            Array.from(this.highlightManager.elements).forEach(($element) => {
              $element.removeClass(this.highlightManager.shadedClassName);
            });
          }
          if (this.highlightManager.current) {
            this.highlightManager.current.removeClass(this.highlightManager.highlightedClassName);
          }
          this.highlightManager.elements = [];
          this.highlightManager.current = null;
        }
        moveListSelection(offset) {
          var $listView = this.$resultsPlaceholder.data("kendoListView");
          var $selected = $listView.select();
          if (!$selected) {
            $selected = $listView.element.children().first();
            $listView.select($selected);
            $listView.trigger("change");
          } else {
            var index = $listView.select().trigger("change").index();
            var view = $listView.dataSource.view();
            var newIndex = Math.min(view.length - 1, Math.max(0, index + offset));
            if (newIndex !== index) {
              var dataItem = view[newIndex];
              var element = $listView.element.find('[data-uid="' + dataItem.uid + '"]');
              if (element) {
                $listView.select(element);
                $listView.trigger("change");
                this.scrollIfNeeded(element[0], $listView.element[0]);
              }
            }
          }
        }
        scrollIfNeeded(element, container) {
          if (element.offsetTop - element.clientHeight < container.scrollTop) {
            element.scrollIntoView();
          } else {
            var offsetBottom = element.offsetTop + element.offsetHeight;
            var scrollBottom = container.scrollTop + container.offsetHeight;
            if (offsetBottom > scrollBottom) {
              container.scrollTop = offsetBottom - container.offsetHeight;
            }
          }
        }
        toggleErrorLabel(show, message) {
          var $errorIcon = this.$searchOptionsPlaceholder.find("i[data-role='telerik_ReportViewer_SearchDialog_Error']");
          if (!$errorIcon || $errorIcon.length === 0) {
            console.log(message);
            return;
          }
          var menuItem = this.$searchOptionsPlaceholder.data("kendoMenu").element.find("li").last();
          if (show) {
            $errorIcon[0].title = message;
            menuItem.show();
          } else {
            menuItem.hide();
          }
        }
      }
      var defaultOptions = {};
      function replaceStringResources($sendEmailDialog) {
        if (!$sendEmailDialog) {
          return;
        }
        var labels = $sendEmailDialog.find(".trv-replace-string");
        var ariaLabel = $sendEmailDialog.find("[aria-label]");
        var titles = $sendEmailDialog.find("[title]");
        if (labels.length) {
          Array.from(labels).forEach((element) => {
            replaceText($(element));
          });
        }
        if (ariaLabel.length) {
          Array.from(ariaLabel).forEach((element) => {
            replaceAttribute($(element), "aria-label");
          });
        }
        if (titles.length) {
          Array.from(titles).forEach((element) => {
            replaceAttribute($(element), "title");
          });
        }
      }
      function replaceText($el) {
        if ($el) {
          $el.text(stringResources[$el.text()]);
        }
      }
      function replaceAttribute($el, attribute) {
        if ($el) {
          $el.attr(attribute, stringResources[$el.attr(attribute)]);
        }
      }
      function SendEmail(placeholder, options, viewerOptions) {
        options = $.extend({}, defaultOptions, options);
        var controller = options.controller;
        var initialized = false;
        var dialogVisible = false;
        var $placeholder;
        var kendoSendEmailDialog;
        var selector2 = viewerOptions.viewerSelector;
        var inputFrom;
        var inputTo;
        var inputCC;
        var inputSubject;
        var docFormat;
        var docFormatEl;
        var bodyEditorEl;
        var bodyEditor;
        var docFormatList;
        var optionsCommandSet;
        var windowLocation;
        var reportViewerWrapper = $("[data-selector='" + selector2 + "']").find(".trv-report-viewer");
        if (!controller) {
          throw "No controller (telerikReporting.ReportViewerController) has been specified.";
        }
        if (!viewerOptions.sendEmail || !viewerOptions.sendEmail.enabled) {
          var toolbarSendEmailItem = $("[data-selector='" + selector2 + "']").find("a[data-command='telerik_ReportViewer_toggleSendEmailDialog']").closest(".k-item ");
          toolbarSendEmailItem.hide();
          return;
        }
        controller.beginLoadReport(closeAndClear).viewModeChanged(closeAndClear);
        controller.getSendEmailDialogState(function(event2, args) {
          args.visible = dialogVisible;
        }).setSendEmailDialogVisible(function(event2, args) {
          toggle(args.visible);
        }).setSearchDialogVisible(function(event2, args) {
          if (args.visible && dialogVisible) {
            toggle(!dialogVisible);
          }
        });
        controller.getDocumentFormats().then(function(formats) {
          docFormatList = formats;
        });
        function closeAndClear() {
          toggle(false);
        }
        function toggle(show) {
          dialogVisible = show;
          if (show) {
            ensureInitialized();
            setDefaultValues(viewerOptions.sendEmail);
            kendoSendEmailDialog.open();
          } else {
            if (kendoSendEmailDialog && kendoSendEmailDialog.options.visible) {
              kendoSendEmailDialog.close();
            }
          }
        }
        function getBody() {
          return bodyEditor ? bodyEditor.value() : "";
        }
        function ensureInitialized() {
          if (!initialized) {
            $placeholder = $(placeholder);
            inputFrom = $placeholder.find("[name='from']");
            inputTo = $placeholder.find("[name='to']");
            inputCC = $placeholder.find("[name='cc']");
            inputSubject = $placeholder.find("[name='subject']");
            docFormatEl = $placeholder.find("[name='format']");
            bodyEditorEl = $placeholder.find("textarea");
            setAttrs();
            initCommands();
            replaceStringResources($placeholder);
            try {
              kendoSendEmailDialog = reportViewerWrapper.find(".trv-send-email-window").kendoWindow({
                title: stringResources.sendEmailDialogTitle,
                minWidth: 350,
                minHeight: 350,
                maxHeight: 900,
                modal: true,
                close: function() {
                  storeDialogPosition();
                  clearValidation();
                },
                open: function() {
                  adjustDialogSize();
                  adjustDialogPosition();
                },
                deactivate: function() {
                  controller.setSendEmailDialogVisible({
                    visible: false
                  });
                },
                activate: function() {
                  kendoSendEmailDialog.wrapper.find(".trv-send-email-fields input[type='email']:visible").first().focus();
                  setTimeout(function() {
                    setValidation();
                  }, 250);
                }
              }).data("kendoWindow");
            } catch (error) {
              console.error("Instantiation of Kendo Window for Send Email dialog threw an exception", error);
              throw error;
            }
            kendoSendEmailDialog.wrapper.addClass("trv-send-email");
            try {
              docFormat = docFormatEl.kendoComboBox({
                dataTextField: "localizedName",
                dataValueField: "name",
                dataSource: docFormatList || [],
                filter: "startswith",
                dataBound: function() {
                  this.select(0);
                  this.trigger("change");
                }
              }).data("kendoComboBox");
            } catch (error) {
              console.error("Instantiation of Kendo ComboBox as document format selector threw an exception", error);
              throw error;
            }
            $placeholder.on("keydown", '[name="format_input"]', function(event2) {
              var tabkey = 9;
              if (event2.keyCode === tabkey && bodyEditor) {
                setTimeout(function() {
                  bodyEditor.focus();
                });
              }
            });
            try {
              bodyEditor = bodyEditorEl.kendoEditor({
                tools: [
                  "bold",
                  "italic",
                  "underline",
                  "strikethrough",
                  "justifyLeft",
                  "justifyCenter",
                  "justifyRight",
                  "justifyFull",
                  "insertUnorderedList",
                  "insertOrderedList",
                  "indent",
                  "outdent",
                  "createLink",
                  "unlink",
                  "cleanFormatting",
                  "formatting",
                  "fontName",
                  "fontSize",
                  "foreColor",
                  "backColor",
                  "subscript",
                  "superscript"
                ]
              }).data("kendoEditor");
            } catch (error) {
              console.error("Instantiation of Kendo Editor for Email body editor threw an exception", error);
              throw error;
            }
            setDefaultValues(viewerOptions.sendEmail);
            initialized = true;
          }
        }
        $(window).resize(function() {
          if (kendoSendEmailDialog && kendoSendEmailDialog.options.visible) {
            storeDialogPosition();
            adjustDialogSize();
            adjustDialogPosition();
          }
        });
        function setAttrs() {
          $placeholder.find(".trv-send-email-field input").each(function() {
            var el = $(this);
            var attrName = el.attr("name");
            el.attr("id", selector2 + "-" + attrName);
          });
          $placeholder.find(".trv-send-email-label label").each(function() {
            var el = $(this);
            var attrName = el.attr("for");
            el.attr("for", selector2 + "-" + attrName);
          });
        }
        function storeDialogPosition() {
          var kendoWindow = kendoSendEmailDialog.element.parent(".k-window");
          windowLocation = kendoWindow.offset();
        }
        function adjustDialogSize() {
          var kendoWindow = kendoSendEmailDialog.element.parent(".k-window");
          var windowWidth = $(window).width();
          var kendoWindowWidth = 350;
          if (windowWidth > 800) {
            kendoWindowWidth = 720;
          }
          kendoWindow.css({ width: kendoWindowWidth });
          kendoSendEmailDialog.refresh({
            width: kendoWindowWidth
          });
        }
        function adjustDialogPosition() {
          if (!windowLocation) {
            kendoSendEmailDialog.center();
          } else {
            var padding = 10;
            var windowWidth = $(window).innerWidth();
            var windowHeight = $(window).innerHeight();
            var kendoWindow = kendoSendEmailDialog.wrapper;
            var width = kendoWindow.outerWidth(true);
            var height = kendoWindow.outerHeight(true);
            var left = windowLocation.left;
            var top2 = windowLocation.top;
            var right = left + width;
            var bottom = top2 + height;
            if (right > windowWidth - padding) {
              left = Math.max(padding, windowWidth - width - padding);
              kendoWindow.css({ left });
              kendoSendEmailDialog.setOptions({
                position: {
                  left
                }
              });
            }
            if (bottom > windowHeight - padding) {
              top2 = Math.max(padding, windowHeight - height - padding);
              kendoWindow.css({ top: top2 });
              kendoSendEmailDialog.setOptions({
                position: {
                  top: top2
                }
              });
            }
          }
        }
        function initCommands() {
          optionsCommandSet = {
            "sendEmail_Cancel": new Command(function() {
              closeWindow();
            }),
            "sendEmail_Send": new Command(function() {
              sendingEmail();
            })
          };
          Binder.attachCommands($placeholder.find(".trv-send-email-actions"), optionsCommandSet, viewerOptions);
        }
        function sendingEmail(cmd, args) {
          var sendEmailArgs = {
            from: inputFrom.val(),
            to: inputTo.val(),
            cc: inputCC.val(),
            subject: inputSubject.val(),
            format: docFormat.value(),
            body: getBody(),
            deviceInfo: {}
          };
          if (validateFields()) {
            controller.sendReport(sendEmailArgs);
            closeWindow();
          }
        }
        function setValidation() {
          inputFrom.off("blur").on("blur", function(event2) {
            if (!isEmpty($(this))) {
              isValidEmail($(this), false);
            }
          });
          inputTo.off("blur").on("blur", function(event2) {
            if (!isEmpty($(this))) {
              isValidEmail($(this), true);
            }
          });
          inputCC.off("blur").on("blur", function(event2) {
            if ($(this).val().length) {
              isValidEmail($(this), true);
            } else {
              hideError($(this));
            }
          });
        }
        function validateFields() {
          var fromIsValid = isEmpty(inputFrom) || !isValidEmail(inputFrom, false);
          var toIsValid = isEmpty(inputTo) || !isValidEmail(inputTo, true);
          var ccIsValid = inputCC.val().length && !isValidEmail(inputCC, true);
          var hasFormat = docFormat.value().length;
          if (!hasFormat) {
            showError(docFormatEl, "data-required-msg");
          }
          if (fromIsValid || toIsValid || ccIsValid || !hasFormat) {
            return false;
          }
          return true;
        }
        function setDefaultValues(sendEmail) {
          inputFrom.val(sendEmail && sendEmail.from || "");
          inputTo.val(sendEmail && sendEmail.to || "");
          inputCC.val(sendEmail && sendEmail.cc || "");
          inputSubject.val(sendEmail && sendEmail.subject || "");
          if (sendEmail && sendEmail.format) {
            docFormat.value(sendEmail.format);
          } else {
            docFormat.select(0);
          }
          docFormat.trigger("change");
          bodyEditor.value(sendEmail && sendEmail.body || "");
        }
        function isEmpty($el) {
          if (!$el.val().length) {
            showError($el, "data-required-msg");
            return true;
          }
          hideError($el);
          return false;
        }
        function showError($el, tag) {
          var validationMsg = stringResources[$el.attr(tag)];
          $('[data-for="' + $el.attr("name") + '"]').addClass("-visible").text(validationMsg);
        }
        function hideError($el) {
          $('[data-for="' + $el.attr("name") + '"]').removeClass("-visible");
        }
        function isValidEmail($el, moreThenOneEmail) {
          var inputValue = $el.val();
          if (moreThenOneEmail) {
            var listEmailsAddress = inputValue.split(/[\s,;]+/);
            for (var i = 0; i < listEmailsAddress.length; i++) {
              if (!_validateEmail(listEmailsAddress[i].trim(), $el)) {
                return false;
              }
            }
            return true;
          }
          return _validateEmail(inputValue, $el);
        }
        function _validateEmail(email, $el) {
          var regexEmail = /\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/;
          if (email.indexOf(",") > -1 || email.indexOf(";") > -1) {
            showError($el, "data-single-email-msg");
            return false;
          }
          if (!regexEmail.test(email)) {
            showError($el, "data-email-msg");
            return false;
          }
          return true;
        }
        function closeWindow() {
          kendoSendEmailDialog.close();
        }
        function clearValidation() {
          $(".k-invalid-msg").removeClass("-visible");
        }
      }
      function SideMenu(dom, rootOptions, otherOptions) {
        var options = $.extend({}, rootOptions, otherOptions);
        var menu = $(dom).data("kendoMenu");
        var enableAccessibility = options.enableAccessibility;
        var DEFAULT_TABINDEX = 3;
        var panelBar;
        var sideMenuVisible = false;
        var controller = options.controller;
        if (!controller) {
          throw "No controller (telerikReporting.ReportViewerController) has been specified.";
        }
        if (!menu) {
          init(dom);
        }
        function init(root) {
          var $root = $(root);
          try {
            panelBar = $root.children("ul").kendoPanelBar().data("kendoPanelBar");
          } catch (e) {
            console.error("Instantiation of Kendo PanelBar as side menu threw an exception", e);
            throw e;
          }
          panelBar.bind("expand", onSubmenuOpen);
          panelBar.element.off("keydown", onPanelKeyDown);
          panelBar.element.on("keydown", onPanelKeyDown);
          setTabIndexes($root);
          enableCloseOnClick($root);
          $root.click(function(e) {
            if (e.target == root) {
              controller.setSideMenuVisible({ visible: !sideMenuVisible });
            }
          });
          replaceStringResources2();
        }
        controller.setSideMenuVisible(function(event2, args) {
          setSideMenuVisibility();
          if (enableAccessibility) {
            panelBar.element.focus();
          }
          sideMenuVisible = args.visible;
          if (!sideMenuVisible) {
            panelBar.collapse($("#trv-side-menu-export-command"));
          }
        }).getSideMenuVisible(function(event2, args) {
          args.visible = sideMenuVisible;
        });
        function setSideMenuVisibility() {
          var $root = panelBar.element.parent();
          var hidden = $root.position().left < 0 || !$root.is(":visible");
          if (hidden) {
            $root.show();
          } else {
            window.setTimeout(function() {
              $root.hide();
            }, 500);
          }
        }
        function onSubmenuOpen(e) {
          var $item = $(e.item);
          panelBar.unbind("expand", onSubmenuOpen);
          panelBar.append({ text: stringResources.loadingFormats, spriteCssClass: "k-icon k-loading" }, $item);
          options.controller.getDocumentFormats().then(fillFormats).then(function() {
            panelBar.expand($item);
          }).then(function() {
            panelBar.bind("expand", onSubmenuOpen);
          });
        }
        function fillFormats(formats) {
          Array.from($(dom).find("ul[data-command-list=export-format-list]")).forEach((list) => {
            var $list = $(list);
            var $parent = $list.parents("li");
            var tabIndex = $parent.attr("tabindex");
            if (!tabIndex) {
              tabIndex = DEFAULT_TABINDEX;
            }
            $list.empty();
            Array.from(formats).forEach((format) => {
              var ariaLabel = enableAccessibility ? stringFormat('aria-label="{localizedName}" ', format) : " ";
              var li = "<li " + ariaLabel + stringFormat('tabindex="' + tabIndex + '"><a tabindex="-1" href="#" data-command="telerik_ReportViewer_export" data-command-parameter="{name}"><span>{localizedName}</span></a></li>', format);
              panelBar.append(li, $parent);
            });
            setListItemsTabIndex($parent.find("li"), tabIndex);
            enableCloseOnClick($parent);
          });
        }
        function enableCloseOnClick(root) {
          Array.from(root.find("li")).forEach((listItem) => {
            var isLeaf = $(listItem).children("ul").length === 0;
            if (isLeaf) {
              $(listItem).children("a").on("click", (event2) => {
                controller.setSideMenuVisible({ visible: !sideMenuVisible });
              });
            }
          });
        }
        function setTabIndexes(root) {
          if (!root) {
            return;
          }
          var $list = root.children("ul");
          var parentTabIndex = root.attr("tabindex");
          var listIndex = parentTabIndex ? parentTabIndex : DEFAULT_TABINDEX;
          setListItemsTabIndex($list, listIndex);
        }
        function setListItemsTabIndex(list, tabIndex) {
          list.attr("tabindex", tabIndex);
          var items = list.find("li");
          Array.from(items).forEach((item) => {
            var $item = $(item);
            $item.attr("tabindex", tabIndex);
            var anchor = $item.children("a");
            if (anchor.length > 0) {
              var $anchor = $(anchor);
              $anchor.attr("tabindex", -1);
            }
            $item.on("focus", (event2) => {
              var anchor2 = $item.children("a");
              if (anchor2.length > 0) {
                anchor2.addClass("k-focus");
              }
            });
            $item.on("blur", (event2) => {
              var anchor2 = $item.children("a");
              if (anchor2.length > 0) {
                anchor2.removeClass("k-focus");
              }
            });
            $item.off("keydown", onItemKeyDown);
            $item.on("keydown", onItemKeyDown);
          });
        }
        function onPanelKeyDown(e) {
          if (e.which == kendo.keys.ENTER) {
            var $item;
            var isSelectedFocusedItem = false;
            var focusedItem = document.activeElement;
            if (focusedItem && focusedItem.localName == "li") {
              var items = panelBar.element.find("li.k-item");
              for (var i = 0; i < items.length; i++) {
                var listItem = items[i];
                if (focusedItem === listItem) {
                  $item = $(listItem);
                  isSelectedFocusedItem = true;
                  break;
                }
              }
            } else {
              $item = panelBar.select();
            }
            if (!$item || !$item.length > 0) {
              return;
            }
            handleItemSelect($item, isSelectedFocusedItem);
          }
        }
        function onItemKeyDown(e) {
          if (e.which == kendo.keys.ENTER) {
            handleItemSelect($(e.target), false);
          }
        }
        function handleItemSelect(item, handleExpandCollapse) {
          if (!item.length > 0) {
            return;
          }
          var isLeaf = item.children("ul").length === 0;
          if (!isLeaf) {
            if (handleExpandCollapse) {
              if (item.hasClass("k-active")) {
                panelBar.collapse(item);
              } else {
                panelBar.expand(item);
              }
            }
          } else {
            var $anchor = item.find("a");
            if ($anchor.length > 0) {
              $anchor[0].click();
            }
          }
        }
        function replaceStringResources2() {
          var menuAreas = findMenuArea();
          if (!menuAreas) {
            return;
          }
          Array.from(menuAreas).forEach((menu2) => {
            var $menu = $(menu2);
            var menuItems = $menu.children("li.k-panelbar-header");
            $menu.attr("aria-label", stringResources[$menu.attr("aria-label")]);
            Array.from(menuItems).forEach((menuItem) => {
              var $menuItem = $(menuItem);
              var $a = $menuItem.find("a");
              $menuItem.attr("aria-label", stringResources[$menuItem.attr("aria-label")]);
              if ($a) {
                var $span = $a.find("span:not(.k-icon)");
                $a.attr("title", stringResources[$a.attr("title")]);
                if ($span) {
                  $span.text(stringResources[$span.text()]);
                }
              }
            });
          });
        }
        function findMenuArea() {
          return $("div[data-role=telerik_ReportViewer_SideMenu] > ul");
        }
      }
      var __defProp$4 = Object.defineProperty;
      var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField$4 = (obj, key, value) => {
        __defNormalProp$4(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class MemStorage {
        // #endregion
        // #region constructor
        constructor() {
          __publicField$4(this, "_data", {});
          this._data = {};
        }
        // #endregion
        // #region properties
        get length() {
          return Object.keys(this._data).length;
        }
        // #endregion
        // #region methods
        getItem(key) {
          return this._data[key] || null;
        }
        setItem(key, value) {
          this._data[key] = value;
        }
        removeItem(key) {
          delete this._data[key];
        }
        key(index) {
          return Object.keys(this._data)[index] || null;
        }
        clear() {
          this._data = {};
        }
        // #endregion
      }
      const TemplateCache = /* @__PURE__ */ function() {
        var cache = {};
        return {
          load: function(url, serviceUrl, client) {
            var p = cache[url];
            if (!p) {
              cache[url] = p = client.get(url).then(function(html) {
                var templates = {};
                var styleSheets = [];
                var baseUri = rTrim(serviceUrl, "\\/") + "/";
                html = replaceAll(html, "{service}/", baseUri);
                html = replaceAll(html, "{service}", baseUri);
                var viewerTemplate = $("<div></div>").html(html);
                Array.from(viewerTemplate.find("template")).forEach((element) => {
                  var $element = $(element);
                  templates[$element.attr("id")] = trim($element.html(), "\n 	");
                });
                Array.from(viewerTemplate.find("link")).forEach((element) => {
                  styleSheets.push(trim(element.outerHTML, "\n 	"));
                });
                styleSheets = filterUniqueLastOccurrence(styleSheets);
                return {
                  templates,
                  styleSheets
                };
              });
            }
            return p;
          }
        };
      }();
      var __defProp$3 = Object.defineProperty;
      var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField$3 = (obj, key, value) => {
        __defNormalProp$3(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class ReportViewerSettings {
        // #endregion
        // #region constructor
        constructor(id, storage, defaultSettings) {
          __publicField$3(this, "_id");
          __publicField$3(this, "_storage");
          __publicField$3(this, "_defaults");
          this._id = id;
          this._storage = storage;
          this._defaults = defaultSettings || {};
        }
        // #endregion
        // #region methods
        formatKey(key) {
          return this._id + "_" + key;
        }
        getItem(key) {
          var value = this._storage.getItem(this.formatKey(key));
          if (typeof value === "string") {
            try {
              value = JSON.parse(value);
            } catch (e) {
              value = null;
            }
          }
          return value !== null && value !== void 0 ? value : this._defaults[key];
        }
        setItem(key, value) {
          var formattedKey = this.formatKey(key);
          this._storage.setItem(formattedKey, JSON.stringify(value));
        }
        // #endregion
        // #region accessors
        getViewMode() {
          return this.getItem("viewMode");
        }
        setViewMode(value) {
          this.setItem("viewMode", value);
        }
        getPageMode() {
          return this.getItem("pageMode");
        }
        setPageMode(value) {
          this.setItem("pageMode", value);
        }
        getPrintMode() {
          return this.getItem("printMode");
        }
        setPrintMode(value) {
          this.setItem("printMode", value);
        }
        getScale() {
          return this.getItem("scale");
        }
        setScale(value) {
          this.setItem("scale", value);
        }
        getScaleMode() {
          return this.getItem("scaleMode");
        }
        setScaleMode(value) {
          this.setItem("scaleMode", value);
        }
        getDocumentMapVisible() {
          return this.getItem("documentMapVisible");
        }
        setDocumentMapVisible(value) {
          this.setItem("documentMapVisible", value);
        }
        getParametersAreaVisible() {
          return this.getItem("parametersAreaVisible");
        }
        setParametersAreaVisible(value) {
          this.setItem("parametersAreaVisible", value);
        }
        getHistory() {
          return this.getItem("history");
        }
        setHistory(value) {
          this.setItem("history", value);
        }
        getClientId() {
          return this.getItem("clientId");
        }
        setClientId(value) {
          this.setItem("clientId", value);
        }
        getReportSource() {
          return this.getItem("reportSource");
        }
        setReportSource(value) {
          this.setItem("reportSource", value);
        }
        getPageNumber() {
          return this.getItem("pageNumber");
        }
        setPageNumber(value) {
          this.setItem("pageNumber", value);
        }
        getEnableAccessibility() {
          return this.getItem("enableAccessibility");
        }
        setEnableAccessibility(value) {
          this.setItem("enableAccessibility", value);
        }
        getAccessibilityKeyMap() {
          return this.getItem("accessibilityKeyMap");
        }
        setAccessibilityKeyMap(value) {
          this.setItem("accessibilityKeyMap", value);
        }
        getSearchMetadataOnDemand() {
          return this.getItem("searchMetadataOnDemand");
        }
        setSearchMetadataOnDemand(value) {
          this.setItem("searchMetadataOnDemand", value);
        }
        getKeepClientAlive() {
          return this.getItem("keepClientAlive");
        }
        setKeepClientAlive(value) {
          this.setItem("keepClientAlive", value);
        }
        // #endregion
      }
      var __defProp$2 = Object.defineProperty;
      var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField$2 = (obj, key, value) => {
        __defNormalProp$2(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class BaseComponent {
        // #endregion
        // #region constructor
        constructor(element, options) {
          __publicField$2(this, "element");
          __publicField$2(this, "$element");
          __publicField$2(this, "options");
          this.element = element;
          this.$element = $(element);
          this.options = options;
        }
        // #endregion
      }
      var __defProp$1 = Object.defineProperty;
      var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField$1 = (obj, key, value) => {
        __defNormalProp$1(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class LinkButton extends BaseComponent {
        // #endregion
        // #region constructor
        constructor(element, options) {
          super(element, options);
          __publicField$1(this, "cmd");
          var dataCommand = this.$element.attr("data-command");
          if (dataCommand) {
            this.cmd = this.options.commands[dataCommand];
          }
          if (this.cmd) {
            this.$element.on("click", (event2) => {
              if (this.cmd.enabled()) {
                this.cmd.exec($(this).attr("data-command-parameter"));
              } else {
                event2.preventDefault();
              }
            });
            $(this.cmd).on("enabledChanged", (event2) => {
              (this.cmd.enabled() ? $.fn.removeClass : $.fn.addClass).call(this.$element, "disabled");
            }).on("checkedChanged", (event2) => {
              (this.cmd.checked() ? $.fn.addClass : $.fn.removeClass).call(this.$element, "checked");
            });
          }
        }
        // #endregion
      }
      var __defProp = Object.defineProperty;
      var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField = (obj, key, value) => {
        __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      class PageNumberInput extends BaseComponent {
        // #endregion
        // #region constructor
        constructor(element, options) {
          super(element, options);
          __publicField(this, "cmd");
          __publicField(this, "_numeric");
          this.cmd = this.options.commands["goToPage"];
          this._numeric = new kendo.ui.NumericTextBox(this.element, {
            format: "0",
            decimals: 0,
            min: 0,
            spinners: false,
            change: this._onChange.bind(this),
            spin: this._onChange.bind(this)
          });
          this._numeric._text[0].dataset.role = "telerik_ReportViewer_PageNumberInput";
          this._numeric.element[0].dataset.role = "";
          this.options.controller.on("reportLoadComplete", (event2, reportInfo) => {
            this._numeric.max(reportInfo.pageCount);
            this._numeric.min(Math.min(1, reportInfo.pageCount));
            this._numeric.value(Math.min(1, reportInfo.pageCount));
          }).on("loadedReportChange", (event2) => {
            this._numeric.min(0);
            this._numeric.max(0);
            this._numeric.value(0);
          }).on("renderingStopped", (event2) => {
            this._numeric.min(0);
            this._numeric.max(0);
            this._numeric.value(0);
          }).pageNumberChange((event2, value) => {
            this._numeric.value(value);
          });
        }
        // #endregion
        // #region event handlers
        _onChange(event2, data) {
          var val = this._numeric.value();
          var num = tryParseInt(val);
          if (!isNaN(num)) {
            this.cmd.exec(num);
          }
        }
        _onSpin(event2, data) {
          return this._onChange(event2, data);
        }
        // #endregion
      }
      class PageCountLabel extends BaseComponent {
        // #region constructor
        constructor(element, options) {
          super(element, options);
          this.options.controller.pageCountChange((event2, value) => {
            this.$element.text(value);
          });
        }
        // #endregion
      }
      const Instances = GlobalSettings.viewerInstances;
      function getDefaultOptions(serviceUrl, version) {
        return {
          id: null,
          serviceUrl: null,
          trvTemplateUrl: rTrim(serviceUrl, "\\/") + "/resources/templates/telerikReportViewerTemplate-" + version + ".html/",
          reportSource: null,
          reportServer: null,
          authenticationToken: null,
          sendEmail: null,
          scale: 1,
          scaleMode: ScaleModes.FIT_PAGE,
          viewMode: ViewModes.INTERACTIVE,
          pageMode: PageModes.CONTINUOUS_SCROLL,
          parametersAreaPosition: ParametersAreaPositions.RIGHT,
          documentMapAreaPosition: DocumentMapAreaPositions.LEFT,
          parameters: {
            editors: {
              multiSelect: ParameterEditorTypes.LIST_VIEW,
              singleSelect: ParameterEditorTypes.LIST_VIEW
            }
          },
          persistSession: false,
          parameterEditors: [],
          disabledButtonClass: null,
          checkedButtonClass: null,
          parametersAreaVisible: true,
          documentMapVisible: true,
          enableAccessibility: false,
          searchMetadataOnDemand: false,
          initialPageAreaImageUrl: null,
          keepClientAlive: true
        };
      }
      function ReportViewer2(dom, options) {
        var svcApiUrl = options.serviceUrl;
        var reportServerUrlSVCApiUrl = "";
        if (options.reportServer) {
          reportServerUrlSVCApiUrl = rTrim(options.reportServer.url, "\\/");
          svcApiUrl = reportServerUrlSVCApiUrl + "/api/reports";
        }
        var $placeholder = $(dom);
        var templates = {};
        var persistanceKey = options.id || `trv_${dom.id}`;
        var accessibility;
        var settings = {};
        var client = {};
        var controller = {};
        var perspectiveManager = {};
        var history = {};
        var commands = {};
        var viewer = {};
        var serviceClientOptions = {};
        var reportServerUrl = "";
        options.viewerSelector = "reportViewer-" + generateGuidString();
        $placeholder.attr("data-selector", options.viewerSelector);
        if (!validateOptions(options)) {
          return;
        }
        var version = "19.0.25.313";
        options = $.extend({}, getDefaultOptions(svcApiUrl, version), options);
        settings = new ReportViewerSettings(
          persistanceKey,
          options.persistSession ? window.sessionStorage : new MemStorage(),
          {
            scale: options.scale,
            scaleMode: options.scaleMode,
            printMode: options.printMode ? options.printMode : options.directPrint,
            enableAccessibility: options.enableAccessibility,
            searchMetadataOnDemand: options.searchMetadataOnDemand,
            sendEmail: options.sendEmail,
            parametersAreaPosition: options.parametersAreaPosition,
            documentMapAreaPosition: options.documentMapAreaPosition,
            keepClientAlive: options.keepClientAlive
          }
        );
        if (options.reportServer) {
          reportServerUrl = rTrim(options.reportServer.url, "\\/");
          serviceClientOptions.serviceUrl = reportServerUrl + "/api/reports";
          serviceClientOptions.loginInfo = {
            url: reportServerUrl + "/Token",
            username: options.reportServer.username,
            password: options.reportServer.password
          };
        } else {
          serviceClientOptions.serviceUrl = options.serviceUrl;
        }
        client = new ServiceClient(serviceClientOptions);
        controller = options.controller;
        if (!controller) {
          controller = new ReportViewerController({
            serviceClient: client,
            settings
          });
        } else {
          controller.updateSettings(settings);
        }
        history = new HistoryManager({
          controller,
          settings
        });
        commands = new CommandSet({
          controller,
          history
        });
        new UIController({
          controller,
          history,
          commands
        });
        viewer = {
          stringResources,
          refreshReport: function(ignoreCache) {
            if (arguments.length === 0) {
              ignoreCache = true;
            }
            controller.refreshReport(ignoreCache, true);
            return viewer;
          },
          reportSource: function(rs) {
            if (rs || rs === null) {
              controller.setReportSource(rs);
              controller.refreshReport(false, true);
              return viewer;
            }
            return controller.getReportSource();
          },
          clearReportSource: function() {
            controller.clearReportSource();
            return viewer;
          },
          viewMode: function(vm) {
            if (vm) {
              controller.setViewMode(vm);
              return viewer;
            }
            return controller.getViewMode();
          },
          pageMode: function(psm) {
            if (psm) {
              controller.setPageMode(psm);
              return viewer;
            }
            return controller.getPageMode();
          },
          printMode: function(pm) {
            if (pm) {
              controller.setPrintMode(pm);
              return viewer;
            }
            return controller.getPrintMode();
          },
          scale: function({ scale: scale2, scaleMode } = {}) {
            if (scale2 || scaleMode) {
              controller.setScale(scale2 || controller.getScale());
              controller.setScaleMode(scaleMode || controller.getScaleMode());
              return viewer;
            }
            return {
              scale: controller.getScale(),
              scaleMode: controller.getScaleMode()
            };
          },
          currentPage: function() {
            return controller.getCurrentPageNumber();
          },
          pageCount: function() {
            return controller.getPageCount();
          },
          parametersAreaVisible: function(visible) {
            controller.setParametersAreaVisible({ visible });
          },
          getReportParameters: function() {
            return controller.getReportParameters();
          },
          isReportAutoRun: function() {
            return controller.isReportAutoRun();
          },
          authenticationToken: function(token) {
            if (token) {
              controller.setAuthenticationToken(token);
            }
            return viewer;
          },
          bind: function(eventName, eventHandler) {
            eventBinder(eventName, eventHandler, true);
          },
          unbind: function(eventName, eventHandler) {
            eventBinder(eventName, eventHandler, false);
          },
          accessibilityKeyMap: function(keyMap) {
            if (accessibility) {
              if (keyMap) {
                accessibility.setKeyMap(keyMap);
                return viewer;
              }
              return accessibility.getKeyMap();
            }
            return void 0;
          },
          commands,
          dispose: function() {
            controller.dispose();
            if (perspectiveManager) {
              perspectiveManager.dispose();
            }
          }
        };
        function validateOptions(options2) {
          if (!options2) {
            $placeholder.text("The report viewer configuration options are not initialized.");
            return false;
          }
          if (options2.reportServer) {
            if (!options2.reportServer.url) {
              $placeholder.text("The report server URL is not specified.");
              return false;
            }
          } else {
            if (!options2.serviceUrl) {
              $placeholder.text("The serviceUrl is not specified.");
              return false;
            }
          }
          return true;
        }
        function eventBinder(eventName, eventHandler, bind) {
          if (typeof eventHandler === "function") {
            if (bind) {
              $(viewer).on(eventName, { sender: viewer }, eventHandler);
            } else {
              $(viewer).off(eventName, eventHandler);
            }
          } else if (!eventHandler && !bind) {
            $(viewer).off(eventName);
          }
        }
        function attachEvents() {
          var eventMap = {
            EXPORT_BEGIN: controller.Events.EXPORT_STARTED,
            EXPORT_END: controller.Events.EXPORT_DOCUMENT_READY,
            PRINT_BEGIN: controller.Events.PRINT_STARTED,
            PRINT_END: controller.Events.PRINT_DOCUMENT_READY,
            RENDERING_BEGIN: controller.Events.BEFORE_LOAD_REPORT,
            RENDERING_END: controller.Events.REPORT_LOAD_COMPLETE,
            PAGE_READY: controller.Events.PAGE_READY,
            ERROR: controller.Events.ERROR,
            UPDATE_UI: controller.Events.UPDATE_UI,
            INTERACTIVE_ACTION_EXECUTING: controller.Events.INTERACTIVE_ACTION_EXECUTING,
            INTERACTIVE_ACTION_ENTER: controller.Events.INTERACTIVE_ACTION_ENTER,
            INTERACTIVE_ACTION_LEAVE: controller.Events.INTERACTIVE_ACTION_LEAVE,
            VIEWER_TOOLTIP_OPENING: controller.Events.TOOLTIP_OPENING,
            SEND_EMAIL_BEGIN: controller.Events.SEND_EMAIL_STARTED,
            SEND_EMAIL_END: controller.Events.SEND_EMAIL_READY,
            PARAMETERS_LOADED: controller.Events.PARAMETERS_LOADED
          };
          var $viewer = $(viewer);
          for (const [viewerEvent, controllerEvent] of Object.entries(eventMap)) {
            controller.on(controllerEvent, function(e, args) {
              $viewer.trigger(viewerEvent, args);
            });
          }
        }
        function attachEventHandlers() {
          eventBinder(Events$1.EXPORT_BEGIN, options.exportBegin, true);
          eventBinder(Events$1.EXPORT_END, options.exportEnd, true);
          eventBinder(Events$1.PRINT_BEGIN, options.printBegin, true);
          eventBinder(Events$1.PRINT_END, options.printEnd, true);
          eventBinder(Events$1.RENDERING_BEGIN, options.renderingBegin, true);
          eventBinder(Events$1.RENDERING_END, options.renderingEnd, true);
          eventBinder(Events$1.PAGE_READY, options.pageReady, true);
          eventBinder(Events$1.ERROR, options.error, true);
          eventBinder(Events$1.UPDATE_UI, options.updateUi, true);
          eventBinder(Events$1.INTERACTIVE_ACTION_EXECUTING, options.interactiveActionExecuting, true);
          eventBinder(Events$1.INTERACTIVE_ACTION_ENTER, options.interactiveActionEnter, true);
          eventBinder(Events$1.INTERACTIVE_ACTION_LEAVE, options.interactiveActionLeave, true);
          eventBinder(Events$1.VIEWER_TOOLTIP_OPENING, options.viewerToolTipOpening, true);
          eventBinder(Events$1.SEND_EMAIL_BEGIN, options.sendEmailBegin, true);
          eventBinder(Events$1.SEND_EMAIL_END, options.sendEmailEnd, true);
          eventBinder(Events$1.PARAMETERS_LOADED, options.parametersLoaded, true);
        }
        function init() {
          $placeholder.html(templates["trv-report-viewer"]);
          Binder.bind(
            $placeholder,
            {
              controller,
              commands,
              templates
            },
            options
          );
          perspectiveManager = new PerspectiveManager(dom, controller);
          perspectiveManager.attach();
          initSplitter();
          attachEvents();
          attachEventHandlers();
          initFromStorage();
          initAccessibility(options);
        }
        function initSplitter() {
          var parameterAreaPaneOptions = {
            max: "500px",
            min: "50px",
            size: "210px",
            collapsible: true
          };
          var parameterAreaTemplate = $placeholder.find(".trv-parameters-area");
          var parameterAreaPanes = [{}];
          var documentMapPaneOptions = {
            max: "500px",
            min: "50px",
            size: "210px",
            collapsible: true,
            collapsed: true
          };
          var documentMapTemplate = $placeholder.find(".trv-document-map");
          var documentMapPanes = [{}];
          var orientation = "horizontal";
          if (options.documentMapAreaPosition === DocumentMapAreaPositions.RIGHT) {
            documentMapTemplate.insertAfter($placeholder.find(".trv-pages-area"));
            documentMapPanes.push(documentMapPaneOptions);
          } else {
            documentMapPanes.unshift(documentMapPaneOptions);
          }
          if (options.parametersAreaPosition === ParametersAreaPositions.TOP || options.parametersAreaPosition === ParametersAreaPositions.BOTTOM) {
            orientation = "vertical";
            parameterAreaTemplate.addClass("-vertical");
            parameterAreaPaneOptions.size = "130px";
          }
          if (options.parametersAreaPosition === ParametersAreaPositions.LEFT || options.parametersAreaPosition === ParametersAreaPositions.TOP) {
            parameterAreaTemplate.insertBefore($placeholder.find(".trv-document-map-splitter"));
            parameterAreaPanes.unshift(parameterAreaPaneOptions);
          } else {
            parameterAreaPanes.push(parameterAreaPaneOptions);
          }
          try {
            var documentMapSplitter = $placeholder.find(".trv-document-map-splitter").kendoSplitter({
              panes: documentMapPanes,
              expand: function(e) {
                setSplitterPaneVisibility(e.pane, true);
              },
              collapse: function(e) {
                setSplitterPaneVisibility(e.pane, false);
              },
              resize: function(e) {
              }
            }).data("kendoSplitter");
          } catch (e) {
            console.error("Instantiation of Kendo Splitter as Document Map splitter threw an exception", e);
            throw e;
          }
          try {
            var parametersSplitter = $placeholder.find(".trv-parameters-splitter").kendoSplitter({
              panes: parameterAreaPanes,
              orientation,
              expand: function(e) {
                setSplitterPaneVisibility(e.pane, true);
              },
              collapse: function(e) {
                setSplitterPaneVisibility(e.pane, false);
              },
              resize: function(e) {
              }
            }).data("kendoSplitter");
          } catch (e) {
            console.error("Instantiation of Kendo Splitter as Parameters area splitter threw an exception", e);
            throw e;
          }
          var parametersSplitterInstance = {
            id: options.viewerSelector + "-parameters-splitter",
            instance: parametersSplitter
          };
          var documentMapSplitterInstance = {
            id: options.viewerSelector + "-document-map-splitter",
            instance: documentMapSplitter
          };
          Instances.push(parametersSplitterInstance);
          Instances.push(documentMapSplitterInstance);
        }
        function setSplitterPaneVisibility(pane, visible) {
          var paneID = $(pane).attr("data-id");
          switch (paneID) {
            case "trv-document-map":
              controller.setDocumentMapVisible({
                visible
              });
              break;
            case "trv-parameters-area":
              controller.setParametersAreaVisible({
                visible
              });
              break;
          }
        }
        function initFromStorage() {
          var vm = settings.getViewMode();
          var psm = settings.getPageMode();
          var pm = settings.getPrintMode();
          var s = settings.getScale();
          var sm = settings.getScaleMode();
          var dm = settings.getDocumentMapVisible();
          var pa = settings.getParametersAreaVisible();
          settings.getAccessibilityKeyMap();
          controller.setViewMode(vm ? vm : options.viewMode);
          controller.setPageMode(psm ? psm : options.pageMode);
          controller.setPrintMode(pm ? pm : options.printMode);
          controller.setScale(s ? s : options.scale);
          controller.setScaleMode(sm ? sm : options.scaleMode);
          controller.setDocumentMapVisible({
            visible: dm ? dm : options.documentMapVisible
          });
          controller.setParametersAreaVisible({
            visible: pa ? pa : options.parametersAreaVisible
          });
          controller.printModeChanged(function() {
            settings.setPrintMode(controller.getPrintMode());
          });
          controller.viewModeChanged(function() {
            settings.setViewMode(controller.getViewMode());
          });
          controller.pageModeChanged(function() {
            settings.setPageMode(controller.getPageMode());
          });
          controller.scaleChanged(function(event2, scale2) {
            settings.setScale(scale2);
          });
          controller.scaleModeChanged(function(event2, scaleMode) {
            settings.setScaleMode(scaleMode);
          });
          controller.setSideMenuVisible(function(event2, args) {
            window.setTimeout(function() {
              (args.visible ? $.fn.addClass : $.fn.removeClass).call($placeholder, "trv-side-menu-visible");
            }, 1);
          });
          controller.setDocumentMapVisible(function() {
            var args = {};
            controller.getDocumentMapState(args);
            settings.setDocumentMapVisible(args.visible);
          });
          controller.setParametersAreaVisible(function() {
            var args = {};
            controller.getParametersAreaState(args);
            settings.setParametersAreaVisible(args.visible);
          });
        }
        function initAccessibility(options2) {
          if (options2.enableAccessibility) {
            accessibility = new Accessibility({
              controller,
              templates
            });
            var am = options2.accessibilityKeyMap;
            if (am) {
              accessibility.setKeyMap(am);
            }
            settings.contentTabIndex = getTemplateContentTabIndex();
          }
        }
        function getTemplateContentTabIndex() {
          var pageAreaSelector = "div.trv-pages-area";
          try {
            var $pagesArea = $placeholder.find(pageAreaSelector);
            if ($pagesArea.length === 0) {
              throw "Selector " + pageAreaSelector + " did not return a result.";
            }
            return parseInt($pagesArea.attr("tabindex"));
          } catch (e) {
            if (console)
              console.log(e);
            return 0;
          }
        }
        function start() {
          var pendingRefresh = false;
          init();
          controller.reportLoadComplete(function() {
            if (options.documentMapVisible === false) {
              controller.setDocumentMapVisible({ visible: false });
            }
          });
          var rs = settings.getReportSource();
          if (rs !== void 0) {
            controller.setReportSource(rs);
            var pageNumber = settings.getPageNumber();
            if (pageNumber !== void 0) {
              controller.navigateToPage(pageNumber);
            }
            pendingRefresh = true;
          } else {
            if (options.viewMode) {
              controller.setViewMode(options.viewMode);
            }
            if (options.pageMode) {
              controller.setPageMode(options.pageMode);
            }
            if (options.reportSource) {
              controller.setReportSource(options.reportSource);
              pendingRefresh = true;
            }
          }
          if (typeof options.ready === "function") {
            options.ready.call(viewer);
          }
          if (pendingRefresh) {
            controller.refreshReport(false, true);
          }
        }
        function loadStyleSheets(styleSheets) {
          if (!styleSheets)
            return Promise.resolve();
          var $head = $("head");
          var currentStyleLinks = $head.find("link").map(function(i, e) {
            return e.outerHTML;
          }).toArray();
          var promises = [];
          Array.from(styleSheets).forEach((element) => {
            if (currentStyleLinks.indexOf(element) === -1) {
              promises.push(
                new Promise(function(resolve, reject) {
                  var $link = $(element);
                  $link.on("load", resolve);
                  $link.on("onerror", function() {
                    logError("error loading stylesheet " + element);
                    resolve();
                  });
                  $head.append($link);
                })
              );
            }
          });
          return Promise.all(promises).then(controller.cssLoaded);
        }
        function browserSupportsAllFeatures() {
          return window.Promise;
        }
        function ensureKendo(version2) {
          if (window.kendo) {
            return Promise.resolve();
          }
          var kendoUrl = rTrim(svcApiUrl, "\\/") + "/resources/js/telerikReportViewer.kendo-" + version2 + ".min.js/";
          return loadScript(kendoUrl).catch(function(errorData) {
            logError("Kendo could not be loaded automatically. Make sure 'options.serviceUrl' / 'options.reportServer.url' is correct and accessible. The error is: " + errorData.error);
          });
        }
        function main(version2) {
          ensureKendo(version2).then(function() {
          }).then(function() {
            viewer.authenticationToken(options.authenticationToken);
            controller.getServiceVersion().catch(function(ex) {
              var errorOutput = isApplicationExceptionInstance(ex) ? ex.exceptionMessage : stringFormat(stringResources.errorServiceUrl, [escapeHtml(svcApiUrl)]);
              $placeholder.text(errorOutput);
              return Promise.reject();
            }).then(function(data) {
              if (data !== version2) {
                $placeholder.text(stringFormat(stringResources.errorServiceVersion, [data, version2]));
                return Promise.reject();
              }
              TemplateCache.load(options.trvTemplateUrl, svcApiUrl, client).catch(function() {
                $placeholder.text(stringFormat(stringResources.errorLoadingTemplates, [escapeHtml(options.trvTemplateUrl)]));
                return Promise.reject();
              }).then(function(result) {
                templates = result.templates;
                return loadStyleSheets(result.styleSheets);
              }).then(start);
            });
          });
        }
        if (browserSupportsAllFeatures()) {
          main(version);
        } else {
          throw "The current browser does not support the Promise feature which is required for using the Report Viewer.";
        }
        return viewer;
      }
      var pluginName = "telerik_ReportViewer";
      $.fn[pluginName] = function(options) {
        if (this.selector && !options.selector) {
          options.selector = this.selector;
        }
        return this.each(function() {
          if (!$.data(this, pluginName)) {
            $.data(this, pluginName, new ReportViewer2(this, options));
          }
        });
      };
      const plugins = [
        {
          name: "telerik_ReportViewer_DocumentMapArea",
          constructor: DocumentMapArea
        },
        {
          name: "telerik_ReportViewer_MainMenu",
          constructor: MainMenu
        },
        {
          name: "telerik_ReportViewer_PagesArea",
          constructor: PagesArea
        },
        {
          name: "telerik_ReportViewer_ParametersArea",
          constructor: ParametersArea
        },
        {
          name: "telerik_ReportViewer_SearchDialog",
          constructor: Search
        },
        {
          name: "telerik_ReportViewer_SendEmail",
          constructor: SendEmail
        },
        {
          name: "telerik_ReportViewer_SideMenu",
          constructor: SideMenu
        },
        {
          name: "telerik_ReportViewer_LinkButton",
          constructor: LinkButton
        },
        {
          name: "telerik_ReportViewer_PageNumberInput",
          constructor: PageNumberInput
        },
        {
          name: "telerik_ReportViewer_PageCountLabel",
          constructor: PageCountLabel
        }
      ];
      plugins.forEach((plugin) => {
        $.fn[plugin.name] = function(options, otherOptions) {
          return this.each(function() {
            if (!$.data(this, plugin.name)) {
              $.data(this, plugin.name, new plugin.constructor(this, options, otherOptions));
            }
          });
        };
      });
      exports2.Accessibility = Accessibility;
      exports2.Binder = Binder;
      exports2.CommandSet = CommandSet;
      exports2.DocumentMapAreaPositions = DocumentMapAreaPositions;
      exports2.Events = Events$1;
      exports2.GlobalSettings = GlobalSettings;
      exports2.HistoryManager = HistoryManager;
      exports2.PageModes = PageModes;
      exports2.PagesArea = PagesArea;
      exports2.ParameterEditorTypes = ParameterEditorTypes;
      exports2.ParameterEditors = ParameterEditors;
      exports2.ParameterTypes = ParameterTypes;
      exports2.ParameterValidators = ParameterValidators;
      exports2.ParametersArea = ParametersArea;
      exports2.ParametersAreaPositions = ParametersAreaPositions;
      exports2.PerspectiveManager = PerspectiveManager;
      exports2.PrintManager = PrintManager;
      exports2.PrintModes = PrintModes;
      exports2.ReportViewer = ReportViewer2;
      exports2.ReportViewerController = ReportViewerController;
      exports2.ScaleModes = ScaleModes;
      exports2.Scroll = Scroll;
      exports2.ServiceClient = ServiceClient;
      exports2.TouchBehavior = TouchBehavior;
      exports2.UIController = UIController;
      exports2.UIFreezeCoordinator = UIFreezeCoordinator;
      exports2.ViewModes = ViewModes;
      exports2.domUtils = domUtils;
      exports2.parameterEditorsMatch = parameterEditorsMatch;
      exports2.utils = utils;
      Object.defineProperty(exports2, "__esModule", { value: true });
      return exports2;
    }({});
    module.exports = {
      ReportViewer: telerikReportViewer.ReportViewer
    };
  }
});

// node_modules/@progress/telerik-angular-report-viewer/dist/dependencies/initExtDeps.js
var jQuery = require_jquery();
if (!window.$) {
  window.$ = jQuery;
}
if (!window.jQuery) {
  window.jQuery = jQuery;
}
if (!window.kendo) {
  window.kendo = require_telerikReportViewer_kendo_min();
}

// node_modules/@progress/telerik-angular-report-viewer/dist/es/telerik-report-viewer.component.js
var import_telerikReportViewer = __toESM(require_telerikReportViewer());
var _c0 = ["container"];
var TelerikReportViewerComponent = class {
  ngOnInit() {
    this.reportViewerID = this.id || "reportViewer1";
    this.keepClientAlive = this.keepClientAlive === void 0 ? true : this.keepClientAlive;
  }
  ngAfterViewInit() {
    this.viewerObject = new import_telerikReportViewer.ReportViewer(this.container.nativeElement, {
      id: this.reportViewerID,
      serviceUrl: this.serviceUrl,
      reportServer: this.reportServer,
      trvTemplateUrl: this.templateUrl,
      initialPageAreaImageUrl: this.initialPageAreaImageUrl,
      reportSource: this.reportSource,
      sendEmail: this.sendEmail,
      scale: this.scale,
      scaleMode: this.scaleMode,
      viewMode: this.viewMode,
      pageMode: this.pageMode,
      parameters: this.parameters,
      persistSession: this.persistSession,
      parameterEditors: this.parameterEditors,
      authenticationToken: this.authenticationToken,
      ready: this.ready,
      printMode: this.printMode,
      selector: this.selector,
      disabledButtonClass: this.disabledButtonClass,
      checkedButtonClass: this.checkedButtonClass,
      exportBegin: this.exportBegin,
      exportEnd: this.exportEnd,
      printBegin: this.printBegin,
      printEnd: this.printEnd,
      renderingBegin: this.renderingBegin,
      renderingEnd: this.renderingEnd,
      sendEmailBegin: this.sendEmailBegin,
      sendEmailEnd: this.sendEmailEnd,
      updateUi: this.updateUi,
      pageReady: this.pageReady,
      error: this.error,
      interactiveActionExecuting: this.interactiveActionExecuting,
      interactiveActionEnter: this.interactiveActionEnter,
      interactiveActionLeave: this.interactiveActionLeave,
      viewerToolTipOpening: this.viewerToolTipOpening,
      enableAccessibility: this.enableAccessibility,
      searchMetadataOnDemand: this.searchMetadataOnDemand,
      parametersAreaVisible: this.parametersAreaVisible,
      documentMapVisible: this.documentMapVisible,
      documentMapAreaPosition: this.documentMapAreaPosition,
      parametersAreaPosition: this.parametersAreaPosition,
      keepClientAlive: this.keepClientAlive
    });
    this.commands = this.viewerObject.commands;
  }
  ngOnDestroy() {
    this.viewerObject.dispose();
  }
  refreshReport() {
    return this.viewerObject.refreshReport();
  }
  getReportSource() {
    return this.viewerObject.reportSource();
  }
  setReportSource(rs) {
    return this.viewerObject.reportSource(rs);
  }
  getViewMode() {
    return this.viewerObject.viewMode();
  }
  setViewMode(vm) {
    return this.viewerObject.viewMode(vm);
  }
  getScale() {
    return this.viewerObject.scale();
  }
  setScale(scale) {
    return this.viewerObject.scale(scale);
  }
  pageCount() {
    return this.viewerObject.pageCount();
  }
  currentPage() {
    return this.viewerObject.currentPage();
  }
  setAuthenticationToken(token) {
    return this.viewerObject.authenticationToken(token);
  }
  getAccessibilityKeyMap() {
    return this.viewerObject.accessibilityKeyMap();
  }
  setAccessibilityKeyMap(keyMap) {
    return this.viewerObject.accessibilityKeyMap(keyMap);
  }
  bind(eventName, eventHandler) {
    this.viewerObject.bind(eventName, eventHandler);
  }
  unbind(eventName, eventHandler) {
    this.viewerObject.unbind(eventName, eventHandler);
  }
  unbindAll(eventName) {
    this.viewerObject.unbind(eventName);
  }
  getPageMode() {
    return this.viewerObject.pageMode();
  }
  setPageMode(psm) {
    return this.viewerObject.pageMode(psm);
  }
  clearReportSource() {
    return this.viewerObject.clearReportSource();
  }
  dispose() {
    this.viewerObject.dispose();
  }
  getReportParameters() {
    return this.viewerObject.getReportParameters();
  }
};
TelerikReportViewerComponent.ɵfac = function TelerikReportViewerComponent_Factory(t) {
  return new (t || TelerikReportViewerComponent)();
};
TelerikReportViewerComponent.ɵcmp = ɵɵdefineComponent({ type: TelerikReportViewerComponent, selectors: [["tr-viewer"]], viewQuery: function TelerikReportViewerComponent_Query(rf, ctx) {
  if (rf & 1) {
    ɵɵviewQuery(_c0, 5);
  }
  if (rf & 2) {
    let _t;
    ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.container = _t.first);
  }
}, inputs: { id: "id", serviceUrl: "serviceUrl", reportServer: "reportServer", templateUrl: "templateUrl", initialPageAreaImageUrl: "initialPageAreaImageUrl", reportSource: "reportSource", sendEmail: "sendEmail", parameters: "parameters", scale: "scale", scaleMode: "scaleMode", viewMode: "viewMode", pageMode: "pageMode", persistSession: "persistSession", parameterEditors: "parameterEditors", authenticationToken: "authenticationToken", printMode: "printMode", selector: "selector", disabledButtonClass: "disabledButtonClass", checkedButtonClass: "checkedButtonClass", enableAccessibility: "enableAccessibility", searchMetadataOnDemand: "searchMetadataOnDemand", parametersAreaVisible: "parametersAreaVisible", documentMapVisible: "documentMapVisible", ready: "ready", error: "error", parametersAreaPosition: "parametersAreaPosition", documentMapAreaPosition: "documentMapAreaPosition", exportBegin: "exportBegin", exportEnd: "exportEnd", sendEmailBegin: "sendEmailBegin", sendEmailEnd: "sendEmailEnd", pageReady: "pageReady", printBegin: "printBegin", printEnd: "printEnd", renderingBegin: "renderingBegin", renderingEnd: "renderingEnd", updateUi: "updateUi", interactiveActionExecuting: "interactiveActionExecuting", interactiveActionEnter: "interactiveActionEnter", interactiveActionLeave: "interactiveActionLeave", viewerToolTipOpening: "viewerToolTipOpening", keepClientAlive: "keepClientAlive", containerStyle: "containerStyle" }, decls: 3, vars: 2, consts: [[3, "ngStyle"], ["container", ""]], template: function TelerikReportViewerComponent_Template(rf, ctx) {
  if (rf & 1) {
    ɵɵelementStart(0, "div", 0, 1);
    ɵɵtext(2, "Loading Report Viewer...");
    ɵɵelementEnd();
  }
  if (rf & 2) {
    ɵɵproperty("ngStyle", ctx.containerStyle);
    ɵɵattribute("id", ctx.reportViewerID);
  }
}, dependencies: [NgStyle], encapsulation: 2 });
(function() {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TelerikReportViewerComponent, [{
    type: Component,
    args: [{ selector: "tr-viewer", template: '<div [ngStyle]="containerStyle" [attr.id]="reportViewerID" #container>Loading Report Viewer...</div>', encapsulation: ViewEncapsulation$1.None }]
  }], null, { id: [{
    type: Input
  }], serviceUrl: [{
    type: Input
  }], reportServer: [{
    type: Input
  }], templateUrl: [{
    type: Input
  }], initialPageAreaImageUrl: [{
    type: Input
  }], reportSource: [{
    type: Input
  }], sendEmail: [{
    type: Input
  }], parameters: [{
    type: Input
  }], scale: [{
    type: Input
  }], scaleMode: [{
    type: Input
  }], viewMode: [{
    type: Input
  }], pageMode: [{
    type: Input
  }], persistSession: [{
    type: Input
  }], parameterEditors: [{
    type: Input
  }], authenticationToken: [{
    type: Input
  }], printMode: [{
    type: Input
  }], selector: [{
    type: Input
  }], disabledButtonClass: [{
    type: Input
  }], checkedButtonClass: [{
    type: Input
  }], enableAccessibility: [{
    type: Input
  }], searchMetadataOnDemand: [{
    type: Input
  }], parametersAreaVisible: [{
    type: Input
  }], documentMapVisible: [{
    type: Input
  }], ready: [{
    type: Input
  }], error: [{
    type: Input
  }], parametersAreaPosition: [{
    type: Input
  }], documentMapAreaPosition: [{
    type: Input
  }], exportBegin: [{
    type: Input
  }], exportEnd: [{
    type: Input
  }], sendEmailBegin: [{
    type: Input
  }], sendEmailEnd: [{
    type: Input
  }], pageReady: [{
    type: Input
  }], printBegin: [{
    type: Input
  }], printEnd: [{
    type: Input
  }], renderingBegin: [{
    type: Input
  }], renderingEnd: [{
    type: Input
  }], updateUi: [{
    type: Input
  }], interactiveActionExecuting: [{
    type: Input
  }], interactiveActionEnter: [{
    type: Input
  }], interactiveActionLeave: [{
    type: Input
  }], viewerToolTipOpening: [{
    type: Input
  }], keepClientAlive: [{
    type: Input
  }], container: [{
    type: ViewChild,
    args: ["container"]
  }], containerStyle: [{
    type: Input
  }] });
})();

// node_modules/@progress/telerik-angular-report-viewer/dist/es/telerik-reporting.module.js
var TelerikReportingModule = class {
};
TelerikReportingModule.ɵfac = function TelerikReportingModule_Factory(t) {
  return new (t || TelerikReportingModule)();
};
TelerikReportingModule.ɵmod = ɵɵdefineNgModule({ type: TelerikReportingModule });
TelerikReportingModule.ɵinj = ɵɵdefineInjector({ imports: [CommonModule] });
(function() {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TelerikReportingModule, [{
    type: NgModule,
    args: [{
      imports: [CommonModule],
      exports: [TelerikReportViewerComponent],
      declarations: [TelerikReportViewerComponent]
    }]
  }], null, null);
})();
(function() {
  (typeof ngJitMode === "undefined" || ngJitMode) && ɵɵsetNgModuleScope(TelerikReportingModule, { declarations: [TelerikReportViewerComponent], imports: [CommonModule], exports: [TelerikReportViewerComponent] });
})();
export {
  TelerikReportViewerComponent,
  TelerikReportingModule
};
/*! Bundled license information:

jquery/dist/jquery.js:
  (*!
   * jQuery JavaScript Library v3.7.1
   * https://jquery.com/
   *
   * Copyright OpenJS Foundation and other contributors
   * Released under the MIT license
   * https://jquery.org/license
   *
   * Date: 2023-08-28T13:37Z
   *)

@progress/telerik-angular-report-viewer/dist/dependencies/telerikReportViewer.kendo.min.js:
  (*!
   * Copyright 2023 Progress Software Corporation and/or one of its subsidiaries or affiliates. All rights reserved.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
*/
//# sourceMappingURL=@progress_telerik-angular-report-viewer.js.map
