var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class MemStorage {
  // #endregion
  // #region constructor
  constructor() {
    // #region fields
    __publicField(this, "_data", {});
    this._data = {};
  }
  // #endregion
  // #region properties
  get length() {
    return Object.keys(this._data).length;
  }
  // #endregion
  // #region methods
  getItem(key) {
    return this._data[key] || null;
  }
  setItem(key, value) {
    this._data[key] = value;
  }
  removeItem(key) {
    delete this._data[key];
  }
  key(index) {
    return Object.keys(this._data)[index] || null;
  }
  clear() {
    this._data = {};
  }
  // #endregion
}

export { MemStorage };
